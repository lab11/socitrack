
bin/TestIMU.axf:     file format elf32-littlearm


Disassembly of section .text:

00018200 <dw3000_driver>:
   18200:	12 03 ca de 0f ff ff ff 2c c3 02 00 34 c3 02 00     ........,...4...
   18210:	68 c2 02 00 2c c2 02 00 07 00 06 00                 h...,.......

0001821c <dw3700_driver>:
   1821c:	13 03 ca de 0f ff ff ff 2c c3 02 00 34 c3 02 00     ........,...4...
   1822c:	a8 c3 02 00 6c c3 02 00 07 00 06 00                 ....l.......

00018238 <dw3720_driver>:
   18238:	14 03 ca de 0f ff ff ff 2c c3 02 00 34 c3 02 00     ........,...4...
   18248:	b8 c4 02 00 7c c4 02 00 07 00 06 00                 ....|.......

00018254 <memcpy>:
   18254:	4684      	mov	ip, r0
   18256:	ea41 0300 	orr.w	r3, r1, r0
   1825a:	f013 0303 	ands.w	r3, r3, #3
   1825e:	d16d      	bne.n	1833c <memcpy+0xe8>
   18260:	3a40      	subs	r2, #64	@ 0x40
   18262:	d341      	bcc.n	182e8 <memcpy+0x94>
   18264:	f851 3b04 	ldr.w	r3, [r1], #4
   18268:	f840 3b04 	str.w	r3, [r0], #4
   1826c:	f851 3b04 	ldr.w	r3, [r1], #4
   18270:	f840 3b04 	str.w	r3, [r0], #4
   18274:	f851 3b04 	ldr.w	r3, [r1], #4
   18278:	f840 3b04 	str.w	r3, [r0], #4
   1827c:	f851 3b04 	ldr.w	r3, [r1], #4
   18280:	f840 3b04 	str.w	r3, [r0], #4
   18284:	f851 3b04 	ldr.w	r3, [r1], #4
   18288:	f840 3b04 	str.w	r3, [r0], #4
   1828c:	f851 3b04 	ldr.w	r3, [r1], #4
   18290:	f840 3b04 	str.w	r3, [r0], #4
   18294:	f851 3b04 	ldr.w	r3, [r1], #4
   18298:	f840 3b04 	str.w	r3, [r0], #4
   1829c:	f851 3b04 	ldr.w	r3, [r1], #4
   182a0:	f840 3b04 	str.w	r3, [r0], #4
   182a4:	f851 3b04 	ldr.w	r3, [r1], #4
   182a8:	f840 3b04 	str.w	r3, [r0], #4
   182ac:	f851 3b04 	ldr.w	r3, [r1], #4
   182b0:	f840 3b04 	str.w	r3, [r0], #4
   182b4:	f851 3b04 	ldr.w	r3, [r1], #4
   182b8:	f840 3b04 	str.w	r3, [r0], #4
   182bc:	f851 3b04 	ldr.w	r3, [r1], #4
   182c0:	f840 3b04 	str.w	r3, [r0], #4
   182c4:	f851 3b04 	ldr.w	r3, [r1], #4
   182c8:	f840 3b04 	str.w	r3, [r0], #4
   182cc:	f851 3b04 	ldr.w	r3, [r1], #4
   182d0:	f840 3b04 	str.w	r3, [r0], #4
   182d4:	f851 3b04 	ldr.w	r3, [r1], #4
   182d8:	f840 3b04 	str.w	r3, [r0], #4
   182dc:	f851 3b04 	ldr.w	r3, [r1], #4
   182e0:	f840 3b04 	str.w	r3, [r0], #4
   182e4:	3a40      	subs	r2, #64	@ 0x40
   182e6:	d2bd      	bcs.n	18264 <memcpy+0x10>
   182e8:	3230      	adds	r2, #48	@ 0x30
   182ea:	d311      	bcc.n	18310 <memcpy+0xbc>
   182ec:	f851 3b04 	ldr.w	r3, [r1], #4
   182f0:	f840 3b04 	str.w	r3, [r0], #4
   182f4:	f851 3b04 	ldr.w	r3, [r1], #4
   182f8:	f840 3b04 	str.w	r3, [r0], #4
   182fc:	f851 3b04 	ldr.w	r3, [r1], #4
   18300:	f840 3b04 	str.w	r3, [r0], #4
   18304:	f851 3b04 	ldr.w	r3, [r1], #4
   18308:	f840 3b04 	str.w	r3, [r0], #4
   1830c:	3a10      	subs	r2, #16
   1830e:	d2ed      	bcs.n	182ec <memcpy+0x98>
   18310:	320c      	adds	r2, #12
   18312:	d305      	bcc.n	18320 <memcpy+0xcc>
   18314:	f851 3b04 	ldr.w	r3, [r1], #4
   18318:	f840 3b04 	str.w	r3, [r0], #4
   1831c:	3a04      	subs	r2, #4
   1831e:	d2f9      	bcs.n	18314 <memcpy+0xc0>
   18320:	3204      	adds	r2, #4
   18322:	d008      	beq.n	18336 <memcpy+0xe2>
   18324:	07d2      	lsls	r2, r2, #31
   18326:	bf1c      	itt	ne
   18328:	f811 3b01 	ldrbne.w	r3, [r1], #1
   1832c:	f800 3b01 	strbne.w	r3, [r0], #1
   18330:	d301      	bcc.n	18336 <memcpy+0xe2>
   18332:	880b      	ldrh	r3, [r1, #0]
   18334:	8003      	strh	r3, [r0, #0]
   18336:	4660      	mov	r0, ip
   18338:	4770      	bx	lr
   1833a:	bf00      	nop
   1833c:	2a08      	cmp	r2, #8
   1833e:	d313      	bcc.n	18368 <memcpy+0x114>
   18340:	078b      	lsls	r3, r1, #30
   18342:	d08d      	beq.n	18260 <memcpy+0xc>
   18344:	f010 0303 	ands.w	r3, r0, #3
   18348:	d08a      	beq.n	18260 <memcpy+0xc>
   1834a:	f1c3 0304 	rsb	r3, r3, #4
   1834e:	1ad2      	subs	r2, r2, r3
   18350:	07db      	lsls	r3, r3, #31
   18352:	bf1c      	itt	ne
   18354:	f811 3b01 	ldrbne.w	r3, [r1], #1
   18358:	f800 3b01 	strbne.w	r3, [r0], #1
   1835c:	d380      	bcc.n	18260 <memcpy+0xc>
   1835e:	f831 3b02 	ldrh.w	r3, [r1], #2
   18362:	f820 3b02 	strh.w	r3, [r0], #2
   18366:	e77b      	b.n	18260 <memcpy+0xc>
   18368:	3a04      	subs	r2, #4
   1836a:	d3d9      	bcc.n	18320 <memcpy+0xcc>
   1836c:	3a01      	subs	r2, #1
   1836e:	f811 3b01 	ldrb.w	r3, [r1], #1
   18372:	f800 3b01 	strb.w	r3, [r0], #1
   18376:	d2f9      	bcs.n	1836c <memcpy+0x118>
   18378:	780b      	ldrb	r3, [r1, #0]
   1837a:	7003      	strb	r3, [r0, #0]
   1837c:	784b      	ldrb	r3, [r1, #1]
   1837e:	7043      	strb	r3, [r0, #1]
   18380:	788b      	ldrb	r3, [r1, #2]
   18382:	7083      	strb	r3, [r0, #2]
   18384:	4660      	mov	r0, ip
   18386:	4770      	bx	lr

00018388 <__aeabi_d2f>:
   18388:	ea4f 0241 	mov.w	r2, r1, lsl #1
   1838c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
   18390:	bf24      	itt	cs
   18392:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
   18396:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
   1839a:	d90d      	bls.n	183b8 <__aeabi_d2f+0x30>
   1839c:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
   183a0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
   183a4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
   183a8:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
   183ac:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
   183b0:	bf08      	it	eq
   183b2:	f020 0001 	biceq.w	r0, r0, #1
   183b6:	4770      	bx	lr
   183b8:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
   183bc:	d121      	bne.n	18402 <__aeabi_d2f+0x7a>
   183be:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
   183c2:	bfbc      	itt	lt
   183c4:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
   183c8:	4770      	bxlt	lr
   183ca:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
   183ce:	ea4f 5252 	mov.w	r2, r2, lsr #21
   183d2:	f1c2 0218 	rsb	r2, r2, #24
   183d6:	f1c2 0c20 	rsb	ip, r2, #32
   183da:	fa10 f30c 	lsls.w	r3, r0, ip
   183de:	fa20 f002 	lsr.w	r0, r0, r2
   183e2:	bf18      	it	ne
   183e4:	f040 0001 	orrne.w	r0, r0, #1
   183e8:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   183ec:	ea4f 23d3 	mov.w	r3, r3, lsr #11
   183f0:	fa03 fc0c 	lsl.w	ip, r3, ip
   183f4:	ea40 000c 	orr.w	r0, r0, ip
   183f8:	fa23 f302 	lsr.w	r3, r3, r2
   183fc:	ea4f 0343 	mov.w	r3, r3, lsl #1
   18400:	e7cc      	b.n	1839c <__aeabi_d2f+0x14>
   18402:	ea7f 5362 	mvns.w	r3, r2, asr #21
   18406:	d107      	bne.n	18418 <__aeabi_d2f+0x90>
   18408:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
   1840c:	bf1e      	ittt	ne
   1840e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
   18412:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
   18416:	4770      	bxne	lr
   18418:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
   1841c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
   18420:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
   18424:	4770      	bx	lr
   18426:	bf00      	nop

00018428 <__aeabi_uldivmod>:
   18428:	b953      	cbnz	r3, 18440 <__aeabi_uldivmod+0x18>
   1842a:	b94a      	cbnz	r2, 18440 <__aeabi_uldivmod+0x18>
   1842c:	2900      	cmp	r1, #0
   1842e:	bf08      	it	eq
   18430:	2800      	cmpeq	r0, #0
   18432:	bf1c      	itt	ne
   18434:	f04f 31ff 	movne.w	r1, #4294967295	@ 0xffffffff
   18438:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
   1843c:	f000 b80c 	b.w	18458 <__aeabi_idiv0>
   18440:	f1ad 0c08 	sub.w	ip, sp, #8
   18444:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   18448:	f003 fb42 	bl	1bad0 <__udivmoddi4>
   1844c:	f8dd e004 	ldr.w	lr, [sp, #4]
   18450:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   18454:	b004      	add	sp, #16
   18456:	4770      	bx	lr

00018458 <__aeabi_idiv0>:
   18458:	4770      	bx	lr
   1845a:	bf00      	nop

0001845c <am_util_delay_ms>:
// Delays for a desired amount of milliseconds.
//
//*****************************************************************************
void
am_util_delay_ms(uint32_t ui32MilliSeconds)
{
   1845c:	b580      	push	{r7, lr}
   1845e:	b082      	sub	sp, #8
   18460:	af00      	add	r7, sp, #0
   18462:	6078      	str	r0, [r7, #4]
#if defined(AM_PART_APOLLO4_API)
    am_hal_delay_us( ui32MilliSeconds * 1000);
   18464:	687b      	ldr	r3, [r7, #4]
   18466:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
   1846a:	fb02 f303 	mul.w	r3, r2, r3
   1846e:	4618      	mov	r0, r3
   18470:	f004 fc4a 	bl	1cd08 <am_hal_delay_us>
    //
    // Call the BOOTROM cycle delay function
    //
    am_hal_flash_delay(ui32Loops);
#endif // AM_PART_APOLLO4_API
}
   18474:	bf00      	nop
   18476:	3708      	adds	r7, #8
   18478:	46bd      	mov	sp, r7
   1847a:	bd80      	pop	{r7, pc}

0001847c <am_util_stdio_printf_init>:
// Sets the interface for printf calls.
//
//*****************************************************************************
void
am_util_stdio_printf_init(am_util_stdio_print_char_t pfnCharPrint)
{
   1847c:	b480      	push	{r7}
   1847e:	b083      	sub	sp, #12
   18480:	af00      	add	r7, sp, #0
   18482:	6078      	str	r0, [r7, #4]
    g_pfnCharPrint = pfnCharPrint;
   18484:	4a04      	ldr	r2, [pc, #16]	@ (18498 <am_util_stdio_printf_init+0x1c>)
   18486:	687b      	ldr	r3, [r7, #4]
   18488:	6013      	str	r3, [r2, #0]
}
   1848a:	bf00      	nop
   1848c:	370c      	adds	r7, #12
   1848e:	46bd      	mov	sp, r7
   18490:	f85d 7b04 	ldr.w	r7, [sp], #4
   18494:	4770      	bx	lr
   18496:	bf00      	nop
   18498:	1000307c 	.word	0x1000307c

0001849c <divu64_10>:
//  Note: Adapted from Ch10 of Hackers Delight (hackersdelight.org).
//
//*****************************************************************************
static uint64_t
divu64_10(uint64_t ui64Val)
{
   1849c:	e92d 0fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp}
   184a0:	b09b      	sub	sp, #108	@ 0x6c
   184a2:	af00      	add	r7, sp, #0
   184a4:	e9c7 0110 	strd	r0, r1, [r7, #64]	@ 0x40
    uint32_t q32, r32, ui32Val;

    //
    // If a 32-bit value, use the more optimal 32-bit routine.
    //
    if ( ui64Val >> 32 )
   184a8:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
   184ac:	f04f 0000 	mov.w	r0, #0
   184b0:	f04f 0100 	mov.w	r1, #0
   184b4:	0018      	movs	r0, r3
   184b6:	2100      	movs	r1, #0
   184b8:	ea50 0301 	orrs.w	r3, r0, r1
   184bc:	f000 80b6 	beq.w	1862c <divu64_10+0x190>
    {
        q64 = (ui64Val>>1) + (ui64Val>>2);
   184c0:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
   184c4:	f04f 0400 	mov.w	r4, #0
   184c8:	f04f 0500 	mov.w	r5, #0
   184cc:	0854      	lsrs	r4, r2, #1
   184ce:	ea44 74c3 	orr.w	r4, r4, r3, lsl #31
   184d2:	085d      	lsrs	r5, r3, #1
   184d4:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
   184d8:	f04f 0000 	mov.w	r0, #0
   184dc:	f04f 0100 	mov.w	r1, #0
   184e0:	0890      	lsrs	r0, r2, #2
   184e2:	ea40 7083 	orr.w	r0, r0, r3, lsl #30
   184e6:	0899      	lsrs	r1, r3, #2
   184e8:	eb14 0a00 	adds.w	sl, r4, r0
   184ec:	eb45 0b01 	adc.w	fp, r5, r1
   184f0:	e9c7 ab14 	strd	sl, fp, [r7, #80]	@ 0x50
        q64 += (q64 >> 4);
   184f4:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
   184f8:	f04f 0000 	mov.w	r0, #0
   184fc:	f04f 0100 	mov.w	r1, #0
   18500:	0910      	lsrs	r0, r2, #4
   18502:	ea40 7003 	orr.w	r0, r0, r3, lsl #28
   18506:	0919      	lsrs	r1, r3, #4
   18508:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
   1850c:	1814      	adds	r4, r2, r0
   1850e:	62bc      	str	r4, [r7, #40]	@ 0x28
   18510:	414b      	adcs	r3, r1
   18512:	62fb      	str	r3, [r7, #44]	@ 0x2c
   18514:	e9d7 340a 	ldrd	r3, r4, [r7, #40]	@ 0x28
   18518:	e9c7 3414 	strd	r3, r4, [r7, #80]	@ 0x50
        q64 += (q64 >> 8);
   1851c:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
   18520:	f04f 0000 	mov.w	r0, #0
   18524:	f04f 0100 	mov.w	r1, #0
   18528:	0a10      	lsrs	r0, r2, #8
   1852a:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
   1852e:	0a19      	lsrs	r1, r3, #8
   18530:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
   18534:	1814      	adds	r4, r2, r0
   18536:	623c      	str	r4, [r7, #32]
   18538:	414b      	adcs	r3, r1
   1853a:	627b      	str	r3, [r7, #36]	@ 0x24
   1853c:	e9d7 3408 	ldrd	r3, r4, [r7, #32]
   18540:	e9c7 3414 	strd	r3, r4, [r7, #80]	@ 0x50
        q64 += (q64 >> 16);
   18544:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
   18548:	f04f 0000 	mov.w	r0, #0
   1854c:	f04f 0100 	mov.w	r1, #0
   18550:	0c10      	lsrs	r0, r2, #16
   18552:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
   18556:	0c19      	lsrs	r1, r3, #16
   18558:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
   1855c:	1814      	adds	r4, r2, r0
   1855e:	61bc      	str	r4, [r7, #24]
   18560:	414b      	adcs	r3, r1
   18562:	61fb      	str	r3, [r7, #28]
   18564:	e9d7 3406 	ldrd	r3, r4, [r7, #24]
   18568:	e9c7 3414 	strd	r3, r4, [r7, #80]	@ 0x50
        q64 += (q64 >> 32);
   1856c:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
   18570:	f04f 0000 	mov.w	r0, #0
   18574:	f04f 0100 	mov.w	r1, #0
   18578:	0018      	movs	r0, r3
   1857a:	2100      	movs	r1, #0
   1857c:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
   18580:	1814      	adds	r4, r2, r0
   18582:	613c      	str	r4, [r7, #16]
   18584:	414b      	adcs	r3, r1
   18586:	617b      	str	r3, [r7, #20]
   18588:	e9d7 3404 	ldrd	r3, r4, [r7, #16]
   1858c:	e9c7 3414 	strd	r3, r4, [r7, #80]	@ 0x50
        q64 >>= 3;
   18590:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
   18594:	f04f 0200 	mov.w	r2, #0
   18598:	f04f 0300 	mov.w	r3, #0
   1859c:	08c2      	lsrs	r2, r0, #3
   1859e:	ea42 7241 	orr.w	r2, r2, r1, lsl #29
   185a2:	08cb      	lsrs	r3, r1, #3
   185a4:	e9c7 2314 	strd	r2, r3, [r7, #80]	@ 0x50
        r64 = ui64Val - q64*10;
   185a8:	e9d7 4514 	ldrd	r4, r5, [r7, #80]	@ 0x50
   185ac:	4622      	mov	r2, r4
   185ae:	462b      	mov	r3, r5
   185b0:	f04f 0000 	mov.w	r0, #0
   185b4:	f04f 0100 	mov.w	r1, #0
   185b8:	0099      	lsls	r1, r3, #2
   185ba:	ea41 7192 	orr.w	r1, r1, r2, lsr #30
   185be:	0090      	lsls	r0, r2, #2
   185c0:	4602      	mov	r2, r0
   185c2:	460b      	mov	r3, r1
   185c4:	eb12 0804 	adds.w	r8, r2, r4
   185c8:	eb43 0905 	adc.w	r9, r3, r5
   185cc:	eb18 0308 	adds.w	r3, r8, r8
   185d0:	60bb      	str	r3, [r7, #8]
   185d2:	eb49 0309 	adc.w	r3, r9, r9
   185d6:	60fb      	str	r3, [r7, #12]
   185d8:	e9d7 8902 	ldrd	r8, r9, [r7, #8]
   185dc:	4640      	mov	r0, r8
   185de:	4649      	mov	r1, r9
   185e0:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
   185e4:	1a14      	subs	r4, r2, r0
   185e6:	603c      	str	r4, [r7, #0]
   185e8:	eb63 0301 	sbc.w	r3, r3, r1
   185ec:	607b      	str	r3, [r7, #4]
   185ee:	e9d7 3400 	ldrd	r3, r4, [r7]
   185f2:	e9c7 3412 	strd	r3, r4, [r7, #72]	@ 0x48
        return q64 + ((r64 + 6) >> 4);
   185f6:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
   185fa:	1d91      	adds	r1, r2, #6
   185fc:	6339      	str	r1, [r7, #48]	@ 0x30
   185fe:	f143 0300 	adc.w	r3, r3, #0
   18602:	637b      	str	r3, [r7, #52]	@ 0x34
   18604:	f04f 0200 	mov.w	r2, #0
   18608:	f04f 0300 	mov.w	r3, #0
   1860c:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
   18610:	4621      	mov	r1, r4
   18612:	090a      	lsrs	r2, r1, #4
   18614:	4629      	mov	r1, r5
   18616:	ea42 7201 	orr.w	r2, r2, r1, lsl #28
   1861a:	4629      	mov	r1, r5
   1861c:	090b      	lsrs	r3, r1, #4
   1861e:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
   18622:	1814      	adds	r4, r2, r0
   18624:	63bc      	str	r4, [r7, #56]	@ 0x38
   18626:	414b      	adcs	r3, r1
   18628:	63fb      	str	r3, [r7, #60]	@ 0x3c
   1862a:	e02a      	b.n	18682 <divu64_10+0x1e6>
    }
    else
    {
        ui32Val = (uint32_t)(ui64Val & 0xffffffff);
   1862c:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
   1862e:	667b      	str	r3, [r7, #100]	@ 0x64
        q32 = (ui32Val>>1) + (ui32Val>>2);
   18630:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
   18632:	085a      	lsrs	r2, r3, #1
   18634:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
   18636:	089b      	lsrs	r3, r3, #2
   18638:	4413      	add	r3, r2
   1863a:	663b      	str	r3, [r7, #96]	@ 0x60
        q32 += (q32 >> 4);
   1863c:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
   1863e:	091b      	lsrs	r3, r3, #4
   18640:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
   18642:	4413      	add	r3, r2
   18644:	663b      	str	r3, [r7, #96]	@ 0x60
        q32 += (q32 >> 8);
   18646:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
   18648:	0a1b      	lsrs	r3, r3, #8
   1864a:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
   1864c:	4413      	add	r3, r2
   1864e:	663b      	str	r3, [r7, #96]	@ 0x60
        q32 += (q32 >> 16);
   18650:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
   18652:	0c1b      	lsrs	r3, r3, #16
   18654:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
   18656:	4413      	add	r3, r2
   18658:	663b      	str	r3, [r7, #96]	@ 0x60
        q32 >>= 3;
   1865a:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
   1865c:	08db      	lsrs	r3, r3, #3
   1865e:	663b      	str	r3, [r7, #96]	@ 0x60
        r32 = ui32Val - q32*10;
   18660:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
   18662:	4613      	mov	r3, r2
   18664:	009b      	lsls	r3, r3, #2
   18666:	4413      	add	r3, r2
   18668:	005b      	lsls	r3, r3, #1
   1866a:	461a      	mov	r2, r3
   1866c:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
   1866e:	1a9b      	subs	r3, r3, r2
   18670:	65fb      	str	r3, [r7, #92]	@ 0x5c
        return (uint64_t)(q32 + ((r32 + 6) >> 4));
   18672:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
   18674:	3306      	adds	r3, #6
   18676:	091a      	lsrs	r2, r3, #4
   18678:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
   1867a:	4413      	add	r3, r2
   1867c:	2200      	movs	r2, #0
   1867e:	63bb      	str	r3, [r7, #56]	@ 0x38
   18680:	63fa      	str	r2, [r7, #60]	@ 0x3c
    }
}
   18682:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
   18686:	4610      	mov	r0, r2
   18688:	4619      	mov	r1, r3
   1868a:	376c      	adds	r7, #108	@ 0x6c
   1868c:	46bd      	mov	sp, r7
   1868e:	e8bd 0fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp}
   18692:	4770      	bx	lr

00018694 <ndigits_in_u64>:
// example: 10000 return 5, 123 returns 3.
//
//*****************************************************************************
static int
ndigits_in_u64(uint64_t ui64Val)
{
   18694:	b580      	push	{r7, lr}
   18696:	b084      	sub	sp, #16
   18698:	af00      	add	r7, sp, #0
   1869a:	e9c7 0100 	strd	r0, r1, [r7]
    int iNDigits = ui64Val ? 0 : 1;
   1869e:	683a      	ldr	r2, [r7, #0]
   186a0:	687b      	ldr	r3, [r7, #4]
   186a2:	4313      	orrs	r3, r2
   186a4:	2b00      	cmp	r3, #0
   186a6:	bf0c      	ite	eq
   186a8:	2301      	moveq	r3, #1
   186aa:	2300      	movne	r3, #0
   186ac:	b2db      	uxtb	r3, r3
   186ae:	60fb      	str	r3, [r7, #12]

    while ( ui64Val )
   186b0:	e008      	b.n	186c4 <ndigits_in_u64+0x30>
    {
        //
        // ui32Val /= 10;
        //
        ui64Val = divu64_10(ui64Val);
   186b2:	e9d7 0100 	ldrd	r0, r1, [r7]
   186b6:	f7ff fef1 	bl	1849c <divu64_10>
   186ba:	e9c7 0100 	strd	r0, r1, [r7]
        ++iNDigits;
   186be:	68fb      	ldr	r3, [r7, #12]
   186c0:	3301      	adds	r3, #1
   186c2:	60fb      	str	r3, [r7, #12]
    while ( ui64Val )
   186c4:	e9d7 2300 	ldrd	r2, r3, [r7]
   186c8:	4313      	orrs	r3, r2
   186ca:	d1f2      	bne.n	186b2 <ndigits_in_u64+0x1e>
    }

    return iNDigits;
   186cc:	68fb      	ldr	r3, [r7, #12]
}
   186ce:	4618      	mov	r0, r3
   186d0:	3710      	adds	r7, #16
   186d2:	46bd      	mov	sp, r7
   186d4:	bd80      	pop	{r7, pc}

000186d6 <ndigits_in_i64>:
// example: -3 returns 1, 3 returns 1, 15 returns 2, -15 returns 2, ...
//
//*****************************************************************************
static int
ndigits_in_i64(int64_t i64Val)
{
   186d6:	b5b0      	push	{r4, r5, r7, lr}
   186d8:	b082      	sub	sp, #8
   186da:	af00      	add	r7, sp, #0
   186dc:	e9c7 0100 	strd	r0, r1, [r7]
    if ( i64Val < 0 )
   186e0:	e9d7 2300 	ldrd	r2, r3, [r7]
   186e4:	2b00      	cmp	r3, #0
   186e6:	da07      	bge.n	186f8 <ndigits_in_i64+0x22>
    {
        //
        // Get absolute value
        //
        i64Val = -i64Val;
   186e8:	e9d7 2300 	ldrd	r2, r3, [r7]
   186ec:	2100      	movs	r1, #0
   186ee:	4254      	negs	r4, r2
   186f0:	eb61 0503 	sbc.w	r5, r1, r3
   186f4:	e9c7 4500 	strd	r4, r5, [r7]
    }

    return ndigits_in_u64((uint64_t) i64Val);
   186f8:	e9d7 2300 	ldrd	r2, r3, [r7]
   186fc:	4610      	mov	r0, r2
   186fe:	4619      	mov	r1, r3
   18700:	f7ff ffc8 	bl	18694 <ndigits_in_u64>
   18704:	4603      	mov	r3, r0
}
   18706:	4618      	mov	r0, r3
   18708:	3708      	adds	r7, #8
   1870a:	46bd      	mov	sp, r7
   1870c:	bdb0      	pop	{r4, r5, r7, pc}

0001870e <ndigits_in_hex>:
// Return the number of hex digits in an uint64_t.
//
//*****************************************************************************
static int
ndigits_in_hex(uint64_t ui64Val)
{
   1870e:	b480      	push	{r7}
   18710:	b085      	sub	sp, #20
   18712:	af00      	add	r7, sp, #0
   18714:	e9c7 0100 	strd	r0, r1, [r7]
    int iDigits = ui64Val ? 0 : 1;
   18718:	683a      	ldr	r2, [r7, #0]
   1871a:	687b      	ldr	r3, [r7, #4]
   1871c:	4313      	orrs	r3, r2
   1871e:	2b00      	cmp	r3, #0
   18720:	bf0c      	ite	eq
   18722:	2301      	moveq	r3, #1
   18724:	2300      	movne	r3, #0
   18726:	b2db      	uxtb	r3, r3
   18728:	60fb      	str	r3, [r7, #12]

    while ( ui64Val )
   1872a:	e00e      	b.n	1874a <ndigits_in_hex+0x3c>
    {
        ui64Val >>= 4;
   1872c:	e9d7 0100 	ldrd	r0, r1, [r7]
   18730:	f04f 0200 	mov.w	r2, #0
   18734:	f04f 0300 	mov.w	r3, #0
   18738:	0902      	lsrs	r2, r0, #4
   1873a:	ea42 7201 	orr.w	r2, r2, r1, lsl #28
   1873e:	090b      	lsrs	r3, r1, #4
   18740:	e9c7 2300 	strd	r2, r3, [r7]
        ++iDigits;
   18744:	68fb      	ldr	r3, [r7, #12]
   18746:	3301      	adds	r3, #1
   18748:	60fb      	str	r3, [r7, #12]
    while ( ui64Val )
   1874a:	e9d7 2300 	ldrd	r2, r3, [r7]
   1874e:	4313      	orrs	r3, r2
   18750:	d1ec      	bne.n	1872c <ndigits_in_hex+0x1e>
    }

    return iDigits;
   18752:	68fb      	ldr	r3, [r7, #12]
}
   18754:	4618      	mov	r0, r3
   18756:	3714      	adds	r7, #20
   18758:	46bd      	mov	sp, r7
   1875a:	f85d 7b04 	ldr.w	r7, [sp], #4
   1875e:	4770      	bx	lr

00018760 <decstr_to_int>:
// pui32CharCnt.
//
//*****************************************************************************
static uint32_t
decstr_to_int(const char *pcStr, uint32_t *pui32CharCnt)
{
   18760:	b480      	push	{r7}
   18762:	b087      	sub	sp, #28
   18764:	af00      	add	r7, sp, #0
   18766:	6078      	str	r0, [r7, #4]
   18768:	6039      	str	r1, [r7, #0]
    bool bNeg = false;
   1876a:	2300      	movs	r3, #0
   1876c:	75fb      	strb	r3, [r7, #23]
    uint32_t ui32Val = 0, uCnt = 0;
   1876e:	2300      	movs	r3, #0
   18770:	613b      	str	r3, [r7, #16]
   18772:	2300      	movs	r3, #0
   18774:	60fb      	str	r3, [r7, #12]

    if ( *pcStr == '-')
   18776:	687b      	ldr	r3, [r7, #4]
   18778:	781b      	ldrb	r3, [r3, #0]
   1877a:	2b2d      	cmp	r3, #45	@ 0x2d
   1877c:	d11b      	bne.n	187b6 <decstr_to_int+0x56>
    {
        bNeg = true;
   1877e:	2301      	movs	r3, #1
   18780:	75fb      	strb	r3, [r7, #23]
        pcStr++;
   18782:	687b      	ldr	r3, [r7, #4]
   18784:	3301      	adds	r3, #1
   18786:	607b      	str	r3, [r7, #4]
        uCnt++;
   18788:	68fb      	ldr	r3, [r7, #12]
   1878a:	3301      	adds	r3, #1
   1878c:	60fb      	str	r3, [r7, #12]
    }

    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
   1878e:	e012      	b.n	187b6 <decstr_to_int+0x56>
    {
        ++uCnt;
   18790:	68fb      	ldr	r3, [r7, #12]
   18792:	3301      	adds	r3, #1
   18794:	60fb      	str	r3, [r7, #12]

        //
        // Multiply accumulated value by 10.
        //
        ui32Val *= 10;
   18796:	693a      	ldr	r2, [r7, #16]
   18798:	4613      	mov	r3, r2
   1879a:	009b      	lsls	r3, r3, #2
   1879c:	4413      	add	r3, r2
   1879e:	005b      	lsls	r3, r3, #1
   187a0:	613b      	str	r3, [r7, #16]

        //
        // Add in the new low digit.
        //
        ui32Val += (*pcStr - '0');
   187a2:	687b      	ldr	r3, [r7, #4]
   187a4:	781b      	ldrb	r3, [r3, #0]
   187a6:	461a      	mov	r2, r3
   187a8:	693b      	ldr	r3, [r7, #16]
   187aa:	4413      	add	r3, r2
   187ac:	3b30      	subs	r3, #48	@ 0x30
   187ae:	613b      	str	r3, [r7, #16]
        pcStr++;
   187b0:	687b      	ldr	r3, [r7, #4]
   187b2:	3301      	adds	r3, #1
   187b4:	607b      	str	r3, [r7, #4]
    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
   187b6:	687b      	ldr	r3, [r7, #4]
   187b8:	781b      	ldrb	r3, [r3, #0]
   187ba:	2b2f      	cmp	r3, #47	@ 0x2f
   187bc:	d903      	bls.n	187c6 <decstr_to_int+0x66>
   187be:	687b      	ldr	r3, [r7, #4]
   187c0:	781b      	ldrb	r3, [r3, #0]
   187c2:	2b39      	cmp	r3, #57	@ 0x39
   187c4:	d9e4      	bls.n	18790 <decstr_to_int+0x30>
    }

    if ( pui32CharCnt )
   187c6:	683b      	ldr	r3, [r7, #0]
   187c8:	2b00      	cmp	r3, #0
   187ca:	d002      	beq.n	187d2 <decstr_to_int+0x72>
    {
        *pui32CharCnt = uCnt;
   187cc:	683b      	ldr	r3, [r7, #0]
   187ce:	68fa      	ldr	r2, [r7, #12]
   187d0:	601a      	str	r2, [r3, #0]
    }

    return bNeg ? -ui32Val : ui32Val;
   187d2:	7dfb      	ldrb	r3, [r7, #23]
   187d4:	2b00      	cmp	r3, #0
   187d6:	d002      	beq.n	187de <decstr_to_int+0x7e>
   187d8:	693b      	ldr	r3, [r7, #16]
   187da:	425b      	negs	r3, r3
   187dc:	e000      	b.n	187e0 <decstr_to_int+0x80>
   187de:	693b      	ldr	r3, [r7, #16]
}
   187e0:	4618      	mov	r0, r3
   187e2:	371c      	adds	r7, #28
   187e4:	46bd      	mov	sp, r7
   187e6:	f85d 7b04 	ldr.w	r7, [sp], #4
   187ea:	4770      	bx	lr

000187ec <uint64_to_str>:
// written).
//
//*****************************************************************************
static int
uint64_to_str(uint64_t ui64Val, char *pcBuf)
{
   187ec:	b580      	push	{r7, lr}
   187ee:	b090      	sub	sp, #64	@ 0x40
   187f0:	af00      	add	r7, sp, #0
   187f2:	e9c7 0102 	strd	r0, r1, [r7, #8]
   187f6:	607a      	str	r2, [r7, #4]
    char tbuf[25];
    int ix = 0, iNumDig = 0;
   187f8:	2300      	movs	r3, #0
   187fa:	63fb      	str	r3, [r7, #60]	@ 0x3c
   187fc:	2300      	movs	r3, #0
   187fe:	63bb      	str	r3, [r7, #56]	@ 0x38
    do
    {
        //
        // Divide by 10
        //
        u64Tmp = divu64_10(ui64Val);
   18800:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
   18804:	f7ff fe4a 	bl	1849c <divu64_10>
   18808:	e9c7 010c 	strd	r0, r1, [r7, #48]	@ 0x30

        //
        // Get modulus
        //
        uMod = ui64Val - (u64Tmp * 10);
   1880c:	68b9      	ldr	r1, [r7, #8]
   1880e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
   18810:	4613      	mov	r3, r2
   18812:	009b      	lsls	r3, r3, #2
   18814:	4413      	add	r3, r2
   18816:	005b      	lsls	r3, r3, #1
   18818:	1acb      	subs	r3, r1, r3
   1881a:	62fb      	str	r3, [r7, #44]	@ 0x2c

        tbuf[ix++] = uMod + '0';
   1881c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
   1881e:	b2da      	uxtb	r2, r3
   18820:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
   18822:	1c59      	adds	r1, r3, #1
   18824:	63f9      	str	r1, [r7, #60]	@ 0x3c
   18826:	3230      	adds	r2, #48	@ 0x30
   18828:	b2d2      	uxtb	r2, r2
   1882a:	3340      	adds	r3, #64	@ 0x40
   1882c:	443b      	add	r3, r7
   1882e:	f803 2c30 	strb.w	r2, [r3, #-48]
        ui64Val = u64Tmp;
   18832:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
   18836:	e9c7 2302 	strd	r2, r3, [r7, #8]
    } while ( ui64Val );
   1883a:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
   1883e:	4313      	orrs	r3, r2
   18840:	d1de      	bne.n	18800 <uint64_to_str+0x14>

    //
    // Save the total number of digits
    //
    iNumDig = ix;
   18842:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
   18844:	63bb      	str	r3, [r7, #56]	@ 0x38

    //
    // Now, reverse the buffer when saving to the caller's buffer.
    //
    if ( pcBuf )
   18846:	687b      	ldr	r3, [r7, #4]
   18848:	2b00      	cmp	r3, #0
   1884a:	d011      	beq.n	18870 <uint64_to_str+0x84>
    {
        while ( ix-- )
   1884c:	e008      	b.n	18860 <uint64_to_str+0x74>
        {
            *pcBuf++ = tbuf[ix];
   1884e:	687b      	ldr	r3, [r7, #4]
   18850:	1c5a      	adds	r2, r3, #1
   18852:	607a      	str	r2, [r7, #4]
   18854:	f107 0110 	add.w	r1, r7, #16
   18858:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
   1885a:	440a      	add	r2, r1
   1885c:	7812      	ldrb	r2, [r2, #0]
   1885e:	701a      	strb	r2, [r3, #0]
        while ( ix-- )
   18860:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
   18862:	1e5a      	subs	r2, r3, #1
   18864:	63fa      	str	r2, [r7, #60]	@ 0x3c
   18866:	2b00      	cmp	r3, #0
   18868:	d1f1      	bne.n	1884e <uint64_to_str+0x62>
        }

        //
        // Terminate the caller's buffer
        //
        *pcBuf = 0x00;
   1886a:	687b      	ldr	r3, [r7, #4]
   1886c:	2200      	movs	r2, #0
   1886e:	701a      	strb	r2, [r3, #0]
    }

    return iNumDig;
   18870:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
}
   18872:	4618      	mov	r0, r3
   18874:	3740      	adds	r7, #64	@ 0x40
   18876:	46bd      	mov	sp, r7
   18878:	bd80      	pop	{r7, pc}

0001887a <uint64_to_hexstr>:
// written).
//
//*****************************************************************************
static int
uint64_to_hexstr(uint64_t ui64Val, char *pcBuf, bool bLower)
{
   1887a:	b480      	push	{r7}
   1887c:	b08d      	sub	sp, #52	@ 0x34
   1887e:	af00      	add	r7, sp, #0
   18880:	e9c7 0102 	strd	r0, r1, [r7, #8]
   18884:	607a      	str	r2, [r7, #4]
   18886:	70fb      	strb	r3, [r7, #3]
    int iNumDig, ix = 0;
   18888:	2300      	movs	r3, #0
   1888a:	62fb      	str	r3, [r7, #44]	@ 0x2c
    char cCh, tbuf[20];

    if ( ui64Val == 0 )
   1888c:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
   18890:	4313      	orrs	r3, r2
   18892:	d133      	bne.n	188fc <uint64_to_hexstr+0x82>
    {
        tbuf[ix++] = '0';   // Print a '0'
   18894:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
   18896:	1c5a      	adds	r2, r3, #1
   18898:	62fa      	str	r2, [r7, #44]	@ 0x2c
   1889a:	3330      	adds	r3, #48	@ 0x30
   1889c:	443b      	add	r3, r7
   1889e:	2230      	movs	r2, #48	@ 0x30
   188a0:	f803 2c20 	strb.w	r2, [r3, #-32]
    }

    while ( ui64Val )
   188a4:	e02a      	b.n	188fc <uint64_to_hexstr+0x82>
    {
        cCh = ui64Val & 0xf;
   188a6:	7a3b      	ldrb	r3, [r7, #8]
   188a8:	f003 030f 	and.w	r3, r3, #15
   188ac:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b

        //
        // Alpha character
        //
        if ( cCh > 9 )
   188b0:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
   188b4:	2b09      	cmp	r3, #9
   188b6:	d90a      	bls.n	188ce <uint64_to_hexstr+0x54>
        {
            cCh += bLower ? 0x27 : 0x7;
   188b8:	78fb      	ldrb	r3, [r7, #3]
   188ba:	2b00      	cmp	r3, #0
   188bc:	d001      	beq.n	188c2 <uint64_to_hexstr+0x48>
   188be:	2227      	movs	r2, #39	@ 0x27
   188c0:	e000      	b.n	188c4 <uint64_to_hexstr+0x4a>
   188c2:	2207      	movs	r2, #7
   188c4:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
   188c8:	4413      	add	r3, r2
   188ca:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
        }

        tbuf[ix++] = cCh + '0';
   188ce:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
   188d0:	1c5a      	adds	r2, r3, #1
   188d2:	62fa      	str	r2, [r7, #44]	@ 0x2c
   188d4:	f897 202b 	ldrb.w	r2, [r7, #43]	@ 0x2b
   188d8:	3230      	adds	r2, #48	@ 0x30
   188da:	b2d2      	uxtb	r2, r2
   188dc:	3330      	adds	r3, #48	@ 0x30
   188de:	443b      	add	r3, r7
   188e0:	f803 2c20 	strb.w	r2, [r3, #-32]
        ui64Val >>= 4;
   188e4:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
   188e8:	f04f 0200 	mov.w	r2, #0
   188ec:	f04f 0300 	mov.w	r3, #0
   188f0:	0902      	lsrs	r2, r0, #4
   188f2:	ea42 7201 	orr.w	r2, r2, r1, lsl #28
   188f6:	090b      	lsrs	r3, r1, #4
   188f8:	e9c7 2302 	strd	r2, r3, [r7, #8]
    while ( ui64Val )
   188fc:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
   18900:	4313      	orrs	r3, r2
   18902:	d1d0      	bne.n	188a6 <uint64_to_hexstr+0x2c>
    }

    //
    // Save the total number of digits
    //
    iNumDig = ix;
   18904:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
   18906:	627b      	str	r3, [r7, #36]	@ 0x24

    //
    // Now, reverse the buffer when saving to the callers buffer.
    //
    if (pcBuf)
   18908:	687b      	ldr	r3, [r7, #4]
   1890a:	2b00      	cmp	r3, #0
   1890c:	d011      	beq.n	18932 <uint64_to_hexstr+0xb8>
    {
        while (ix--)
   1890e:	e008      	b.n	18922 <uint64_to_hexstr+0xa8>
        {
            *pcBuf++ = tbuf[ix];
   18910:	687b      	ldr	r3, [r7, #4]
   18912:	1c5a      	adds	r2, r3, #1
   18914:	607a      	str	r2, [r7, #4]
   18916:	f107 0110 	add.w	r1, r7, #16
   1891a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
   1891c:	440a      	add	r2, r1
   1891e:	7812      	ldrb	r2, [r2, #0]
   18920:	701a      	strb	r2, [r3, #0]
        while (ix--)
   18922:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
   18924:	1e5a      	subs	r2, r3, #1
   18926:	62fa      	str	r2, [r7, #44]	@ 0x2c
   18928:	2b00      	cmp	r3, #0
   1892a:	d1f1      	bne.n	18910 <uint64_to_hexstr+0x96>
        }

        //
        // Terminate the caller's buffer
        //
        *pcBuf = 0;
   1892c:	687b      	ldr	r3, [r7, #4]
   1892e:	2200      	movs	r2, #0
   18930:	701a      	strb	r2, [r3, #0]
    }

    return iNumDig;
   18932:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
}
   18934:	4618      	mov	r0, r3
   18936:	3734      	adds	r7, #52	@ 0x34
   18938:	46bd      	mov	sp, r7
   1893a:	f85d 7b04 	ldr.w	r7, [sp], #4
   1893e:	4770      	bx	lr

00018940 <simple_strlen>:
// Return length of the given string.
//
//*****************************************************************************
static uint32_t
simple_strlen(char *pcBuf)
{
   18940:	b480      	push	{r7}
   18942:	b085      	sub	sp, #20
   18944:	af00      	add	r7, sp, #0
   18946:	6078      	str	r0, [r7, #4]
    uint32_t ui32RetVal = 0;
   18948:	2300      	movs	r3, #0
   1894a:	60fb      	str	r3, [r7, #12]
    if ( !pcBuf )
   1894c:	687b      	ldr	r3, [r7, #4]
   1894e:	2b00      	cmp	r3, #0
   18950:	d104      	bne.n	1895c <simple_strlen+0x1c>
    {
        return ui32RetVal;
   18952:	68fb      	ldr	r3, [r7, #12]
   18954:	e009      	b.n	1896a <simple_strlen+0x2a>
    }

    while ( *pcBuf++ )
    {
        ui32RetVal++;
   18956:	68fb      	ldr	r3, [r7, #12]
   18958:	3301      	adds	r3, #1
   1895a:	60fb      	str	r3, [r7, #12]
    while ( *pcBuf++ )
   1895c:	687b      	ldr	r3, [r7, #4]
   1895e:	1c5a      	adds	r2, r3, #1
   18960:	607a      	str	r2, [r7, #4]
   18962:	781b      	ldrb	r3, [r3, #0]
   18964:	2b00      	cmp	r3, #0
   18966:	d1f6      	bne.n	18956 <simple_strlen+0x16>
    }
    return ui32RetVal;
   18968:	68fb      	ldr	r3, [r7, #12]
}
   1896a:	4618      	mov	r0, r3
   1896c:	3714      	adds	r7, #20
   1896e:	46bd      	mov	sp, r7
   18970:	f85d 7b04 	ldr.w	r7, [sp], #4
   18974:	4770      	bx	lr

00018976 <padbuffer>:
// Pad a string buffer with pad characters.
//
//*****************************************************************************
static int32_t
padbuffer(char *pcBuf, uint8_t cPadChar, int32_t i32NumChars)
{
   18976:	b480      	push	{r7}
   18978:	b087      	sub	sp, #28
   1897a:	af00      	add	r7, sp, #0
   1897c:	60f8      	str	r0, [r7, #12]
   1897e:	460b      	mov	r3, r1
   18980:	607a      	str	r2, [r7, #4]
   18982:	72fb      	strb	r3, [r7, #11]
    int32_t i32Cnt = 0;
   18984:	2300      	movs	r3, #0
   18986:	617b      	str	r3, [r7, #20]

    if ( i32NumChars <= 0 )
   18988:	687b      	ldr	r3, [r7, #4]
   1898a:	2b00      	cmp	r3, #0
   1898c:	dc0c      	bgt.n	189a8 <padbuffer+0x32>
    {
        return i32Cnt;
   1898e:	697b      	ldr	r3, [r7, #20]
   18990:	e010      	b.n	189b4 <padbuffer+0x3e>
    }

    while ( i32NumChars-- )
    {
        if ( pcBuf )
   18992:	68fb      	ldr	r3, [r7, #12]
   18994:	2b00      	cmp	r3, #0
   18996:	d004      	beq.n	189a2 <padbuffer+0x2c>
        {
            *pcBuf++ = cPadChar;
   18998:	68fb      	ldr	r3, [r7, #12]
   1899a:	1c5a      	adds	r2, r3, #1
   1899c:	60fa      	str	r2, [r7, #12]
   1899e:	7afa      	ldrb	r2, [r7, #11]
   189a0:	701a      	strb	r2, [r3, #0]
        }
        i32Cnt++;
   189a2:	697b      	ldr	r3, [r7, #20]
   189a4:	3301      	adds	r3, #1
   189a6:	617b      	str	r3, [r7, #20]
    while ( i32NumChars-- )
   189a8:	687b      	ldr	r3, [r7, #4]
   189aa:	1e5a      	subs	r2, r3, #1
   189ac:	607a      	str	r2, [r7, #4]
   189ae:	2b00      	cmp	r3, #0
   189b0:	d1ef      	bne.n	18992 <padbuffer+0x1c>
    }

    return i32Cnt;
   189b2:	697b      	ldr	r3, [r7, #20]
}
   189b4:	4618      	mov	r0, r3
   189b6:	371c      	adds	r7, #28
   189b8:	46bd      	mov	sp, r7
   189ba:	f85d 7b04 	ldr.w	r7, [sp], #4
   189be:	4770      	bx	lr

000189c0 <ftoa>:
    int32_t I32;
    float F;
} i32fl_t;

static int ftoa(float fValue, char *pcBuf, int iPrecision)
{
   189c0:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
   189c4:	b08e      	sub	sp, #56	@ 0x38
   189c6:	af00      	add	r7, sp, #0
   189c8:	ed87 0a03 	vstr	s0, [r7, #12]
   189cc:	60b8      	str	r0, [r7, #8]
   189ce:	6079      	str	r1, [r7, #4]
    i32fl_t unFloatValue;
    int iExp2, iBufSize;
    int32_t i32Significand, i32IntPart, i32FracPart;
    char *pcBufInitial, *pcBuftmp;

    iBufSize = *(uint32_t*)pcBuf;
   189d0:	68bb      	ldr	r3, [r7, #8]
   189d2:	681b      	ldr	r3, [r3, #0]
   189d4:	627b      	str	r3, [r7, #36]	@ 0x24
    if (iBufSize < 4)
   189d6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
   189d8:	2b03      	cmp	r3, #3
   189da:	dc02      	bgt.n	189e2 <ftoa+0x22>
    {
        return AM_FTOA_ERR_BUFSIZE;
   189dc:	f06f 0302 	mvn.w	r3, #2
   189e0:	e0e9      	b.n	18bb6 <ftoa+0x1f6>
    }

    if (fValue == 0.0f)
   189e2:	edd7 7a03 	vldr	s15, [r7, #12]
   189e6:	eef5 7a40 	vcmp.f32	s15, #0.0
   189ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   189ee:	d104      	bne.n	189fa <ftoa+0x3a>
    {
        // "0.0"
        *(uint32_t*)pcBuf = 0x00 << 24 | ('0' << 16) | ('.' << 8) | ('0' << 0);
   189f0:	68bb      	ldr	r3, [r7, #8]
   189f2:	4a73      	ldr	r2, [pc, #460]	@ (18bc0 <ftoa+0x200>)
   189f4:	601a      	str	r2, [r3, #0]
        return 3;
   189f6:	2303      	movs	r3, #3
   189f8:	e0dd      	b.n	18bb6 <ftoa+0x1f6>
    }

    pcBufInitial = pcBuf;
   189fa:	68bb      	ldr	r3, [r7, #8]
   189fc:	623b      	str	r3, [r7, #32]

    unFloatValue.F = fValue;
   189fe:	68fb      	ldr	r3, [r7, #12]
   18a00:	613b      	str	r3, [r7, #16]

    iExp2 = ((unFloatValue.I32 >> 23) & 0x000000FF) - 127;
   18a02:	693b      	ldr	r3, [r7, #16]
   18a04:	15db      	asrs	r3, r3, #23
   18a06:	b2db      	uxtb	r3, r3
   18a08:	3b7f      	subs	r3, #127	@ 0x7f
   18a0a:	61fb      	str	r3, [r7, #28]
    i32Significand = (unFloatValue.I32 & 0x00FFFFFF) | 0x00800000;
   18a0c:	693b      	ldr	r3, [r7, #16]
   18a0e:	f3c3 0316 	ubfx	r3, r3, #0, #23
   18a12:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
   18a16:	61bb      	str	r3, [r7, #24]
    i32FracPart = 0;
   18a18:	2300      	movs	r3, #0
   18a1a:	633b      	str	r3, [r7, #48]	@ 0x30
    i32IntPart = 0;
   18a1c:	2300      	movs	r3, #0
   18a1e:	637b      	str	r3, [r7, #52]	@ 0x34

    if (iExp2 >= 31)
   18a20:	69fb      	ldr	r3, [r7, #28]
   18a22:	2b1e      	cmp	r3, #30
   18a24:	dd02      	ble.n	18a2c <ftoa+0x6c>
    {
        return AM_FTOA_ERR_VAL_TOO_LARGE;
   18a26:	f06f 0301 	mvn.w	r3, #1
   18a2a:	e0c4      	b.n	18bb6 <ftoa+0x1f6>
    }
    else if (iExp2 < -23)
   18a2c:	69fb      	ldr	r3, [r7, #28]
   18a2e:	f113 0f17 	cmn.w	r3, #23
   18a32:	da02      	bge.n	18a3a <ftoa+0x7a>
    {
        return AM_FTOA_ERR_VAL_TOO_SMALL;
   18a34:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   18a38:	e0bd      	b.n	18bb6 <ftoa+0x1f6>
    }
    else if (iExp2 >= 23)
   18a3a:	69fb      	ldr	r3, [r7, #28]
   18a3c:	2b16      	cmp	r3, #22
   18a3e:	dd06      	ble.n	18a4e <ftoa+0x8e>
    {
        i32IntPart = i32Significand << (iExp2 - 23);
   18a40:	69fb      	ldr	r3, [r7, #28]
   18a42:	3b17      	subs	r3, #23
   18a44:	69ba      	ldr	r2, [r7, #24]
   18a46:	fa02 f303 	lsl.w	r3, r2, r3
   18a4a:	637b      	str	r3, [r7, #52]	@ 0x34
   18a4c:	e01a      	b.n	18a84 <ftoa+0xc4>
    }
    else if (iExp2 >= 0)
   18a4e:	69fb      	ldr	r3, [r7, #28]
   18a50:	2b00      	cmp	r3, #0
   18a52:	db0f      	blt.n	18a74 <ftoa+0xb4>
    {
        i32IntPart = i32Significand >> (23 - iExp2);
   18a54:	69fb      	ldr	r3, [r7, #28]
   18a56:	f1c3 0317 	rsb	r3, r3, #23
   18a5a:	69ba      	ldr	r2, [r7, #24]
   18a5c:	fa42 f303 	asr.w	r3, r2, r3
   18a60:	637b      	str	r3, [r7, #52]	@ 0x34
        i32FracPart = (i32Significand << (iExp2 + 1)) & 0x00FFFFFF;
   18a62:	69fb      	ldr	r3, [r7, #28]
   18a64:	3301      	adds	r3, #1
   18a66:	69ba      	ldr	r2, [r7, #24]
   18a68:	fa02 f303 	lsl.w	r3, r2, r3
   18a6c:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
   18a70:	633b      	str	r3, [r7, #48]	@ 0x30
   18a72:	e007      	b.n	18a84 <ftoa+0xc4>
    }
    else // if (iExp2 < 0)
    {
        i32FracPart = (i32Significand & 0x00FFFFFF) >> -(iExp2 + 1);
   18a74:	69bb      	ldr	r3, [r7, #24]
   18a76:	f023 427f 	bic.w	r2, r3, #4278190080	@ 0xff000000
   18a7a:	69fb      	ldr	r3, [r7, #28]
   18a7c:	43db      	mvns	r3, r3
   18a7e:	fa42 f303 	asr.w	r3, r2, r3
   18a82:	633b      	str	r3, [r7, #48]	@ 0x30
    }

    if (unFloatValue.I32 < 0)
   18a84:	693b      	ldr	r3, [r7, #16]
   18a86:	2b00      	cmp	r3, #0
   18a88:	da04      	bge.n	18a94 <ftoa+0xd4>
    {
        *pcBuf++ = '-';
   18a8a:	68bb      	ldr	r3, [r7, #8]
   18a8c:	1c5a      	adds	r2, r3, #1
   18a8e:	60ba      	str	r2, [r7, #8]
   18a90:	222d      	movs	r2, #45	@ 0x2d
   18a92:	701a      	strb	r2, [r3, #0]
    }

    if (i32IntPart == 0)
   18a94:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
   18a96:	2b00      	cmp	r3, #0
   18a98:	d105      	bne.n	18aa6 <ftoa+0xe6>
    {
        *pcBuf++ = '0';
   18a9a:	68bb      	ldr	r3, [r7, #8]
   18a9c:	1c5a      	adds	r2, r3, #1
   18a9e:	60ba      	str	r2, [r7, #8]
   18aa0:	2230      	movs	r2, #48	@ 0x30
   18aa2:	701a      	strb	r2, [r3, #0]
   18aa4:	e023      	b.n	18aee <ftoa+0x12e>
    }
    else
    {
        if (i32IntPart > 0)
   18aa6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
   18aa8:	2b00      	cmp	r3, #0
   18aaa:	dd09      	ble.n	18ac0 <ftoa+0x100>
        {
            uint64_to_str(i32IntPart, pcBuf);
   18aac:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
   18aae:	17da      	asrs	r2, r3, #31
   18ab0:	4698      	mov	r8, r3
   18ab2:	4691      	mov	r9, r2
   18ab4:	68ba      	ldr	r2, [r7, #8]
   18ab6:	4640      	mov	r0, r8
   18ab8:	4649      	mov	r1, r9
   18aba:	f7ff fe97 	bl	187ec <uint64_to_str>
   18abe:	e012      	b.n	18ae6 <ftoa+0x126>
        }
        else
        {
            *pcBuf++ = '-';
   18ac0:	68bb      	ldr	r3, [r7, #8]
   18ac2:	1c5a      	adds	r2, r3, #1
   18ac4:	60ba      	str	r2, [r7, #8]
   18ac6:	222d      	movs	r2, #45	@ 0x2d
   18ac8:	701a      	strb	r2, [r3, #0]
            uint64_to_str(-i32IntPart, pcBuf);
   18aca:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
   18acc:	425b      	negs	r3, r3
   18ace:	17da      	asrs	r2, r3, #31
   18ad0:	461c      	mov	r4, r3
   18ad2:	4615      	mov	r5, r2
   18ad4:	68ba      	ldr	r2, [r7, #8]
   18ad6:	4620      	mov	r0, r4
   18ad8:	4629      	mov	r1, r5
   18ada:	f7ff fe87 	bl	187ec <uint64_to_str>
        }
        while (*pcBuf)    // Get to end of new string
   18ade:	e002      	b.n	18ae6 <ftoa+0x126>
        {
            pcBuf++;
   18ae0:	68bb      	ldr	r3, [r7, #8]
   18ae2:	3301      	adds	r3, #1
   18ae4:	60bb      	str	r3, [r7, #8]
        while (*pcBuf)    // Get to end of new string
   18ae6:	68bb      	ldr	r3, [r7, #8]
   18ae8:	781b      	ldrb	r3, [r3, #0]
   18aea:	2b00      	cmp	r3, #0
   18aec:	d1f8      	bne.n	18ae0 <ftoa+0x120>
    }

    //
    // Now, begin the fractional part
    //
    *pcBuf++ = '.';
   18aee:	68bb      	ldr	r3, [r7, #8]
   18af0:	1c5a      	adds	r2, r3, #1
   18af2:	60ba      	str	r2, [r7, #8]
   18af4:	222e      	movs	r2, #46	@ 0x2e
   18af6:	701a      	strb	r2, [r3, #0]

    if (i32FracPart == 0)
   18af8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   18afa:	2b00      	cmp	r3, #0
   18afc:	d105      	bne.n	18b0a <ftoa+0x14a>
    {
        *pcBuf++ = '0';
   18afe:	68bb      	ldr	r3, [r7, #8]
   18b00:	1c5a      	adds	r2, r3, #1
   18b02:	60ba      	str	r2, [r7, #8]
   18b04:	2230      	movs	r2, #48	@ 0x30
   18b06:	701a      	strb	r2, [r3, #0]
   18b08:	e04f      	b.n	18baa <ftoa+0x1ea>
    }
    else
    {
        int jx, iMax;

        iMax = iBufSize - (pcBuf - pcBufInitial) - 1;
   18b0a:	68ba      	ldr	r2, [r7, #8]
   18b0c:	6a3b      	ldr	r3, [r7, #32]
   18b0e:	1ad3      	subs	r3, r2, r3
   18b10:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
   18b12:	1ad3      	subs	r3, r2, r3
   18b14:	3b01      	subs	r3, #1
   18b16:	617b      	str	r3, [r7, #20]
        iMax = (iMax > iPrecision) ? iPrecision : iMax;
   18b18:	697a      	ldr	r2, [r7, #20]
   18b1a:	687b      	ldr	r3, [r7, #4]
   18b1c:	4293      	cmp	r3, r2
   18b1e:	bfa8      	it	ge
   18b20:	4613      	movge	r3, r2
   18b22:	617b      	str	r3, [r7, #20]

        for (jx = 0; jx < iMax; jx++)
   18b24:	2300      	movs	r3, #0
   18b26:	62bb      	str	r3, [r7, #40]	@ 0x28
   18b28:	e015      	b.n	18b56 <ftoa+0x196>
        {
            i32FracPart *= 10;
   18b2a:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
   18b2c:	4613      	mov	r3, r2
   18b2e:	009b      	lsls	r3, r3, #2
   18b30:	4413      	add	r3, r2
   18b32:	005b      	lsls	r3, r3, #1
   18b34:	633b      	str	r3, [r7, #48]	@ 0x30
            *pcBuf++ = (i32FracPart >> 24) + '0';
   18b36:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   18b38:	161b      	asrs	r3, r3, #24
   18b3a:	b2da      	uxtb	r2, r3
   18b3c:	68bb      	ldr	r3, [r7, #8]
   18b3e:	1c59      	adds	r1, r3, #1
   18b40:	60b9      	str	r1, [r7, #8]
   18b42:	3230      	adds	r2, #48	@ 0x30
   18b44:	b2d2      	uxtb	r2, r2
   18b46:	701a      	strb	r2, [r3, #0]
            i32FracPart &= 0x00FFFFFF;
   18b48:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   18b4a:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
   18b4e:	633b      	str	r3, [r7, #48]	@ 0x30
        for (jx = 0; jx < iMax; jx++)
   18b50:	6abb      	ldr	r3, [r7, #40]	@ 0x28
   18b52:	3301      	adds	r3, #1
   18b54:	62bb      	str	r3, [r7, #40]	@ 0x28
   18b56:	6aba      	ldr	r2, [r7, #40]	@ 0x28
   18b58:	697b      	ldr	r3, [r7, #20]
   18b5a:	429a      	cmp	r2, r3
   18b5c:	dbe5      	blt.n	18b2a <ftoa+0x16a>
        // 1.996        4                   1.9960
        //
        // To determine whether to round up, we'll look at what the next
        // decimal value would have been.
        //
        if ( ((i32FracPart * 10) >> 24) >= 5 )
   18b5e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
   18b60:	4613      	mov	r3, r2
   18b62:	009b      	lsls	r3, r3, #2
   18b64:	4413      	add	r3, r2
   18b66:	005b      	lsls	r3, r3, #1
   18b68:	161b      	asrs	r3, r3, #24
   18b6a:	2b04      	cmp	r3, #4
   18b6c:	dd1d      	ble.n	18baa <ftoa+0x1ea>
        {
            //
            // Yes, we need to round up.
            // Go back through the string and make adjustments as necessary.
            //
            pcBuftmp = pcBuf - 1;
   18b6e:	68bb      	ldr	r3, [r7, #8]
   18b70:	3b01      	subs	r3, #1
   18b72:	62fb      	str	r3, [r7, #44]	@ 0x2c
            while ( pcBuftmp >= pcBufInitial )
   18b74:	e015      	b.n	18ba2 <ftoa+0x1e2>
            {
                if ( *pcBuftmp == '.' )
   18b76:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
   18b78:	781b      	ldrb	r3, [r3, #0]
   18b7a:	2b2e      	cmp	r3, #46	@ 0x2e
   18b7c:	d00e      	beq.n	18b9c <ftoa+0x1dc>
                {
                }
                else if ( *pcBuftmp == '9' )
   18b7e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
   18b80:	781b      	ldrb	r3, [r3, #0]
   18b82:	2b39      	cmp	r3, #57	@ 0x39
   18b84:	d103      	bne.n	18b8e <ftoa+0x1ce>
                {
                    *pcBuftmp = '0';
   18b86:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
   18b88:	2230      	movs	r2, #48	@ 0x30
   18b8a:	701a      	strb	r2, [r3, #0]
   18b8c:	e006      	b.n	18b9c <ftoa+0x1dc>
                }
                else
                {
                    *pcBuftmp += 1;
   18b8e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
   18b90:	781b      	ldrb	r3, [r3, #0]
   18b92:	3301      	adds	r3, #1
   18b94:	b2da      	uxtb	r2, r3
   18b96:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
   18b98:	701a      	strb	r2, [r3, #0]
                    break;
   18b9a:	e006      	b.n	18baa <ftoa+0x1ea>
                }
                pcBuftmp--;
   18b9c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
   18b9e:	3b01      	subs	r3, #1
   18ba0:	62fb      	str	r3, [r7, #44]	@ 0x2c
            while ( pcBuftmp >= pcBufInitial )
   18ba2:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
   18ba4:	6a3b      	ldr	r3, [r7, #32]
   18ba6:	429a      	cmp	r2, r3
   18ba8:	d2e5      	bcs.n	18b76 <ftoa+0x1b6>
    }

    //
    // Terminate the string and we're done
    //
    *pcBuf = 0x00;
   18baa:	68bb      	ldr	r3, [r7, #8]
   18bac:	2200      	movs	r2, #0
   18bae:	701a      	strb	r2, [r3, #0]

    return (pcBuf - pcBufInitial);
   18bb0:	68ba      	ldr	r2, [r7, #8]
   18bb2:	6a3b      	ldr	r3, [r7, #32]
   18bb4:	1ad3      	subs	r3, r2, r3
} // ftoa()
   18bb6:	4618      	mov	r0, r3
   18bb8:	3738      	adds	r7, #56	@ 0x38
   18bba:	46bd      	mov	sp, r7
   18bbc:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
   18bc0:	00302e30 	.word	0x00302e30

00018bc4 <am_util_stdio_vsprintf>:
// Format data into string. (va_list implementation)
//
//******************************************************************************
uint32_t
am_util_stdio_vsprintf(char *pcBuf, const char *pcFmt, va_list pArgs)
{
   18bc4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
   18bc8:	b098      	sub	sp, #96	@ 0x60
   18bca:	af00      	add	r7, sp, #0
   18bcc:	6178      	str	r0, [r7, #20]
   18bce:	6139      	str	r1, [r7, #16]
   18bd0:	60fa      	str	r2, [r7, #12]
    char *pcStr;
    uint64_t ui64Val;
    int64_t i64Val;
    uint32_t ui32NumChars, ui32CharCnt = 0;
   18bd2:	2300      	movs	r3, #0
   18bd4:	64fb      	str	r3, [r7, #76]	@ 0x4c
    int iWidth, iVal, iPrecision;
    uint8_t ui8CharSpecifier, ui8PadChar;
    bool bLower, bLongLong, bNeg;
    uint32_t ui32strlen = 0;
   18bd6:	2300      	movs	r3, #0
   18bd8:	637b      	str	r3, [r7, #52]	@ 0x34

    while ( *pcFmt != 0x0 )
   18bda:	e2ed      	b.n	191b8 <am_util_stdio_vsprintf+0x5f4>
    {
        iPrecision = 6;             // printf() default precision for %f is 6
   18bdc:	2306      	movs	r3, #6
   18bde:	643b      	str	r3, [r7, #64]	@ 0x40

        if ( *pcFmt != '%' )
   18be0:	693b      	ldr	r3, [r7, #16]
   18be2:	781b      	ldrb	r3, [r3, #0]
   18be4:	2b25      	cmp	r3, #37	@ 0x25
   18be6:	d01f      	beq.n	18c28 <am_util_stdio_vsprintf+0x64>
        {
            //
            // Accumulate the string portion of the format specification.
            //
            if ( pcBuf )
   18be8:	697b      	ldr	r3, [r7, #20]
   18bea:	2b00      	cmp	r3, #0
   18bec:	d015      	beq.n	18c1a <am_util_stdio_vsprintf+0x56>
            {
                // If '\n', convert to '\r\n'
                if ( *pcFmt == '\n'  &&  g_bTxtXlate )
   18bee:	693b      	ldr	r3, [r7, #16]
   18bf0:	781b      	ldrb	r3, [r3, #0]
   18bf2:	2b0a      	cmp	r3, #10
   18bf4:	d10b      	bne.n	18c0e <am_util_stdio_vsprintf+0x4a>
   18bf6:	4ba9      	ldr	r3, [pc, #676]	@ (18e9c <am_util_stdio_vsprintf+0x2d8>)
   18bf8:	781b      	ldrb	r3, [r3, #0]
   18bfa:	2b00      	cmp	r3, #0
   18bfc:	d007      	beq.n	18c0e <am_util_stdio_vsprintf+0x4a>
                {
                    *pcBuf++ = '\r';
   18bfe:	697b      	ldr	r3, [r7, #20]
   18c00:	1c5a      	adds	r2, r3, #1
   18c02:	617a      	str	r2, [r7, #20]
   18c04:	220d      	movs	r2, #13
   18c06:	701a      	strb	r2, [r3, #0]
                    ++ui32CharCnt;
   18c08:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
   18c0a:	3301      	adds	r3, #1
   18c0c:	64fb      	str	r3, [r7, #76]	@ 0x4c
                }
                *pcBuf++ = *pcFmt;
   18c0e:	697b      	ldr	r3, [r7, #20]
   18c10:	1c5a      	adds	r2, r3, #1
   18c12:	617a      	str	r2, [r7, #20]
   18c14:	693a      	ldr	r2, [r7, #16]
   18c16:	7812      	ldrb	r2, [r2, #0]
   18c18:	701a      	strb	r2, [r3, #0]
            }

            ++pcFmt;
   18c1a:	693b      	ldr	r3, [r7, #16]
   18c1c:	3301      	adds	r3, #1
   18c1e:	613b      	str	r3, [r7, #16]
            ++ui32CharCnt;
   18c20:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
   18c22:	3301      	adds	r3, #1
   18c24:	64fb      	str	r3, [r7, #76]	@ 0x4c
            continue;
   18c26:	e2c7      	b.n	191b8 <am_util_stdio_vsprintf+0x5f4>
        }

        //
        // Handle the specifier.
        //
        ++pcFmt;
   18c28:	693b      	ldr	r3, [r7, #16]
   18c2a:	3301      	adds	r3, #1
   18c2c:	613b      	str	r3, [r7, #16]
        bLower = bLongLong = false;
   18c2e:	2300      	movs	r3, #0
   18c30:	f887 303d 	strb.w	r3, [r7, #61]	@ 0x3d
   18c34:	f897 303d 	ldrb.w	r3, [r7, #61]	@ 0x3d
   18c38:	f887 303e 	strb.w	r3, [r7, #62]	@ 0x3e

        //
        // Default to space as ui8PadChar
        //
        ui8PadChar = ' ';
   18c3c:	2320      	movs	r3, #32
   18c3e:	f887 303f 	strb.w	r3, [r7, #63]	@ 0x3f

        if ( *pcFmt == '0' )
   18c42:	693b      	ldr	r3, [r7, #16]
   18c44:	781b      	ldrb	r3, [r3, #0]
   18c46:	2b30      	cmp	r3, #48	@ 0x30
   18c48:	d105      	bne.n	18c56 <am_util_stdio_vsprintf+0x92>
        {
            ui8PadChar = '0';
   18c4a:	2330      	movs	r3, #48	@ 0x30
   18c4c:	f887 303f 	strb.w	r3, [r7, #63]	@ 0x3f
            ++pcFmt;
   18c50:	693b      	ldr	r3, [r7, #16]
   18c52:	3301      	adds	r3, #1
   18c54:	613b      	str	r3, [r7, #16]
        }

        //
        // Width specifier
        //
        iWidth = decstr_to_int(pcFmt, &ui32NumChars);
   18c56:	f107 031c 	add.w	r3, r7, #28
   18c5a:	4619      	mov	r1, r3
   18c5c:	6938      	ldr	r0, [r7, #16]
   18c5e:	f7ff fd7f 	bl	18760 <decstr_to_int>
   18c62:	4603      	mov	r3, r0
   18c64:	64bb      	str	r3, [r7, #72]	@ 0x48
        pcFmt += ui32NumChars;
   18c66:	69fb      	ldr	r3, [r7, #28]
   18c68:	693a      	ldr	r2, [r7, #16]
   18c6a:	4413      	add	r3, r2
   18c6c:	613b      	str	r3, [r7, #16]

        //
        // For now, only support a negative width specifier for %s
        //
        if ( ( *pcFmt != 's' )  &&  ( iWidth < 0 ) )
   18c6e:	693b      	ldr	r3, [r7, #16]
   18c70:	781b      	ldrb	r3, [r3, #0]
   18c72:	2b73      	cmp	r3, #115	@ 0x73
   18c74:	d005      	beq.n	18c82 <am_util_stdio_vsprintf+0xbe>
   18c76:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
   18c78:	2b00      	cmp	r3, #0
   18c7a:	da02      	bge.n	18c82 <am_util_stdio_vsprintf+0xbe>
        {
            iWidth = -iWidth;
   18c7c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
   18c7e:	425b      	negs	r3, r3
   18c80:	64bb      	str	r3, [r7, #72]	@ 0x48
        }

        //
        // Check for precision specifier
        //
        if (*pcFmt == '.')
   18c82:	693b      	ldr	r3, [r7, #16]
   18c84:	781b      	ldrb	r3, [r3, #0]
   18c86:	2b2e      	cmp	r3, #46	@ 0x2e
   18c88:	d10e      	bne.n	18ca8 <am_util_stdio_vsprintf+0xe4>
        {
            ++pcFmt;
   18c8a:	693b      	ldr	r3, [r7, #16]
   18c8c:	3301      	adds	r3, #1
   18c8e:	613b      	str	r3, [r7, #16]
            iPrecision = decstr_to_int(pcFmt, &ui32NumChars);
   18c90:	f107 031c 	add.w	r3, r7, #28
   18c94:	4619      	mov	r1, r3
   18c96:	6938      	ldr	r0, [r7, #16]
   18c98:	f7ff fd62 	bl	18760 <decstr_to_int>
   18c9c:	4603      	mov	r3, r0
   18c9e:	643b      	str	r3, [r7, #64]	@ 0x40
            pcFmt += ui32NumChars;
   18ca0:	69fb      	ldr	r3, [r7, #28]
   18ca2:	693a      	ldr	r2, [r7, #16]
   18ca4:	4413      	add	r3, r2
   18ca6:	613b      	str	r3, [r7, #16]
        // 'll', which must be a modifier for either 'd', 'i', 'u', 'x', or 'X'
        // (or even 'o', which is not currently supported). Other sub-specifiers
        // like 'hh','h', etc. are not currently handled.
        // Note - 'l' is used in Coremark, a primary reason it's supported here.
        //
        if ( *pcFmt == 'l' )
   18ca8:	693b      	ldr	r3, [r7, #16]
   18caa:	781b      	ldrb	r3, [r3, #0]
   18cac:	2b6c      	cmp	r3, #108	@ 0x6c
   18cae:	d10c      	bne.n	18cca <am_util_stdio_vsprintf+0x106>
        {
            pcFmt++;
   18cb0:	693b      	ldr	r3, [r7, #16]
   18cb2:	3301      	adds	r3, #1
   18cb4:	613b      	str	r3, [r7, #16]
            if ( *pcFmt == 'l' )    // "ll" (long long)
   18cb6:	693b      	ldr	r3, [r7, #16]
   18cb8:	781b      	ldrb	r3, [r3, #0]
   18cba:	2b6c      	cmp	r3, #108	@ 0x6c
   18cbc:	d105      	bne.n	18cca <am_util_stdio_vsprintf+0x106>
            {
                pcFmt++;
   18cbe:	693b      	ldr	r3, [r7, #16]
   18cc0:	3301      	adds	r3, #1
   18cc2:	613b      	str	r3, [r7, #16]
                bLongLong = true;
   18cc4:	2301      	movs	r3, #1
   18cc6:	f887 303d 	strb.w	r3, [r7, #61]	@ 0x3d
            }
        }

        switch ( *pcFmt )
   18cca:	693b      	ldr	r3, [r7, #16]
   18ccc:	781b      	ldrb	r3, [r3, #0]
   18cce:	3b46      	subs	r3, #70	@ 0x46
   18cd0:	2b32      	cmp	r3, #50	@ 0x32
   18cd2:	f200 825e 	bhi.w	19192 <am_util_stdio_vsprintf+0x5ce>
   18cd6:	a201      	add	r2, pc, #4	@ (adr r2, 18cdc <am_util_stdio_vsprintf+0x118>)
   18cd8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   18cdc:	00019119 	.word	0x00019119
   18ce0:	00019193 	.word	0x00019193
   18ce4:	00019193 	.word	0x00019193
   18ce8:	00019193 	.word	0x00019193
   18cec:	00019193 	.word	0x00019193
   18cf0:	00019193 	.word	0x00019193
   18cf4:	00019193 	.word	0x00019193
   18cf8:	00019193 	.word	0x00019193
   18cfc:	00019193 	.word	0x00019193
   18d00:	00019193 	.word	0x00019193
   18d04:	00019193 	.word	0x00019193
   18d08:	00019193 	.word	0x00019193
   18d0c:	00019193 	.word	0x00019193
   18d10:	00019193 	.word	0x00019193
   18d14:	00019193 	.word	0x00019193
   18d18:	00019193 	.word	0x00019193
   18d1c:	00019193 	.word	0x00019193
   18d20:	00019193 	.word	0x00019193
   18d24:	00018ea7 	.word	0x00018ea7
   18d28:	00019193 	.word	0x00019193
   18d2c:	00019193 	.word	0x00019193
   18d30:	00019193 	.word	0x00019193
   18d34:	00019193 	.word	0x00019193
   18d38:	00019193 	.word	0x00019193
   18d3c:	00019193 	.word	0x00019193
   18d40:	00019193 	.word	0x00019193
   18d44:	00019193 	.word	0x00019193
   18d48:	00019193 	.word	0x00019193
   18d4c:	00019193 	.word	0x00019193
   18d50:	00018da9 	.word	0x00018da9
   18d54:	00018fd7 	.word	0x00018fd7
   18d58:	00019193 	.word	0x00019193
   18d5c:	00019119 	.word	0x00019119
   18d60:	00019193 	.word	0x00019193
   18d64:	00019193 	.word	0x00019193
   18d68:	00018fd7 	.word	0x00018fd7
   18d6c:	00019193 	.word	0x00019193
   18d70:	00019193 	.word	0x00019193
   18d74:	00019193 	.word	0x00019193
   18d78:	00019193 	.word	0x00019193
   18d7c:	00019193 	.word	0x00019193
   18d80:	00019193 	.word	0x00019193
   18d84:	00019193 	.word	0x00019193
   18d88:	00019193 	.word	0x00019193
   18d8c:	00019193 	.word	0x00019193
   18d90:	00018dcf 	.word	0x00018dcf
   18d94:	00019193 	.word	0x00019193
   18d98:	00018f41 	.word	0x00018f41
   18d9c:	00019193 	.word	0x00019193
   18da0:	00019193 	.word	0x00019193
   18da4:	00018ea1 	.word	0x00018ea1
        {
            case 'c':
                ui8CharSpecifier = va_arg(pArgs, uint32_t);
   18da8:	68fb      	ldr	r3, [r7, #12]
   18daa:	1d1a      	adds	r2, r3, #4
   18dac:	60fa      	str	r2, [r7, #12]
   18dae:	681b      	ldr	r3, [r3, #0]
   18db0:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27

                if ( pcBuf )
   18db4:	697b      	ldr	r3, [r7, #20]
   18db6:	2b00      	cmp	r3, #0
   18db8:	d005      	beq.n	18dc6 <am_util_stdio_vsprintf+0x202>
                {
                    *pcBuf++ = ui8CharSpecifier;
   18dba:	697b      	ldr	r3, [r7, #20]
   18dbc:	1c5a      	adds	r2, r3, #1
   18dbe:	617a      	str	r2, [r7, #20]
   18dc0:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
   18dc4:	701a      	strb	r2, [r3, #0]
                }

                ++ui32CharCnt;
   18dc6:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
   18dc8:	3301      	adds	r3, #1
   18dca:	64fb      	str	r3, [r7, #76]	@ 0x4c
                break;
   18dcc:	e1f1      	b.n	191b2 <am_util_stdio_vsprintf+0x5ee>

            case 's':
                pcStr = va_arg(pArgs, char *);
   18dce:	68fb      	ldr	r3, [r7, #12]
   18dd0:	1d1a      	adds	r2, r3, #4
   18dd2:	60fa      	str	r2, [r7, #12]
   18dd4:	681b      	ldr	r3, [r3, #0]
   18dd6:	65fb      	str	r3, [r7, #92]	@ 0x5c
                //
                // For %s, we support the width specifier. If iWidth is negative
                // the string is left-aligned (padding on the right).  Otherwise
                // the string is padded at the beginning with spaces.
                //
                ui32strlen = simple_strlen(pcStr);
   18dd8:	6df8      	ldr	r0, [r7, #92]	@ 0x5c
   18dda:	f7ff fdb1 	bl	18940 <simple_strlen>
   18dde:	6378      	str	r0, [r7, #52]	@ 0x34
                if ( iWidth > 0 )
   18de0:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
   18de2:	2b00      	cmp	r3, #0
   18de4:	dd2e      	ble.n	18e44 <am_util_stdio_vsprintf+0x280>
                {
                    // Pad the beginning of the string (right-aligned).
                    if ( ui32strlen < iWidth )
   18de6:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
   18de8:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
   18dea:	429a      	cmp	r2, r3
   18dec:	d22a      	bcs.n	18e44 <am_util_stdio_vsprintf+0x280>
                    {
                        // String needs some padding.
                        iWidth -= ui32strlen;
   18dee:	6cba      	ldr	r2, [r7, #72]	@ 0x48
   18df0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
   18df2:	1ad3      	subs	r3, r2, r3
   18df4:	64bb      	str	r3, [r7, #72]	@ 0x48
                        iWidth = padbuffer(pcBuf, ui8PadChar, iWidth);
   18df6:	f897 303f 	ldrb.w	r3, [r7, #63]	@ 0x3f
   18dfa:	6cba      	ldr	r2, [r7, #72]	@ 0x48
   18dfc:	4619      	mov	r1, r3
   18dfe:	6978      	ldr	r0, [r7, #20]
   18e00:	f7ff fdb9 	bl	18976 <padbuffer>
   18e04:	64b8      	str	r0, [r7, #72]	@ 0x48
                        pcBuf += pcBuf ? iWidth : 0;
   18e06:	697b      	ldr	r3, [r7, #20]
   18e08:	2b00      	cmp	r3, #0
   18e0a:	d001      	beq.n	18e10 <am_util_stdio_vsprintf+0x24c>
   18e0c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
   18e0e:	e000      	b.n	18e12 <am_util_stdio_vsprintf+0x24e>
   18e10:	2300      	movs	r3, #0
   18e12:	697a      	ldr	r2, [r7, #20]
   18e14:	4413      	add	r3, r2
   18e16:	617b      	str	r3, [r7, #20]
                        ui32CharCnt += iWidth;
   18e18:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
   18e1a:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
   18e1c:	4413      	add	r3, r2
   18e1e:	64fb      	str	r3, [r7, #76]	@ 0x4c
                        iWidth = 0;
   18e20:	2300      	movs	r3, #0
   18e22:	64bb      	str	r3, [r7, #72]	@ 0x48
                    }
                }

                while (*pcStr != 0x0)
   18e24:	e00e      	b.n	18e44 <am_util_stdio_vsprintf+0x280>
                {
                    if ( pcBuf )
   18e26:	697b      	ldr	r3, [r7, #20]
   18e28:	2b00      	cmp	r3, #0
   18e2a:	d005      	beq.n	18e38 <am_util_stdio_vsprintf+0x274>
                    {
                        *pcBuf++ = *pcStr;
   18e2c:	697b      	ldr	r3, [r7, #20]
   18e2e:	1c5a      	adds	r2, r3, #1
   18e30:	617a      	str	r2, [r7, #20]
   18e32:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
   18e34:	7812      	ldrb	r2, [r2, #0]
   18e36:	701a      	strb	r2, [r3, #0]
                    }

                    ++pcStr;
   18e38:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
   18e3a:	3301      	adds	r3, #1
   18e3c:	65fb      	str	r3, [r7, #92]	@ 0x5c
                    ++ui32CharCnt;
   18e3e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
   18e40:	3301      	adds	r3, #1
   18e42:	64fb      	str	r3, [r7, #76]	@ 0x4c
                while (*pcStr != 0x0)
   18e44:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
   18e46:	781b      	ldrb	r3, [r3, #0]
   18e48:	2b00      	cmp	r3, #0
   18e4a:	d1ec      	bne.n	18e26 <am_util_stdio_vsprintf+0x262>
                }

                if ( iWidth )
   18e4c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
   18e4e:	2b00      	cmp	r3, #0
   18e50:	f000 81ac 	beq.w	191ac <am_util_stdio_vsprintf+0x5e8>
                {
                    iWidth = -iWidth;
   18e54:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
   18e56:	425b      	negs	r3, r3
   18e58:	64bb      	str	r3, [r7, #72]	@ 0x48

                    // Pad the end of the string (left-aligned).
                    if ( ui32strlen < iWidth )
   18e5a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
   18e5c:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
   18e5e:	429a      	cmp	r2, r3
   18e60:	f080 81a4 	bcs.w	191ac <am_util_stdio_vsprintf+0x5e8>
                    {
                        // String needs some padding.
                        iWidth -= ui32strlen;
   18e64:	6cba      	ldr	r2, [r7, #72]	@ 0x48
   18e66:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
   18e68:	1ad3      	subs	r3, r2, r3
   18e6a:	64bb      	str	r3, [r7, #72]	@ 0x48
                        iWidth = padbuffer(pcBuf, ui8PadChar, iWidth);
   18e6c:	f897 303f 	ldrb.w	r3, [r7, #63]	@ 0x3f
   18e70:	6cba      	ldr	r2, [r7, #72]	@ 0x48
   18e72:	4619      	mov	r1, r3
   18e74:	6978      	ldr	r0, [r7, #20]
   18e76:	f7ff fd7e 	bl	18976 <padbuffer>
   18e7a:	64b8      	str	r0, [r7, #72]	@ 0x48
                        pcBuf += pcBuf ? iWidth : 0;
   18e7c:	697b      	ldr	r3, [r7, #20]
   18e7e:	2b00      	cmp	r3, #0
   18e80:	d001      	beq.n	18e86 <am_util_stdio_vsprintf+0x2c2>
   18e82:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
   18e84:	e000      	b.n	18e88 <am_util_stdio_vsprintf+0x2c4>
   18e86:	2300      	movs	r3, #0
   18e88:	697a      	ldr	r2, [r7, #20]
   18e8a:	4413      	add	r3, r2
   18e8c:	617b      	str	r3, [r7, #20]
                        ui32CharCnt += iWidth;
   18e8e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
   18e90:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
   18e92:	4413      	add	r3, r2
   18e94:	64fb      	str	r3, [r7, #76]	@ 0x4c
                        iWidth = 0;
   18e96:	2300      	movs	r3, #0
   18e98:	64bb      	str	r3, [r7, #72]	@ 0x48
                    }
                }
                break;
   18e9a:	e187      	b.n	191ac <am_util_stdio_vsprintf+0x5e8>
   18e9c:	10003480 	.word	0x10003480

            case 'x':
                bLower = true;
   18ea0:	2301      	movs	r3, #1
   18ea2:	f887 303e 	strb.w	r3, [r7, #62]	@ 0x3e
            case 'X':
                ui64Val = bLongLong ? va_arg(pArgs, uint64_t) :
   18ea6:	f897 303d 	ldrb.w	r3, [r7, #61]	@ 0x3d
   18eaa:	2b00      	cmp	r3, #0
   18eac:	d009      	beq.n	18ec2 <am_util_stdio_vsprintf+0x2fe>
   18eae:	68fb      	ldr	r3, [r7, #12]
   18eb0:	3307      	adds	r3, #7
   18eb2:	f023 0307 	bic.w	r3, r3, #7
   18eb6:	f103 0208 	add.w	r2, r3, #8
   18eba:	60fa      	str	r2, [r7, #12]
   18ebc:	e9d3 4500 	ldrd	r4, r5, [r3]
   18ec0:	e006      	b.n	18ed0 <am_util_stdio_vsprintf+0x30c>
                                      va_arg(pArgs, uint32_t);
   18ec2:	68fb      	ldr	r3, [r7, #12]
   18ec4:	1d1a      	adds	r2, r3, #4
   18ec6:	60fa      	str	r2, [r7, #12]
   18ec8:	681b      	ldr	r3, [r3, #0]
                ui64Val = bLongLong ? va_arg(pArgs, uint64_t) :
   18eca:	2200      	movs	r2, #0
   18ecc:	461c      	mov	r4, r3
   18ece:	4615      	mov	r5, r2
   18ed0:	e9c7 4514 	strd	r4, r5, [r7, #80]	@ 0x50

                if ( iWidth )
   18ed4:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
   18ed6:	2b00      	cmp	r3, #0
   18ed8:	d01e      	beq.n	18f18 <am_util_stdio_vsprintf+0x354>
                {
                    //
                    // Compute # of leading chars
                    //
                    iWidth -= ndigits_in_hex(ui64Val);
   18eda:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
   18ede:	f7ff fc16 	bl	1870e <ndigits_in_hex>
   18ee2:	4602      	mov	r2, r0
   18ee4:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
   18ee6:	1a9b      	subs	r3, r3, r2
   18ee8:	64bb      	str	r3, [r7, #72]	@ 0x48

                    iWidth = padbuffer(pcBuf, ui8PadChar, iWidth);
   18eea:	f897 303f 	ldrb.w	r3, [r7, #63]	@ 0x3f
   18eee:	6cba      	ldr	r2, [r7, #72]	@ 0x48
   18ef0:	4619      	mov	r1, r3
   18ef2:	6978      	ldr	r0, [r7, #20]
   18ef4:	f7ff fd3f 	bl	18976 <padbuffer>
   18ef8:	64b8      	str	r0, [r7, #72]	@ 0x48
                    pcBuf += pcBuf ? iWidth : 0;
   18efa:	697b      	ldr	r3, [r7, #20]
   18efc:	2b00      	cmp	r3, #0
   18efe:	d001      	beq.n	18f04 <am_util_stdio_vsprintf+0x340>
   18f00:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
   18f02:	e000      	b.n	18f06 <am_util_stdio_vsprintf+0x342>
   18f04:	2300      	movs	r3, #0
   18f06:	697a      	ldr	r2, [r7, #20]
   18f08:	4413      	add	r3, r2
   18f0a:	617b      	str	r3, [r7, #20]
                    ui32CharCnt += iWidth;
   18f0c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
   18f0e:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
   18f10:	4413      	add	r3, r2
   18f12:	64fb      	str	r3, [r7, #76]	@ 0x4c
                    iWidth = 0;
   18f14:	2300      	movs	r3, #0
   18f16:	64bb      	str	r3, [r7, #72]	@ 0x48
                }

                iVal = uint64_to_hexstr(ui64Val, pcBuf, bLower);
   18f18:	f897 303e 	ldrb.w	r3, [r7, #62]	@ 0x3e
   18f1c:	697a      	ldr	r2, [r7, #20]
   18f1e:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
   18f22:	f7ff fcaa 	bl	1887a <uint64_to_hexstr>
   18f26:	6478      	str	r0, [r7, #68]	@ 0x44

                if ( pcBuf )
   18f28:	697b      	ldr	r3, [r7, #20]
   18f2a:	2b00      	cmp	r3, #0
   18f2c:	d003      	beq.n	18f36 <am_util_stdio_vsprintf+0x372>
                {
                    pcBuf += iVal;
   18f2e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
   18f30:	697a      	ldr	r2, [r7, #20]
   18f32:	4413      	add	r3, r2
   18f34:	617b      	str	r3, [r7, #20]
                }

                ui32CharCnt += iVal;
   18f36:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
   18f38:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
   18f3a:	4413      	add	r3, r2
   18f3c:	64fb      	str	r3, [r7, #76]	@ 0x4c
                break;
   18f3e:	e138      	b.n	191b2 <am_util_stdio_vsprintf+0x5ee>

            case 'u':
                ui64Val = bLongLong ? va_arg(pArgs, uint64_t) :
   18f40:	f897 303d 	ldrb.w	r3, [r7, #61]	@ 0x3d
   18f44:	2b00      	cmp	r3, #0
   18f46:	d009      	beq.n	18f5c <am_util_stdio_vsprintf+0x398>
   18f48:	68fb      	ldr	r3, [r7, #12]
   18f4a:	3307      	adds	r3, #7
   18f4c:	f023 0307 	bic.w	r3, r3, #7
   18f50:	f103 0208 	add.w	r2, r3, #8
   18f54:	60fa      	str	r2, [r7, #12]
   18f56:	e9d3 8900 	ldrd	r8, r9, [r3]
   18f5a:	e006      	b.n	18f6a <am_util_stdio_vsprintf+0x3a6>
                                      va_arg(pArgs, uint32_t);
   18f5c:	68fb      	ldr	r3, [r7, #12]
   18f5e:	1d1a      	adds	r2, r3, #4
   18f60:	60fa      	str	r2, [r7, #12]
   18f62:	681b      	ldr	r3, [r3, #0]
                ui64Val = bLongLong ? va_arg(pArgs, uint64_t) :
   18f64:	2200      	movs	r2, #0
   18f66:	4698      	mov	r8, r3
   18f68:	4691      	mov	r9, r2
   18f6a:	e9c7 8914 	strd	r8, r9, [r7, #80]	@ 0x50

                if ( iWidth )
   18f6e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
   18f70:	2b00      	cmp	r3, #0
   18f72:	d01e      	beq.n	18fb2 <am_util_stdio_vsprintf+0x3ee>
                {
                    //
                    // We need to pad the beginning of the value.
                    // Compute # of leading chars
                    //
                    iWidth -= ndigits_in_u64(ui64Val);
   18f74:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
   18f78:	f7ff fb8c 	bl	18694 <ndigits_in_u64>
   18f7c:	4602      	mov	r2, r0
   18f7e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
   18f80:	1a9b      	subs	r3, r3, r2
   18f82:	64bb      	str	r3, [r7, #72]	@ 0x48

                    iWidth = padbuffer(pcBuf, ui8PadChar, iWidth);
   18f84:	f897 303f 	ldrb.w	r3, [r7, #63]	@ 0x3f
   18f88:	6cba      	ldr	r2, [r7, #72]	@ 0x48
   18f8a:	4619      	mov	r1, r3
   18f8c:	6978      	ldr	r0, [r7, #20]
   18f8e:	f7ff fcf2 	bl	18976 <padbuffer>
   18f92:	64b8      	str	r0, [r7, #72]	@ 0x48
                    pcBuf += pcBuf ? iWidth : 0;
   18f94:	697b      	ldr	r3, [r7, #20]
   18f96:	2b00      	cmp	r3, #0
   18f98:	d001      	beq.n	18f9e <am_util_stdio_vsprintf+0x3da>
   18f9a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
   18f9c:	e000      	b.n	18fa0 <am_util_stdio_vsprintf+0x3dc>
   18f9e:	2300      	movs	r3, #0
   18fa0:	697a      	ldr	r2, [r7, #20]
   18fa2:	4413      	add	r3, r2
   18fa4:	617b      	str	r3, [r7, #20]
                    ui32CharCnt += iWidth;
   18fa6:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
   18fa8:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
   18faa:	4413      	add	r3, r2
   18fac:	64fb      	str	r3, [r7, #76]	@ 0x4c
                    iWidth = 0;
   18fae:	2300      	movs	r3, #0
   18fb0:	64bb      	str	r3, [r7, #72]	@ 0x48
                }

                iVal = uint64_to_str(ui64Val, pcBuf);
   18fb2:	697a      	ldr	r2, [r7, #20]
   18fb4:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
   18fb8:	f7ff fc18 	bl	187ec <uint64_to_str>
   18fbc:	6478      	str	r0, [r7, #68]	@ 0x44

                if ( pcBuf )
   18fbe:	697b      	ldr	r3, [r7, #20]
   18fc0:	2b00      	cmp	r3, #0
   18fc2:	d003      	beq.n	18fcc <am_util_stdio_vsprintf+0x408>
                {
                    pcBuf += iVal;
   18fc4:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
   18fc6:	697a      	ldr	r2, [r7, #20]
   18fc8:	4413      	add	r3, r2
   18fca:	617b      	str	r3, [r7, #20]
                }

                ui32CharCnt += iVal;
   18fcc:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
   18fce:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
   18fd0:	4413      	add	r3, r2
   18fd2:	64fb      	str	r3, [r7, #76]	@ 0x4c
                break;
   18fd4:	e0ed      	b.n	191b2 <am_util_stdio_vsprintf+0x5ee>
                // Output for a negative number, for example, -5:
                //   %d:-5
                //  %5d:   -5
                // %05d:-0005
                //
                i64Val = bLongLong ? va_arg(pArgs, int64_t) :
   18fd6:	f897 303d 	ldrb.w	r3, [r7, #61]	@ 0x3d
   18fda:	2b00      	cmp	r3, #0
   18fdc:	d009      	beq.n	18ff2 <am_util_stdio_vsprintf+0x42e>
   18fde:	68fb      	ldr	r3, [r7, #12]
   18fe0:	3307      	adds	r3, #7
   18fe2:	f023 0307 	bic.w	r3, r3, #7
   18fe6:	f103 0208 	add.w	r2, r3, #8
   18fea:	60fa      	str	r2, [r7, #12]
   18fec:	e9d3 ab00 	ldrd	sl, fp, [r3]
   18ff0:	e006      	b.n	19000 <am_util_stdio_vsprintf+0x43c>
                                     va_arg(pArgs, int32_t);
   18ff2:	68fb      	ldr	r3, [r7, #12]
   18ff4:	1d1a      	adds	r2, r3, #4
   18ff6:	60fa      	str	r2, [r7, #12]
   18ff8:	681b      	ldr	r3, [r3, #0]
                i64Val = bLongLong ? va_arg(pArgs, int64_t) :
   18ffa:	17da      	asrs	r2, r3, #31
   18ffc:	469a      	mov	sl, r3
   18ffe:	4693      	mov	fp, r2
   19000:	e9c7 ab0a 	strd	sl, fp, [r7, #40]	@ 0x28

                //
                // Get absolute value
                //
                if ( i64Val < 0 )
   19004:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
   19008:	2b00      	cmp	r3, #0
   1900a:	da0f      	bge.n	1902c <am_util_stdio_vsprintf+0x468>
                {
                    ui64Val = -i64Val;          // Get absolute value
   1900c:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
   19010:	2100      	movs	r1, #0
   19012:	4250      	negs	r0, r2
   19014:	6038      	str	r0, [r7, #0]
   19016:	eb61 0303 	sbc.w	r3, r1, r3
   1901a:	607b      	str	r3, [r7, #4]
   1901c:	e9d7 2300 	ldrd	r2, r3, [r7]
   19020:	e9c7 2314 	strd	r2, r3, [r7, #80]	@ 0x50
                    bNeg = true;
   19024:	2301      	movs	r3, #1
   19026:	f887 303c 	strb.w	r3, [r7, #60]	@ 0x3c
   1902a:	e006      	b.n	1903a <am_util_stdio_vsprintf+0x476>
                }
                else
                {
                    ui64Val = i64Val;
   1902c:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
   19030:	e9c7 2314 	strd	r2, r3, [r7, #80]	@ 0x50
                    bNeg = false;
   19034:	2300      	movs	r3, #0
   19036:	f887 303c 	strb.w	r3, [r7, #60]	@ 0x3c
                }

                if ( iWidth )
   1903a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
   1903c:	2b00      	cmp	r3, #0
   1903e:	d04a      	beq.n	190d6 <am_util_stdio_vsprintf+0x512>
                {
                    //
                    // We need to pad the beginning of the value.
                    // Compute # of leading chars
                    //
                    iWidth -= ndigits_in_i64(ui64Val);
   19040:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
   19044:	4610      	mov	r0, r2
   19046:	4619      	mov	r1, r3
   19048:	f7ff fb45 	bl	186d6 <ndigits_in_i64>
   1904c:	4602      	mov	r2, r0
   1904e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
   19050:	1a9b      	subs	r3, r3, r2
   19052:	64bb      	str	r3, [r7, #72]	@ 0x48

                    if ( bNeg )
   19054:	f897 303c 	ldrb.w	r3, [r7, #60]	@ 0x3c
   19058:	2b00      	cmp	r3, #0
   1905a:	d011      	beq.n	19080 <am_util_stdio_vsprintf+0x4bc>
                    {
                        --iWidth;
   1905c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
   1905e:	3b01      	subs	r3, #1
   19060:	64bb      	str	r3, [r7, #72]	@ 0x48

                        //
                        // Allow for the negative sign
                        //
                        if ( ui8PadChar == '0' )
   19062:	f897 303f 	ldrb.w	r3, [r7, #63]	@ 0x3f
   19066:	2b30      	cmp	r3, #48	@ 0x30
   19068:	d10a      	bne.n	19080 <am_util_stdio_vsprintf+0x4bc>
                        {
                            //
                            // Print the neg sign BEFORE the leading zeros
                            //
                            if ( pcBuf )
   1906a:	697b      	ldr	r3, [r7, #20]
   1906c:	2b00      	cmp	r3, #0
   1906e:	d004      	beq.n	1907a <am_util_stdio_vsprintf+0x4b6>
                            {
                                *pcBuf++ = '-';
   19070:	697b      	ldr	r3, [r7, #20]
   19072:	1c5a      	adds	r2, r3, #1
   19074:	617a      	str	r2, [r7, #20]
   19076:	222d      	movs	r2, #45	@ 0x2d
   19078:	701a      	strb	r2, [r3, #0]
                            }

                            ++ui32CharCnt;
   1907a:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
   1907c:	3301      	adds	r3, #1
   1907e:	64fb      	str	r3, [r7, #76]	@ 0x4c
                        }
                    }

                    iWidth = padbuffer(pcBuf, ui8PadChar, iWidth);
   19080:	f897 303f 	ldrb.w	r3, [r7, #63]	@ 0x3f
   19084:	6cba      	ldr	r2, [r7, #72]	@ 0x48
   19086:	4619      	mov	r1, r3
   19088:	6978      	ldr	r0, [r7, #20]
   1908a:	f7ff fc74 	bl	18976 <padbuffer>
   1908e:	64b8      	str	r0, [r7, #72]	@ 0x48
                    pcBuf += pcBuf ? iWidth : 0;
   19090:	697b      	ldr	r3, [r7, #20]
   19092:	2b00      	cmp	r3, #0
   19094:	d001      	beq.n	1909a <am_util_stdio_vsprintf+0x4d6>
   19096:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
   19098:	e000      	b.n	1909c <am_util_stdio_vsprintf+0x4d8>
   1909a:	2300      	movs	r3, #0
   1909c:	697a      	ldr	r2, [r7, #20]
   1909e:	4413      	add	r3, r2
   190a0:	617b      	str	r3, [r7, #20]
                    ui32CharCnt += iWidth;
   190a2:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
   190a4:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
   190a6:	4413      	add	r3, r2
   190a8:	64fb      	str	r3, [r7, #76]	@ 0x4c
                    iWidth = 0;
   190aa:	2300      	movs	r3, #0
   190ac:	64bb      	str	r3, [r7, #72]	@ 0x48

                    if ( bNeg  &&  (ui8PadChar == ' ') )
   190ae:	f897 303c 	ldrb.w	r3, [r7, #60]	@ 0x3c
   190b2:	2b00      	cmp	r3, #0
   190b4:	d01e      	beq.n	190f4 <am_util_stdio_vsprintf+0x530>
   190b6:	f897 303f 	ldrb.w	r3, [r7, #63]	@ 0x3f
   190ba:	2b20      	cmp	r3, #32
   190bc:	d11a      	bne.n	190f4 <am_util_stdio_vsprintf+0x530>
                    {
                        //
                        // Print the neg sign AFTER the leading blanks
                        //
                        if ( pcBuf )
   190be:	697b      	ldr	r3, [r7, #20]
   190c0:	2b00      	cmp	r3, #0
   190c2:	d004      	beq.n	190ce <am_util_stdio_vsprintf+0x50a>
                        {
                            *pcBuf++ = '-';
   190c4:	697b      	ldr	r3, [r7, #20]
   190c6:	1c5a      	adds	r2, r3, #1
   190c8:	617a      	str	r2, [r7, #20]
   190ca:	222d      	movs	r2, #45	@ 0x2d
   190cc:	701a      	strb	r2, [r3, #0]
                        }

                        ++ui32CharCnt;
   190ce:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
   190d0:	3301      	adds	r3, #1
   190d2:	64fb      	str	r3, [r7, #76]	@ 0x4c
   190d4:	e00e      	b.n	190f4 <am_util_stdio_vsprintf+0x530>
                    }
                }
                else
                {
                    if ( bNeg )
   190d6:	f897 303c 	ldrb.w	r3, [r7, #60]	@ 0x3c
   190da:	2b00      	cmp	r3, #0
   190dc:	d00a      	beq.n	190f4 <am_util_stdio_vsprintf+0x530>
                    {
                        if ( pcBuf )
   190de:	697b      	ldr	r3, [r7, #20]
   190e0:	2b00      	cmp	r3, #0
   190e2:	d004      	beq.n	190ee <am_util_stdio_vsprintf+0x52a>
                        {
                            *pcBuf++ = '-';
   190e4:	697b      	ldr	r3, [r7, #20]
   190e6:	1c5a      	adds	r2, r3, #1
   190e8:	617a      	str	r2, [r7, #20]
   190ea:	222d      	movs	r2, #45	@ 0x2d
   190ec:	701a      	strb	r2, [r3, #0]
                        }
                        ++ui32CharCnt;
   190ee:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
   190f0:	3301      	adds	r3, #1
   190f2:	64fb      	str	r3, [r7, #76]	@ 0x4c
                    }
                }

                iVal = uint64_to_str(ui64Val, pcBuf);
   190f4:	697a      	ldr	r2, [r7, #20]
   190f6:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
   190fa:	f7ff fb77 	bl	187ec <uint64_to_str>
   190fe:	6478      	str	r0, [r7, #68]	@ 0x44

                if ( pcBuf )
   19100:	697b      	ldr	r3, [r7, #20]
   19102:	2b00      	cmp	r3, #0
   19104:	d003      	beq.n	1910e <am_util_stdio_vsprintf+0x54a>
                {
                    pcBuf += iVal;
   19106:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
   19108:	697a      	ldr	r2, [r7, #20]
   1910a:	4413      	add	r3, r2
   1910c:	617b      	str	r3, [r7, #20]
                }

                ui32CharCnt += iVal;
   1910e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
   19110:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
   19112:	4413      	add	r3, r2
   19114:	64fb      	str	r3, [r7, #76]	@ 0x4c
                break;
   19116:	e04c      	b.n	191b2 <am_util_stdio_vsprintf+0x5ee>


            case 'f':
            case 'F':
                if ( pcBuf )
   19118:	697b      	ldr	r3, [r7, #20]
   1911a:	2b00      	cmp	r3, #0
   1911c:	d048      	beq.n	191b0 <am_util_stdio_vsprintf+0x5ec>
                {
                    float fValue = va_arg(pArgs, double);
   1911e:	68fb      	ldr	r3, [r7, #12]
   19120:	3307      	adds	r3, #7
   19122:	f023 0307 	bic.w	r3, r3, #7
   19126:	f103 0208 	add.w	r2, r3, #8
   1912a:	60fa      	str	r2, [r7, #12]
   1912c:	e9d3 2300 	ldrd	r2, r3, [r3]
   19130:	4610      	mov	r0, r2
   19132:	4619      	mov	r1, r3
   19134:	f7ff f928 	bl	18388 <__aeabi_d2f>
   19138:	4603      	mov	r3, r0
   1913a:	623b      	str	r3, [r7, #32]

                    //
                    // pcBuf is an input (size of buffer) and also an output of ftoa()
                    //
                    *(uint32_t*)pcBuf = 20;
   1913c:	697b      	ldr	r3, [r7, #20]
   1913e:	2214      	movs	r2, #20
   19140:	601a      	str	r2, [r3, #0]

                    iVal = ftoa(fValue, pcBuf, iPrecision);
   19142:	6c39      	ldr	r1, [r7, #64]	@ 0x40
   19144:	6978      	ldr	r0, [r7, #20]
   19146:	ed97 0a08 	vldr	s0, [r7, #32]
   1914a:	f7ff fc39 	bl	189c0 <ftoa>
   1914e:	6478      	str	r0, [r7, #68]	@ 0x44
                    if ( iVal < 0 )
   19150:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
   19152:	2b00      	cmp	r3, #0
   19154:	da14      	bge.n	19180 <am_util_stdio_vsprintf+0x5bc>
                    {
                        uint32_t u32PrntErrVal;
                        if ( iVal == AM_FTOA_ERR_VAL_TOO_SMALL )
   19156:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
   19158:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
   1915c:	d102      	bne.n	19164 <am_util_stdio_vsprintf+0x5a0>
                        {
                            u32PrntErrVal = (0x00 << 24) | ('0' << 16) |
   1915e:	4b1f      	ldr	r3, [pc, #124]	@ (191dc <am_util_stdio_vsprintf+0x618>)
   19160:	63bb      	str	r3, [r7, #56]	@ 0x38
   19162:	e008      	b.n	19176 <am_util_stdio_vsprintf+0x5b2>
                                            ('.' << 8)   | ('0' << 0);  // "0.0"
                        }
                        else if ( iVal == AM_FTOA_ERR_VAL_TOO_LARGE )
   19164:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
   19166:	f113 0f02 	cmn.w	r3, #2
   1916a:	d102      	bne.n	19172 <am_util_stdio_vsprintf+0x5ae>
                        {
                            u32PrntErrVal = (0x00 << 24) | ('#' << 16) |
   1916c:	4b1c      	ldr	r3, [pc, #112]	@ (191e0 <am_util_stdio_vsprintf+0x61c>)
   1916e:	63bb      	str	r3, [r7, #56]	@ 0x38
   19170:	e001      	b.n	19176 <am_util_stdio_vsprintf+0x5b2>
                                            ('.' << 8)   | ('#' << 0);  // "#.#"
                        }
                        else
                        {
                            u32PrntErrVal = (0x00 << 24) | ('?' << 16) |
   19172:	4b1c      	ldr	r3, [pc, #112]	@ (191e4 <am_util_stdio_vsprintf+0x620>)
   19174:	63bb      	str	r3, [r7, #56]	@ 0x38
                                            ('.' << 8)   | ('?' << 0);  // "?.?"
                        }
                        *(uint32_t*)pcBuf = u32PrntErrVal;
   19176:	697b      	ldr	r3, [r7, #20]
   19178:	6bba      	ldr	r2, [r7, #56]	@ 0x38
   1917a:	601a      	str	r2, [r3, #0]
                        iVal = 3;
   1917c:	2303      	movs	r3, #3
   1917e:	647b      	str	r3, [r7, #68]	@ 0x44
                    }
                    ui32CharCnt += iVal;
   19180:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
   19182:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
   19184:	4413      	add	r3, r2
   19186:	64fb      	str	r3, [r7, #76]	@ 0x4c
                    pcBuf += iVal;
   19188:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
   1918a:	697a      	ldr	r2, [r7, #20]
   1918c:	4413      	add	r3, r2
   1918e:	617b      	str	r3, [r7, #20]
                }
                break;
   19190:	e00e      	b.n	191b0 <am_util_stdio_vsprintf+0x5ec>
            // For non-handled specifiers, we'll just print the character.
            // e.g. this will allow the normal printing of a '%' using
            // "%%".
            //
            default:
                if ( pcBuf )
   19192:	697b      	ldr	r3, [r7, #20]
   19194:	2b00      	cmp	r3, #0
   19196:	d005      	beq.n	191a4 <am_util_stdio_vsprintf+0x5e0>
                {
                    *pcBuf++ = *pcFmt;
   19198:	697b      	ldr	r3, [r7, #20]
   1919a:	1c5a      	adds	r2, r3, #1
   1919c:	617a      	str	r2, [r7, #20]
   1919e:	693a      	ldr	r2, [r7, #16]
   191a0:	7812      	ldrb	r2, [r2, #0]
   191a2:	701a      	strb	r2, [r3, #0]
                }

                ++ui32CharCnt;
   191a4:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
   191a6:	3301      	adds	r3, #1
   191a8:	64fb      	str	r3, [r7, #76]	@ 0x4c
                break;
   191aa:	e002      	b.n	191b2 <am_util_stdio_vsprintf+0x5ee>
                break;
   191ac:	bf00      	nop
   191ae:	e000      	b.n	191b2 <am_util_stdio_vsprintf+0x5ee>
                break;
   191b0:	bf00      	nop
        } // switch ()

        //
        // Bump the format specification to the next character
        //
        ++pcFmt;
   191b2:	693b      	ldr	r3, [r7, #16]
   191b4:	3301      	adds	r3, #1
   191b6:	613b      	str	r3, [r7, #16]
    while ( *pcFmt != 0x0 )
   191b8:	693b      	ldr	r3, [r7, #16]
   191ba:	781b      	ldrb	r3, [r3, #0]
   191bc:	2b00      	cmp	r3, #0
   191be:	f47f ad0d 	bne.w	18bdc <am_util_stdio_vsprintf+0x18>
    } // while ()

    //
    // Terminate the string
    //
    if ( pcBuf )
   191c2:	697b      	ldr	r3, [r7, #20]
   191c4:	2b00      	cmp	r3, #0
   191c6:	d002      	beq.n	191ce <am_util_stdio_vsprintf+0x60a>
    {
        *pcBuf = 0x0;
   191c8:	697b      	ldr	r3, [r7, #20]
   191ca:	2200      	movs	r2, #0
   191cc:	701a      	strb	r2, [r3, #0]
    }

    return (ui32CharCnt);
   191ce:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
}
   191d0:	4618      	mov	r0, r3
   191d2:	3760      	adds	r7, #96	@ 0x60
   191d4:	46bd      	mov	sp, r7
   191d6:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
   191da:	bf00      	nop
   191dc:	00302e30 	.word	0x00302e30
   191e0:	00232e23 	.word	0x00232e23
   191e4:	003f2e3f 	.word	0x003f2e3f

000191e8 <am_util_stdio_printf>:
// A lite version of printf()
//
//*****************************************************************************
uint32_t
am_util_stdio_printf(const char *pcFmt, ...)
{
   191e8:	b40f      	push	{r0, r1, r2, r3}
   191ea:	b580      	push	{r7, lr}
   191ec:	b082      	sub	sp, #8
   191ee:	af00      	add	r7, sp, #0
    uint32_t ui32NumChars;

    if (!g_pfnCharPrint)
   191f0:	4b0d      	ldr	r3, [pc, #52]	@ (19228 <am_util_stdio_printf+0x40>)
   191f2:	681b      	ldr	r3, [r3, #0]
   191f4:	2b00      	cmp	r3, #0
   191f6:	d101      	bne.n	191fc <am_util_stdio_printf+0x14>
    {
        return 0;
   191f8:	2300      	movs	r3, #0
   191fa:	e00d      	b.n	19218 <am_util_stdio_printf+0x30>

    //
    // Convert to the desired string.
    //
    va_list pArgs;
    va_start(pArgs, pcFmt);
   191fc:	f107 0314 	add.w	r3, r7, #20
   19200:	603b      	str	r3, [r7, #0]
    ui32NumChars = am_util_stdio_vsprintf(g_prfbuf, pcFmt, pArgs);
   19202:	683a      	ldr	r2, [r7, #0]
   19204:	6939      	ldr	r1, [r7, #16]
   19206:	4809      	ldr	r0, [pc, #36]	@ (1922c <am_util_stdio_printf+0x44>)
   19208:	f7ff fcdc 	bl	18bc4 <am_util_stdio_vsprintf>
   1920c:	6078      	str	r0, [r7, #4]
    va_end(pArgs);

    //
    // This is where we print the buffer to the configured interface.
    //
    g_pfnCharPrint(g_prfbuf);
   1920e:	4b06      	ldr	r3, [pc, #24]	@ (19228 <am_util_stdio_printf+0x40>)
   19210:	681b      	ldr	r3, [r3, #0]
   19212:	4806      	ldr	r0, [pc, #24]	@ (1922c <am_util_stdio_printf+0x44>)
   19214:	4798      	blx	r3

    //
    // return the number of characters printed.
    //
    return ui32NumChars;
   19216:	687b      	ldr	r3, [r7, #4]
}
   19218:	4618      	mov	r0, r3
   1921a:	3708      	adds	r7, #8
   1921c:	46bd      	mov	sp, r7
   1921e:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
   19222:	b004      	add	sp, #16
   19224:	4770      	bx	lr
   19226:	bf00      	nop
   19228:	1000307c 	.word	0x1000307c
   1922c:	10003080 	.word	0x10003080

00019230 <DmScanStop>:
 *
 *  \return None.
 */
/*************************************************************************************************/
void DmScanStop(void)
{
   19230:	b580      	push	{r7, lr}
   19232:	b082      	sub	sp, #8
   19234:	af00      	add	r7, sp, #0
  wsfMsgHdr_t *pMsg;

  if ((pMsg = WsfMsgAlloc(sizeof(wsfMsgHdr_t))) != NULL)
   19236:	2004      	movs	r0, #4
   19238:	f001 f842 	bl	1a2c0 <WsfMsgAlloc>
   1923c:	6078      	str	r0, [r7, #4]
   1923e:	687b      	ldr	r3, [r7, #4]
   19240:	2b00      	cmp	r3, #0
   19242:	d008      	beq.n	19256 <DmScanStop+0x26>
  {
    pMsg->event = DM_SCAN_MSG_API_STOP;
   19244:	687b      	ldr	r3, [r7, #4]
   19246:	2211      	movs	r2, #17
   19248:	709a      	strb	r2, [r3, #2]
    WsfMsgSend(dmCb.handlerId, pMsg);
   1924a:	4b05      	ldr	r3, [pc, #20]	@ (19260 <DmScanStop+0x30>)
   1924c:	7b1b      	ldrb	r3, [r3, #12]
   1924e:	6879      	ldr	r1, [r7, #4]
   19250:	4618      	mov	r0, r3
   19252:	f001 f84c 	bl	1a2ee <WsfMsgSend>
  }
}
   19256:	bf00      	nop
   19258:	3708      	adds	r7, #8
   1925a:	46bd      	mov	sp, r7
   1925c:	bd80      	pop	{r7, pc}
   1925e:	bf00      	nop
   19260:	10003484 	.word	0x10003484

00019264 <xEventGroupSetBits>:
} /*lint !e818 EventGroupHandle_t is a typedef used in other functions to so can't be pointer to const. */
/*-----------------------------------------------------------*/

EventBits_t xEventGroupSetBits( EventGroupHandle_t xEventGroup,
                                const EventBits_t uxBitsToSet )
{
   19264:	b580      	push	{r7, lr}
   19266:	b08c      	sub	sp, #48	@ 0x30
   19268:	af00      	add	r7, sp, #0
   1926a:	6078      	str	r0, [r7, #4]
   1926c:	6039      	str	r1, [r7, #0]
    ListItem_t * pxListItem;
    ListItem_t * pxNext;
    ListItem_t const * pxListEnd;
    List_t const * pxList;
    EventBits_t uxBitsToClear = 0, uxBitsWaitedFor, uxControlBits;
   1926e:	2300      	movs	r3, #0
   19270:	62bb      	str	r3, [r7, #40]	@ 0x28
    EventGroup_t * pxEventBits = xEventGroup;
   19272:	687b      	ldr	r3, [r7, #4]
   19274:	623b      	str	r3, [r7, #32]
    BaseType_t xMatchFound = pdFALSE;
   19276:	2300      	movs	r3, #0
   19278:	627b      	str	r3, [r7, #36]	@ 0x24
    /* Check the user is not attempting to set the bits used by the kernel
     * itself. */
    configASSERT( xEventGroup );
    configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );

    pxList = &( pxEventBits->xTasksWaitingForBits );
   1927a:	6a3b      	ldr	r3, [r7, #32]
   1927c:	3304      	adds	r3, #4
   1927e:	61fb      	str	r3, [r7, #28]
    pxListEnd = listGET_END_MARKER( pxList ); /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   19280:	69fb      	ldr	r3, [r7, #28]
   19282:	3308      	adds	r3, #8
   19284:	61bb      	str	r3, [r7, #24]
    vTaskSuspendAll();
   19286:	f000 faa7 	bl	197d8 <vTaskSuspendAll>
    {
        traceEVENT_GROUP_SET_BITS( xEventGroup, uxBitsToSet );

        pxListItem = listGET_HEAD_ENTRY( pxList );
   1928a:	69fb      	ldr	r3, [r7, #28]
   1928c:	68db      	ldr	r3, [r3, #12]
   1928e:	62fb      	str	r3, [r7, #44]	@ 0x2c

        /* Set the bits. */
        pxEventBits->uxEventBits |= uxBitsToSet;
   19290:	6a3b      	ldr	r3, [r7, #32]
   19292:	681a      	ldr	r2, [r3, #0]
   19294:	683b      	ldr	r3, [r7, #0]
   19296:	431a      	orrs	r2, r3
   19298:	6a3b      	ldr	r3, [r7, #32]
   1929a:	601a      	str	r2, [r3, #0]

        /* See if the new bit value should unblock any tasks. */
        while( pxListItem != pxListEnd )
   1929c:	e03c      	b.n	19318 <xEventGroupSetBits+0xb4>
        {
            pxNext = listGET_NEXT( pxListItem );
   1929e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
   192a0:	685b      	ldr	r3, [r3, #4]
   192a2:	617b      	str	r3, [r7, #20]
            uxBitsWaitedFor = listGET_LIST_ITEM_VALUE( pxListItem );
   192a4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
   192a6:	681b      	ldr	r3, [r3, #0]
   192a8:	613b      	str	r3, [r7, #16]
            xMatchFound = pdFALSE;
   192aa:	2300      	movs	r3, #0
   192ac:	627b      	str	r3, [r7, #36]	@ 0x24

            /* Split the bits waited for from the control bits. */
            uxControlBits = uxBitsWaitedFor & eventEVENT_BITS_CONTROL_BYTES;
   192ae:	693b      	ldr	r3, [r7, #16]
   192b0:	f003 437f 	and.w	r3, r3, #4278190080	@ 0xff000000
   192b4:	60fb      	str	r3, [r7, #12]
            uxBitsWaitedFor &= ~eventEVENT_BITS_CONTROL_BYTES;
   192b6:	693b      	ldr	r3, [r7, #16]
   192b8:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
   192bc:	613b      	str	r3, [r7, #16]

            if( ( uxControlBits & eventWAIT_FOR_ALL_BITS ) == ( EventBits_t ) 0 )
   192be:	68fb      	ldr	r3, [r7, #12]
   192c0:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
   192c4:	2b00      	cmp	r3, #0
   192c6:	d108      	bne.n	192da <xEventGroupSetBits+0x76>
            {
                /* Just looking for single bit being set. */
                if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) != ( EventBits_t ) 0 )
   192c8:	6a3b      	ldr	r3, [r7, #32]
   192ca:	681a      	ldr	r2, [r3, #0]
   192cc:	693b      	ldr	r3, [r7, #16]
   192ce:	4013      	ands	r3, r2
   192d0:	2b00      	cmp	r3, #0
   192d2:	d00b      	beq.n	192ec <xEventGroupSetBits+0x88>
                {
                    xMatchFound = pdTRUE;
   192d4:	2301      	movs	r3, #1
   192d6:	627b      	str	r3, [r7, #36]	@ 0x24
   192d8:	e008      	b.n	192ec <xEventGroupSetBits+0x88>
                else
                {
                    mtCOVERAGE_TEST_MARKER();
                }
            }
            else if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) == uxBitsWaitedFor )
   192da:	6a3b      	ldr	r3, [r7, #32]
   192dc:	681a      	ldr	r2, [r3, #0]
   192de:	693b      	ldr	r3, [r7, #16]
   192e0:	4013      	ands	r3, r2
   192e2:	693a      	ldr	r2, [r7, #16]
   192e4:	429a      	cmp	r2, r3
   192e6:	d101      	bne.n	192ec <xEventGroupSetBits+0x88>
            {
                /* All bits are set. */
                xMatchFound = pdTRUE;
   192e8:	2301      	movs	r3, #1
   192ea:	627b      	str	r3, [r7, #36]	@ 0x24
            else
            {
                /* Need all bits to be set, but not all the bits were set. */
            }

            if( xMatchFound != pdFALSE )
   192ec:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
   192ee:	2b00      	cmp	r3, #0
   192f0:	d010      	beq.n	19314 <xEventGroupSetBits+0xb0>
            {
                /* The bits match.  Should the bits be cleared on exit? */
                if( ( uxControlBits & eventCLEAR_EVENTS_ON_EXIT_BIT ) != ( EventBits_t ) 0 )
   192f2:	68fb      	ldr	r3, [r7, #12]
   192f4:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
   192f8:	2b00      	cmp	r3, #0
   192fa:	d003      	beq.n	19304 <xEventGroupSetBits+0xa0>
                {
                    uxBitsToClear |= uxBitsWaitedFor;
   192fc:	6aba      	ldr	r2, [r7, #40]	@ 0x28
   192fe:	693b      	ldr	r3, [r7, #16]
   19300:	4313      	orrs	r3, r2
   19302:	62bb      	str	r3, [r7, #40]	@ 0x28
                /* Store the actual event flag value in the task's event list
                 * item before removing the task from the event list.  The
                 * eventUNBLOCKED_DUE_TO_BIT_SET bit is set so the task knows
                 * that is was unblocked due to its required bits matching, rather
                 * than because it timed out. */
                vTaskRemoveFromUnorderedEventList( pxListItem, pxEventBits->uxEventBits | eventUNBLOCKED_DUE_TO_BIT_SET );
   19304:	6a3b      	ldr	r3, [r7, #32]
   19306:	681b      	ldr	r3, [r3, #0]
   19308:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
   1930c:	4619      	mov	r1, r3
   1930e:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
   19310:	f000 fd7e 	bl	19e10 <vTaskRemoveFromUnorderedEventList>
            }

            /* Move onto the next list item.  Note pxListItem->pxNext is not
             * used here as the list item may have been removed from the event list
             * and inserted into the ready/pending reading list. */
            pxListItem = pxNext;
   19314:	697b      	ldr	r3, [r7, #20]
   19316:	62fb      	str	r3, [r7, #44]	@ 0x2c
        while( pxListItem != pxListEnd )
   19318:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
   1931a:	69bb      	ldr	r3, [r7, #24]
   1931c:	429a      	cmp	r2, r3
   1931e:	d1be      	bne.n	1929e <xEventGroupSetBits+0x3a>
        }

        /* Clear any bits that matched when the eventCLEAR_EVENTS_ON_EXIT_BIT
         * bit was set in the control word. */
        pxEventBits->uxEventBits &= ~uxBitsToClear;
   19320:	6a3b      	ldr	r3, [r7, #32]
   19322:	681a      	ldr	r2, [r3, #0]
   19324:	6abb      	ldr	r3, [r7, #40]	@ 0x28
   19326:	43db      	mvns	r3, r3
   19328:	401a      	ands	r2, r3
   1932a:	6a3b      	ldr	r3, [r7, #32]
   1932c:	601a      	str	r2, [r3, #0]
    }
    ( void ) xTaskResumeAll();
   1932e:	f000 fa61 	bl	197f4 <xTaskResumeAll>

    return pxEventBits->uxEventBits;
   19332:	6a3b      	ldr	r3, [r7, #32]
   19334:	681b      	ldr	r3, [r3, #0]
}
   19336:	4618      	mov	r0, r3
   19338:	3730      	adds	r7, #48	@ 0x30
   1933a:	46bd      	mov	sp, r7
   1933c:	bd80      	pop	{r7, pc}

0001933e <vEventGroupSetBitsCallback>:

/* For internal use only - execute a 'set bits' command that was pended from
 * an interrupt. */
void vEventGroupSetBitsCallback( void * pvEventGroup,
                                 const uint32_t ulBitsToSet )
{
   1933e:	b580      	push	{r7, lr}
   19340:	b082      	sub	sp, #8
   19342:	af00      	add	r7, sp, #0
   19344:	6078      	str	r0, [r7, #4]
   19346:	6039      	str	r1, [r7, #0]
    ( void ) xEventGroupSetBits( pvEventGroup, ( EventBits_t ) ulBitsToSet ); /*lint !e9079 Can't avoid cast to void* as a generic timer callback prototype. Callback casts back to original type so safe. */
   19348:	6839      	ldr	r1, [r7, #0]
   1934a:	6878      	ldr	r0, [r7, #4]
   1934c:	f7ff ff8a 	bl	19264 <xEventGroupSetBits>
}
   19350:	bf00      	nop
   19352:	3708      	adds	r7, #8
   19354:	46bd      	mov	sp, r7
   19356:	bd80      	pop	{r7, pc}
	...

00019360 <SVC_Handler>:
}
/*-----------------------------------------------------------*/

void vPortSVCHandler( void )
{
	__asm volatile (
   19360:	4b07      	ldr	r3, [pc, #28]	@ (19380 <pxCurrentTCBConst2>)
   19362:	6819      	ldr	r1, [r3, #0]
   19364:	6808      	ldr	r0, [r1, #0]
   19366:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1936a:	f380 8809 	msr	PSP, r0
   1936e:	f3bf 8f6f 	isb	sy
   19372:	f04f 0000 	mov.w	r0, #0
   19376:	f380 8811 	msr	BASEPRI, r0
   1937a:	4770      	bx	lr
   1937c:	f3af 8000 	nop.w

00019380 <pxCurrentTCBConst2>:
   19380:	100034a8 	.word	0x100034a8
					"	bx r14							\n"
					"									\n"
					"	.align 4						\n"
					"pxCurrentTCBConst2: .word pxCurrentTCB				\n"
				);
}
   19384:	bf00      	nop
   19386:	bf00      	nop

00019388 <vPortEnterCritical>:
	configASSERT( uxCriticalNesting == 1000UL );
}
/*-----------------------------------------------------------*/

void vPortEnterCritical( void )
{
   19388:	b480      	push	{r7}
   1938a:	b083      	sub	sp, #12
   1938c:	af00      	add	r7, sp, #0

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
   1938e:	f04f 0360 	mov.w	r3, #96	@ 0x60
   19392:	f383 8811 	msr	BASEPRI, r3
   19396:	f3bf 8f6f 	isb	sy
   1939a:	f3bf 8f4f 	dsb	sy
   1939e:	607b      	str	r3, [r7, #4]
		"	msr basepri, %0											\n" \
		"	isb														\n" \
		"	dsb														\n" \
		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
	);
}
   193a0:	bf00      	nop
	portDISABLE_INTERRUPTS();
	uxCriticalNesting++;
   193a2:	4b05      	ldr	r3, [pc, #20]	@ (193b8 <vPortEnterCritical+0x30>)
   193a4:	681b      	ldr	r3, [r3, #0]
   193a6:	3301      	adds	r3, #1
   193a8:	4a03      	ldr	r2, [pc, #12]	@ (193b8 <vPortEnterCritical+0x30>)
   193aa:	6013      	str	r3, [r2, #0]
	assert function also uses a critical section. */
	if( uxCriticalNesting == 1 )
	{
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
	}
}
   193ac:	bf00      	nop
   193ae:	370c      	adds	r7, #12
   193b0:	46bd      	mov	sp, r7
   193b2:	f85d 7b04 	ldr.w	r7, [sp], #4
   193b6:	4770      	bx	lr
   193b8:	10002b00 	.word	0x10002b00

000193bc <vPortExitCritical>:
/*-----------------------------------------------------------*/

void vPortExitCritical( void )
{
   193bc:	b480      	push	{r7}
   193be:	b083      	sub	sp, #12
   193c0:	af00      	add	r7, sp, #0
	configASSERT( uxCriticalNesting );
	uxCriticalNesting--;
   193c2:	4b0a      	ldr	r3, [pc, #40]	@ (193ec <vPortExitCritical+0x30>)
   193c4:	681b      	ldr	r3, [r3, #0]
   193c6:	3b01      	subs	r3, #1
   193c8:	4a08      	ldr	r2, [pc, #32]	@ (193ec <vPortExitCritical+0x30>)
   193ca:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
   193cc:	4b07      	ldr	r3, [pc, #28]	@ (193ec <vPortExitCritical+0x30>)
   193ce:	681b      	ldr	r3, [r3, #0]
   193d0:	2b00      	cmp	r3, #0
   193d2:	d105      	bne.n	193e0 <vPortExitCritical+0x24>
   193d4:	2300      	movs	r3, #0
   193d6:	607b      	str	r3, [r7, #4]
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
   193d8:	687b      	ldr	r3, [r7, #4]
   193da:	f383 8811 	msr	BASEPRI, r3
	(
		"	msr basepri, %0	" :: "r" ( ulNewMaskValue ) : "memory"
	);
}
   193de:	bf00      	nop
	{
		portENABLE_INTERRUPTS();
	}
}
   193e0:	bf00      	nop
   193e2:	370c      	adds	r7, #12
   193e4:	46bd      	mov	sp, r7
   193e6:	f85d 7b04 	ldr.w	r7, [sp], #4
   193ea:	4770      	bx	lr
   193ec:	10002b00 	.word	0x10002b00

000193f0 <PendSV_Handler>:

void xPortPendSVHandler( void )
{
	/* This is a naked function. */

	__asm volatile
   193f0:	f3ef 8009 	mrs	r0, PSP
   193f4:	f3bf 8f6f 	isb	sy
   193f8:	4b15      	ldr	r3, [pc, #84]	@ (19450 <pxCurrentTCBConst>)
   193fa:	681a      	ldr	r2, [r3, #0]
   193fc:	f01e 0f10 	tst.w	lr, #16
   19400:	bf08      	it	eq
   19402:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
   19406:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1940a:	6010      	str	r0, [r2, #0]
   1940c:	e92d 0009 	stmdb	sp!, {r0, r3}
   19410:	f04f 0060 	mov.w	r0, #96	@ 0x60
   19414:	f380 8811 	msr	BASEPRI, r0
   19418:	f3bf 8f4f 	dsb	sy
   1941c:	f3bf 8f6f 	isb	sy
   19420:	f000 fbdc 	bl	19bdc <vTaskSwitchContext>
   19424:	f04f 0000 	mov.w	r0, #0
   19428:	f380 8811 	msr	BASEPRI, r0
   1942c:	bc09      	pop	{r0, r3}
   1942e:	6819      	ldr	r1, [r3, #0]
   19430:	6808      	ldr	r0, [r1, #0]
   19432:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19436:	f01e 0f10 	tst.w	lr, #16
   1943a:	bf08      	it	eq
   1943c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
   19440:	f380 8809 	msr	PSP, r0
   19444:	f3bf 8f6f 	isb	sy
   19448:	4770      	bx	lr
   1944a:	bf00      	nop
   1944c:	f3af 8000 	nop.w

00019450 <pxCurrentTCBConst>:
   19450:	100034a8 	.word	0x100034a8
	"										\n"
	"	.align 4							\n"
	"pxCurrentTCBConst: .word pxCurrentTCB	\n"
	::"i"(configMAX_SYSCALL_INTERRUPT_PRIORITY)
	);
}
   19454:	bf00      	nop
   19456:	bf00      	nop

00019458 <SysTick_Handler>:
/*-----------------------------------------------------------*/

void xPortSysTickHandler( void )
{
   19458:	b580      	push	{r7, lr}
   1945a:	b082      	sub	sp, #8
   1945c:	af00      	add	r7, sp, #0
	__asm volatile
   1945e:	f04f 0360 	mov.w	r3, #96	@ 0x60
   19462:	f383 8811 	msr	BASEPRI, r3
   19466:	f3bf 8f6f 	isb	sy
   1946a:	f3bf 8f4f 	dsb	sy
   1946e:	607b      	str	r3, [r7, #4]
}
   19470:	bf00      	nop
	save and then restore the interrupt mask value as its value is already
	known. */
	portDISABLE_INTERRUPTS();
	{
		/* Increment the RTOS tick. */
		if( xTaskIncrementTick() != pdFALSE )
   19472:	f000 fab9 	bl	199e8 <xTaskIncrementTick>
   19476:	4603      	mov	r3, r0
   19478:	2b00      	cmp	r3, #0
   1947a:	d003      	beq.n	19484 <SysTick_Handler+0x2c>
		{
			/* A context switch is required.  Context switching is performed in
			the PendSV interrupt.  Pend the PendSV interrupt. */
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
   1947c:	4b06      	ldr	r3, [pc, #24]	@ (19498 <SysTick_Handler+0x40>)
   1947e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
   19482:	601a      	str	r2, [r3, #0]
   19484:	2300      	movs	r3, #0
   19486:	603b      	str	r3, [r7, #0]
	__asm volatile
   19488:	683b      	ldr	r3, [r7, #0]
   1948a:	f383 8811 	msr	BASEPRI, r3
}
   1948e:	bf00      	nop
		}
	}
	portENABLE_INTERRUPTS();
}
   19490:	bf00      	nop
   19492:	3708      	adds	r7, #8
   19494:	46bd      	mov	sp, r7
   19496:	bd80      	pop	{r7, pc}
   19498:	e000ed04 	.word	0xe000ed04

0001949c <xPortStimerTickHandler>:
//
//
//*****************************************************************************
void
xPortStimerTickHandler(uint32_t delta)
{
   1949c:	b580      	push	{r7, lr}
   1949e:	b08a      	sub	sp, #40	@ 0x28
   194a0:	af00      	add	r7, sp, #0
   194a2:	6078      	str	r0, [r7, #4]
    uint32_t remainder = 0;
   194a4:	2300      	movs	r3, #0
   194a6:	61fb      	str	r3, [r7, #28]
    uint32_t curSTimer;
    uint32_t timerCounts;
    uint32_t numTicksElapsed;
    BaseType_t ctxtSwitchReqd = pdFALSE;
   194a8:	2300      	movs	r3, #0
   194aa:	623b      	str	r3, [r7, #32]

    curSTimer = am_hal_stimer_counter_get();
   194ac:	f004 fdf4 	bl	1e098 <am_hal_stimer_counter_get>
   194b0:	61b8      	str	r0, [r7, #24]
    //
    // Configure the STIMER->COMPARE_0
    //
    am_hal_stimer_compare_delta_set(0, (ulTimerCountsForOneTick-delta));
   194b2:	4b2b      	ldr	r3, [pc, #172]	@ (19560 <xPortStimerTickHandler+0xc4>)
   194b4:	681a      	ldr	r2, [r3, #0]
   194b6:	687b      	ldr	r3, [r7, #4]
   194b8:	1ad3      	subs	r3, r2, r3
   194ba:	4619      	mov	r1, r3
   194bc:	2000      	movs	r0, #0
   194be:	f004 fdfb 	bl	1e0b8 <am_hal_stimer_compare_delta_set>
#ifdef AM_FREERTOS_STIMER_BACKUP
    am_hal_stimer_compare_delta_set(1, (ulTimerCountsForOneTick-delta+1));
   194c2:	4b27      	ldr	r3, [pc, #156]	@ (19560 <xPortStimerTickHandler+0xc4>)
   194c4:	681a      	ldr	r2, [r3, #0]
   194c6:	687b      	ldr	r3, [r7, #4]
   194c8:	1ad3      	subs	r3, r2, r3
   194ca:	3301      	adds	r3, #1
   194cc:	4619      	mov	r1, r3
   194ce:	2001      	movs	r0, #1
   194d0:	f004 fdf2 	bl	1e0b8 <am_hal_stimer_compare_delta_set>
#endif

    timerCounts = curSTimer - g_lastSTimerVal;
   194d4:	4b23      	ldr	r3, [pc, #140]	@ (19564 <xPortStimerTickHandler+0xc8>)
   194d6:	681b      	ldr	r3, [r3, #0]
   194d8:	69ba      	ldr	r2, [r7, #24]
   194da:	1ad3      	subs	r3, r2, r3
   194dc:	617b      	str	r3, [r7, #20]
    numTicksElapsed = timerCounts/ulTimerCountsForOneTick;
   194de:	4b20      	ldr	r3, [pc, #128]	@ (19560 <xPortStimerTickHandler+0xc4>)
   194e0:	681b      	ldr	r3, [r3, #0]
   194e2:	697a      	ldr	r2, [r7, #20]
   194e4:	fbb2 f3f3 	udiv	r3, r2, r3
   194e8:	627b      	str	r3, [r7, #36]	@ 0x24
    remainder = timerCounts % ulTimerCountsForOneTick;
   194ea:	4b1d      	ldr	r3, [pc, #116]	@ (19560 <xPortStimerTickHandler+0xc4>)
   194ec:	681a      	ldr	r2, [r3, #0]
   194ee:	697b      	ldr	r3, [r7, #20]
   194f0:	fbb3 f1f2 	udiv	r1, r3, r2
   194f4:	fb01 f202 	mul.w	r2, r1, r2
   194f8:	1a9b      	subs	r3, r3, r2
   194fa:	61fb      	str	r3, [r7, #28]
    g_lastSTimerVal = curSTimer - remainder;
   194fc:	69ba      	ldr	r2, [r7, #24]
   194fe:	69fb      	ldr	r3, [r7, #28]
   19500:	1ad3      	subs	r3, r2, r3
   19502:	4a18      	ldr	r2, [pc, #96]	@ (19564 <xPortStimerTickHandler+0xc8>)
   19504:	6013      	str	r3, [r2, #0]
	__asm volatile
   19506:	f3ef 8211 	mrs	r2, BASEPRI
   1950a:	f04f 0360 	mov.w	r3, #96	@ 0x60
   1950e:	f383 8811 	msr	BASEPRI, r3
   19512:	f3bf 8f6f 	isb	sy
   19516:	f3bf 8f4f 	dsb	sy
   1951a:	613a      	str	r2, [r7, #16]
   1951c:	60fb      	str	r3, [r7, #12]
        //
        // Increment RTOS tick
        // Allowing for need to increment the tick more than one... to avoid accumulation of
        // error in case of interrupt latencies
        //
        while (numTicksElapsed--)
   1951e:	e008      	b.n	19532 <xPortStimerTickHandler+0x96>
        {
            ctxtSwitchReqd = (( xTaskIncrementTick() != pdFALSE ) ? pdTRUE : ctxtSwitchReqd);
   19520:	f000 fa62 	bl	199e8 <xTaskIncrementTick>
   19524:	4603      	mov	r3, r0
   19526:	2b00      	cmp	r3, #0
   19528:	d101      	bne.n	1952e <xPortStimerTickHandler+0x92>
   1952a:	6a3b      	ldr	r3, [r7, #32]
   1952c:	e000      	b.n	19530 <xPortStimerTickHandler+0x94>
   1952e:	2301      	movs	r3, #1
   19530:	623b      	str	r3, [r7, #32]
        while (numTicksElapsed--)
   19532:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
   19534:	1e5a      	subs	r2, r3, #1
   19536:	627a      	str	r2, [r7, #36]	@ 0x24
   19538:	2b00      	cmp	r3, #0
   1953a:	d1f1      	bne.n	19520 <xPortStimerTickHandler+0x84>
        }
        if ( ctxtSwitchReqd != pdFALSE )
   1953c:	6a3b      	ldr	r3, [r7, #32]
   1953e:	2b00      	cmp	r3, #0
   19540:	d003      	beq.n	1954a <xPortStimerTickHandler+0xae>
            //
            // A context switch is required.  Context switching is
            // performed in the PendSV interrupt. Pend the PendSV
            // interrupt.
            //
            portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
   19542:	4b09      	ldr	r3, [pc, #36]	@ (19568 <xPortStimerTickHandler+0xcc>)
   19544:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
   19548:	601a      	str	r2, [r3, #0]
   1954a:	2300      	movs	r3, #0
   1954c:	60bb      	str	r3, [r7, #8]
	__asm volatile
   1954e:	68bb      	ldr	r3, [r7, #8]
   19550:	f383 8811 	msr	BASEPRI, r3
}
   19554:	bf00      	nop
        }
    }
    portCLEAR_INTERRUPT_MASK_FROM_ISR(0);
}
   19556:	bf00      	nop
   19558:	3728      	adds	r7, #40	@ 0x28
   1955a:	46bd      	mov	sp, r7
   1955c:	bd80      	pop	{r7, pc}
   1955e:	bf00      	nop
   19560:	100034a0 	.word	0x100034a0
   19564:	1000349c 	.word	0x1000349c
   19568:	e000ed04 	.word	0xe000ed04

0001956c <am_stimer_cmpr0_isr>:
// Interrupt handler for the STIMER module Compare 0.
//
//*****************************************************************************
void
am_stimer_cmpr0_isr(void)
{
   1956c:	b580      	push	{r7, lr}
   1956e:	b082      	sub	sp, #8
   19570:	af00      	add	r7, sp, #0

    //
    // Check the timer interrupt status.
    //
    uint32_t ui32Status = am_hal_stimer_int_status_get(false);
   19572:	2000      	movs	r0, #0
   19574:	f004 fe16 	bl	1e1a4 <am_hal_stimer_int_status_get>
   19578:	6078      	str	r0, [r7, #4]
    if (ui32Status & AM_HAL_STIMER_INT_COMPAREA)
   1957a:	687b      	ldr	r3, [r7, #4]
   1957c:	f003 0301 	and.w	r3, r3, #1
   19580:	2b00      	cmp	r3, #0
   19582:	d005      	beq.n	19590 <am_stimer_cmpr0_isr+0x24>
    {
        am_hal_stimer_int_clear(AM_HAL_STIMER_INT_COMPAREA);
   19584:	2001      	movs	r0, #1
   19586:	f004 fe07 	bl	1e198 <am_hal_stimer_int_clear>

        //
        // Run handlers for the various possible timer events.
        //
        xPortStimerTickHandler(0);
   1958a:	2000      	movs	r0, #0
   1958c:	f7ff ff86 	bl	1949c <xPortStimerTickHandler>
    }
}
   19590:	bf00      	nop
   19592:	3708      	adds	r7, #8
   19594:	46bd      	mov	sp, r7
   19596:	bd80      	pop	{r7, pc}

00019598 <am_stimer_cmpr1_isr>:
// Interrupt handler for the STIMER module Compare 0.
//
//*****************************************************************************
void
am_stimer_cmpr1_isr(void)
{
   19598:	b580      	push	{r7, lr}
   1959a:	b082      	sub	sp, #8
   1959c:	af00      	add	r7, sp, #0

    //
    // Check the timer interrupt status.
    //
    uint32_t ui32Status = am_hal_stimer_int_status_get(false);
   1959e:	2000      	movs	r0, #0
   195a0:	f004 fe00 	bl	1e1a4 <am_hal_stimer_int_status_get>
   195a4:	6078      	str	r0, [r7, #4]
    if (ui32Status & AM_HAL_STIMER_INT_COMPAREB)
   195a6:	687b      	ldr	r3, [r7, #4]
   195a8:	f003 0302 	and.w	r3, r3, #2
   195ac:	2b00      	cmp	r3, #0
   195ae:	d00a      	beq.n	195c6 <am_stimer_cmpr1_isr+0x2e>
    {
        am_hal_stimer_int_clear(AM_HAL_STIMER_INT_COMPAREB);
   195b0:	2002      	movs	r0, #2
   195b2:	f004 fdf1 	bl	1e198 <am_hal_stimer_int_clear>
        gNumCmpB++;
   195b6:	4b06      	ldr	r3, [pc, #24]	@ (195d0 <am_stimer_cmpr1_isr+0x38>)
   195b8:	681b      	ldr	r3, [r3, #0]
   195ba:	3301      	adds	r3, #1
   195bc:	4a04      	ldr	r2, [pc, #16]	@ (195d0 <am_stimer_cmpr1_isr+0x38>)
   195be:	6013      	str	r3, [r2, #0]
        //
        // Run handlers for the various possible timer events.
        //
        xPortStimerTickHandler(1);
   195c0:	2001      	movs	r0, #1
   195c2:	f7ff ff6b 	bl	1949c <xPortStimerTickHandler>
    }
}
   195c6:	bf00      	nop
   195c8:	3708      	adds	r7, #8
   195ca:	46bd      	mov	sp, r7
   195cc:	bd80      	pop	{r7, pc}
   195ce:	bf00      	nop
   195d0:	100034a4 	.word	0x100034a4

000195d4 <xQueueGenericSendFromISR>:

BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue,
                                     const void * const pvItemToQueue,
                                     BaseType_t * const pxHigherPriorityTaskWoken,
                                     const BaseType_t xCopyPosition )
{
   195d4:	b580      	push	{r7, lr}
   195d6:	b08e      	sub	sp, #56	@ 0x38
   195d8:	af00      	add	r7, sp, #0
   195da:	60f8      	str	r0, [r7, #12]
   195dc:	60b9      	str	r1, [r7, #8]
   195de:	607a      	str	r2, [r7, #4]
   195e0:	603b      	str	r3, [r7, #0]
    BaseType_t xReturn;
    UBaseType_t uxSavedInterruptStatus;
    Queue_t * const pxQueue = xQueue;
   195e2:	68fb      	ldr	r3, [r7, #12]
   195e4:	633b      	str	r3, [r7, #48]	@ 0x30
	__asm volatile
   195e6:	f3ef 8211 	mrs	r2, BASEPRI
   195ea:	f04f 0360 	mov.w	r3, #96	@ 0x60
   195ee:	f383 8811 	msr	BASEPRI, r3
   195f2:	f3bf 8f6f 	isb	sy
   195f6:	f3bf 8f4f 	dsb	sy
   195fa:	61fa      	str	r2, [r7, #28]
   195fc:	61bb      	str	r3, [r7, #24]
	return ulOriginalBASEPRI;
   195fe:	69fb      	ldr	r3, [r7, #28]
    /* Similar to xQueueGenericSend, except without blocking if there is no room
     * in the queue.  Also don't directly wake a task that was blocked on a queue
     * read, instead return a flag to say whether a context switch is required or
     * not (i.e. has a task with a higher priority than us been woken by this
     * post). */
    uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
   19600:	62fb      	str	r3, [r7, #44]	@ 0x2c
    {
        if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
   19602:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   19604:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
   19606:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   19608:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
   1960a:	429a      	cmp	r2, r3
   1960c:	d302      	bcc.n	19614 <xQueueGenericSendFromISR+0x40>
   1960e:	683b      	ldr	r3, [r7, #0]
   19610:	2b02      	cmp	r3, #2
   19612:	d137      	bne.n	19684 <xQueueGenericSendFromISR+0xb0>
        {
            const int8_t cTxLock = pxQueue->cTxLock;
   19614:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   19616:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
   1961a:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
            const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
   1961e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   19620:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
   19622:	627b      	str	r3, [r7, #36]	@ 0x24
            /* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
             *  semaphore or mutex.  That means prvCopyDataToQueue() cannot result
             *  in a task disinheriting a priority and prvCopyDataToQueue() can be
             *  called here even though the disinherit function does not check if
             *  the scheduler is suspended before accessing the ready lists. */
            ( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
   19624:	683a      	ldr	r2, [r7, #0]
   19626:	68b9      	ldr	r1, [r7, #8]
   19628:	6b38      	ldr	r0, [r7, #48]	@ 0x30
   1962a:	f000 f838 	bl	1969e <prvCopyDataToQueue>

            /* The event list is not altered if the queue is locked.  This will
             * be done when the queue is unlocked later. */
            if( cTxLock == queueUNLOCKED )
   1962e:	f997 302b 	ldrsb.w	r3, [r7, #43]	@ 0x2b
   19632:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
   19636:	d112      	bne.n	1965e <xQueueGenericSendFromISR+0x8a>
                        }
                    }
                }
                #else /* configUSE_QUEUE_SETS */
                {
                    if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   19638:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   1963a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
   1963c:	2b00      	cmp	r3, #0
   1963e:	d01e      	beq.n	1967e <xQueueGenericSendFromISR+0xaa>
                    {
                        if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   19640:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   19642:	3324      	adds	r3, #36	@ 0x24
   19644:	4618      	mov	r0, r3
   19646:	f000 fb19 	bl	19c7c <xTaskRemoveFromEventList>
   1964a:	4603      	mov	r3, r0
   1964c:	2b00      	cmp	r3, #0
   1964e:	d016      	beq.n	1967e <xQueueGenericSendFromISR+0xaa>
                        {
                            /* The task waiting has a higher priority so record that a
                             * context switch is required. */
                            if( pxHigherPriorityTaskWoken != NULL )
   19650:	687b      	ldr	r3, [r7, #4]
   19652:	2b00      	cmp	r3, #0
   19654:	d013      	beq.n	1967e <xQueueGenericSendFromISR+0xaa>
                            {
                                *pxHigherPriorityTaskWoken = pdTRUE;
   19656:	687b      	ldr	r3, [r7, #4]
   19658:	2201      	movs	r2, #1
   1965a:	601a      	str	r2, [r3, #0]
   1965c:	e00f      	b.n	1967e <xQueueGenericSendFromISR+0xaa>
            }
            else
            {
                /* Increment the lock count so the task that unlocks the queue
                 * knows that data was posted while it was locked. */
                prvIncrementQueueTxLock( pxQueue, cTxLock );
   1965e:	f000 f9b7 	bl	199d0 <uxTaskGetNumberOfTasks>
   19662:	6238      	str	r0, [r7, #32]
   19664:	f997 302b 	ldrsb.w	r3, [r7, #43]	@ 0x2b
   19668:	6a3a      	ldr	r2, [r7, #32]
   1966a:	429a      	cmp	r2, r3
   1966c:	d907      	bls.n	1967e <xQueueGenericSendFromISR+0xaa>
   1966e:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
   19672:	3301      	adds	r3, #1
   19674:	b2db      	uxtb	r3, r3
   19676:	b25a      	sxtb	r2, r3
   19678:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   1967a:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
            }

            xReturn = pdPASS;
   1967e:	2301      	movs	r3, #1
   19680:	637b      	str	r3, [r7, #52]	@ 0x34
        {
   19682:	e001      	b.n	19688 <xQueueGenericSendFromISR+0xb4>
        }
        else
        {
            traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
            xReturn = errQUEUE_FULL;
   19684:	2300      	movs	r3, #0
   19686:	637b      	str	r3, [r7, #52]	@ 0x34
   19688:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
   1968a:	617b      	str	r3, [r7, #20]
	__asm volatile
   1968c:	697b      	ldr	r3, [r7, #20]
   1968e:	f383 8811 	msr	BASEPRI, r3
}
   19692:	bf00      	nop
        }
    }
    portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );

    return xReturn;
   19694:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
}
   19696:	4618      	mov	r0, r3
   19698:	3738      	adds	r7, #56	@ 0x38
   1969a:	46bd      	mov	sp, r7
   1969c:	bd80      	pop	{r7, pc}

0001969e <prvCopyDataToQueue>:
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue,
                                      const void * pvItemToQueue,
                                      const BaseType_t xPosition )
{
   1969e:	b580      	push	{r7, lr}
   196a0:	b086      	sub	sp, #24
   196a2:	af00      	add	r7, sp, #0
   196a4:	60f8      	str	r0, [r7, #12]
   196a6:	60b9      	str	r1, [r7, #8]
   196a8:	607a      	str	r2, [r7, #4]
    BaseType_t xReturn = pdFALSE;
   196aa:	2300      	movs	r3, #0
   196ac:	613b      	str	r3, [r7, #16]
    UBaseType_t uxMessagesWaiting;

    /* This function is called from a critical section. */

    uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   196ae:	68fb      	ldr	r3, [r7, #12]
   196b0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
   196b2:	617b      	str	r3, [r7, #20]

    if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
   196b4:	68fb      	ldr	r3, [r7, #12]
   196b6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
   196b8:	2b00      	cmp	r3, #0
   196ba:	d043      	beq.n	19744 <prvCopyDataToQueue+0xa6>
                mtCOVERAGE_TEST_MARKER();
            }
        }
        #endif /* configUSE_MUTEXES */
    }
    else if( xPosition == queueSEND_TO_BACK )
   196bc:	687b      	ldr	r3, [r7, #4]
   196be:	2b00      	cmp	r3, #0
   196c0:	d119      	bne.n	196f6 <prvCopyDataToQueue+0x58>
    {
        ( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
   196c2:	68fb      	ldr	r3, [r7, #12]
   196c4:	6858      	ldr	r0, [r3, #4]
   196c6:	68fb      	ldr	r3, [r7, #12]
   196c8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
   196ca:	461a      	mov	r2, r3
   196cc:	68b9      	ldr	r1, [r7, #8]
   196ce:	f7fe fdc1 	bl	18254 <memcpy>
        pxQueue->pcWriteTo += pxQueue->uxItemSize;                                                       /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
   196d2:	68fb      	ldr	r3, [r7, #12]
   196d4:	685a      	ldr	r2, [r3, #4]
   196d6:	68fb      	ldr	r3, [r7, #12]
   196d8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
   196da:	441a      	add	r2, r3
   196dc:	68fb      	ldr	r3, [r7, #12]
   196de:	605a      	str	r2, [r3, #4]

        if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail )                                             /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   196e0:	68fb      	ldr	r3, [r7, #12]
   196e2:	685a      	ldr	r2, [r3, #4]
   196e4:	68fb      	ldr	r3, [r7, #12]
   196e6:	689b      	ldr	r3, [r3, #8]
   196e8:	429a      	cmp	r2, r3
   196ea:	d32b      	bcc.n	19744 <prvCopyDataToQueue+0xa6>
        {
            pxQueue->pcWriteTo = pxQueue->pcHead;
   196ec:	68fb      	ldr	r3, [r7, #12]
   196ee:	681a      	ldr	r2, [r3, #0]
   196f0:	68fb      	ldr	r3, [r7, #12]
   196f2:	605a      	str	r2, [r3, #4]
   196f4:	e026      	b.n	19744 <prvCopyDataToQueue+0xa6>
            mtCOVERAGE_TEST_MARKER();
        }
    }
    else
    {
        ( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
   196f6:	68fb      	ldr	r3, [r7, #12]
   196f8:	68d8      	ldr	r0, [r3, #12]
   196fa:	68fb      	ldr	r3, [r7, #12]
   196fc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
   196fe:	461a      	mov	r2, r3
   19700:	68b9      	ldr	r1, [r7, #8]
   19702:	f7fe fda7 	bl	18254 <memcpy>
        pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
   19706:	68fb      	ldr	r3, [r7, #12]
   19708:	68da      	ldr	r2, [r3, #12]
   1970a:	68fb      	ldr	r3, [r7, #12]
   1970c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
   1970e:	425b      	negs	r3, r3
   19710:	441a      	add	r2, r3
   19712:	68fb      	ldr	r3, [r7, #12]
   19714:	60da      	str	r2, [r3, #12]

        if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   19716:	68fb      	ldr	r3, [r7, #12]
   19718:	68da      	ldr	r2, [r3, #12]
   1971a:	68fb      	ldr	r3, [r7, #12]
   1971c:	681b      	ldr	r3, [r3, #0]
   1971e:	429a      	cmp	r2, r3
   19720:	d207      	bcs.n	19732 <prvCopyDataToQueue+0x94>
        {
            pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
   19722:	68fb      	ldr	r3, [r7, #12]
   19724:	689a      	ldr	r2, [r3, #8]
   19726:	68fb      	ldr	r3, [r7, #12]
   19728:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
   1972a:	425b      	negs	r3, r3
   1972c:	441a      	add	r2, r3
   1972e:	68fb      	ldr	r3, [r7, #12]
   19730:	60da      	str	r2, [r3, #12]
        else
        {
            mtCOVERAGE_TEST_MARKER();
        }

        if( xPosition == queueOVERWRITE )
   19732:	687b      	ldr	r3, [r7, #4]
   19734:	2b02      	cmp	r3, #2
   19736:	d105      	bne.n	19744 <prvCopyDataToQueue+0xa6>
        {
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
   19738:	697b      	ldr	r3, [r7, #20]
   1973a:	2b00      	cmp	r3, #0
   1973c:	d002      	beq.n	19744 <prvCopyDataToQueue+0xa6>
            {
                /* An item is not being added but overwritten, so subtract
                 * one from the recorded number of items in the queue so when
                 * one is added again below the number of recorded items remains
                 * correct. */
                --uxMessagesWaiting;
   1973e:	697b      	ldr	r3, [r7, #20]
   19740:	3b01      	subs	r3, #1
   19742:	617b      	str	r3, [r7, #20]
        {
            mtCOVERAGE_TEST_MARKER();
        }
    }

    pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
   19744:	697b      	ldr	r3, [r7, #20]
   19746:	1c5a      	adds	r2, r3, #1
   19748:	68fb      	ldr	r3, [r7, #12]
   1974a:	639a      	str	r2, [r3, #56]	@ 0x38

    return xReturn;
   1974c:	693b      	ldr	r3, [r7, #16]
}
   1974e:	4618      	mov	r0, r3
   19750:	3718      	adds	r7, #24
   19752:	46bd      	mov	sp, r7
   19754:	bd80      	pop	{r7, pc}
	...

00019758 <Reset_Handler>:
Reset_Handler(void)
{
    //
    // Set the vector table pointer.
    //
    __asm("    ldr    r0, =0xE000ED08\n"
   19758:	4811      	ldr	r0, [pc, #68]	@ (197a0 <zero_loop+0x12>)
   1975a:	4912      	ldr	r1, [pc, #72]	@ (197a4 <zero_loop+0x16>)
   1975c:	6001      	str	r1, [r0, #0]
          "    str    r1, [r0]");

    //
    // Set the stack pointer.
    //
    __asm("    ldr    sp, [r1]");
   1975e:	f8d1 d000 	ldr.w	sp, [r1]
#ifndef NOFPU
    //
    // Enable the FPU.
    //
    __asm("ldr  r0, =0xE000ED88\n"
   19762:	4811      	ldr	r0, [pc, #68]	@ (197a8 <zero_loop+0x1a>)
   19764:	6801      	ldr	r1, [r0, #0]
   19766:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
   1976a:	6001      	str	r1, [r0, #0]
   1976c:	f3bf 8f4f 	dsb	sy
   19770:	f3bf 8f6f 	isb	sy
          "isb\n");
#endif
    //
    // Copy the data segment initializers from flash to SRAM.
    //
    __asm("    ldr     r0, =_init_data\n"
   19774:	480d      	ldr	r0, [pc, #52]	@ (197ac <zero_loop+0x1e>)
   19776:	490e      	ldr	r1, [pc, #56]	@ (197b0 <zero_loop+0x22>)
   19778:	4a0e      	ldr	r2, [pc, #56]	@ (197b4 <zero_loop+0x26>)

0001977a <copy_loop>:
   1977a:	f850 3b04 	ldr.w	r3, [r0], #4
   1977e:	f841 3b04 	str.w	r3, [r1], #4
   19782:	4291      	cmp	r1, r2
   19784:	dbf9      	blt.n	1977a <copy_loop>
          "        cmp     r1, r2\n"
          "        blt     copy_loop\n");
    //
    // Zero fill the bss segment.
    //
    __asm("    ldr     r0, =_sbss\n"
   19786:	480c      	ldr	r0, [pc, #48]	@ (197b8 <zero_loop+0x2a>)
   19788:	490c      	ldr	r1, [pc, #48]	@ (197bc <zero_loop+0x2e>)
   1978a:	f04f 0200 	mov.w	r2, #0

0001978e <zero_loop>:
   1978e:	4288      	cmp	r0, r1
   19790:	bfb8      	it	lt
   19792:	f840 2b04 	strlt.w	r2, [r0], #4
   19796:	dbfa      	blt.n	1978e <zero_loop>
          "        blt     zero_loop");

    //
    // Call the application's entry point.
    //
    main();
   19798:	f001 fd1e 	bl	1b1d8 <main>

    //
    // If main returns then execute a break point instruction
    //
    __asm("    bkpt     ");
   1979c:	be00      	bkpt	0x0000
}
   1979e:	bf00      	nop
   197a0:	e000ed08 	.word	0xe000ed08
   197a4:	00018000 	.word	0x00018000
   197a8:	e000ed88 	.word	0xe000ed88
   197ac:	0002c594 	.word	0x0002c594
   197b0:	10002b00 	.word	0x10002b00
   197b4:	1000307c 	.word	0x1000307c
   197b8:	1000307c 	.word	0x1000307c
   197bc:	10008710 	.word	0x10008710

000197c0 <NMI_Handler>:
// by a debugger.
//
//*****************************************************************************
void
NMI_Handler(void)
{
   197c0:	b480      	push	{r7}
   197c2:	af00      	add	r7, sp, #0
    //
    // Go into an infinite loop.
    //
    while(1)
   197c4:	bf00      	nop
   197c6:	e7fd      	b.n	197c4 <NMI_Handler+0x4>

000197c8 <BusFault_Handler>:
// for examination by a debugger.
//
//*****************************************************************************
void
HardFault_Handler(void)
{
   197c8:	b480      	push	{r7}
   197ca:	af00      	add	r7, sp, #0
    //
    // Go into an infinite loop.
    //
    while(1)
   197cc:	bf00      	nop
   197ce:	e7fd      	b.n	197cc <BusFault_Handler+0x4>

000197d0 <DebugMon_Handler>:
// for examination by a debugger.
//
//*****************************************************************************
void
am_default_isr(void)
{
   197d0:	b480      	push	{r7}
   197d2:	af00      	add	r7, sp, #0
    //
    // Go into an infinite loop.
    //
    while(1)
   197d4:	bf00      	nop
   197d6:	e7fd      	b.n	197d4 <DebugMon_Handler+0x4>

000197d8 <vTaskSuspendAll>:
    vPortEndScheduler();
}
/*----------------------------------------------------------*/

void vTaskSuspendAll( void )
{
   197d8:	b480      	push	{r7}
   197da:	af00      	add	r7, sp, #0
     * do not otherwise exhibit real time behaviour. */
    portSOFTWARE_BARRIER();

    /* The scheduler is suspended if uxSchedulerSuspended is non-zero.  An increment
     * is used to allow calls to vTaskSuspendAll() to nest. */
    ++uxSchedulerSuspended;
   197dc:	4b04      	ldr	r3, [pc, #16]	@ (197f0 <vTaskSuspendAll+0x18>)
   197de:	681b      	ldr	r3, [r3, #0]
   197e0:	3301      	adds	r3, #1
   197e2:	4a03      	ldr	r2, [pc, #12]	@ (197f0 <vTaskSuspendAll+0x18>)
   197e4:	6013      	str	r3, [r2, #0]

    /* Enforces ordering for ports and optimised compilers that may otherwise place
     * the above increment elsewhere. */
    portMEMORY_BARRIER();
}
   197e6:	bf00      	nop
   197e8:	46bd      	mov	sp, r7
   197ea:	f85d 7b04 	ldr.w	r7, [sp], #4
   197ee:	4770      	bx	lr
   197f0:	1000355c 	.word	0x1000355c

000197f4 <xTaskResumeAll>:

#endif /* configUSE_TICKLESS_IDLE */
/*----------------------------------------------------------*/

BaseType_t xTaskResumeAll( void )
{
   197f4:	b580      	push	{r7, lr}
   197f6:	b086      	sub	sp, #24
   197f8:	af00      	add	r7, sp, #0
    TCB_t * pxTCB = NULL;
   197fa:	2300      	movs	r3, #0
   197fc:	617b      	str	r3, [r7, #20]
    BaseType_t xAlreadyYielded = pdFALSE;
   197fe:	2300      	movs	r3, #0
   19800:	613b      	str	r3, [r7, #16]
    /* It is possible that an ISR caused a task to be removed from an event
     * list while the scheduler was suspended.  If this was the case then the
     * removed task will have been added to the xPendingReadyList.  Once the
     * scheduler has been resumed it is safe to move all the pending ready
     * tasks from this list into their appropriate ready list. */
    taskENTER_CRITICAL();
   19802:	f7ff fdc1 	bl	19388 <vPortEnterCritical>
    {
        --uxSchedulerSuspended;
   19806:	4b69      	ldr	r3, [pc, #420]	@ (199ac <xTaskResumeAll+0x1b8>)
   19808:	681b      	ldr	r3, [r3, #0]
   1980a:	3b01      	subs	r3, #1
   1980c:	4a67      	ldr	r2, [pc, #412]	@ (199ac <xTaskResumeAll+0x1b8>)
   1980e:	6013      	str	r3, [r2, #0]

        if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   19810:	4b66      	ldr	r3, [pc, #408]	@ (199ac <xTaskResumeAll+0x1b8>)
   19812:	681b      	ldr	r3, [r3, #0]
   19814:	2b00      	cmp	r3, #0
   19816:	f040 80c1 	bne.w	1999c <xTaskResumeAll+0x1a8>
        {
            if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
   1981a:	4b65      	ldr	r3, [pc, #404]	@ (199b0 <xTaskResumeAll+0x1bc>)
   1981c:	681b      	ldr	r3, [r3, #0]
   1981e:	2b00      	cmp	r3, #0
   19820:	f000 80bc 	beq.w	1999c <xTaskResumeAll+0x1a8>
            {
                /* Move any readied tasks from the pending list into the
                 * appropriate ready list. */
                while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
   19824:	e08b      	b.n	1993e <xTaskResumeAll+0x14a>
                {
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
   19826:	4b63      	ldr	r3, [pc, #396]	@ (199b4 <xTaskResumeAll+0x1c0>)
   19828:	68db      	ldr	r3, [r3, #12]
   1982a:	68db      	ldr	r3, [r3, #12]
   1982c:	617b      	str	r3, [r7, #20]
                    listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
   1982e:	697b      	ldr	r3, [r7, #20]
   19830:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
   19832:	60bb      	str	r3, [r7, #8]
   19834:	697b      	ldr	r3, [r7, #20]
   19836:	69db      	ldr	r3, [r3, #28]
   19838:	697a      	ldr	r2, [r7, #20]
   1983a:	6a12      	ldr	r2, [r2, #32]
   1983c:	609a      	str	r2, [r3, #8]
   1983e:	697b      	ldr	r3, [r7, #20]
   19840:	6a1b      	ldr	r3, [r3, #32]
   19842:	697a      	ldr	r2, [r7, #20]
   19844:	69d2      	ldr	r2, [r2, #28]
   19846:	605a      	str	r2, [r3, #4]
   19848:	68bb      	ldr	r3, [r7, #8]
   1984a:	685a      	ldr	r2, [r3, #4]
   1984c:	697b      	ldr	r3, [r7, #20]
   1984e:	3318      	adds	r3, #24
   19850:	429a      	cmp	r2, r3
   19852:	d103      	bne.n	1985c <xTaskResumeAll+0x68>
   19854:	697b      	ldr	r3, [r7, #20]
   19856:	6a1a      	ldr	r2, [r3, #32]
   19858:	68bb      	ldr	r3, [r7, #8]
   1985a:	605a      	str	r2, [r3, #4]
   1985c:	697b      	ldr	r3, [r7, #20]
   1985e:	2200      	movs	r2, #0
   19860:	629a      	str	r2, [r3, #40]	@ 0x28
   19862:	68bb      	ldr	r3, [r7, #8]
   19864:	681b      	ldr	r3, [r3, #0]
   19866:	1e5a      	subs	r2, r3, #1
   19868:	68bb      	ldr	r3, [r7, #8]
   1986a:	601a      	str	r2, [r3, #0]
                    portMEMORY_BARRIER();
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
   1986c:	697b      	ldr	r3, [r7, #20]
   1986e:	695b      	ldr	r3, [r3, #20]
   19870:	607b      	str	r3, [r7, #4]
   19872:	697b      	ldr	r3, [r7, #20]
   19874:	689b      	ldr	r3, [r3, #8]
   19876:	697a      	ldr	r2, [r7, #20]
   19878:	68d2      	ldr	r2, [r2, #12]
   1987a:	609a      	str	r2, [r3, #8]
   1987c:	697b      	ldr	r3, [r7, #20]
   1987e:	68db      	ldr	r3, [r3, #12]
   19880:	697a      	ldr	r2, [r7, #20]
   19882:	6892      	ldr	r2, [r2, #8]
   19884:	605a      	str	r2, [r3, #4]
   19886:	687b      	ldr	r3, [r7, #4]
   19888:	685a      	ldr	r2, [r3, #4]
   1988a:	697b      	ldr	r3, [r7, #20]
   1988c:	3304      	adds	r3, #4
   1988e:	429a      	cmp	r2, r3
   19890:	d103      	bne.n	1989a <xTaskResumeAll+0xa6>
   19892:	697b      	ldr	r3, [r7, #20]
   19894:	68da      	ldr	r2, [r3, #12]
   19896:	687b      	ldr	r3, [r7, #4]
   19898:	605a      	str	r2, [r3, #4]
   1989a:	697b      	ldr	r3, [r7, #20]
   1989c:	2200      	movs	r2, #0
   1989e:	615a      	str	r2, [r3, #20]
   198a0:	687b      	ldr	r3, [r7, #4]
   198a2:	681b      	ldr	r3, [r3, #0]
   198a4:	1e5a      	subs	r2, r3, #1
   198a6:	687b      	ldr	r3, [r7, #4]
   198a8:	601a      	str	r2, [r3, #0]
                    prvAddTaskToReadyList( pxTCB );
   198aa:	697b      	ldr	r3, [r7, #20]
   198ac:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   198ae:	4b42      	ldr	r3, [pc, #264]	@ (199b8 <xTaskResumeAll+0x1c4>)
   198b0:	681b      	ldr	r3, [r3, #0]
   198b2:	429a      	cmp	r2, r3
   198b4:	d903      	bls.n	198be <xTaskResumeAll+0xca>
   198b6:	697b      	ldr	r3, [r7, #20]
   198b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
   198ba:	4a3f      	ldr	r2, [pc, #252]	@ (199b8 <xTaskResumeAll+0x1c4>)
   198bc:	6013      	str	r3, [r2, #0]
   198be:	697b      	ldr	r3, [r7, #20]
   198c0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   198c2:	493e      	ldr	r1, [pc, #248]	@ (199bc <xTaskResumeAll+0x1c8>)
   198c4:	4613      	mov	r3, r2
   198c6:	009b      	lsls	r3, r3, #2
   198c8:	4413      	add	r3, r2
   198ca:	009b      	lsls	r3, r3, #2
   198cc:	440b      	add	r3, r1
   198ce:	3304      	adds	r3, #4
   198d0:	681b      	ldr	r3, [r3, #0]
   198d2:	603b      	str	r3, [r7, #0]
   198d4:	697b      	ldr	r3, [r7, #20]
   198d6:	683a      	ldr	r2, [r7, #0]
   198d8:	609a      	str	r2, [r3, #8]
   198da:	683b      	ldr	r3, [r7, #0]
   198dc:	689a      	ldr	r2, [r3, #8]
   198de:	697b      	ldr	r3, [r7, #20]
   198e0:	60da      	str	r2, [r3, #12]
   198e2:	683b      	ldr	r3, [r7, #0]
   198e4:	689b      	ldr	r3, [r3, #8]
   198e6:	697a      	ldr	r2, [r7, #20]
   198e8:	3204      	adds	r2, #4
   198ea:	605a      	str	r2, [r3, #4]
   198ec:	697b      	ldr	r3, [r7, #20]
   198ee:	1d1a      	adds	r2, r3, #4
   198f0:	683b      	ldr	r3, [r7, #0]
   198f2:	609a      	str	r2, [r3, #8]
   198f4:	697b      	ldr	r3, [r7, #20]
   198f6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   198f8:	4613      	mov	r3, r2
   198fa:	009b      	lsls	r3, r3, #2
   198fc:	4413      	add	r3, r2
   198fe:	009b      	lsls	r3, r3, #2
   19900:	4a2e      	ldr	r2, [pc, #184]	@ (199bc <xTaskResumeAll+0x1c8>)
   19902:	441a      	add	r2, r3
   19904:	697b      	ldr	r3, [r7, #20]
   19906:	615a      	str	r2, [r3, #20]
   19908:	697b      	ldr	r3, [r7, #20]
   1990a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   1990c:	492b      	ldr	r1, [pc, #172]	@ (199bc <xTaskResumeAll+0x1c8>)
   1990e:	4613      	mov	r3, r2
   19910:	009b      	lsls	r3, r3, #2
   19912:	4413      	add	r3, r2
   19914:	009b      	lsls	r3, r3, #2
   19916:	440b      	add	r3, r1
   19918:	681b      	ldr	r3, [r3, #0]
   1991a:	1c59      	adds	r1, r3, #1
   1991c:	4827      	ldr	r0, [pc, #156]	@ (199bc <xTaskResumeAll+0x1c8>)
   1991e:	4613      	mov	r3, r2
   19920:	009b      	lsls	r3, r3, #2
   19922:	4413      	add	r3, r2
   19924:	009b      	lsls	r3, r3, #2
   19926:	4403      	add	r3, r0
   19928:	6019      	str	r1, [r3, #0]

                    /* If the moved task has a priority higher than or equal to
                     * the current task then a yield must be performed. */
                    if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
   1992a:	697b      	ldr	r3, [r7, #20]
   1992c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   1992e:	4b24      	ldr	r3, [pc, #144]	@ (199c0 <xTaskResumeAll+0x1cc>)
   19930:	681b      	ldr	r3, [r3, #0]
   19932:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
   19934:	429a      	cmp	r2, r3
   19936:	d302      	bcc.n	1993e <xTaskResumeAll+0x14a>
                    {
                        xYieldPending = pdTRUE;
   19938:	4b22      	ldr	r3, [pc, #136]	@ (199c4 <xTaskResumeAll+0x1d0>)
   1993a:	2201      	movs	r2, #1
   1993c:	601a      	str	r2, [r3, #0]
                while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
   1993e:	4b1d      	ldr	r3, [pc, #116]	@ (199b4 <xTaskResumeAll+0x1c0>)
   19940:	681b      	ldr	r3, [r3, #0]
   19942:	2b00      	cmp	r3, #0
   19944:	f47f af6f 	bne.w	19826 <xTaskResumeAll+0x32>
                    {
                        mtCOVERAGE_TEST_MARKER();
                    }
                }

                if( pxTCB != NULL )
   19948:	697b      	ldr	r3, [r7, #20]
   1994a:	2b00      	cmp	r3, #0
   1994c:	d001      	beq.n	19952 <xTaskResumeAll+0x15e>
                     * which may have prevented the next unblock time from being
                     * re-calculated, in which case re-calculate it now.  Mainly
                     * important for low power tickless implementations, where
                     * this can prevent an unnecessary exit from low power
                     * state. */
                    prvResetNextTaskUnblockTime();
   1994e:	f000 fb01 	bl	19f54 <prvResetNextTaskUnblockTime>
                /* If any ticks occurred while the scheduler was suspended then
                 * they should be processed now.  This ensures the tick count does
                 * not  slip, and that any delayed tasks are resumed at the correct
                 * time. */
                {
                    TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
   19952:	4b1d      	ldr	r3, [pc, #116]	@ (199c8 <xTaskResumeAll+0x1d4>)
   19954:	681b      	ldr	r3, [r3, #0]
   19956:	60fb      	str	r3, [r7, #12]

                    if( xPendedCounts > ( TickType_t ) 0U )
   19958:	68fb      	ldr	r3, [r7, #12]
   1995a:	2b00      	cmp	r3, #0
   1995c:	d010      	beq.n	19980 <xTaskResumeAll+0x18c>
                    {
                        do
                        {
                            if( xTaskIncrementTick() != pdFALSE )
   1995e:	f000 f843 	bl	199e8 <xTaskIncrementTick>
   19962:	4603      	mov	r3, r0
   19964:	2b00      	cmp	r3, #0
   19966:	d002      	beq.n	1996e <xTaskResumeAll+0x17a>
                            {
                                xYieldPending = pdTRUE;
   19968:	4b16      	ldr	r3, [pc, #88]	@ (199c4 <xTaskResumeAll+0x1d0>)
   1996a:	2201      	movs	r2, #1
   1996c:	601a      	str	r2, [r3, #0]
                            else
                            {
                                mtCOVERAGE_TEST_MARKER();
                            }

                            --xPendedCounts;
   1996e:	68fb      	ldr	r3, [r7, #12]
   19970:	3b01      	subs	r3, #1
   19972:	60fb      	str	r3, [r7, #12]
                        } while( xPendedCounts > ( TickType_t ) 0U );
   19974:	68fb      	ldr	r3, [r7, #12]
   19976:	2b00      	cmp	r3, #0
   19978:	d1f1      	bne.n	1995e <xTaskResumeAll+0x16a>

                        xPendedTicks = 0;
   1997a:	4b13      	ldr	r3, [pc, #76]	@ (199c8 <xTaskResumeAll+0x1d4>)
   1997c:	2200      	movs	r2, #0
   1997e:	601a      	str	r2, [r3, #0]
                    {
                        mtCOVERAGE_TEST_MARKER();
                    }
                }

                if( xYieldPending != pdFALSE )
   19980:	4b10      	ldr	r3, [pc, #64]	@ (199c4 <xTaskResumeAll+0x1d0>)
   19982:	681b      	ldr	r3, [r3, #0]
   19984:	2b00      	cmp	r3, #0
   19986:	d009      	beq.n	1999c <xTaskResumeAll+0x1a8>
                {
                    #if ( configUSE_PREEMPTION != 0 )
                    {
                        xAlreadyYielded = pdTRUE;
   19988:	2301      	movs	r3, #1
   1998a:	613b      	str	r3, [r7, #16]
                    }
                    #endif
                    taskYIELD_IF_USING_PREEMPTION();
   1998c:	4b0f      	ldr	r3, [pc, #60]	@ (199cc <xTaskResumeAll+0x1d8>)
   1998e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
   19992:	601a      	str	r2, [r3, #0]
   19994:	f3bf 8f4f 	dsb	sy
   19998:	f3bf 8f6f 	isb	sy
        else
        {
            mtCOVERAGE_TEST_MARKER();
        }
    }
    taskEXIT_CRITICAL();
   1999c:	f7ff fd0e 	bl	193bc <vPortExitCritical>

    return xAlreadyYielded;
   199a0:	693b      	ldr	r3, [r7, #16]
}
   199a2:	4618      	mov	r0, r3
   199a4:	3718      	adds	r7, #24
   199a6:	46bd      	mov	sp, r7
   199a8:	bd80      	pop	{r7, pc}
   199aa:	bf00      	nop
   199ac:	1000355c 	.word	0x1000355c
   199b0:	10003540 	.word	0x10003540
   199b4:	1000352c 	.word	0x1000352c
   199b8:	10003548 	.word	0x10003548
   199bc:	100034ac 	.word	0x100034ac
   199c0:	100034a8 	.word	0x100034a8
   199c4:	10003550 	.word	0x10003550
   199c8:	1000354c 	.word	0x1000354c
   199cc:	e000ed04 	.word	0xe000ed04

000199d0 <uxTaskGetNumberOfTasks>:
    return xReturn;
}
/*-----------------------------------------------------------*/

UBaseType_t uxTaskGetNumberOfTasks( void )
{
   199d0:	b480      	push	{r7}
   199d2:	af00      	add	r7, sp, #0
    /* A critical section is not required because the variables are of type
     * BaseType_t. */
    return uxCurrentNumberOfTasks;
   199d4:	4b03      	ldr	r3, [pc, #12]	@ (199e4 <uxTaskGetNumberOfTasks+0x14>)
   199d6:	681b      	ldr	r3, [r3, #0]
}
   199d8:	4618      	mov	r0, r3
   199da:	46bd      	mov	sp, r7
   199dc:	f85d 7b04 	ldr.w	r7, [sp], #4
   199e0:	4770      	bx	lr
   199e2:	bf00      	nop
   199e4:	10003540 	.word	0x10003540

000199e8 <xTaskIncrementTick>:

#endif /* INCLUDE_xTaskAbortDelay */
/*----------------------------------------------------------*/

BaseType_t xTaskIncrementTick( void )
{
   199e8:	b580      	push	{r7, lr}
   199ea:	b088      	sub	sp, #32
   199ec:	af00      	add	r7, sp, #0
    TCB_t * pxTCB;
    TickType_t xItemValue;
    BaseType_t xSwitchRequired = pdFALSE;
   199ee:	2300      	movs	r3, #0
   199f0:	61fb      	str	r3, [r7, #28]
    /* Called by the portable layer each time a tick interrupt occurs.
     * Increments the tick then checks to see if the new tick value will cause any
     * tasks to be unblocked. */
    traceTASK_INCREMENT_TICK( xTickCount );

    if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   199f2:	4b6f      	ldr	r3, [pc, #444]	@ (19bb0 <xTaskIncrementTick+0x1c8>)
   199f4:	681b      	ldr	r3, [r3, #0]
   199f6:	2b00      	cmp	r3, #0
   199f8:	f040 80cf 	bne.w	19b9a <xTaskIncrementTick+0x1b2>
    {
        /* Minor optimisation.  The tick count cannot change in this
         * block. */
        const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
   199fc:	4b6d      	ldr	r3, [pc, #436]	@ (19bb4 <xTaskIncrementTick+0x1cc>)
   199fe:	681b      	ldr	r3, [r3, #0]
   19a00:	3301      	adds	r3, #1
   19a02:	61bb      	str	r3, [r7, #24]

        /* Increment the RTOS tick, switching the delayed and overflowed
         * delayed lists if it wraps to 0. */
        xTickCount = xConstTickCount;
   19a04:	4a6b      	ldr	r2, [pc, #428]	@ (19bb4 <xTaskIncrementTick+0x1cc>)
   19a06:	69bb      	ldr	r3, [r7, #24]
   19a08:	6013      	str	r3, [r2, #0]

        if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
   19a0a:	69bb      	ldr	r3, [r7, #24]
   19a0c:	2b00      	cmp	r3, #0
   19a0e:	d110      	bne.n	19a32 <xTaskIncrementTick+0x4a>
        {
            taskSWITCH_DELAYED_LISTS();
   19a10:	4b69      	ldr	r3, [pc, #420]	@ (19bb8 <xTaskIncrementTick+0x1d0>)
   19a12:	681b      	ldr	r3, [r3, #0]
   19a14:	617b      	str	r3, [r7, #20]
   19a16:	4b69      	ldr	r3, [pc, #420]	@ (19bbc <xTaskIncrementTick+0x1d4>)
   19a18:	681b      	ldr	r3, [r3, #0]
   19a1a:	4a67      	ldr	r2, [pc, #412]	@ (19bb8 <xTaskIncrementTick+0x1d0>)
   19a1c:	6013      	str	r3, [r2, #0]
   19a1e:	4a67      	ldr	r2, [pc, #412]	@ (19bbc <xTaskIncrementTick+0x1d4>)
   19a20:	697b      	ldr	r3, [r7, #20]
   19a22:	6013      	str	r3, [r2, #0]
   19a24:	4b66      	ldr	r3, [pc, #408]	@ (19bc0 <xTaskIncrementTick+0x1d8>)
   19a26:	681b      	ldr	r3, [r3, #0]
   19a28:	3301      	adds	r3, #1
   19a2a:	4a65      	ldr	r2, [pc, #404]	@ (19bc0 <xTaskIncrementTick+0x1d8>)
   19a2c:	6013      	str	r3, [r2, #0]
   19a2e:	f000 fa91 	bl	19f54 <prvResetNextTaskUnblockTime>

        /* See if this tick has made a timeout expire.  Tasks are stored in
         * the  queue in the order of their wake time - meaning once one task
         * has been found whose block time has not expired there is no need to
         * look any further down the list. */
        if( xConstTickCount >= xNextTaskUnblockTime )
   19a32:	4b64      	ldr	r3, [pc, #400]	@ (19bc4 <xTaskIncrementTick+0x1dc>)
   19a34:	681b      	ldr	r3, [r3, #0]
   19a36:	69ba      	ldr	r2, [r7, #24]
   19a38:	429a      	cmp	r2, r3
   19a3a:	f0c0 80a7 	bcc.w	19b8c <xTaskIncrementTick+0x1a4>
        {
            for( ; ; )
            {
                if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
   19a3e:	4b5e      	ldr	r3, [pc, #376]	@ (19bb8 <xTaskIncrementTick+0x1d0>)
   19a40:	681b      	ldr	r3, [r3, #0]
   19a42:	681b      	ldr	r3, [r3, #0]
   19a44:	2b00      	cmp	r3, #0
   19a46:	d104      	bne.n	19a52 <xTaskIncrementTick+0x6a>
                    /* The delayed list is empty.  Set xNextTaskUnblockTime
                     * to the maximum possible value so it is extremely
                     * unlikely that the
                     * if( xTickCount >= xNextTaskUnblockTime ) test will pass
                     * next time through. */
                    xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   19a48:	4b5e      	ldr	r3, [pc, #376]	@ (19bc4 <xTaskIncrementTick+0x1dc>)
   19a4a:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
   19a4e:	601a      	str	r2, [r3, #0]
                    break;
   19a50:	e09c      	b.n	19b8c <xTaskIncrementTick+0x1a4>
                {
                    /* The delayed list is not empty, get the value of the
                     * item at the head of the delayed list.  This is the time
                     * at which the task at the head of the delayed list must
                     * be removed from the Blocked state. */
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
   19a52:	4b59      	ldr	r3, [pc, #356]	@ (19bb8 <xTaskIncrementTick+0x1d0>)
   19a54:	681b      	ldr	r3, [r3, #0]
   19a56:	68db      	ldr	r3, [r3, #12]
   19a58:	68db      	ldr	r3, [r3, #12]
   19a5a:	613b      	str	r3, [r7, #16]
                    xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
   19a5c:	693b      	ldr	r3, [r7, #16]
   19a5e:	685b      	ldr	r3, [r3, #4]
   19a60:	60fb      	str	r3, [r7, #12]

                    if( xConstTickCount < xItemValue )
   19a62:	69ba      	ldr	r2, [r7, #24]
   19a64:	68fb      	ldr	r3, [r7, #12]
   19a66:	429a      	cmp	r2, r3
   19a68:	d203      	bcs.n	19a72 <xTaskIncrementTick+0x8a>
                        /* It is not time to unblock this item yet, but the
                         * item value is the time at which the task at the head
                         * of the blocked list must be removed from the Blocked
                         * state -  so record the item value in
                         * xNextTaskUnblockTime. */
                        xNextTaskUnblockTime = xItemValue;
   19a6a:	4a56      	ldr	r2, [pc, #344]	@ (19bc4 <xTaskIncrementTick+0x1dc>)
   19a6c:	68fb      	ldr	r3, [r7, #12]
   19a6e:	6013      	str	r3, [r2, #0]
                        break; /*lint !e9011 Code structure here is deemed easier to understand with multiple breaks. */
   19a70:	e08c      	b.n	19b8c <xTaskIncrementTick+0x1a4>
                    {
                        mtCOVERAGE_TEST_MARKER();
                    }

                    /* It is time to remove the item from the Blocked state. */
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
   19a72:	693b      	ldr	r3, [r7, #16]
   19a74:	695b      	ldr	r3, [r3, #20]
   19a76:	60bb      	str	r3, [r7, #8]
   19a78:	693b      	ldr	r3, [r7, #16]
   19a7a:	689b      	ldr	r3, [r3, #8]
   19a7c:	693a      	ldr	r2, [r7, #16]
   19a7e:	68d2      	ldr	r2, [r2, #12]
   19a80:	609a      	str	r2, [r3, #8]
   19a82:	693b      	ldr	r3, [r7, #16]
   19a84:	68db      	ldr	r3, [r3, #12]
   19a86:	693a      	ldr	r2, [r7, #16]
   19a88:	6892      	ldr	r2, [r2, #8]
   19a8a:	605a      	str	r2, [r3, #4]
   19a8c:	68bb      	ldr	r3, [r7, #8]
   19a8e:	685a      	ldr	r2, [r3, #4]
   19a90:	693b      	ldr	r3, [r7, #16]
   19a92:	3304      	adds	r3, #4
   19a94:	429a      	cmp	r2, r3
   19a96:	d103      	bne.n	19aa0 <xTaskIncrementTick+0xb8>
   19a98:	693b      	ldr	r3, [r7, #16]
   19a9a:	68da      	ldr	r2, [r3, #12]
   19a9c:	68bb      	ldr	r3, [r7, #8]
   19a9e:	605a      	str	r2, [r3, #4]
   19aa0:	693b      	ldr	r3, [r7, #16]
   19aa2:	2200      	movs	r2, #0
   19aa4:	615a      	str	r2, [r3, #20]
   19aa6:	68bb      	ldr	r3, [r7, #8]
   19aa8:	681b      	ldr	r3, [r3, #0]
   19aaa:	1e5a      	subs	r2, r3, #1
   19aac:	68bb      	ldr	r3, [r7, #8]
   19aae:	601a      	str	r2, [r3, #0]

                    /* Is the task waiting on an event also?  If so remove
                     * it from the event list. */
                    if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
   19ab0:	693b      	ldr	r3, [r7, #16]
   19ab2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
   19ab4:	2b00      	cmp	r3, #0
   19ab6:	d01e      	beq.n	19af6 <xTaskIncrementTick+0x10e>
                    {
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
   19ab8:	693b      	ldr	r3, [r7, #16]
   19aba:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
   19abc:	607b      	str	r3, [r7, #4]
   19abe:	693b      	ldr	r3, [r7, #16]
   19ac0:	69db      	ldr	r3, [r3, #28]
   19ac2:	693a      	ldr	r2, [r7, #16]
   19ac4:	6a12      	ldr	r2, [r2, #32]
   19ac6:	609a      	str	r2, [r3, #8]
   19ac8:	693b      	ldr	r3, [r7, #16]
   19aca:	6a1b      	ldr	r3, [r3, #32]
   19acc:	693a      	ldr	r2, [r7, #16]
   19ace:	69d2      	ldr	r2, [r2, #28]
   19ad0:	605a      	str	r2, [r3, #4]
   19ad2:	687b      	ldr	r3, [r7, #4]
   19ad4:	685a      	ldr	r2, [r3, #4]
   19ad6:	693b      	ldr	r3, [r7, #16]
   19ad8:	3318      	adds	r3, #24
   19ada:	429a      	cmp	r2, r3
   19adc:	d103      	bne.n	19ae6 <xTaskIncrementTick+0xfe>
   19ade:	693b      	ldr	r3, [r7, #16]
   19ae0:	6a1a      	ldr	r2, [r3, #32]
   19ae2:	687b      	ldr	r3, [r7, #4]
   19ae4:	605a      	str	r2, [r3, #4]
   19ae6:	693b      	ldr	r3, [r7, #16]
   19ae8:	2200      	movs	r2, #0
   19aea:	629a      	str	r2, [r3, #40]	@ 0x28
   19aec:	687b      	ldr	r3, [r7, #4]
   19aee:	681b      	ldr	r3, [r3, #0]
   19af0:	1e5a      	subs	r2, r3, #1
   19af2:	687b      	ldr	r3, [r7, #4]
   19af4:	601a      	str	r2, [r3, #0]
                        mtCOVERAGE_TEST_MARKER();
                    }

                    /* Place the unblocked task into the appropriate ready
                     * list. */
                    prvAddTaskToReadyList( pxTCB );
   19af6:	693b      	ldr	r3, [r7, #16]
   19af8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   19afa:	4b33      	ldr	r3, [pc, #204]	@ (19bc8 <xTaskIncrementTick+0x1e0>)
   19afc:	681b      	ldr	r3, [r3, #0]
   19afe:	429a      	cmp	r2, r3
   19b00:	d903      	bls.n	19b0a <xTaskIncrementTick+0x122>
   19b02:	693b      	ldr	r3, [r7, #16]
   19b04:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
   19b06:	4a30      	ldr	r2, [pc, #192]	@ (19bc8 <xTaskIncrementTick+0x1e0>)
   19b08:	6013      	str	r3, [r2, #0]
   19b0a:	693b      	ldr	r3, [r7, #16]
   19b0c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   19b0e:	492f      	ldr	r1, [pc, #188]	@ (19bcc <xTaskIncrementTick+0x1e4>)
   19b10:	4613      	mov	r3, r2
   19b12:	009b      	lsls	r3, r3, #2
   19b14:	4413      	add	r3, r2
   19b16:	009b      	lsls	r3, r3, #2
   19b18:	440b      	add	r3, r1
   19b1a:	3304      	adds	r3, #4
   19b1c:	681b      	ldr	r3, [r3, #0]
   19b1e:	603b      	str	r3, [r7, #0]
   19b20:	693b      	ldr	r3, [r7, #16]
   19b22:	683a      	ldr	r2, [r7, #0]
   19b24:	609a      	str	r2, [r3, #8]
   19b26:	683b      	ldr	r3, [r7, #0]
   19b28:	689a      	ldr	r2, [r3, #8]
   19b2a:	693b      	ldr	r3, [r7, #16]
   19b2c:	60da      	str	r2, [r3, #12]
   19b2e:	683b      	ldr	r3, [r7, #0]
   19b30:	689b      	ldr	r3, [r3, #8]
   19b32:	693a      	ldr	r2, [r7, #16]
   19b34:	3204      	adds	r2, #4
   19b36:	605a      	str	r2, [r3, #4]
   19b38:	693b      	ldr	r3, [r7, #16]
   19b3a:	1d1a      	adds	r2, r3, #4
   19b3c:	683b      	ldr	r3, [r7, #0]
   19b3e:	609a      	str	r2, [r3, #8]
   19b40:	693b      	ldr	r3, [r7, #16]
   19b42:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   19b44:	4613      	mov	r3, r2
   19b46:	009b      	lsls	r3, r3, #2
   19b48:	4413      	add	r3, r2
   19b4a:	009b      	lsls	r3, r3, #2
   19b4c:	4a1f      	ldr	r2, [pc, #124]	@ (19bcc <xTaskIncrementTick+0x1e4>)
   19b4e:	441a      	add	r2, r3
   19b50:	693b      	ldr	r3, [r7, #16]
   19b52:	615a      	str	r2, [r3, #20]
   19b54:	693b      	ldr	r3, [r7, #16]
   19b56:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   19b58:	491c      	ldr	r1, [pc, #112]	@ (19bcc <xTaskIncrementTick+0x1e4>)
   19b5a:	4613      	mov	r3, r2
   19b5c:	009b      	lsls	r3, r3, #2
   19b5e:	4413      	add	r3, r2
   19b60:	009b      	lsls	r3, r3, #2
   19b62:	440b      	add	r3, r1
   19b64:	681b      	ldr	r3, [r3, #0]
   19b66:	1c59      	adds	r1, r3, #1
   19b68:	4818      	ldr	r0, [pc, #96]	@ (19bcc <xTaskIncrementTick+0x1e4>)
   19b6a:	4613      	mov	r3, r2
   19b6c:	009b      	lsls	r3, r3, #2
   19b6e:	4413      	add	r3, r2
   19b70:	009b      	lsls	r3, r3, #2
   19b72:	4403      	add	r3, r0
   19b74:	6019      	str	r1, [r3, #0]
                         * task.
                         * The case of equal priority tasks sharing
                         * processing time (which happens when both
                         * preemption and time slicing are on) is
                         * handled below.*/
                        if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
   19b76:	693b      	ldr	r3, [r7, #16]
   19b78:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   19b7a:	4b15      	ldr	r3, [pc, #84]	@ (19bd0 <xTaskIncrementTick+0x1e8>)
   19b7c:	681b      	ldr	r3, [r3, #0]
   19b7e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
   19b80:	429a      	cmp	r2, r3
   19b82:	f67f af5c 	bls.w	19a3e <xTaskIncrementTick+0x56>
                        {
                            xSwitchRequired = pdTRUE;
   19b86:	2301      	movs	r3, #1
   19b88:	61fb      	str	r3, [r7, #28]
                if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
   19b8a:	e758      	b.n	19a3e <xTaskIncrementTick+0x56>
        }
        #endif /* configUSE_TICK_HOOK */

        #if ( configUSE_PREEMPTION == 1 )
        {
            if( xYieldPending != pdFALSE )
   19b8c:	4b11      	ldr	r3, [pc, #68]	@ (19bd4 <xTaskIncrementTick+0x1ec>)
   19b8e:	681b      	ldr	r3, [r3, #0]
   19b90:	2b00      	cmp	r3, #0
   19b92:	d007      	beq.n	19ba4 <xTaskIncrementTick+0x1bc>
            {
                xSwitchRequired = pdTRUE;
   19b94:	2301      	movs	r3, #1
   19b96:	61fb      	str	r3, [r7, #28]
   19b98:	e004      	b.n	19ba4 <xTaskIncrementTick+0x1bc>
        }
        #endif /* configUSE_PREEMPTION */
    }
    else
    {
        ++xPendedTicks;
   19b9a:	4b0f      	ldr	r3, [pc, #60]	@ (19bd8 <xTaskIncrementTick+0x1f0>)
   19b9c:	681b      	ldr	r3, [r3, #0]
   19b9e:	3301      	adds	r3, #1
   19ba0:	4a0d      	ldr	r2, [pc, #52]	@ (19bd8 <xTaskIncrementTick+0x1f0>)
   19ba2:	6013      	str	r3, [r2, #0]
            vApplicationTickHook();
        }
        #endif
    }

    return xSwitchRequired;
   19ba4:	69fb      	ldr	r3, [r7, #28]
}
   19ba6:	4618      	mov	r0, r3
   19ba8:	3720      	adds	r7, #32
   19baa:	46bd      	mov	sp, r7
   19bac:	bd80      	pop	{r7, pc}
   19bae:	bf00      	nop
   19bb0:	1000355c 	.word	0x1000355c
   19bb4:	10003544 	.word	0x10003544
   19bb8:	10003524 	.word	0x10003524
   19bbc:	10003528 	.word	0x10003528
   19bc0:	10003554 	.word	0x10003554
   19bc4:	10003558 	.word	0x10003558
   19bc8:	10003548 	.word	0x10003548
   19bcc:	100034ac 	.word	0x100034ac
   19bd0:	100034a8 	.word	0x100034a8
   19bd4:	10003550 	.word	0x10003550
   19bd8:	1000354c 	.word	0x1000354c

00019bdc <vTaskSwitchContext>:

#endif /* configUSE_APPLICATION_TASK_TAG */
/*-----------------------------------------------------------*/

void vTaskSwitchContext( void )
{
   19bdc:	b480      	push	{r7}
   19bde:	b083      	sub	sp, #12
   19be0:	af00      	add	r7, sp, #0
    if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
   19be2:	4b21      	ldr	r3, [pc, #132]	@ (19c68 <vTaskSwitchContext+0x8c>)
   19be4:	681b      	ldr	r3, [r3, #0]
   19be6:	2b00      	cmp	r3, #0
   19be8:	d003      	beq.n	19bf2 <vTaskSwitchContext+0x16>
    {
        /* The scheduler is currently suspended - do not allow a context
         * switch. */
        xYieldPending = pdTRUE;
   19bea:	4b20      	ldr	r3, [pc, #128]	@ (19c6c <vTaskSwitchContext+0x90>)
   19bec:	2201      	movs	r2, #1
   19bee:	601a      	str	r2, [r3, #0]
             * Block specific to this task. */
            configSET_TLS_BLOCK( pxCurrentTCB->xTLSBlock );
        }
        #endif
    }
}
   19bf0:	e033      	b.n	19c5a <vTaskSwitchContext+0x7e>
        xYieldPending = pdFALSE;
   19bf2:	4b1e      	ldr	r3, [pc, #120]	@ (19c6c <vTaskSwitchContext+0x90>)
   19bf4:	2200      	movs	r2, #0
   19bf6:	601a      	str	r2, [r3, #0]
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
   19bf8:	4b1d      	ldr	r3, [pc, #116]	@ (19c70 <vTaskSwitchContext+0x94>)
   19bfa:	681b      	ldr	r3, [r3, #0]
   19bfc:	607b      	str	r3, [r7, #4]
   19bfe:	e002      	b.n	19c06 <vTaskSwitchContext+0x2a>
   19c00:	687b      	ldr	r3, [r7, #4]
   19c02:	3b01      	subs	r3, #1
   19c04:	607b      	str	r3, [r7, #4]
   19c06:	491b      	ldr	r1, [pc, #108]	@ (19c74 <vTaskSwitchContext+0x98>)
   19c08:	687a      	ldr	r2, [r7, #4]
   19c0a:	4613      	mov	r3, r2
   19c0c:	009b      	lsls	r3, r3, #2
   19c0e:	4413      	add	r3, r2
   19c10:	009b      	lsls	r3, r3, #2
   19c12:	440b      	add	r3, r1
   19c14:	681b      	ldr	r3, [r3, #0]
   19c16:	2b00      	cmp	r3, #0
   19c18:	d0f2      	beq.n	19c00 <vTaskSwitchContext+0x24>
   19c1a:	687a      	ldr	r2, [r7, #4]
   19c1c:	4613      	mov	r3, r2
   19c1e:	009b      	lsls	r3, r3, #2
   19c20:	4413      	add	r3, r2
   19c22:	009b      	lsls	r3, r3, #2
   19c24:	4a13      	ldr	r2, [pc, #76]	@ (19c74 <vTaskSwitchContext+0x98>)
   19c26:	4413      	add	r3, r2
   19c28:	603b      	str	r3, [r7, #0]
   19c2a:	683b      	ldr	r3, [r7, #0]
   19c2c:	685b      	ldr	r3, [r3, #4]
   19c2e:	685a      	ldr	r2, [r3, #4]
   19c30:	683b      	ldr	r3, [r7, #0]
   19c32:	605a      	str	r2, [r3, #4]
   19c34:	683b      	ldr	r3, [r7, #0]
   19c36:	685a      	ldr	r2, [r3, #4]
   19c38:	683b      	ldr	r3, [r7, #0]
   19c3a:	3308      	adds	r3, #8
   19c3c:	429a      	cmp	r2, r3
   19c3e:	d104      	bne.n	19c4a <vTaskSwitchContext+0x6e>
   19c40:	683b      	ldr	r3, [r7, #0]
   19c42:	685b      	ldr	r3, [r3, #4]
   19c44:	685a      	ldr	r2, [r3, #4]
   19c46:	683b      	ldr	r3, [r7, #0]
   19c48:	605a      	str	r2, [r3, #4]
   19c4a:	683b      	ldr	r3, [r7, #0]
   19c4c:	685b      	ldr	r3, [r3, #4]
   19c4e:	68db      	ldr	r3, [r3, #12]
   19c50:	4a09      	ldr	r2, [pc, #36]	@ (19c78 <vTaskSwitchContext+0x9c>)
   19c52:	6013      	str	r3, [r2, #0]
   19c54:	4a06      	ldr	r2, [pc, #24]	@ (19c70 <vTaskSwitchContext+0x94>)
   19c56:	687b      	ldr	r3, [r7, #4]
   19c58:	6013      	str	r3, [r2, #0]
}
   19c5a:	bf00      	nop
   19c5c:	370c      	adds	r7, #12
   19c5e:	46bd      	mov	sp, r7
   19c60:	f85d 7b04 	ldr.w	r7, [sp], #4
   19c64:	4770      	bx	lr
   19c66:	bf00      	nop
   19c68:	1000355c 	.word	0x1000355c
   19c6c:	10003550 	.word	0x10003550
   19c70:	10003548 	.word	0x10003548
   19c74:	100034ac 	.word	0x100034ac
   19c78:	100034a8 	.word	0x100034a8

00019c7c <xTaskRemoveFromEventList>:

#endif /* configUSE_TIMERS */
/*-----------------------------------------------------------*/

BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
{
   19c7c:	b580      	push	{r7, lr}
   19c7e:	b088      	sub	sp, #32
   19c80:	af00      	add	r7, sp, #0
   19c82:	6078      	str	r0, [r7, #4]
     * get called - the lock count on the queue will get modified instead.  This
     * means exclusive access to the event list is guaranteed here.
     *
     * This function assumes that a check has already been made to ensure that
     * pxEventList is not empty. */
    pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
   19c84:	687b      	ldr	r3, [r7, #4]
   19c86:	68db      	ldr	r3, [r3, #12]
   19c88:	68db      	ldr	r3, [r3, #12]
   19c8a:	61bb      	str	r3, [r7, #24]
    configASSERT( pxUnblockedTCB );
    listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
   19c8c:	69bb      	ldr	r3, [r7, #24]
   19c8e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
   19c90:	617b      	str	r3, [r7, #20]
   19c92:	69bb      	ldr	r3, [r7, #24]
   19c94:	69db      	ldr	r3, [r3, #28]
   19c96:	69ba      	ldr	r2, [r7, #24]
   19c98:	6a12      	ldr	r2, [r2, #32]
   19c9a:	609a      	str	r2, [r3, #8]
   19c9c:	69bb      	ldr	r3, [r7, #24]
   19c9e:	6a1b      	ldr	r3, [r3, #32]
   19ca0:	69ba      	ldr	r2, [r7, #24]
   19ca2:	69d2      	ldr	r2, [r2, #28]
   19ca4:	605a      	str	r2, [r3, #4]
   19ca6:	697b      	ldr	r3, [r7, #20]
   19ca8:	685a      	ldr	r2, [r3, #4]
   19caa:	69bb      	ldr	r3, [r7, #24]
   19cac:	3318      	adds	r3, #24
   19cae:	429a      	cmp	r2, r3
   19cb0:	d103      	bne.n	19cba <xTaskRemoveFromEventList+0x3e>
   19cb2:	69bb      	ldr	r3, [r7, #24]
   19cb4:	6a1a      	ldr	r2, [r3, #32]
   19cb6:	697b      	ldr	r3, [r7, #20]
   19cb8:	605a      	str	r2, [r3, #4]
   19cba:	69bb      	ldr	r3, [r7, #24]
   19cbc:	2200      	movs	r2, #0
   19cbe:	629a      	str	r2, [r3, #40]	@ 0x28
   19cc0:	697b      	ldr	r3, [r7, #20]
   19cc2:	681b      	ldr	r3, [r3, #0]
   19cc4:	1e5a      	subs	r2, r3, #1
   19cc6:	697b      	ldr	r3, [r7, #20]
   19cc8:	601a      	str	r2, [r3, #0]

    if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   19cca:	4b4b      	ldr	r3, [pc, #300]	@ (19df8 <xTaskRemoveFromEventList+0x17c>)
   19ccc:	681b      	ldr	r3, [r3, #0]
   19cce:	2b00      	cmp	r3, #0
   19cd0:	d161      	bne.n	19d96 <xTaskRemoveFromEventList+0x11a>
    {
        listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
   19cd2:	69bb      	ldr	r3, [r7, #24]
   19cd4:	695b      	ldr	r3, [r3, #20]
   19cd6:	60fb      	str	r3, [r7, #12]
   19cd8:	69bb      	ldr	r3, [r7, #24]
   19cda:	689b      	ldr	r3, [r3, #8]
   19cdc:	69ba      	ldr	r2, [r7, #24]
   19cde:	68d2      	ldr	r2, [r2, #12]
   19ce0:	609a      	str	r2, [r3, #8]
   19ce2:	69bb      	ldr	r3, [r7, #24]
   19ce4:	68db      	ldr	r3, [r3, #12]
   19ce6:	69ba      	ldr	r2, [r7, #24]
   19ce8:	6892      	ldr	r2, [r2, #8]
   19cea:	605a      	str	r2, [r3, #4]
   19cec:	68fb      	ldr	r3, [r7, #12]
   19cee:	685a      	ldr	r2, [r3, #4]
   19cf0:	69bb      	ldr	r3, [r7, #24]
   19cf2:	3304      	adds	r3, #4
   19cf4:	429a      	cmp	r2, r3
   19cf6:	d103      	bne.n	19d00 <xTaskRemoveFromEventList+0x84>
   19cf8:	69bb      	ldr	r3, [r7, #24]
   19cfa:	68da      	ldr	r2, [r3, #12]
   19cfc:	68fb      	ldr	r3, [r7, #12]
   19cfe:	605a      	str	r2, [r3, #4]
   19d00:	69bb      	ldr	r3, [r7, #24]
   19d02:	2200      	movs	r2, #0
   19d04:	615a      	str	r2, [r3, #20]
   19d06:	68fb      	ldr	r3, [r7, #12]
   19d08:	681b      	ldr	r3, [r3, #0]
   19d0a:	1e5a      	subs	r2, r3, #1
   19d0c:	68fb      	ldr	r3, [r7, #12]
   19d0e:	601a      	str	r2, [r3, #0]
        prvAddTaskToReadyList( pxUnblockedTCB );
   19d10:	69bb      	ldr	r3, [r7, #24]
   19d12:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   19d14:	4b39      	ldr	r3, [pc, #228]	@ (19dfc <xTaskRemoveFromEventList+0x180>)
   19d16:	681b      	ldr	r3, [r3, #0]
   19d18:	429a      	cmp	r2, r3
   19d1a:	d903      	bls.n	19d24 <xTaskRemoveFromEventList+0xa8>
   19d1c:	69bb      	ldr	r3, [r7, #24]
   19d1e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
   19d20:	4a36      	ldr	r2, [pc, #216]	@ (19dfc <xTaskRemoveFromEventList+0x180>)
   19d22:	6013      	str	r3, [r2, #0]
   19d24:	69bb      	ldr	r3, [r7, #24]
   19d26:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   19d28:	4935      	ldr	r1, [pc, #212]	@ (19e00 <xTaskRemoveFromEventList+0x184>)
   19d2a:	4613      	mov	r3, r2
   19d2c:	009b      	lsls	r3, r3, #2
   19d2e:	4413      	add	r3, r2
   19d30:	009b      	lsls	r3, r3, #2
   19d32:	440b      	add	r3, r1
   19d34:	3304      	adds	r3, #4
   19d36:	681b      	ldr	r3, [r3, #0]
   19d38:	60bb      	str	r3, [r7, #8]
   19d3a:	69bb      	ldr	r3, [r7, #24]
   19d3c:	68ba      	ldr	r2, [r7, #8]
   19d3e:	609a      	str	r2, [r3, #8]
   19d40:	68bb      	ldr	r3, [r7, #8]
   19d42:	689a      	ldr	r2, [r3, #8]
   19d44:	69bb      	ldr	r3, [r7, #24]
   19d46:	60da      	str	r2, [r3, #12]
   19d48:	68bb      	ldr	r3, [r7, #8]
   19d4a:	689b      	ldr	r3, [r3, #8]
   19d4c:	69ba      	ldr	r2, [r7, #24]
   19d4e:	3204      	adds	r2, #4
   19d50:	605a      	str	r2, [r3, #4]
   19d52:	69bb      	ldr	r3, [r7, #24]
   19d54:	1d1a      	adds	r2, r3, #4
   19d56:	68bb      	ldr	r3, [r7, #8]
   19d58:	609a      	str	r2, [r3, #8]
   19d5a:	69bb      	ldr	r3, [r7, #24]
   19d5c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   19d5e:	4613      	mov	r3, r2
   19d60:	009b      	lsls	r3, r3, #2
   19d62:	4413      	add	r3, r2
   19d64:	009b      	lsls	r3, r3, #2
   19d66:	4a26      	ldr	r2, [pc, #152]	@ (19e00 <xTaskRemoveFromEventList+0x184>)
   19d68:	441a      	add	r2, r3
   19d6a:	69bb      	ldr	r3, [r7, #24]
   19d6c:	615a      	str	r2, [r3, #20]
   19d6e:	69bb      	ldr	r3, [r7, #24]
   19d70:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   19d72:	4923      	ldr	r1, [pc, #140]	@ (19e00 <xTaskRemoveFromEventList+0x184>)
   19d74:	4613      	mov	r3, r2
   19d76:	009b      	lsls	r3, r3, #2
   19d78:	4413      	add	r3, r2
   19d7a:	009b      	lsls	r3, r3, #2
   19d7c:	440b      	add	r3, r1
   19d7e:	681b      	ldr	r3, [r3, #0]
   19d80:	1c59      	adds	r1, r3, #1
   19d82:	481f      	ldr	r0, [pc, #124]	@ (19e00 <xTaskRemoveFromEventList+0x184>)
   19d84:	4613      	mov	r3, r2
   19d86:	009b      	lsls	r3, r3, #2
   19d88:	4413      	add	r3, r2
   19d8a:	009b      	lsls	r3, r3, #2
   19d8c:	4403      	add	r3, r0
   19d8e:	6019      	str	r1, [r3, #0]
             * normally left unchanged, because it is automatically reset to a new
             * value when the tick count equals xNextTaskUnblockTime.  However if
             * tickless idling is used it might be more important to enter sleep mode
             * at the earliest possible time - so reset xNextTaskUnblockTime here to
             * ensure it is updated at the earliest possible time. */
            prvResetNextTaskUnblockTime();
   19d90:	f000 f8e0 	bl	19f54 <prvResetNextTaskUnblockTime>
   19d94:	e01b      	b.n	19dce <xTaskRemoveFromEventList+0x152>
    }
    else
    {
        /* The delayed and ready lists cannot be accessed, so hold this task
         * pending until the scheduler is resumed. */
        listINSERT_END( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
   19d96:	4b1b      	ldr	r3, [pc, #108]	@ (19e04 <xTaskRemoveFromEventList+0x188>)
   19d98:	685b      	ldr	r3, [r3, #4]
   19d9a:	613b      	str	r3, [r7, #16]
   19d9c:	69bb      	ldr	r3, [r7, #24]
   19d9e:	693a      	ldr	r2, [r7, #16]
   19da0:	61da      	str	r2, [r3, #28]
   19da2:	693b      	ldr	r3, [r7, #16]
   19da4:	689a      	ldr	r2, [r3, #8]
   19da6:	69bb      	ldr	r3, [r7, #24]
   19da8:	621a      	str	r2, [r3, #32]
   19daa:	693b      	ldr	r3, [r7, #16]
   19dac:	689b      	ldr	r3, [r3, #8]
   19dae:	69ba      	ldr	r2, [r7, #24]
   19db0:	3218      	adds	r2, #24
   19db2:	605a      	str	r2, [r3, #4]
   19db4:	69bb      	ldr	r3, [r7, #24]
   19db6:	f103 0218 	add.w	r2, r3, #24
   19dba:	693b      	ldr	r3, [r7, #16]
   19dbc:	609a      	str	r2, [r3, #8]
   19dbe:	69bb      	ldr	r3, [r7, #24]
   19dc0:	4a10      	ldr	r2, [pc, #64]	@ (19e04 <xTaskRemoveFromEventList+0x188>)
   19dc2:	629a      	str	r2, [r3, #40]	@ 0x28
   19dc4:	4b0f      	ldr	r3, [pc, #60]	@ (19e04 <xTaskRemoveFromEventList+0x188>)
   19dc6:	681b      	ldr	r3, [r3, #0]
   19dc8:	3301      	adds	r3, #1
   19dca:	4a0e      	ldr	r2, [pc, #56]	@ (19e04 <xTaskRemoveFromEventList+0x188>)
   19dcc:	6013      	str	r3, [r2, #0]
    }

    if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
   19dce:	69bb      	ldr	r3, [r7, #24]
   19dd0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   19dd2:	4b0d      	ldr	r3, [pc, #52]	@ (19e08 <xTaskRemoveFromEventList+0x18c>)
   19dd4:	681b      	ldr	r3, [r3, #0]
   19dd6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
   19dd8:	429a      	cmp	r2, r3
   19dda:	d905      	bls.n	19de8 <xTaskRemoveFromEventList+0x16c>
    {
        /* Return true if the task removed from the event list has a higher
         * priority than the calling task.  This allows the calling task to know if
         * it should force a context switch now. */
        xReturn = pdTRUE;
   19ddc:	2301      	movs	r3, #1
   19dde:	61fb      	str	r3, [r7, #28]

        /* Mark that a yield is pending in case the user is not using the
         * "xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
        xYieldPending = pdTRUE;
   19de0:	4b0a      	ldr	r3, [pc, #40]	@ (19e0c <xTaskRemoveFromEventList+0x190>)
   19de2:	2201      	movs	r2, #1
   19de4:	601a      	str	r2, [r3, #0]
   19de6:	e001      	b.n	19dec <xTaskRemoveFromEventList+0x170>
    }
    else
    {
        xReturn = pdFALSE;
   19de8:	2300      	movs	r3, #0
   19dea:	61fb      	str	r3, [r7, #28]
    }

    return xReturn;
   19dec:	69fb      	ldr	r3, [r7, #28]
}
   19dee:	4618      	mov	r0, r3
   19df0:	3720      	adds	r7, #32
   19df2:	46bd      	mov	sp, r7
   19df4:	bd80      	pop	{r7, pc}
   19df6:	bf00      	nop
   19df8:	1000355c 	.word	0x1000355c
   19dfc:	10003548 	.word	0x10003548
   19e00:	100034ac 	.word	0x100034ac
   19e04:	1000352c 	.word	0x1000352c
   19e08:	100034a8 	.word	0x100034a8
   19e0c:	10003550 	.word	0x10003550

00019e10 <vTaskRemoveFromUnorderedEventList>:
/*-----------------------------------------------------------*/

void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem,
                                        const TickType_t xItemValue )
{
   19e10:	b580      	push	{r7, lr}
   19e12:	b086      	sub	sp, #24
   19e14:	af00      	add	r7, sp, #0
   19e16:	6078      	str	r0, [r7, #4]
   19e18:	6039      	str	r1, [r7, #0]
    /* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
     * the event flags implementation. */
    configASSERT( uxSchedulerSuspended != pdFALSE );

    /* Store the new item value in the event list. */
    listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
   19e1a:	683b      	ldr	r3, [r7, #0]
   19e1c:	f043 4200 	orr.w	r2, r3, #2147483648	@ 0x80000000
   19e20:	687b      	ldr	r3, [r7, #4]
   19e22:	601a      	str	r2, [r3, #0]

    /* Remove the event list form the event flag.  Interrupts do not access
     * event flags. */
    pxUnblockedTCB = listGET_LIST_ITEM_OWNER( pxEventListItem ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
   19e24:	687b      	ldr	r3, [r7, #4]
   19e26:	68db      	ldr	r3, [r3, #12]
   19e28:	617b      	str	r3, [r7, #20]
    configASSERT( pxUnblockedTCB );
    listREMOVE_ITEM( pxEventListItem );
   19e2a:	687b      	ldr	r3, [r7, #4]
   19e2c:	691b      	ldr	r3, [r3, #16]
   19e2e:	613b      	str	r3, [r7, #16]
   19e30:	687b      	ldr	r3, [r7, #4]
   19e32:	685b      	ldr	r3, [r3, #4]
   19e34:	687a      	ldr	r2, [r7, #4]
   19e36:	6892      	ldr	r2, [r2, #8]
   19e38:	609a      	str	r2, [r3, #8]
   19e3a:	687b      	ldr	r3, [r7, #4]
   19e3c:	689b      	ldr	r3, [r3, #8]
   19e3e:	687a      	ldr	r2, [r7, #4]
   19e40:	6852      	ldr	r2, [r2, #4]
   19e42:	605a      	str	r2, [r3, #4]
   19e44:	693b      	ldr	r3, [r7, #16]
   19e46:	685b      	ldr	r3, [r3, #4]
   19e48:	687a      	ldr	r2, [r7, #4]
   19e4a:	429a      	cmp	r2, r3
   19e4c:	d103      	bne.n	19e56 <vTaskRemoveFromUnorderedEventList+0x46>
   19e4e:	687b      	ldr	r3, [r7, #4]
   19e50:	689a      	ldr	r2, [r3, #8]
   19e52:	693b      	ldr	r3, [r7, #16]
   19e54:	605a      	str	r2, [r3, #4]
   19e56:	687b      	ldr	r3, [r7, #4]
   19e58:	2200      	movs	r2, #0
   19e5a:	611a      	str	r2, [r3, #16]
   19e5c:	693b      	ldr	r3, [r7, #16]
   19e5e:	681b      	ldr	r3, [r3, #0]
   19e60:	1e5a      	subs	r2, r3, #1
   19e62:	693b      	ldr	r3, [r7, #16]
   19e64:	601a      	str	r2, [r3, #0]
         * normally left unchanged, because it is automatically reset to a new
         * value when the tick count equals xNextTaskUnblockTime.  However if
         * tickless idling is used it might be more important to enter sleep mode
         * at the earliest possible time - so reset xNextTaskUnblockTime here to
         * ensure it is updated at the earliest possible time. */
        prvResetNextTaskUnblockTime();
   19e66:	f000 f875 	bl	19f54 <prvResetNextTaskUnblockTime>
    #endif

    /* Remove the task from the delayed list and add it to the ready list.  The
     * scheduler is suspended so interrupts will not be accessing the ready
     * lists. */
    listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
   19e6a:	697b      	ldr	r3, [r7, #20]
   19e6c:	695b      	ldr	r3, [r3, #20]
   19e6e:	60fb      	str	r3, [r7, #12]
   19e70:	697b      	ldr	r3, [r7, #20]
   19e72:	689b      	ldr	r3, [r3, #8]
   19e74:	697a      	ldr	r2, [r7, #20]
   19e76:	68d2      	ldr	r2, [r2, #12]
   19e78:	609a      	str	r2, [r3, #8]
   19e7a:	697b      	ldr	r3, [r7, #20]
   19e7c:	68db      	ldr	r3, [r3, #12]
   19e7e:	697a      	ldr	r2, [r7, #20]
   19e80:	6892      	ldr	r2, [r2, #8]
   19e82:	605a      	str	r2, [r3, #4]
   19e84:	68fb      	ldr	r3, [r7, #12]
   19e86:	685a      	ldr	r2, [r3, #4]
   19e88:	697b      	ldr	r3, [r7, #20]
   19e8a:	3304      	adds	r3, #4
   19e8c:	429a      	cmp	r2, r3
   19e8e:	d103      	bne.n	19e98 <vTaskRemoveFromUnorderedEventList+0x88>
   19e90:	697b      	ldr	r3, [r7, #20]
   19e92:	68da      	ldr	r2, [r3, #12]
   19e94:	68fb      	ldr	r3, [r7, #12]
   19e96:	605a      	str	r2, [r3, #4]
   19e98:	697b      	ldr	r3, [r7, #20]
   19e9a:	2200      	movs	r2, #0
   19e9c:	615a      	str	r2, [r3, #20]
   19e9e:	68fb      	ldr	r3, [r7, #12]
   19ea0:	681b      	ldr	r3, [r3, #0]
   19ea2:	1e5a      	subs	r2, r3, #1
   19ea4:	68fb      	ldr	r3, [r7, #12]
   19ea6:	601a      	str	r2, [r3, #0]
    prvAddTaskToReadyList( pxUnblockedTCB );
   19ea8:	697b      	ldr	r3, [r7, #20]
   19eaa:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   19eac:	4b25      	ldr	r3, [pc, #148]	@ (19f44 <vTaskRemoveFromUnorderedEventList+0x134>)
   19eae:	681b      	ldr	r3, [r3, #0]
   19eb0:	429a      	cmp	r2, r3
   19eb2:	d903      	bls.n	19ebc <vTaskRemoveFromUnorderedEventList+0xac>
   19eb4:	697b      	ldr	r3, [r7, #20]
   19eb6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
   19eb8:	4a22      	ldr	r2, [pc, #136]	@ (19f44 <vTaskRemoveFromUnorderedEventList+0x134>)
   19eba:	6013      	str	r3, [r2, #0]
   19ebc:	697b      	ldr	r3, [r7, #20]
   19ebe:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   19ec0:	4921      	ldr	r1, [pc, #132]	@ (19f48 <vTaskRemoveFromUnorderedEventList+0x138>)
   19ec2:	4613      	mov	r3, r2
   19ec4:	009b      	lsls	r3, r3, #2
   19ec6:	4413      	add	r3, r2
   19ec8:	009b      	lsls	r3, r3, #2
   19eca:	440b      	add	r3, r1
   19ecc:	3304      	adds	r3, #4
   19ece:	681b      	ldr	r3, [r3, #0]
   19ed0:	60bb      	str	r3, [r7, #8]
   19ed2:	697b      	ldr	r3, [r7, #20]
   19ed4:	68ba      	ldr	r2, [r7, #8]
   19ed6:	609a      	str	r2, [r3, #8]
   19ed8:	68bb      	ldr	r3, [r7, #8]
   19eda:	689a      	ldr	r2, [r3, #8]
   19edc:	697b      	ldr	r3, [r7, #20]
   19ede:	60da      	str	r2, [r3, #12]
   19ee0:	68bb      	ldr	r3, [r7, #8]
   19ee2:	689b      	ldr	r3, [r3, #8]
   19ee4:	697a      	ldr	r2, [r7, #20]
   19ee6:	3204      	adds	r2, #4
   19ee8:	605a      	str	r2, [r3, #4]
   19eea:	697b      	ldr	r3, [r7, #20]
   19eec:	1d1a      	adds	r2, r3, #4
   19eee:	68bb      	ldr	r3, [r7, #8]
   19ef0:	609a      	str	r2, [r3, #8]
   19ef2:	697b      	ldr	r3, [r7, #20]
   19ef4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   19ef6:	4613      	mov	r3, r2
   19ef8:	009b      	lsls	r3, r3, #2
   19efa:	4413      	add	r3, r2
   19efc:	009b      	lsls	r3, r3, #2
   19efe:	4a12      	ldr	r2, [pc, #72]	@ (19f48 <vTaskRemoveFromUnorderedEventList+0x138>)
   19f00:	441a      	add	r2, r3
   19f02:	697b      	ldr	r3, [r7, #20]
   19f04:	615a      	str	r2, [r3, #20]
   19f06:	697b      	ldr	r3, [r7, #20]
   19f08:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   19f0a:	490f      	ldr	r1, [pc, #60]	@ (19f48 <vTaskRemoveFromUnorderedEventList+0x138>)
   19f0c:	4613      	mov	r3, r2
   19f0e:	009b      	lsls	r3, r3, #2
   19f10:	4413      	add	r3, r2
   19f12:	009b      	lsls	r3, r3, #2
   19f14:	440b      	add	r3, r1
   19f16:	681b      	ldr	r3, [r3, #0]
   19f18:	1c59      	adds	r1, r3, #1
   19f1a:	480b      	ldr	r0, [pc, #44]	@ (19f48 <vTaskRemoveFromUnorderedEventList+0x138>)
   19f1c:	4613      	mov	r3, r2
   19f1e:	009b      	lsls	r3, r3, #2
   19f20:	4413      	add	r3, r2
   19f22:	009b      	lsls	r3, r3, #2
   19f24:	4403      	add	r3, r0
   19f26:	6019      	str	r1, [r3, #0]

    if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
   19f28:	697b      	ldr	r3, [r7, #20]
   19f2a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   19f2c:	4b07      	ldr	r3, [pc, #28]	@ (19f4c <vTaskRemoveFromUnorderedEventList+0x13c>)
   19f2e:	681b      	ldr	r3, [r3, #0]
   19f30:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
   19f32:	429a      	cmp	r2, r3
   19f34:	d902      	bls.n	19f3c <vTaskRemoveFromUnorderedEventList+0x12c>
    {
        /* The unblocked task has a priority above that of the calling task, so
         * a context switch is required.  This function is called with the
         * scheduler suspended so xYieldPending is set so the context switch
         * occurs immediately that the scheduler is resumed (unsuspended). */
        xYieldPending = pdTRUE;
   19f36:	4b06      	ldr	r3, [pc, #24]	@ (19f50 <vTaskRemoveFromUnorderedEventList+0x140>)
   19f38:	2201      	movs	r2, #1
   19f3a:	601a      	str	r2, [r3, #0]
    }
}
   19f3c:	bf00      	nop
   19f3e:	3718      	adds	r7, #24
   19f40:	46bd      	mov	sp, r7
   19f42:	bd80      	pop	{r7, pc}
   19f44:	10003548 	.word	0x10003548
   19f48:	100034ac 	.word	0x100034ac
   19f4c:	100034a8 	.word	0x100034a8
   19f50:	10003550 	.word	0x10003550

00019f54 <prvResetNextTaskUnblockTime>:

#endif /* INCLUDE_vTaskDelete */
/*-----------------------------------------------------------*/

static void prvResetNextTaskUnblockTime( void )
{
   19f54:	b480      	push	{r7}
   19f56:	af00      	add	r7, sp, #0
    if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
   19f58:	4b0a      	ldr	r3, [pc, #40]	@ (19f84 <prvResetNextTaskUnblockTime+0x30>)
   19f5a:	681b      	ldr	r3, [r3, #0]
   19f5c:	681b      	ldr	r3, [r3, #0]
   19f5e:	2b00      	cmp	r3, #0
   19f60:	d104      	bne.n	19f6c <prvResetNextTaskUnblockTime+0x18>
    {
        /* The new current delayed list is empty.  Set xNextTaskUnblockTime to
         * the maximum possible value so it is  extremely unlikely that the
         * if( xTickCount >= xNextTaskUnblockTime ) test will pass until
         * there is an item in the delayed list. */
        xNextTaskUnblockTime = portMAX_DELAY;
   19f62:	4b09      	ldr	r3, [pc, #36]	@ (19f88 <prvResetNextTaskUnblockTime+0x34>)
   19f64:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
   19f68:	601a      	str	r2, [r3, #0]
         * the item at the head of the delayed list.  This is the time at
         * which the task at the head of the delayed list should be removed
         * from the Blocked state. */
        xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
    }
}
   19f6a:	e005      	b.n	19f78 <prvResetNextTaskUnblockTime+0x24>
        xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
   19f6c:	4b05      	ldr	r3, [pc, #20]	@ (19f84 <prvResetNextTaskUnblockTime+0x30>)
   19f6e:	681b      	ldr	r3, [r3, #0]
   19f70:	68db      	ldr	r3, [r3, #12]
   19f72:	681b      	ldr	r3, [r3, #0]
   19f74:	4a04      	ldr	r2, [pc, #16]	@ (19f88 <prvResetNextTaskUnblockTime+0x34>)
   19f76:	6013      	str	r3, [r2, #0]
}
   19f78:	bf00      	nop
   19f7a:	46bd      	mov	sp, r7
   19f7c:	f85d 7b04 	ldr.w	r7, [sp], #4
   19f80:	4770      	bx	lr
   19f82:	bf00      	nop
   19f84:	10003524 	.word	0x10003524
   19f88:	10003558 	.word	0x10003558

00019f8c <xTaskGenericNotifyFromISR>:
                                          UBaseType_t uxIndexToNotify,
                                          uint32_t ulValue,
                                          eNotifyAction eAction,
                                          uint32_t * pulPreviousNotificationValue,
                                          BaseType_t * pxHigherPriorityTaskWoken )
    {
   19f8c:	b480      	push	{r7}
   19f8e:	b08f      	sub	sp, #60	@ 0x3c
   19f90:	af00      	add	r7, sp, #0
   19f92:	60f8      	str	r0, [r7, #12]
   19f94:	60b9      	str	r1, [r7, #8]
   19f96:	607a      	str	r2, [r7, #4]
   19f98:	70fb      	strb	r3, [r7, #3]
        TCB_t * pxTCB;
        uint8_t ucOriginalNotifyState;
        BaseType_t xReturn = pdPASS;
   19f9a:	2301      	movs	r3, #1
   19f9c:	637b      	str	r3, [r7, #52]	@ 0x34
         * simple as possible.  More information (albeit Cortex-M specific) is
         * provided on the following link:
         * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
        portASSERT_IF_INTERRUPT_PRIORITY_INVALID();

        pxTCB = xTaskToNotify;
   19f9e:	68fb      	ldr	r3, [r7, #12]
   19fa0:	633b      	str	r3, [r7, #48]	@ 0x30
	__asm volatile
   19fa2:	f3ef 8211 	mrs	r2, BASEPRI
   19fa6:	f04f 0360 	mov.w	r3, #96	@ 0x60
   19faa:	f383 8811 	msr	BASEPRI, r3
   19fae:	f3bf 8f6f 	isb	sy
   19fb2:	f3bf 8f4f 	dsb	sy
   19fb6:	61ba      	str	r2, [r7, #24]
   19fb8:	617b      	str	r3, [r7, #20]
	return ulOriginalBASEPRI;
   19fba:	69bb      	ldr	r3, [r7, #24]

        uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
   19fbc:	62fb      	str	r3, [r7, #44]	@ 0x2c
        {
            if( pulPreviousNotificationValue != NULL )
   19fbe:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
   19fc0:	2b00      	cmp	r3, #0
   19fc2:	d007      	beq.n	19fd4 <xTaskGenericNotifyFromISR+0x48>
            {
                *pulPreviousNotificationValue = pxTCB->ulNotifiedValue[ uxIndexToNotify ];
   19fc4:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
   19fc6:	68bb      	ldr	r3, [r7, #8]
   19fc8:	3310      	adds	r3, #16
   19fca:	009b      	lsls	r3, r3, #2
   19fcc:	4413      	add	r3, r2
   19fce:	685a      	ldr	r2, [r3, #4]
   19fd0:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
   19fd2:	601a      	str	r2, [r3, #0]
            }

            ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
   19fd4:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
   19fd6:	68bb      	ldr	r3, [r7, #8]
   19fd8:	4413      	add	r3, r2
   19fda:	3348      	adds	r3, #72	@ 0x48
   19fdc:	781b      	ldrb	r3, [r3, #0]
   19fde:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
            pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
   19fe2:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
   19fe4:	68bb      	ldr	r3, [r7, #8]
   19fe6:	4413      	add	r3, r2
   19fe8:	3348      	adds	r3, #72	@ 0x48
   19fea:	2202      	movs	r2, #2
   19fec:	701a      	strb	r2, [r3, #0]

            switch( eAction )
   19fee:	78fb      	ldrb	r3, [r7, #3]
   19ff0:	2b04      	cmp	r3, #4
   19ff2:	d841      	bhi.n	1a078 <xTaskGenericNotifyFromISR+0xec>
   19ff4:	a201      	add	r2, pc, #4	@ (adr r2, 19ffc <xTaskGenericNotifyFromISR+0x70>)
   19ff6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   19ffa:	bf00      	nop
   19ffc:	0001a079 	.word	0x0001a079
   1a000:	0001a011 	.word	0x0001a011
   1a004:	0001a02f 	.word	0x0001a02f
   1a008:	0001a04b 	.word	0x0001a04b
   1a00c:	0001a05b 	.word	0x0001a05b
            {
                case eSetBits:
                    pxTCB->ulNotifiedValue[ uxIndexToNotify ] |= ulValue;
   1a010:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
   1a012:	68bb      	ldr	r3, [r7, #8]
   1a014:	3310      	adds	r3, #16
   1a016:	009b      	lsls	r3, r3, #2
   1a018:	4413      	add	r3, r2
   1a01a:	685a      	ldr	r2, [r3, #4]
   1a01c:	687b      	ldr	r3, [r7, #4]
   1a01e:	431a      	orrs	r2, r3
   1a020:	6b39      	ldr	r1, [r7, #48]	@ 0x30
   1a022:	68bb      	ldr	r3, [r7, #8]
   1a024:	3310      	adds	r3, #16
   1a026:	009b      	lsls	r3, r3, #2
   1a028:	440b      	add	r3, r1
   1a02a:	605a      	str	r2, [r3, #4]
                    break;
   1a02c:	e025      	b.n	1a07a <xTaskGenericNotifyFromISR+0xee>

                case eIncrement:
                    ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
   1a02e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
   1a030:	68bb      	ldr	r3, [r7, #8]
   1a032:	3310      	adds	r3, #16
   1a034:	009b      	lsls	r3, r3, #2
   1a036:	4413      	add	r3, r2
   1a038:	685b      	ldr	r3, [r3, #4]
   1a03a:	1c5a      	adds	r2, r3, #1
   1a03c:	6b39      	ldr	r1, [r7, #48]	@ 0x30
   1a03e:	68bb      	ldr	r3, [r7, #8]
   1a040:	3310      	adds	r3, #16
   1a042:	009b      	lsls	r3, r3, #2
   1a044:	440b      	add	r3, r1
   1a046:	605a      	str	r2, [r3, #4]
                    break;
   1a048:	e017      	b.n	1a07a <xTaskGenericNotifyFromISR+0xee>

                case eSetValueWithOverwrite:
                    pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
   1a04a:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
   1a04c:	68bb      	ldr	r3, [r7, #8]
   1a04e:	3310      	adds	r3, #16
   1a050:	009b      	lsls	r3, r3, #2
   1a052:	4413      	add	r3, r2
   1a054:	687a      	ldr	r2, [r7, #4]
   1a056:	605a      	str	r2, [r3, #4]
                    break;
   1a058:	e00f      	b.n	1a07a <xTaskGenericNotifyFromISR+0xee>

                case eSetValueWithoutOverwrite:

                    if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
   1a05a:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
   1a05e:	2b02      	cmp	r3, #2
   1a060:	d007      	beq.n	1a072 <xTaskGenericNotifyFromISR+0xe6>
                    {
                        pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
   1a062:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
   1a064:	68bb      	ldr	r3, [r7, #8]
   1a066:	3310      	adds	r3, #16
   1a068:	009b      	lsls	r3, r3, #2
   1a06a:	4413      	add	r3, r2
   1a06c:	687a      	ldr	r2, [r7, #4]
   1a06e:	605a      	str	r2, [r3, #4]
                    {
                        /* The value could not be written to the task. */
                        xReturn = pdFAIL;
                    }

                    break;
   1a070:	e003      	b.n	1a07a <xTaskGenericNotifyFromISR+0xee>
                        xReturn = pdFAIL;
   1a072:	2300      	movs	r3, #0
   1a074:	637b      	str	r3, [r7, #52]	@ 0x34
                    break;
   1a076:	e000      	b.n	1a07a <xTaskGenericNotifyFromISR+0xee>

                    /* Should not get here if all enums are handled.
                     * Artificially force an assert by testing a value the
                     * compiler can't assume is const. */
                    configASSERT( xTickCount == ( TickType_t ) 0 );
                    break;
   1a078:	bf00      	nop

            traceTASK_NOTIFY_FROM_ISR( uxIndexToNotify );

            /* If the task is in the blocked state specifically to wait for a
             * notification then unblock it now. */
            if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
   1a07a:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
   1a07e:	2b01      	cmp	r3, #1
   1a080:	f040 8090 	bne.w	1a1a4 <xTaskGenericNotifyFromISR+0x218>
            {
                /* The task should not have been on an event list. */
                configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );

                if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   1a084:	4b4e      	ldr	r3, [pc, #312]	@ (1a1c0 <xTaskGenericNotifyFromISR+0x234>)
   1a086:	681b      	ldr	r3, [r3, #0]
   1a088:	2b00      	cmp	r3, #0
   1a08a:	d15f      	bne.n	1a14c <xTaskGenericNotifyFromISR+0x1c0>
                {
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
   1a08c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   1a08e:	695b      	ldr	r3, [r3, #20]
   1a090:	623b      	str	r3, [r7, #32]
   1a092:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   1a094:	689b      	ldr	r3, [r3, #8]
   1a096:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
   1a098:	68d2      	ldr	r2, [r2, #12]
   1a09a:	609a      	str	r2, [r3, #8]
   1a09c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   1a09e:	68db      	ldr	r3, [r3, #12]
   1a0a0:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
   1a0a2:	6892      	ldr	r2, [r2, #8]
   1a0a4:	605a      	str	r2, [r3, #4]
   1a0a6:	6a3b      	ldr	r3, [r7, #32]
   1a0a8:	685a      	ldr	r2, [r3, #4]
   1a0aa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   1a0ac:	3304      	adds	r3, #4
   1a0ae:	429a      	cmp	r2, r3
   1a0b0:	d103      	bne.n	1a0ba <xTaskGenericNotifyFromISR+0x12e>
   1a0b2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   1a0b4:	68da      	ldr	r2, [r3, #12]
   1a0b6:	6a3b      	ldr	r3, [r7, #32]
   1a0b8:	605a      	str	r2, [r3, #4]
   1a0ba:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   1a0bc:	2200      	movs	r2, #0
   1a0be:	615a      	str	r2, [r3, #20]
   1a0c0:	6a3b      	ldr	r3, [r7, #32]
   1a0c2:	681b      	ldr	r3, [r3, #0]
   1a0c4:	1e5a      	subs	r2, r3, #1
   1a0c6:	6a3b      	ldr	r3, [r7, #32]
   1a0c8:	601a      	str	r2, [r3, #0]
                    prvAddTaskToReadyList( pxTCB );
   1a0ca:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   1a0cc:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   1a0ce:	4b3d      	ldr	r3, [pc, #244]	@ (1a1c4 <xTaskGenericNotifyFromISR+0x238>)
   1a0d0:	681b      	ldr	r3, [r3, #0]
   1a0d2:	429a      	cmp	r2, r3
   1a0d4:	d903      	bls.n	1a0de <xTaskGenericNotifyFromISR+0x152>
   1a0d6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   1a0d8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
   1a0da:	4a3a      	ldr	r2, [pc, #232]	@ (1a1c4 <xTaskGenericNotifyFromISR+0x238>)
   1a0dc:	6013      	str	r3, [r2, #0]
   1a0de:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   1a0e0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   1a0e2:	4939      	ldr	r1, [pc, #228]	@ (1a1c8 <xTaskGenericNotifyFromISR+0x23c>)
   1a0e4:	4613      	mov	r3, r2
   1a0e6:	009b      	lsls	r3, r3, #2
   1a0e8:	4413      	add	r3, r2
   1a0ea:	009b      	lsls	r3, r3, #2
   1a0ec:	440b      	add	r3, r1
   1a0ee:	3304      	adds	r3, #4
   1a0f0:	681b      	ldr	r3, [r3, #0]
   1a0f2:	61fb      	str	r3, [r7, #28]
   1a0f4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   1a0f6:	69fa      	ldr	r2, [r7, #28]
   1a0f8:	609a      	str	r2, [r3, #8]
   1a0fa:	69fb      	ldr	r3, [r7, #28]
   1a0fc:	689a      	ldr	r2, [r3, #8]
   1a0fe:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   1a100:	60da      	str	r2, [r3, #12]
   1a102:	69fb      	ldr	r3, [r7, #28]
   1a104:	689b      	ldr	r3, [r3, #8]
   1a106:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
   1a108:	3204      	adds	r2, #4
   1a10a:	605a      	str	r2, [r3, #4]
   1a10c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   1a10e:	1d1a      	adds	r2, r3, #4
   1a110:	69fb      	ldr	r3, [r7, #28]
   1a112:	609a      	str	r2, [r3, #8]
   1a114:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   1a116:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   1a118:	4613      	mov	r3, r2
   1a11a:	009b      	lsls	r3, r3, #2
   1a11c:	4413      	add	r3, r2
   1a11e:	009b      	lsls	r3, r3, #2
   1a120:	4a29      	ldr	r2, [pc, #164]	@ (1a1c8 <xTaskGenericNotifyFromISR+0x23c>)
   1a122:	441a      	add	r2, r3
   1a124:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   1a126:	615a      	str	r2, [r3, #20]
   1a128:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   1a12a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   1a12c:	4926      	ldr	r1, [pc, #152]	@ (1a1c8 <xTaskGenericNotifyFromISR+0x23c>)
   1a12e:	4613      	mov	r3, r2
   1a130:	009b      	lsls	r3, r3, #2
   1a132:	4413      	add	r3, r2
   1a134:	009b      	lsls	r3, r3, #2
   1a136:	440b      	add	r3, r1
   1a138:	681b      	ldr	r3, [r3, #0]
   1a13a:	1c59      	adds	r1, r3, #1
   1a13c:	4822      	ldr	r0, [pc, #136]	@ (1a1c8 <xTaskGenericNotifyFromISR+0x23c>)
   1a13e:	4613      	mov	r3, r2
   1a140:	009b      	lsls	r3, r3, #2
   1a142:	4413      	add	r3, r2
   1a144:	009b      	lsls	r3, r3, #2
   1a146:	4403      	add	r3, r0
   1a148:	6019      	str	r1, [r3, #0]
   1a14a:	e01b      	b.n	1a184 <xTaskGenericNotifyFromISR+0x1f8>
                }
                else
                {
                    /* The delayed and ready lists cannot be accessed, so hold
                     * this task pending until the scheduler is resumed. */
                    listINSERT_END( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
   1a14c:	4b1f      	ldr	r3, [pc, #124]	@ (1a1cc <xTaskGenericNotifyFromISR+0x240>)
   1a14e:	685b      	ldr	r3, [r3, #4]
   1a150:	627b      	str	r3, [r7, #36]	@ 0x24
   1a152:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   1a154:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
   1a156:	61da      	str	r2, [r3, #28]
   1a158:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
   1a15a:	689a      	ldr	r2, [r3, #8]
   1a15c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   1a15e:	621a      	str	r2, [r3, #32]
   1a160:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
   1a162:	689b      	ldr	r3, [r3, #8]
   1a164:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
   1a166:	3218      	adds	r2, #24
   1a168:	605a      	str	r2, [r3, #4]
   1a16a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   1a16c:	f103 0218 	add.w	r2, r3, #24
   1a170:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
   1a172:	609a      	str	r2, [r3, #8]
   1a174:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   1a176:	4a15      	ldr	r2, [pc, #84]	@ (1a1cc <xTaskGenericNotifyFromISR+0x240>)
   1a178:	629a      	str	r2, [r3, #40]	@ 0x28
   1a17a:	4b14      	ldr	r3, [pc, #80]	@ (1a1cc <xTaskGenericNotifyFromISR+0x240>)
   1a17c:	681b      	ldr	r3, [r3, #0]
   1a17e:	3301      	adds	r3, #1
   1a180:	4a12      	ldr	r2, [pc, #72]	@ (1a1cc <xTaskGenericNotifyFromISR+0x240>)
   1a182:	6013      	str	r3, [r2, #0]
                }

                if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
   1a184:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
   1a186:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   1a188:	4b11      	ldr	r3, [pc, #68]	@ (1a1d0 <xTaskGenericNotifyFromISR+0x244>)
   1a18a:	681b      	ldr	r3, [r3, #0]
   1a18c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
   1a18e:	429a      	cmp	r2, r3
   1a190:	d908      	bls.n	1a1a4 <xTaskGenericNotifyFromISR+0x218>
                {
                    /* The notified task has a priority above the currently
                     * executing task so a yield is required. */
                    if( pxHigherPriorityTaskWoken != NULL )
   1a192:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
   1a194:	2b00      	cmp	r3, #0
   1a196:	d002      	beq.n	1a19e <xTaskGenericNotifyFromISR+0x212>
                    {
                        *pxHigherPriorityTaskWoken = pdTRUE;
   1a198:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
   1a19a:	2201      	movs	r2, #1
   1a19c:	601a      	str	r2, [r3, #0]
                    }

                    /* Mark that a yield is pending in case the user is not
                     * using the "xHigherPriorityTaskWoken" parameter to an ISR
                     * safe FreeRTOS function. */
                    xYieldPending = pdTRUE;
   1a19e:	4b0d      	ldr	r3, [pc, #52]	@ (1a1d4 <xTaskGenericNotifyFromISR+0x248>)
   1a1a0:	2201      	movs	r2, #1
   1a1a2:	601a      	str	r2, [r3, #0]
   1a1a4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
   1a1a6:	613b      	str	r3, [r7, #16]
	__asm volatile
   1a1a8:	693b      	ldr	r3, [r7, #16]
   1a1aa:	f383 8811 	msr	BASEPRI, r3
}
   1a1ae:	bf00      	nop
                }
            }
        }
        portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );

        return xReturn;
   1a1b0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
    }
   1a1b2:	4618      	mov	r0, r3
   1a1b4:	373c      	adds	r7, #60	@ 0x3c
   1a1b6:	46bd      	mov	sp, r7
   1a1b8:	f85d 7b04 	ldr.w	r7, [sp], #4
   1a1bc:	4770      	bx	lr
   1a1be:	bf00      	nop
   1a1c0:	1000355c 	.word	0x1000355c
   1a1c4:	10003548 	.word	0x10003548
   1a1c8:	100034ac 	.word	0x100034ac
   1a1cc:	1000352c 	.word	0x1000352c
   1a1d0:	100034a8 	.word	0x100034a8
   1a1d4:	10003550 	.word	0x10003550

0001a1d8 <xTimerPendFunctionCallFromISR>:

        BaseType_t xTimerPendFunctionCallFromISR( PendedFunction_t xFunctionToPend,
                                                  void * pvParameter1,
                                                  uint32_t ulParameter2,
                                                  BaseType_t * pxHigherPriorityTaskWoken )
        {
   1a1d8:	b580      	push	{r7, lr}
   1a1da:	b08a      	sub	sp, #40	@ 0x28
   1a1dc:	af00      	add	r7, sp, #0
   1a1de:	60f8      	str	r0, [r7, #12]
   1a1e0:	60b9      	str	r1, [r7, #8]
   1a1e2:	607a      	str	r2, [r7, #4]
   1a1e4:	603b      	str	r3, [r7, #0]
            DaemonTaskMessage_t xMessage;
            BaseType_t xReturn;

            /* Complete the message with the function parameters and post it to the
             * daemon task. */
            xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR;
   1a1e6:	f06f 0301 	mvn.w	r3, #1
   1a1ea:	617b      	str	r3, [r7, #20]
            xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
   1a1ec:	68fb      	ldr	r3, [r7, #12]
   1a1ee:	61bb      	str	r3, [r7, #24]
            xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
   1a1f0:	68bb      	ldr	r3, [r7, #8]
   1a1f2:	61fb      	str	r3, [r7, #28]
            xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
   1a1f4:	687b      	ldr	r3, [r7, #4]
   1a1f6:	623b      	str	r3, [r7, #32]

            xReturn = xQueueSendFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
   1a1f8:	4b06      	ldr	r3, [pc, #24]	@ (1a214 <xTimerPendFunctionCallFromISR+0x3c>)
   1a1fa:	6818      	ldr	r0, [r3, #0]
   1a1fc:	f107 0114 	add.w	r1, r7, #20
   1a200:	2300      	movs	r3, #0
   1a202:	683a      	ldr	r2, [r7, #0]
   1a204:	f7ff f9e6 	bl	195d4 <xQueueGenericSendFromISR>
   1a208:	6278      	str	r0, [r7, #36]	@ 0x24

            tracePEND_FUNC_CALL_FROM_ISR( xFunctionToPend, pvParameter1, ulParameter2, xReturn );

            return xReturn;
   1a20a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
        }
   1a20c:	4618      	mov	r0, r3
   1a20e:	3728      	adds	r7, #40	@ 0x28
   1a210:	46bd      	mov	sp, r7
   1a212:	bd80      	pop	{r7, pc}
   1a214:	10003560 	.word	0x10003560

0001a218 <WsfAssert>:
 *  \param  pFile   Name of file originating assert.
 *  \param  line    Line number of assert statement.
 */
/*************************************************************************************************/
void WsfAssert(const char *pFile, uint16_t line)
{
   1a218:	b480      	push	{r7}
   1a21a:	b085      	sub	sp, #20
   1a21c:	af00      	add	r7, sp, #0
   1a21e:	6078      	str	r0, [r7, #4]
   1a220:	460b      	mov	r3, r1
   1a222:	807b      	strh	r3, [r7, #2]
  volatile uint8_t escape=0;
   1a224:	2300      	movs	r3, #0
   1a226:	73fb      	strb	r3, [r7, #15]
  {
    /*
     *  However, you can exit with a debugger by setting variable 'escape'.
     *  Handy to see where the assert happened if you cannot view the call stack.
    */
    if (escape)
   1a228:	7bfb      	ldrb	r3, [r7, #15]
   1a22a:	b2db      	uxtb	r3, r3
   1a22c:	2b00      	cmp	r3, #0
   1a22e:	d100      	bne.n	1a232 <WsfAssert+0x1a>
   1a230:	e7fa      	b.n	1a228 <WsfAssert+0x10>
    {
      break;
   1a232:	bf00      	nop
    }
  }
}
   1a234:	bf00      	nop
   1a236:	3714      	adds	r7, #20
   1a238:	46bd      	mov	sp, r7
   1a23a:	f85d 7b04 	ldr.w	r7, [sp], #4
   1a23e:	4770      	bx	lr

0001a240 <WsfBufAlloc>:
 *
 *  \return Pointer to allocated buffer or NULL if allocation fails.
 */
/*************************************************************************************************/
void *WsfBufAlloc(uint16_t len)
{
   1a240:	b580      	push	{r7, lr}
   1a242:	b086      	sub	sp, #24
   1a244:	af00      	add	r7, sp, #0
   1a246:	4603      	mov	r3, r0
   1a248:	80fb      	strh	r3, [r7, #6]

  WSF_CS_INIT(cs);

  WSF_ASSERT(len > 0);

  pPool = (wsfBufPool_t *) wsfBufMem;
   1a24a:	4b1a      	ldr	r3, [pc, #104]	@ (1a2b4 <WsfBufAlloc+0x74>)
   1a24c:	681b      	ldr	r3, [r3, #0]
   1a24e:	617b      	str	r3, [r7, #20]

  for (i = wsfBufNumPools; i > 0; i--, pPool++)
   1a250:	4b19      	ldr	r3, [pc, #100]	@ (1a2b8 <WsfBufAlloc+0x78>)
   1a252:	781b      	ldrb	r3, [r3, #0]
   1a254:	74fb      	strb	r3, [r7, #19]
   1a256:	e020      	b.n	1a29a <WsfBufAlloc+0x5a>
  {
    /* if buffer is big enough */
    if (len <= pPool->desc.len)
   1a258:	697b      	ldr	r3, [r7, #20]
   1a25a:	881b      	ldrh	r3, [r3, #0]
   1a25c:	88fa      	ldrh	r2, [r7, #6]
   1a25e:	429a      	cmp	r2, r3
   1a260:	d815      	bhi.n	1a28e <WsfBufAlloc+0x4e>
    {
      /* enter critical section */
      WSF_CS_ENTER(cs);
   1a262:	f000 f871 	bl	1a348 <WsfCsEnter>

      /* if buffers available */
      if (pPool->pFree != NULL)
   1a266:	697b      	ldr	r3, [r7, #20]
   1a268:	689b      	ldr	r3, [r3, #8]
   1a26a:	2b00      	cmp	r3, #0
   1a26c:	d00d      	beq.n	1a28a <WsfBufAlloc+0x4a>
      {
        /* allocation succeeded */
        pBuf = pPool->pFree;
   1a26e:	697b      	ldr	r3, [r7, #20]
   1a270:	689b      	ldr	r3, [r3, #8]
   1a272:	60fb      	str	r3, [r7, #12]

        /* next free buffer is stored inside current free buffer */
        pPool->pFree = pBuf->pNext;
   1a274:	68fb      	ldr	r3, [r7, #12]
   1a276:	681a      	ldr	r2, [r3, #0]
   1a278:	697b      	ldr	r3, [r7, #20]
   1a27a:	609a      	str	r2, [r3, #8]

#if WSF_BUF_FREE_CHECK == TRUE
        pBuf->free = 0;
   1a27c:	68fb      	ldr	r3, [r7, #12]
   1a27e:	2200      	movs	r2, #0
   1a280:	605a      	str	r2, [r3, #4]
          pPool->maxAlloc = pPool->numAlloc;
        }
        pPool->maxReqLen = WSF_MAX(pPool->maxReqLen, len);
#endif
        /* exit critical section */
        WSF_CS_EXIT(cs);
   1a282:	f000 f875 	bl	1a370 <WsfCsExit>

        WSF_TRACE_ALLOC2("WsfBufAlloc len:%u pBuf:%08x", pPool->desc.len, pBuf);

        return pBuf;
   1a286:	68fb      	ldr	r3, [r7, #12]
   1a288:	e010      	b.n	1a2ac <WsfBufAlloc+0x6c>
      }

      /* exit critical section */
      WSF_CS_EXIT(cs);
   1a28a:	f000 f871 	bl	1a370 <WsfCsExit>
  for (i = wsfBufNumPools; i > 0; i--, pPool++)
   1a28e:	7cfb      	ldrb	r3, [r7, #19]
   1a290:	3b01      	subs	r3, #1
   1a292:	74fb      	strb	r3, [r7, #19]
   1a294:	697b      	ldr	r3, [r7, #20]
   1a296:	330c      	adds	r3, #12
   1a298:	617b      	str	r3, [r7, #20]
   1a29a:	7cfb      	ldrb	r3, [r7, #19]
   1a29c:	2b00      	cmp	r3, #0
   1a29e:	d1db      	bne.n	1a258 <WsfBufAlloc+0x18>
  else
  {
    WSF_TRACE_WARN2("WsfBufAlloc failed len:%u - task:%u", len, WSF_OS_GET_ACTIVE_HANDLER_ID());
  }
#else
  WSF_TRACE_WARN1("WsfBufAlloc failed len:%u", len);
   1a2a0:	88fb      	ldrh	r3, [r7, #6]
   1a2a2:	4619      	mov	r1, r3
   1a2a4:	4805      	ldr	r0, [pc, #20]	@ (1a2bc <WsfBufAlloc+0x7c>)
   1a2a6:	f000 f911 	bl	1a4cc <WsfTrace>

#if WSF_BUF_ALLOC_FAIL_ASSERT == TRUE
  WSF_ASSERT(FALSE);
#endif

  return NULL;
   1a2aa:	2300      	movs	r3, #0
}
   1a2ac:	4618      	mov	r0, r3
   1a2ae:	3718      	adds	r7, #24
   1a2b0:	46bd      	mov	sp, r7
   1a2b2:	bd80      	pop	{r7, pc}
   1a2b4:	10003568 	.word	0x10003568
   1a2b8:	10003564 	.word	0x10003564
   1a2bc:	0002b9b8 	.word	0x0002b9b8

0001a2c0 <WsfMsgAlloc>:
 *
 *  \return Pointer to message buffer or NULL if allocation failed.
 */
/*************************************************************************************************/
void *WsfMsgAlloc(uint16_t len)
{
   1a2c0:	b580      	push	{r7, lr}
   1a2c2:	b084      	sub	sp, #16
   1a2c4:	af00      	add	r7, sp, #0
   1a2c6:	4603      	mov	r3, r0
   1a2c8:	80fb      	strh	r3, [r7, #6]
  wsfMsg_t  *pMsg;

  pMsg = WsfBufAlloc(len + sizeof(wsfMsg_t));
   1a2ca:	88fb      	ldrh	r3, [r7, #6]
   1a2cc:	3308      	adds	r3, #8
   1a2ce:	b29b      	uxth	r3, r3
   1a2d0:	4618      	mov	r0, r3
   1a2d2:	f7ff ffb5 	bl	1a240 <WsfBufAlloc>
   1a2d6:	60f8      	str	r0, [r7, #12]

  /* hide header */
  if (pMsg != NULL)
   1a2d8:	68fb      	ldr	r3, [r7, #12]
   1a2da:	2b00      	cmp	r3, #0
   1a2dc:	d002      	beq.n	1a2e4 <WsfMsgAlloc+0x24>
  {
    pMsg++;
   1a2de:	68fb      	ldr	r3, [r7, #12]
   1a2e0:	3308      	adds	r3, #8
   1a2e2:	60fb      	str	r3, [r7, #12]
  }

  return pMsg;
   1a2e4:	68fb      	ldr	r3, [r7, #12]
}
   1a2e6:	4618      	mov	r0, r3
   1a2e8:	3710      	adds	r7, #16
   1a2ea:	46bd      	mov	sp, r7
   1a2ec:	bd80      	pop	{r7, pc}

0001a2ee <WsfMsgSend>:
 *
 *  \return None.
 */
/*************************************************************************************************/
void WsfMsgSend(wsfHandlerId_t handlerId, void *pMsg)
{
   1a2ee:	b580      	push	{r7, lr}
   1a2f0:	b082      	sub	sp, #8
   1a2f2:	af00      	add	r7, sp, #0
   1a2f4:	4603      	mov	r3, r0
   1a2f6:	6039      	str	r1, [r7, #0]
   1a2f8:	71fb      	strb	r3, [r7, #7]
  WSF_TRACE_MSG1("WsfMsgSend handlerId:%u", handlerId);

  /* get queue for this handler and enqueue message */
  WsfMsgEnq(WsfTaskMsgQueue(handlerId), handlerId, pMsg);
   1a2fa:	79fb      	ldrb	r3, [r7, #7]
   1a2fc:	4618      	mov	r0, r3
   1a2fe:	f000 f8b5 	bl	1a46c <WsfTaskMsgQueue>
   1a302:	79fb      	ldrb	r3, [r7, #7]
   1a304:	683a      	ldr	r2, [r7, #0]
   1a306:	4619      	mov	r1, r3
   1a308:	f000 f809 	bl	1a31e <WsfMsgEnq>

  /* set task for this handler as ready to run */
  WsfTaskSetReady(handlerId, WSF_MSG_QUEUE_EVENT);
   1a30c:	79fb      	ldrb	r3, [r7, #7]
   1a30e:	2101      	movs	r1, #1
   1a310:	4618      	mov	r0, r3
   1a312:	f000 f88d 	bl	1a430 <WsfTaskSetReady>
}
   1a316:	bf00      	nop
   1a318:	3708      	adds	r7, #8
   1a31a:	46bd      	mov	sp, r7
   1a31c:	bd80      	pop	{r7, pc}

0001a31e <WsfMsgEnq>:
 *
 *  \return None.
 */
/*************************************************************************************************/
void WsfMsgEnq(wsfQueue_t *pQueue, wsfHandlerId_t handlerId, void *pMsg)
{
   1a31e:	b580      	push	{r7, lr}
   1a320:	b086      	sub	sp, #24
   1a322:	af00      	add	r7, sp, #0
   1a324:	60f8      	str	r0, [r7, #12]
   1a326:	460b      	mov	r3, r1
   1a328:	607a      	str	r2, [r7, #4]
   1a32a:	72fb      	strb	r3, [r7, #11]
  wsfMsg_t    *p;

  WSF_ASSERT(pMsg != NULL);

  /* get message header */
  p = ((wsfMsg_t *) pMsg) - 1;
   1a32c:	687b      	ldr	r3, [r7, #4]
   1a32e:	3b08      	subs	r3, #8
   1a330:	617b      	str	r3, [r7, #20]

  /* set handler ID */
  p->handlerId = handlerId;
   1a332:	697b      	ldr	r3, [r7, #20]
   1a334:	7afa      	ldrb	r2, [r7, #11]
   1a336:	711a      	strb	r2, [r3, #4]

  WsfQueueEnq(pQueue, p);
   1a338:	6979      	ldr	r1, [r7, #20]
   1a33a:	68f8      	ldr	r0, [r7, #12]
   1a33c:	f000 f8a4 	bl	1a488 <WsfQueueEnq>
}
   1a340:	bf00      	nop
   1a342:	3718      	adds	r7, #24
   1a344:	46bd      	mov	sp, r7
   1a346:	bd80      	pop	{r7, pc}

0001a348 <WsfCsEnter>:
 *
 *  \return None.
 */
/*************************************************************************************************/
void WsfCsEnter(void)
{
   1a348:	b480      	push	{r7}
   1a34a:	af00      	add	r7, sp, #0
  if (csNesting == 0)
   1a34c:	4b07      	ldr	r3, [pc, #28]	@ (1a36c <WsfCsEnter+0x24>)
   1a34e:	781b      	ldrb	r3, [r3, #0]
   1a350:	2b00      	cmp	r3, #0
   1a352:	d100      	bne.n	1a356 <WsfCsEnter+0xe>
  {
#ifdef __IAR_SYSTEMS_ICC__
    __disable_interrupt();
#endif
#ifdef __GNUC__
    __asm volatile ("cpsid i");
   1a354:	b672      	cpsid	i
#ifdef __CC_ARM
  __disable_irq();
#endif

  }
  csNesting++;
   1a356:	4b05      	ldr	r3, [pc, #20]	@ (1a36c <WsfCsEnter+0x24>)
   1a358:	781b      	ldrb	r3, [r3, #0]
   1a35a:	3301      	adds	r3, #1
   1a35c:	b2da      	uxtb	r2, r3
   1a35e:	4b03      	ldr	r3, [pc, #12]	@ (1a36c <WsfCsEnter+0x24>)
   1a360:	701a      	strb	r2, [r3, #0]
}
   1a362:	bf00      	nop
   1a364:	46bd      	mov	sp, r7
   1a366:	f85d 7b04 	ldr.w	r7, [sp], #4
   1a36a:	4770      	bx	lr
   1a36c:	1000356c 	.word	0x1000356c

0001a370 <WsfCsExit>:
 *
 *  \return None.
 */
/*************************************************************************************************/
void WsfCsExit(void)
{
   1a370:	b480      	push	{r7}
   1a372:	af00      	add	r7, sp, #0
  WSF_ASSERT(csNesting != 0);

  csNesting--;
   1a374:	4b07      	ldr	r3, [pc, #28]	@ (1a394 <WsfCsExit+0x24>)
   1a376:	781b      	ldrb	r3, [r3, #0]
   1a378:	3b01      	subs	r3, #1
   1a37a:	b2da      	uxtb	r2, r3
   1a37c:	4b05      	ldr	r3, [pc, #20]	@ (1a394 <WsfCsExit+0x24>)
   1a37e:	701a      	strb	r2, [r3, #0]
  if (csNesting == 0)
   1a380:	4b04      	ldr	r3, [pc, #16]	@ (1a394 <WsfCsExit+0x24>)
   1a382:	781b      	ldrb	r3, [r3, #0]
   1a384:	2b00      	cmp	r3, #0
   1a386:	d100      	bne.n	1a38a <WsfCsExit+0x1a>
  {
#ifdef __IAR_SYSTEMS_ICC__
    __enable_interrupt();
#endif
#ifdef __GNUC__
    __asm volatile ("cpsie i");
   1a388:	b662      	cpsie	i
#ifdef __CC_ARM
      __enable_irq();
#endif

  }
}
   1a38a:	bf00      	nop
   1a38c:	46bd      	mov	sp, r7
   1a38e:	f85d 7b04 	ldr.w	r7, [sp], #4
   1a392:	4770      	bx	lr
   1a394:	1000356c 	.word	0x1000356c

0001a398 <WsfSetOsSpecificEvent>:
{
  WsfCsExit();
}

void WsfSetOsSpecificEvent(void)
{
   1a398:	b580      	push	{r7, lr}
   1a39a:	b084      	sub	sp, #16
   1a39c:	af00      	add	r7, sp, #0
  if(xRadioTaskEventObject != NULL) 
   1a39e:	4b21      	ldr	r3, [pc, #132]	@ (1a424 <WsfSetOsSpecificEvent+0x8c>)
   1a3a0:	681b      	ldr	r3, [r3, #0]
   1a3a2:	2b00      	cmp	r3, #0
   1a3a4:	d039      	beq.n	1a41a <WsfSetOsSpecificEvent+0x82>
	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
   1a3a6:	f3ef 8305 	mrs	r3, IPSR
   1a3aa:	60bb      	str	r3, [r7, #8]
	if( ulCurrentInterrupt == 0 )
   1a3ac:	68bb      	ldr	r3, [r7, #8]
   1a3ae:	2b00      	cmp	r3, #0
   1a3b0:	d102      	bne.n	1a3b8 <WsfSetOsSpecificEvent+0x20>
		xReturn = pdFALSE;
   1a3b2:	2300      	movs	r3, #0
   1a3b4:	607b      	str	r3, [r7, #4]
   1a3b6:	e001      	b.n	1a3bc <WsfSetOsSpecificEvent+0x24>
		xReturn = pdTRUE;
   1a3b8:	2301      	movs	r3, #1
   1a3ba:	607b      	str	r3, [r7, #4]
	return xReturn;
   1a3bc:	687b      	ldr	r3, [r7, #4]
  {

      BaseType_t xHigherPriorityTaskWoken, xResult;

      if(xPortIsInsideInterrupt() == pdTRUE) {
   1a3be:	2b01      	cmp	r3, #1
   1a3c0:	d118      	bne.n	1a3f4 <WsfSetOsSpecificEvent+0x5c>

          //
          // Send an event to the main radio task
          //
          xHigherPriorityTaskWoken = pdFALSE;
   1a3c2:	2300      	movs	r3, #0
   1a3c4:	603b      	str	r3, [r7, #0]

          xResult = xEventGroupSetBitsFromISR(xRadioTaskEventObject, 1,
   1a3c6:	4b17      	ldr	r3, [pc, #92]	@ (1a424 <WsfSetOsSpecificEvent+0x8c>)
   1a3c8:	6819      	ldr	r1, [r3, #0]
   1a3ca:	463b      	mov	r3, r7
   1a3cc:	2201      	movs	r2, #1
   1a3ce:	4816      	ldr	r0, [pc, #88]	@ (1a428 <WsfSetOsSpecificEvent+0x90>)
   1a3d0:	f7ff ff02 	bl	1a1d8 <xTimerPendFunctionCallFromISR>
   1a3d4:	60f8      	str	r0, [r7, #12]

          //
          // If the radio task is higher-priority than the context we're currently
          // running from, we should yield now and run the radio task.
          //
          if ( xResult != pdFAIL )
   1a3d6:	68fb      	ldr	r3, [r7, #12]
   1a3d8:	2b00      	cmp	r3, #0
   1a3da:	d01e      	beq.n	1a41a <WsfSetOsSpecificEvent+0x82>
          {
              portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
   1a3dc:	683b      	ldr	r3, [r7, #0]
   1a3de:	2b00      	cmp	r3, #0
   1a3e0:	d01b      	beq.n	1a41a <WsfSetOsSpecificEvent+0x82>
   1a3e2:	4b12      	ldr	r3, [pc, #72]	@ (1a42c <WsfSetOsSpecificEvent+0x94>)
   1a3e4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
   1a3e8:	601a      	str	r2, [r3, #0]
   1a3ea:	f3bf 8f4f 	dsb	sy
   1a3ee:	f3bf 8f6f 	isb	sy
              portYIELD();
          }
      }

  }    
}
   1a3f2:	e012      	b.n	1a41a <WsfSetOsSpecificEvent+0x82>
          xResult = xEventGroupSetBits(xRadioTaskEventObject, 1);
   1a3f4:	4b0b      	ldr	r3, [pc, #44]	@ (1a424 <WsfSetOsSpecificEvent+0x8c>)
   1a3f6:	681b      	ldr	r3, [r3, #0]
   1a3f8:	2101      	movs	r1, #1
   1a3fa:	4618      	mov	r0, r3
   1a3fc:	f7fe ff32 	bl	19264 <xEventGroupSetBits>
   1a400:	4603      	mov	r3, r0
   1a402:	60fb      	str	r3, [r7, #12]
          if ( xResult != pdFAIL )
   1a404:	68fb      	ldr	r3, [r7, #12]
   1a406:	2b00      	cmp	r3, #0
   1a408:	d007      	beq.n	1a41a <WsfSetOsSpecificEvent+0x82>
              portYIELD();
   1a40a:	4b08      	ldr	r3, [pc, #32]	@ (1a42c <WsfSetOsSpecificEvent+0x94>)
   1a40c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
   1a410:	601a      	str	r2, [r3, #0]
   1a412:	f3bf 8f4f 	dsb	sy
   1a416:	f3bf 8f6f 	isb	sy
}
   1a41a:	bf00      	nop
   1a41c:	3710      	adds	r7, #16
   1a41e:	46bd      	mov	sp, r7
   1a420:	bd80      	pop	{r7, pc}
   1a422:	bf00      	nop
   1a424:	100035b0 	.word	0x100035b0
   1a428:	0001933f 	.word	0x0001933f
   1a42c:	e000ed04 	.word	0xe000ed04

0001a430 <WsfTaskSetReady>:
 *
 *  \return None.
 */
/*************************************************************************************************/
void WsfTaskSetReady(wsfHandlerId_t handlerId, wsfTaskEvent_t event)
{
   1a430:	b580      	push	{r7, lr}
   1a432:	b082      	sub	sp, #8
   1a434:	af00      	add	r7, sp, #0
   1a436:	4603      	mov	r3, r0
   1a438:	460a      	mov	r2, r1
   1a43a:	71fb      	strb	r3, [r7, #7]
   1a43c:	4613      	mov	r3, r2
   1a43e:	71bb      	strb	r3, [r7, #6]
  /* Unused parameter */
  (void)handlerId;

  WSF_CS_INIT(cs);

  WSF_CS_ENTER(cs);
   1a440:	f7ff ff82 	bl	1a348 <WsfCsEnter>
  wsfOs.task.taskEventMask |= event;
   1a444:	4b08      	ldr	r3, [pc, #32]	@ (1a468 <WsfTaskSetReady+0x38>)
   1a446:	f893 203c 	ldrb.w	r2, [r3, #60]	@ 0x3c
   1a44a:	79bb      	ldrb	r3, [r7, #6]
   1a44c:	4313      	orrs	r3, r2
   1a44e:	b2da      	uxtb	r2, r3
   1a450:	4b05      	ldr	r3, [pc, #20]	@ (1a468 <WsfTaskSetReady+0x38>)
   1a452:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
  WSF_CS_EXIT(cs);
   1a456:	f7ff ff8b 	bl	1a370 <WsfCsExit>

  /* set event in OS */

  WsfSetOsSpecificEvent();
   1a45a:	f7ff ff9d 	bl	1a398 <WsfSetOsSpecificEvent>
}
   1a45e:	bf00      	nop
   1a460:	3708      	adds	r7, #8
   1a462:	46bd      	mov	sp, r7
   1a464:	bd80      	pop	{r7, pc}
   1a466:	bf00      	nop
   1a468:	10003570 	.word	0x10003570

0001a46c <WsfTaskMsgQueue>:
 *
 *  \return Task message queue.
 */
/*************************************************************************************************/
wsfQueue_t *WsfTaskMsgQueue(wsfHandlerId_t handlerId)
{
   1a46c:	b480      	push	{r7}
   1a46e:	b083      	sub	sp, #12
   1a470:	af00      	add	r7, sp, #0
   1a472:	4603      	mov	r3, r0
   1a474:	71fb      	strb	r3, [r7, #7]
  /* Unused parameter */
  (void)handlerId;

  return &(wsfOs.task.msgQueue);
   1a476:	4b03      	ldr	r3, [pc, #12]	@ (1a484 <WsfTaskMsgQueue+0x18>)
}
   1a478:	4618      	mov	r0, r3
   1a47a:	370c      	adds	r7, #12
   1a47c:	46bd      	mov	sp, r7
   1a47e:	f85d 7b04 	ldr.w	r7, [sp], #4
   1a482:	4770      	bx	lr
   1a484:	100035a4 	.word	0x100035a4

0001a488 <WsfQueueEnq>:
 *
 *  \return None.
 */
/*************************************************************************************************/
void WsfQueueEnq(wsfQueue_t *pQueue, void *pElem)
{
   1a488:	b580      	push	{r7, lr}
   1a48a:	b082      	sub	sp, #8
   1a48c:	af00      	add	r7, sp, #0
   1a48e:	6078      	str	r0, [r7, #4]
   1a490:	6039      	str	r1, [r7, #0]

  WSF_ASSERT(pQueue != NULL);
  WSF_ASSERT(pElem != NULL);

  /* initialize next pointer */
  WSF_QUEUE_NEXT(pElem) = NULL;
   1a492:	683b      	ldr	r3, [r7, #0]
   1a494:	2200      	movs	r2, #0
   1a496:	601a      	str	r2, [r3, #0]

  /* enter critical section */
  WSF_CS_ENTER(cs);
   1a498:	f7ff ff56 	bl	1a348 <WsfCsEnter>

  /* if queue empty */
  if (pQueue->pHead == NULL)
   1a49c:	687b      	ldr	r3, [r7, #4]
   1a49e:	681b      	ldr	r3, [r3, #0]
   1a4a0:	2b00      	cmp	r3, #0
   1a4a2:	d106      	bne.n	1a4b2 <WsfQueueEnq+0x2a>
  {
    pQueue->pHead = pElem;
   1a4a4:	687b      	ldr	r3, [r7, #4]
   1a4a6:	683a      	ldr	r2, [r7, #0]
   1a4a8:	601a      	str	r2, [r3, #0]
    pQueue->pTail = pElem;
   1a4aa:	687b      	ldr	r3, [r7, #4]
   1a4ac:	683a      	ldr	r2, [r7, #0]
   1a4ae:	605a      	str	r2, [r3, #4]
   1a4b0:	e006      	b.n	1a4c0 <WsfQueueEnq+0x38>
  }
  /* else enqueue element to the tail of queue */
  else
  {
    WSF_QUEUE_NEXT(pQueue->pTail) = pElem;
   1a4b2:	687b      	ldr	r3, [r7, #4]
   1a4b4:	685b      	ldr	r3, [r3, #4]
   1a4b6:	683a      	ldr	r2, [r7, #0]
   1a4b8:	601a      	str	r2, [r3, #0]
    pQueue->pTail = pElem;
   1a4ba:	687b      	ldr	r3, [r7, #4]
   1a4bc:	683a      	ldr	r2, [r7, #0]
   1a4be:	605a      	str	r2, [r3, #4]
  }

  /* exit critical section */
  WSF_CS_EXIT(cs);
   1a4c0:	f7ff ff56 	bl	1a370 <WsfCsExit>
}
   1a4c4:	bf00      	nop
   1a4c6:	3708      	adds	r7, #8
   1a4c8:	46bd      	mov	sp, r7
   1a4ca:	bd80      	pop	{r7, pc}

0001a4cc <WsfTrace>:
 *
 *  \return None.
 */
/*************************************************************************************************/
void WsfTrace(const char *pStr, ...)
{
   1a4cc:	b40f      	push	{r0, r1, r2, r3}
   1a4ce:	b580      	push	{r7, lr}
   1a4d0:	f5ad 6d81 	sub.w	sp, sp, #1032	@ 0x408
   1a4d4:	af00      	add	r7, sp, #0
  char pTraceMsg[AM_PRINTF_BUFSIZE];
  uint32_t ui32NumChars;
  va_list           args;

  va_start(args, pStr);
   1a4d6:	f207 4214 	addw	r2, r7, #1044	@ 0x414
   1a4da:	f507 6381 	add.w	r3, r7, #1032	@ 0x408
   1a4de:	f5a3 6381 	sub.w	r3, r3, #1032	@ 0x408
   1a4e2:	601a      	str	r2, [r3, #0]
  am_util_stdio_vsprintf(pTraceMsg, pStr, args);
   1a4e4:	f507 6381 	add.w	r3, r7, #1032	@ 0x408
   1a4e8:	f5a3 6381 	sub.w	r3, r3, #1032	@ 0x408
   1a4ec:	1d38      	adds	r0, r7, #4
   1a4ee:	681a      	ldr	r2, [r3, #0]
   1a4f0:	f8d7 1410 	ldr.w	r1, [r7, #1040]	@ 0x410
   1a4f4:	f7fe fb66 	bl	18bc4 <am_util_stdio_vsprintf>
  //vprintf(pStr, args);
  va_end(args);
  ui32NumChars = am_util_debug_printf(pTraceMsg);
   1a4f8:	1d3b      	adds	r3, r7, #4
   1a4fa:	4618      	mov	r0, r3
   1a4fc:	f7fe fe74 	bl	191e8 <am_util_stdio_printf>
   1a500:	f8c7 0404 	str.w	r0, [r7, #1028]	@ 0x404
  if (!(ui32NumChars < AM_PRINTF_BUFSIZE))
   1a504:	f8d7 3404 	ldr.w	r3, [r7, #1028]	@ 0x404
   1a508:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
   1a50c:	d303      	bcc.n	1a516 <WsfTrace+0x4a>
    WsfAssert(__FILE__, (uint16_t) __LINE__);
   1a50e:	2183      	movs	r1, #131	@ 0x83
   1a510:	4806      	ldr	r0, [pc, #24]	@ (1a52c <WsfTrace+0x60>)
   1a512:	f7ff fe81 	bl	1a218 <WsfAssert>
  am_util_debug_printf("\n");
   1a516:	4806      	ldr	r0, [pc, #24]	@ (1a530 <WsfTrace+0x64>)
   1a518:	f7fe fe66 	bl	191e8 <am_util_stdio_printf>
}
   1a51c:	bf00      	nop
   1a51e:	f507 6781 	add.w	r7, r7, #1032	@ 0x408
   1a522:	46bd      	mov	sp, r7
   1a524:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
   1a528:	b004      	add	sp, #16
   1a52a:	4770      	bx	lr
   1a52c:	0002b9e4 	.word	0x0002b9e4
   1a530:	0002b9dc 	.word	0x0002b9dc

0001a534 <am_adc_isr>:
   if (event_callback)
      event_callback(is_charging ? BATTERY_CHARGING : BATTERY_NOT_CHARGING);
}

void am_adc_isr(void)
{
   1a534:	b580      	push	{r7, lr}
   1a536:	b084      	sub	sp, #16
   1a538:	af02      	add	r7, sp, #8
   // Clear the ADC interrupt
   static uint32_t status;
   am_hal_adc_interrupt_status(adc_handle, &status, true);
   1a53a:	4b1b      	ldr	r3, [pc, #108]	@ (1a5a8 <am_adc_isr+0x74>)
   1a53c:	681b      	ldr	r3, [r3, #0]
   1a53e:	2201      	movs	r2, #1
   1a540:	491a      	ldr	r1, [pc, #104]	@ (1a5ac <am_adc_isr+0x78>)
   1a542:	4618      	mov	r0, r3
   1a544:	f002 fc62 	bl	1ce0c <am_hal_adc_interrupt_status>
   am_hal_adc_interrupt_clear(adc_handle, status);
   1a548:	4b17      	ldr	r3, [pc, #92]	@ (1a5a8 <am_adc_isr+0x74>)
   1a54a:	681b      	ldr	r3, [r3, #0]
   1a54c:	4a17      	ldr	r2, [pc, #92]	@ (1a5ac <am_adc_isr+0x78>)
   1a54e:	6812      	ldr	r2, [r2, #0]
   1a550:	4611      	mov	r1, r2
   1a552:	4618      	mov	r0, r3
   1a554:	f002 fc7e 	bl	1ce54 <am_hal_adc_interrupt_clear>

   // Read all values from the ADC FIFO
   static am_hal_adc_sample_t sample;
   while (AM_HAL_ADC_FIFO_COUNT(ADC->FIFO))
   1a558:	e019      	b.n	1a58e <am_adc_isr+0x5a>
   {
      uint32_t samples_to_read = 1;
   1a55a:	2301      	movs	r3, #1
   1a55c:	607b      	str	r3, [r7, #4]
      am_hal_daxi_control(AM_HAL_DAXI_CONTROL_INVALIDATE, NULL);
   1a55e:	2100      	movs	r1, #0
   1a560:	2000      	movs	r0, #0
   1a562:	f001 fc81 	bl	1be68 <am_hal_daxi_control>
      am_hal_adc_samples_read(adc_handle, true, NULL, &samples_to_read, &sample);
   1a566:	4b10      	ldr	r3, [pc, #64]	@ (1a5a8 <am_adc_isr+0x74>)
   1a568:	6818      	ldr	r0, [r3, #0]
   1a56a:	1d3b      	adds	r3, r7, #4
   1a56c:	4a10      	ldr	r2, [pc, #64]	@ (1a5b0 <am_adc_isr+0x7c>)
   1a56e:	9200      	str	r2, [sp, #0]
   1a570:	2200      	movs	r2, #0
   1a572:	2101      	movs	r1, #1
   1a574:	f002 fc7e 	bl	1ce74 <am_hal_adc_samples_read>
      if (sample.ui32Slot == BATTERY_ADC_SLOT)
   1a578:	4b0d      	ldr	r3, [pc, #52]	@ (1a5b0 <am_adc_isr+0x7c>)
   1a57a:	685b      	ldr	r3, [r3, #4]
   1a57c:	2b00      	cmp	r3, #0
   1a57e:	d106      	bne.n	1a58e <am_adc_isr+0x5a>
         battery_voltage_code = AM_HAL_ADC_FIFO_SAMPLE(sample.ui32Sample);
   1a580:	4b0b      	ldr	r3, [pc, #44]	@ (1a5b0 <am_adc_isr+0x7c>)
   1a582:	681b      	ldr	r3, [r3, #0]
   1a584:	099b      	lsrs	r3, r3, #6
   1a586:	f3c3 030d 	ubfx	r3, r3, #0, #14
   1a58a:	4a0a      	ldr	r2, [pc, #40]	@ (1a5b4 <am_adc_isr+0x80>)
   1a58c:	6013      	str	r3, [r2, #0]
   while (AM_HAL_ADC_FIFO_COUNT(ADC->FIFO))
   1a58e:	4b0a      	ldr	r3, [pc, #40]	@ (1a5b8 <am_adc_isr+0x84>)
   1a590:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
   1a592:	0d1b      	lsrs	r3, r3, #20
   1a594:	b2db      	uxtb	r3, r3
   1a596:	2b00      	cmp	r3, #0
   1a598:	d1df      	bne.n	1a55a <am_adc_isr+0x26>
   }

   // Set the conversion complete flag
   conversion_complete = true;
   1a59a:	4b08      	ldr	r3, [pc, #32]	@ (1a5bc <am_adc_isr+0x88>)
   1a59c:	2201      	movs	r2, #1
   1a59e:	701a      	strb	r2, [r3, #0]
}
   1a5a0:	bf00      	nop
   1a5a2:	3708      	adds	r7, #8
   1a5a4:	46bd      	mov	sp, r7
   1a5a6:	bd80      	pop	{r7, pc}
   1a5a8:	100035bc 	.word	0x100035bc
   1a5ac:	100035c0 	.word	0x100035c0
   1a5b0:	100035c4 	.word	0x100035c4
   1a5b4:	100035b4 	.word	0x100035b4
   1a5b8:	40038000 	.word	0x40038000
   1a5bc:	100035b8 	.word	0x100035b8

0001a5c0 <bluetooth_stop_scanning>:
      DmScanStart(HCI_SCAN_PHY_LE_1M_BIT, ble_master_cfg.discMode, &ble_master_cfg.scanType, TRUE, ble_master_cfg.scanDuration, 0);
   }
}

void bluetooth_stop_scanning(void)
{
   1a5c0:	b580      	push	{r7, lr}
   1a5c2:	af00      	add	r7, sp, #0
   // Attempt to stop scanning
   expected_scanning = false;
   1a5c4:	4b05      	ldr	r3, [pc, #20]	@ (1a5dc <bluetooth_stop_scanning+0x1c>)
   1a5c6:	2200      	movs	r2, #0
   1a5c8:	701a      	strb	r2, [r3, #0]
   if (is_initialized)
   1a5ca:	4b05      	ldr	r3, [pc, #20]	@ (1a5e0 <bluetooth_stop_scanning+0x20>)
   1a5cc:	781b      	ldrb	r3, [r3, #0]
   1a5ce:	b2db      	uxtb	r3, r3
   1a5d0:	2b00      	cmp	r3, #0
   1a5d2:	d001      	beq.n	1a5d8 <bluetooth_stop_scanning+0x18>
      DmScanStop();
   1a5d4:	f7fe fe2c 	bl	19230 <DmScanStop>
}
   1a5d8:	bf00      	nop
   1a5da:	bd80      	pop	{r7, pc}
   1a5dc:	100035cc 	.word	0x100035cc
   1a5e0:	100035cd 	.word	0x100035cd

0001a5e4 <continue_current_sequence>:
}

#endif  // #if REVISION_ID == REVISION_I

static void continue_current_sequence(void)
{
   1a5e4:	b580      	push	{r7, lr}
   1a5e6:	af00      	add	r7, sp, #0
   // Check whether the end of the sequence has been reached
   if (*current_frequency > 0)
   1a5e8:	4b35      	ldr	r3, [pc, #212]	@ (1a6c0 <continue_current_sequence+0xdc>)
   1a5ea:	681b      	ldr	r3, [r3, #0]
   1a5ec:	881b      	ldrh	r3, [r3, #0]
   1a5ee:	b29b      	uxth	r3, r3
   1a5f0:	2b00      	cmp	r3, #0
   1a5f2:	d052      	beq.n	1a69a <continue_current_sequence+0xb6>
   {
      // Check whether the current sequence value should be silence
      if (*current_frequency == 1)
   1a5f4:	4b32      	ldr	r3, [pc, #200]	@ (1a6c0 <continue_current_sequence+0xdc>)
   1a5f6:	681b      	ldr	r3, [r3, #0]
   1a5f8:	881b      	ldrh	r3, [r3, #0]
   1a5fa:	b29b      	uxth	r3, r3
   1a5fc:	2b01      	cmp	r3, #1
   1a5fe:	d114      	bne.n	1a62a <continue_current_sequence+0x46>
      {
         timer_config.ui32Compare0 = (*current_duration * buzzer_clock_hz) / 1000;
   1a600:	4b30      	ldr	r3, [pc, #192]	@ (1a6c4 <continue_current_sequence+0xe0>)
   1a602:	681b      	ldr	r3, [r3, #0]
   1a604:	881b      	ldrh	r3, [r3, #0]
   1a606:	b29b      	uxth	r3, r3
   1a608:	461a      	mov	r2, r3
   1a60a:	4b2f      	ldr	r3, [pc, #188]	@ (1a6c8 <continue_current_sequence+0xe4>)
   1a60c:	681b      	ldr	r3, [r3, #0]
   1a60e:	fb02 f303 	mul.w	r3, r2, r3
   1a612:	4a2e      	ldr	r2, [pc, #184]	@ (1a6cc <continue_current_sequence+0xe8>)
   1a614:	fba2 2303 	umull	r2, r3, r2, r3
   1a618:	099b      	lsrs	r3, r3, #6
   1a61a:	4a2d      	ldr	r2, [pc, #180]	@ (1a6d0 <continue_current_sequence+0xec>)
   1a61c:	60d3      	str	r3, [r2, #12]
         timer_config.ui32Compare1 = timer_config.ui32Compare0 + 1;
   1a61e:	4b2c      	ldr	r3, [pc, #176]	@ (1a6d0 <continue_current_sequence+0xec>)
   1a620:	68db      	ldr	r3, [r3, #12]
   1a622:	3301      	adds	r3, #1
   1a624:	4a2a      	ldr	r2, [pc, #168]	@ (1a6d0 <continue_current_sequence+0xec>)
   1a626:	6113      	str	r3, [r2, #16]
   1a628:	e00e      	b.n	1a648 <continue_current_sequence+0x64>
      }
      else
      {
         timer_config.ui32Compare0 = buzzer_clock_hz / *current_frequency;
   1a62a:	4b27      	ldr	r3, [pc, #156]	@ (1a6c8 <continue_current_sequence+0xe4>)
   1a62c:	681b      	ldr	r3, [r3, #0]
   1a62e:	4a24      	ldr	r2, [pc, #144]	@ (1a6c0 <continue_current_sequence+0xdc>)
   1a630:	6812      	ldr	r2, [r2, #0]
   1a632:	8812      	ldrh	r2, [r2, #0]
   1a634:	b292      	uxth	r2, r2
   1a636:	fbb3 f3f2 	udiv	r3, r3, r2
   1a63a:	4a25      	ldr	r2, [pc, #148]	@ (1a6d0 <continue_current_sequence+0xec>)
   1a63c:	60d3      	str	r3, [r2, #12]
         timer_config.ui32Compare1 = timer_config.ui32Compare0 / 2;
   1a63e:	4b24      	ldr	r3, [pc, #144]	@ (1a6d0 <continue_current_sequence+0xec>)
   1a640:	68db      	ldr	r3, [r3, #12]
   1a642:	085b      	lsrs	r3, r3, #1
   1a644:	4a22      	ldr	r2, [pc, #136]	@ (1a6d0 <continue_current_sequence+0xec>)
   1a646:	6113      	str	r3, [r2, #16]
      }

      // Set the duration and expected number of interrupt services
      interrupt_counter_index = 0;
   1a648:	4b22      	ldr	r3, [pc, #136]	@ (1a6d4 <continue_current_sequence+0xf0>)
   1a64a:	2200      	movs	r2, #0
   1a64c:	601a      	str	r2, [r3, #0]
      interrupt_counter_max = (*current_duration * *current_frequency) / 1000;
   1a64e:	4b1d      	ldr	r3, [pc, #116]	@ (1a6c4 <continue_current_sequence+0xe0>)
   1a650:	681b      	ldr	r3, [r3, #0]
   1a652:	881b      	ldrh	r3, [r3, #0]
   1a654:	b29b      	uxth	r3, r3
   1a656:	461a      	mov	r2, r3
   1a658:	4b19      	ldr	r3, [pc, #100]	@ (1a6c0 <continue_current_sequence+0xdc>)
   1a65a:	681b      	ldr	r3, [r3, #0]
   1a65c:	881b      	ldrh	r3, [r3, #0]
   1a65e:	b29b      	uxth	r3, r3
   1a660:	fb02 f303 	mul.w	r3, r2, r3
   1a664:	4a19      	ldr	r2, [pc, #100]	@ (1a6cc <continue_current_sequence+0xe8>)
   1a666:	fb82 1203 	smull	r1, r2, r2, r3
   1a66a:	1192      	asrs	r2, r2, #6
   1a66c:	17db      	asrs	r3, r3, #31
   1a66e:	1ad3      	subs	r3, r2, r3
   1a670:	461a      	mov	r2, r3
   1a672:	4b19      	ldr	r3, [pc, #100]	@ (1a6d8 <continue_current_sequence+0xf4>)
   1a674:	601a      	str	r2, [r3, #0]
      am_hal_timer_config(BUZZER_TIMER_NUMBER, &timer_config);
   1a676:	4916      	ldr	r1, [pc, #88]	@ (1a6d0 <continue_current_sequence+0xec>)
   1a678:	2000      	movs	r0, #0
   1a67a:	f003 fd9f 	bl	1e1bc <am_hal_timer_config>

      // Move on to the next value in the sequence
      ++current_frequency;
   1a67e:	4b10      	ldr	r3, [pc, #64]	@ (1a6c0 <continue_current_sequence+0xdc>)
   1a680:	681b      	ldr	r3, [r3, #0]
   1a682:	3302      	adds	r3, #2
   1a684:	4a0e      	ldr	r2, [pc, #56]	@ (1a6c0 <continue_current_sequence+0xdc>)
   1a686:	6013      	str	r3, [r2, #0]
      ++current_duration;
   1a688:	4b0e      	ldr	r3, [pc, #56]	@ (1a6c4 <continue_current_sequence+0xe0>)
   1a68a:	681b      	ldr	r3, [r3, #0]
   1a68c:	3302      	adds	r3, #2
   1a68e:	4a0d      	ldr	r2, [pc, #52]	@ (1a6c4 <continue_current_sequence+0xe0>)
   1a690:	6013      	str	r3, [r2, #0]
      am_hal_timer_clear(BUZZER_TIMER_NUMBER);
   1a692:	2000      	movs	r0, #0
   1a694:	f003 fdfa 	bl	1e28c <am_hal_timer_clear>
      am_hal_timer_stop(BUZZER_TIMER_NUMBER);
      am_hal_timer_disable(BUZZER_TIMER_NUMBER);
      am_hal_gpio_output_clear(PIN_BUZZER_DRIVER);
      current_frequency = current_duration = NULL;
   }
}
   1a698:	e010      	b.n	1a6bc <continue_current_sequence+0xd8>
      am_hal_timer_stop(BUZZER_TIMER_NUMBER);
   1a69a:	2000      	movs	r0, #0
   1a69c:	f003 fdde 	bl	1e25c <am_hal_timer_disable>
      am_hal_timer_disable(BUZZER_TIMER_NUMBER);
   1a6a0:	2000      	movs	r0, #0
   1a6a2:	f003 fddb 	bl	1e25c <am_hal_timer_disable>
      am_hal_gpio_output_clear(PIN_BUZZER_DRIVER);
   1a6a6:	4b0d      	ldr	r3, [pc, #52]	@ (1a6dc <continue_current_sequence+0xf8>)
   1a6a8:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
   1a6ac:	601a      	str	r2, [r3, #0]
      current_frequency = current_duration = NULL;
   1a6ae:	4b05      	ldr	r3, [pc, #20]	@ (1a6c4 <continue_current_sequence+0xe0>)
   1a6b0:	2200      	movs	r2, #0
   1a6b2:	601a      	str	r2, [r3, #0]
   1a6b4:	4b03      	ldr	r3, [pc, #12]	@ (1a6c4 <continue_current_sequence+0xe0>)
   1a6b6:	681b      	ldr	r3, [r3, #0]
   1a6b8:	4a01      	ldr	r2, [pc, #4]	@ (1a6c0 <continue_current_sequence+0xdc>)
   1a6ba:	6013      	str	r3, [r2, #0]
}
   1a6bc:	bf00      	nop
   1a6be:	bd80      	pop	{r7, pc}
   1a6c0:	100035e4 	.word	0x100035e4
   1a6c4:	100035e8 	.word	0x100035e8
   1a6c8:	100035f4 	.word	0x100035f4
   1a6cc:	10624dd3 	.word	0x10624dd3
   1a6d0:	100035d0 	.word	0x100035d0
   1a6d4:	100035ec 	.word	0x100035ec
   1a6d8:	100035f0 	.word	0x100035f0
   1a6dc:	40010238 	.word	0x40010238

0001a6e0 <am_timer00_isr>:

void am_timer00_isr(void)
{
   1a6e0:	b580      	push	{r7, lr}
   1a6e2:	af00      	add	r7, sp, #0
   // Clear the timer interrupt and check if it is time to move to the next value in the PWM sequence
   am_hal_timer_interrupt_clear(AM_HAL_TIMER_MASK(BUZZER_TIMER_NUMBER, AM_HAL_TIMER_COMPARE0));
   1a6e4:	2001      	movs	r0, #1
   1a6e6:	f003 fdfb 	bl	1e2e0 <am_hal_timer_interrupt_clear>
   if (++interrupt_counter_index >= interrupt_counter_max)
   1a6ea:	4b06      	ldr	r3, [pc, #24]	@ (1a704 <am_timer00_isr+0x24>)
   1a6ec:	681b      	ldr	r3, [r3, #0]
   1a6ee:	3301      	adds	r3, #1
   1a6f0:	4a04      	ldr	r2, [pc, #16]	@ (1a704 <am_timer00_isr+0x24>)
   1a6f2:	6013      	str	r3, [r2, #0]
   1a6f4:	4a04      	ldr	r2, [pc, #16]	@ (1a708 <am_timer00_isr+0x28>)
   1a6f6:	6812      	ldr	r2, [r2, #0]
   1a6f8:	4293      	cmp	r3, r2
   1a6fa:	d301      	bcc.n	1a700 <am_timer00_isr+0x20>
      continue_current_sequence();
   1a6fc:	f7ff ff72 	bl	1a5e4 <continue_current_sequence>
}
   1a700:	bf00      	nop
   1a702:	bd80      	pop	{r7, pc}
   1a704:	100035ec 	.word	0x100035ec
   1a708:	100035f0 	.word	0x100035f0

0001a70c <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
   1a70c:	b480      	push	{r7}
   1a70e:	b083      	sub	sp, #12
   1a710:	af00      	add	r7, sp, #0
   1a712:	4603      	mov	r3, r0
   1a714:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
   1a716:	f997 3007 	ldrsb.w	r3, [r7, #7]
   1a71a:	2b00      	cmp	r3, #0
   1a71c:	db0b      	blt.n	1a736 <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   1a71e:	79fb      	ldrb	r3, [r7, #7]
   1a720:	f003 021f 	and.w	r2, r3, #31
   1a724:	4907      	ldr	r1, [pc, #28]	@ (1a744 <__NVIC_EnableIRQ+0x38>)
   1a726:	f997 3007 	ldrsb.w	r3, [r7, #7]
   1a72a:	095b      	lsrs	r3, r3, #5
   1a72c:	2001      	movs	r0, #1
   1a72e:	fa00 f202 	lsl.w	r2, r0, r2
   1a732:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
   1a736:	bf00      	nop
   1a738:	370c      	adds	r7, #12
   1a73a:	46bd      	mov	sp, r7
   1a73c:	f85d 7b04 	ldr.w	r7, [sp], #4
   1a740:	4770      	bx	lr
   1a742:	bf00      	nop
   1a744:	e000e100 	.word	0xe000e100

0001a748 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
   1a748:	b480      	push	{r7}
   1a74a:	b083      	sub	sp, #12
   1a74c:	af00      	add	r7, sp, #0
   1a74e:	4603      	mov	r3, r0
   1a750:	6039      	str	r1, [r7, #0]
   1a752:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
   1a754:	f997 3007 	ldrsb.w	r3, [r7, #7]
   1a758:	2b00      	cmp	r3, #0
   1a75a:	db0a      	blt.n	1a772 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
   1a75c:	683b      	ldr	r3, [r7, #0]
   1a75e:	b2da      	uxtb	r2, r3
   1a760:	490c      	ldr	r1, [pc, #48]	@ (1a794 <__NVIC_SetPriority+0x4c>)
   1a762:	f997 3007 	ldrsb.w	r3, [r7, #7]
   1a766:	0152      	lsls	r2, r2, #5
   1a768:	b2d2      	uxtb	r2, r2
   1a76a:	440b      	add	r3, r1
   1a76c:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
   1a770:	e00a      	b.n	1a788 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
   1a772:	683b      	ldr	r3, [r7, #0]
   1a774:	b2da      	uxtb	r2, r3
   1a776:	4908      	ldr	r1, [pc, #32]	@ (1a798 <__NVIC_SetPriority+0x50>)
   1a778:	79fb      	ldrb	r3, [r7, #7]
   1a77a:	f003 030f 	and.w	r3, r3, #15
   1a77e:	3b04      	subs	r3, #4
   1a780:	0152      	lsls	r2, r2, #5
   1a782:	b2d2      	uxtb	r2, r2
   1a784:	440b      	add	r3, r1
   1a786:	761a      	strb	r2, [r3, #24]
}
   1a788:	bf00      	nop
   1a78a:	370c      	adds	r7, #12
   1a78c:	46bd      	mov	sp, r7
   1a78e:	f85d 7b04 	ldr.w	r7, [sp], #4
   1a792:	4770      	bx	lr
   1a794:	e000e100 	.word	0xe000e100
   1a798:	e000ed00 	.word	0xe000ed00

0001a79c <i2c_write8>:


// Private Helper Functions --------------------------------------------------------------------------------------------

static void i2c_write8(uint8_t reg_number, uint8_t reg_value)
{
   1a79c:	b590      	push	{r4, r7, lr}
   1a79e:	b091      	sub	sp, #68	@ 0x44
   1a7a0:	af00      	add	r7, sp, #0
   1a7a2:	4604      	mov	r4, r0
   1a7a4:	4608      	mov	r0, r1
   1a7a6:	4621      	mov	r1, r4
   1a7a8:	71f9      	strb	r1, [r7, #7]
   1a7aa:	4601      	mov	r1, r0
   1a7ac:	71b9      	strb	r1, [r7, #6]
   // Repeat the transfer until it succeeds
   uint32_t bodyBuffer = reg_value;
   1a7ae:	79b9      	ldrb	r1, [r7, #6]
   1a7b0:	63f9      	str	r1, [r7, #60]	@ 0x3c
   am_hal_iom_transfer_t write_transaction = {
   1a7b2:	2129      	movs	r1, #41	@ 0x29
   1a7b4:	60b9      	str	r1, [r7, #8]
   1a7b6:	2101      	movs	r1, #1
   1a7b8:	60f9      	str	r1, [r7, #12]
   1a7ba:	79f9      	ldrb	r1, [r7, #7]
   1a7bc:	2000      	movs	r0, #0
   1a7be:	460a      	mov	r2, r1
   1a7c0:	4603      	mov	r3, r0
   1a7c2:	e9c7 2304 	strd	r2, r3, [r7, #16]
   1a7c6:	2301      	movs	r3, #1
   1a7c8:	61bb      	str	r3, [r7, #24]
   1a7ca:	2300      	movs	r3, #0
   1a7cc:	773b      	strb	r3, [r7, #28]
   1a7ce:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
   1a7d2:	623b      	str	r3, [r7, #32]
   1a7d4:	2300      	movs	r3, #0
   1a7d6:	627b      	str	r3, [r7, #36]	@ 0x24
   1a7d8:	2300      	movs	r3, #0
   1a7da:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
   1a7de:	2300      	movs	r3, #0
   1a7e0:	f887 3029 	strb.w	r3, [r7, #41]	@ 0x29
   1a7e4:	2301      	movs	r3, #1
   1a7e6:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
   1a7ea:	2300      	movs	r3, #0
   1a7ec:	62fb      	str	r3, [r7, #44]	@ 0x2c
   1a7ee:	2300      	movs	r3, #0
   1a7f0:	633b      	str	r3, [r7, #48]	@ 0x30
      .ui8RepeatCount               = 0,
      .ui8Priority                  = 1,
      .ui32PauseCondition           = 0,
      .ui32StatusSetClr             = 0
   };
   while (am_hal_iom_blocking_transfer(i2c_handle, &write_transaction) != AM_HAL_STATUS_SUCCESS);
   1a7f2:	bf00      	nop
   1a7f4:	4b07      	ldr	r3, [pc, #28]	@ (1a814 <i2c_write8+0x78>)
   1a7f6:	681b      	ldr	r3, [r3, #0]
   1a7f8:	f107 0208 	add.w	r2, r7, #8
   1a7fc:	4611      	mov	r1, r2
   1a7fe:	4618      	mov	r0, r3
   1a800:	f001 ff30 	bl	1c664 <am_hal_iom_blocking_transfer>
   1a804:	4603      	mov	r3, r0
   1a806:	2b00      	cmp	r3, #0
   1a808:	d1f4      	bne.n	1a7f4 <i2c_write8+0x58>
}
   1a80a:	bf00      	nop
   1a80c:	bf00      	nop
   1a80e:	3744      	adds	r7, #68	@ 0x44
   1a810:	46bd      	mov	sp, r7
   1a812:	bd90      	pop	{r4, r7, pc}
   1a814:	100035f8 	.word	0x100035f8

0001a818 <i2c_read8>:

static uint8_t i2c_read8(uint8_t reg_number)
{
   1a818:	b580      	push	{r7, lr}
   1a81a:	b08e      	sub	sp, #56	@ 0x38
   1a81c:	af00      	add	r7, sp, #0
   1a81e:	4601      	mov	r1, r0
   1a820:	71f9      	strb	r1, [r7, #7]
   // Repeat the transfer until it succeeds
   static uint32_t readBuffer;
   am_hal_iom_transfer_t read_transaction = {
   1a822:	2129      	movs	r1, #41	@ 0x29
   1a824:	60b9      	str	r1, [r7, #8]
   1a826:	2101      	movs	r1, #1
   1a828:	60f9      	str	r1, [r7, #12]
   1a82a:	79f9      	ldrb	r1, [r7, #7]
   1a82c:	2000      	movs	r0, #0
   1a82e:	460a      	mov	r2, r1
   1a830:	4603      	mov	r3, r0
   1a832:	e9c7 2304 	strd	r2, r3, [r7, #16]
   1a836:	2301      	movs	r3, #1
   1a838:	61bb      	str	r3, [r7, #24]
   1a83a:	2301      	movs	r3, #1
   1a83c:	773b      	strb	r3, [r7, #28]
   1a83e:	2300      	movs	r3, #0
   1a840:	623b      	str	r3, [r7, #32]
   1a842:	4b10      	ldr	r3, [pc, #64]	@ (1a884 <i2c_read8+0x6c>)
   1a844:	627b      	str	r3, [r7, #36]	@ 0x24
   1a846:	2300      	movs	r3, #0
   1a848:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
   1a84c:	2300      	movs	r3, #0
   1a84e:	f887 3029 	strb.w	r3, [r7, #41]	@ 0x29
   1a852:	2301      	movs	r3, #1
   1a854:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
   1a858:	2300      	movs	r3, #0
   1a85a:	62fb      	str	r3, [r7, #44]	@ 0x2c
   1a85c:	2300      	movs	r3, #0
   1a85e:	633b      	str	r3, [r7, #48]	@ 0x30
      .ui8RepeatCount               = 0,
      .ui8Priority                  = 1,
      .ui32PauseCondition           = 0,
      .ui32StatusSetClr             = 0
   };
   while (am_hal_iom_blocking_transfer(i2c_handle, &read_transaction) != AM_HAL_STATUS_SUCCESS);
   1a860:	bf00      	nop
   1a862:	4b09      	ldr	r3, [pc, #36]	@ (1a888 <i2c_read8+0x70>)
   1a864:	681b      	ldr	r3, [r3, #0]
   1a866:	f107 0208 	add.w	r2, r7, #8
   1a86a:	4611      	mov	r1, r2
   1a86c:	4618      	mov	r0, r3
   1a86e:	f001 fef9 	bl	1c664 <am_hal_iom_blocking_transfer>
   1a872:	4603      	mov	r3, r0
   1a874:	2b00      	cmp	r3, #0
   1a876:	d1f4      	bne.n	1a862 <i2c_read8+0x4a>
   return ((uint8_t*)&readBuffer)[0];
   1a878:	4b02      	ldr	r3, [pc, #8]	@ (1a884 <i2c_read8+0x6c>)
   1a87a:	781b      	ldrb	r3, [r3, #0]
}
   1a87c:	4618      	mov	r0, r3
   1a87e:	3738      	adds	r7, #56	@ 0x38
   1a880:	46bd      	mov	sp, r7
   1a882:	bd80      	pop	{r7, pc}
   1a884:	10003604 	.word	0x10003604
   1a888:	100035f8 	.word	0x100035f8

0001a88c <i2c_read>:

static void i2c_read(uint8_t reg_number, uint8_t *read_buffer, uint32_t buffer_length)
{
   1a88c:	b5b0      	push	{r4, r5, r7, lr}
   1a88e:	b090      	sub	sp, #64	@ 0x40
   1a890:	af00      	add	r7, sp, #0
   1a892:	4603      	mov	r3, r0
   1a894:	60b9      	str	r1, [r7, #8]
   1a896:	607a      	str	r2, [r7, #4]
   1a898:	73fb      	strb	r3, [r7, #15]
   // Repeat the transfer until it succeeds
   am_hal_iom_transfer_t read_transaction = {
   1a89a:	2329      	movs	r3, #41	@ 0x29
   1a89c:	613b      	str	r3, [r7, #16]
   1a89e:	2301      	movs	r3, #1
   1a8a0:	617b      	str	r3, [r7, #20]
   1a8a2:	7bfb      	ldrb	r3, [r7, #15]
   1a8a4:	2200      	movs	r2, #0
   1a8a6:	461c      	mov	r4, r3
   1a8a8:	4615      	mov	r5, r2
   1a8aa:	e9c7 4506 	strd	r4, r5, [r7, #24]
   1a8ae:	687b      	ldr	r3, [r7, #4]
   1a8b0:	623b      	str	r3, [r7, #32]
   1a8b2:	2301      	movs	r3, #1
   1a8b4:	f887 3024 	strb.w	r3, [r7, #36]	@ 0x24
   1a8b8:	2300      	movs	r3, #0
   1a8ba:	62bb      	str	r3, [r7, #40]	@ 0x28
   1a8bc:	68bb      	ldr	r3, [r7, #8]
   1a8be:	62fb      	str	r3, [r7, #44]	@ 0x2c
   1a8c0:	2300      	movs	r3, #0
   1a8c2:	f887 3030 	strb.w	r3, [r7, #48]	@ 0x30
   1a8c6:	2300      	movs	r3, #0
   1a8c8:	f887 3031 	strb.w	r3, [r7, #49]	@ 0x31
   1a8cc:	2301      	movs	r3, #1
   1a8ce:	f887 3032 	strb.w	r3, [r7, #50]	@ 0x32
   1a8d2:	2300      	movs	r3, #0
   1a8d4:	637b      	str	r3, [r7, #52]	@ 0x34
   1a8d6:	2300      	movs	r3, #0
   1a8d8:	63bb      	str	r3, [r7, #56]	@ 0x38
      .ui8RepeatCount               = 0,
      .ui8Priority                  = 1,
      .ui32PauseCondition           = 0,
      .ui32StatusSetClr             = 0
   };
   while (am_hal_iom_blocking_transfer(i2c_handle, &read_transaction) != AM_HAL_STATUS_SUCCESS);
   1a8da:	bf00      	nop
   1a8dc:	4b07      	ldr	r3, [pc, #28]	@ (1a8fc <i2c_read+0x70>)
   1a8de:	681b      	ldr	r3, [r3, #0]
   1a8e0:	f107 0210 	add.w	r2, r7, #16
   1a8e4:	4611      	mov	r1, r2
   1a8e6:	4618      	mov	r0, r3
   1a8e8:	f001 febc 	bl	1c664 <am_hal_iom_blocking_transfer>
   1a8ec:	4603      	mov	r3, r0
   1a8ee:	2b00      	cmp	r3, #0
   1a8f0:	d1f4      	bne.n	1a8dc <i2c_read+0x50>
}
   1a8f2:	bf00      	nop
   1a8f4:	bf00      	nop
   1a8f6:	3740      	adds	r7, #64	@ 0x40
   1a8f8:	46bd      	mov	sp, r7
   1a8fa:	bdb0      	pop	{r4, r5, r7, pc}
   1a8fc:	100035f8 	.word	0x100035f8

0001a900 <imu_isr>:

static void imu_isr(void *args)
{
   1a900:	b580      	push	{r7, lr}
   1a902:	b084      	sub	sp, #16
   1a904:	af00      	add	r7, sp, #0
   1a906:	6078      	str	r0, [r7, #4]
   // Read the device motion status and trigger the registered callback
   bool in_motion = i2c_read8(BNO055_INTR_STAT_ADDR) & 0x40;
   1a908:	2037      	movs	r0, #55	@ 0x37
   1a90a:	f7ff ff85 	bl	1a818 <i2c_read8>
   1a90e:	4603      	mov	r3, r0
   1a910:	f003 0340 	and.w	r3, r3, #64	@ 0x40
   1a914:	2b00      	cmp	r3, #0
   1a916:	bf14      	ite	ne
   1a918:	2301      	movne	r3, #1
   1a91a:	2300      	moveq	r3, #0
   1a91c:	73fb      	strb	r3, [r7, #15]
   i2c_write8(BNO055_SYS_TRIGGER_ADDR, 0xC0);
   1a91e:	21c0      	movs	r1, #192	@ 0xc0
   1a920:	203f      	movs	r0, #63	@ 0x3f
   1a922:	f7ff ff3b 	bl	1a79c <i2c_write8>
   if (in_motion != previously_in_motion)
   1a926:	4b08      	ldr	r3, [pc, #32]	@ (1a948 <imu_isr+0x48>)
   1a928:	781b      	ldrb	r3, [r3, #0]
   1a92a:	7bfa      	ldrb	r2, [r7, #15]
   1a92c:	429a      	cmp	r2, r3
   1a92e:	d004      	beq.n	1a93a <imu_isr+0x3a>
      motion_change_callback(in_motion);
   1a930:	4b06      	ldr	r3, [pc, #24]	@ (1a94c <imu_isr+0x4c>)
   1a932:	681b      	ldr	r3, [r3, #0]
   1a934:	7bfa      	ldrb	r2, [r7, #15]
   1a936:	4610      	mov	r0, r2
   1a938:	4798      	blx	r3
   previously_in_motion = in_motion;
   1a93a:	4a03      	ldr	r2, [pc, #12]	@ (1a948 <imu_isr+0x48>)
   1a93c:	7bfb      	ldrb	r3, [r7, #15]
   1a93e:	7013      	strb	r3, [r2, #0]
}
   1a940:	bf00      	nop
   1a942:	3710      	adds	r7, #16
   1a944:	46bd      	mov	sp, r7
   1a946:	bd80      	pop	{r7, pc}
   1a948:	100035fc 	.word	0x100035fc
   1a94c:	10003600 	.word	0x10003600

0001a950 <set_mode>:


// IMU Chip-Specific API Functions -------------------------------------------------------------------------------------

static void set_mode(bno055_opmode_t mode)
{
   1a950:	b580      	push	{r7, lr}
   1a952:	b082      	sub	sp, #8
   1a954:	af00      	add	r7, sp, #0
   1a956:	4603      	mov	r3, r0
   1a958:	71fb      	strb	r3, [r7, #7]
   // Set the indicated mode and delay to allow it to take effect
   i2c_write8(BNO055_OPR_MODE_ADDR, mode);
   1a95a:	79fb      	ldrb	r3, [r7, #7]
   1a95c:	4619      	mov	r1, r3
   1a95e:	203d      	movs	r0, #61	@ 0x3d
   1a960:	f7ff ff1c 	bl	1a79c <i2c_write8>
   am_util_delay_ms(30);
   1a964:	201e      	movs	r0, #30
   1a966:	f7fd fd79 	bl	1845c <am_util_delay_ms>
}
   1a96a:	bf00      	nop
   1a96c:	3708      	adds	r7, #8
   1a96e:	46bd      	mov	sp, r7
   1a970:	bd80      	pop	{r7, pc}

0001a972 <set_use_external_crystal>:

static void set_use_external_crystal(void)
{
   1a972:	b580      	push	{r7, lr}
   1a974:	af00      	add	r7, sp, #0
   // Set the IMU to use an external crystal clock source
   i2c_write8(BNO055_SYS_TRIGGER_ADDR, 0xC0);
   1a976:	21c0      	movs	r1, #192	@ 0xc0
   1a978:	203f      	movs	r0, #63	@ 0x3f
   1a97a:	f7ff ff0f 	bl	1a79c <i2c_write8>
   am_util_delay_ms(1000);
   1a97e:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
   1a982:	f7fd fd6b 	bl	1845c <am_util_delay_ms>
}
   1a986:	bf00      	nop
   1a988:	bd80      	pop	{r7, pc}

0001a98a <disable_motion_interrupts>:
  set_mode(OPERATION_MODE_CONFIG);
  i2c_write8(BNO055_PWR_MODE_ADDR, 0x02);
}

static void disable_motion_interrupts(void)
{
   1a98a:	b580      	push	{r7, lr}
   1a98c:	af00      	add	r7, sp, #0
   // Disable all interrupts
   i2c_write8(BNO055_PAGE_ID_ADDR, 1);
   1a98e:	2101      	movs	r1, #1
   1a990:	2007      	movs	r0, #7
   1a992:	f7ff ff03 	bl	1a79c <i2c_write8>
   i2c_write8(ACC_INT_SET, 0);
   1a996:	2100      	movs	r1, #0
   1a998:	2012      	movs	r0, #18
   1a99a:	f7ff feff 	bl	1a79c <i2c_write8>
   i2c_write8(INT_MSK, 0);
   1a99e:	2100      	movs	r1, #0
   1a9a0:	200f      	movs	r0, #15
   1a9a2:	f7ff fefb 	bl	1a79c <i2c_write8>
   i2c_write8(INT_EN, 0);
   1a9a6:	2100      	movs	r1, #0
   1a9a8:	2010      	movs	r0, #16
   1a9aa:	f7ff fef7 	bl	1a79c <i2c_write8>
   i2c_write8(BNO055_PAGE_ID_ADDR, 0);
   1a9ae:	2100      	movs	r1, #0
   1a9b0:	2007      	movs	r0, #7
   1a9b2:	f7ff fef3 	bl	1a79c <i2c_write8>
}
   1a9b6:	bf00      	nop
   1a9b8:	bd80      	pop	{r7, pc}

0001a9ba <enable_motion_interrupts>:

static void enable_motion_interrupts(void)
{
   1a9ba:	b580      	push	{r7, lr}
   1a9bc:	af00      	add	r7, sp, #0
   // Set up interrupts for motion and non-motion events
   i2c_write8(BNO055_PAGE_ID_ADDR, 1);
   1a9be:	2101      	movs	r1, #1
   1a9c0:	2007      	movs	r0, #7
   1a9c2:	f7ff feeb 	bl	1a79c <i2c_write8>
   i2c_write8(ACC_CONFIG, 0b00000000);
   1a9c6:	2100      	movs	r1, #0
   1a9c8:	2008      	movs	r0, #8
   1a9ca:	f7ff fee7 	bl	1a79c <i2c_write8>
   i2c_write8(ACC_AM_THRE, 0b00001010);
   1a9ce:	210a      	movs	r1, #10
   1a9d0:	2011      	movs	r0, #17
   1a9d2:	f7ff fee3 	bl	1a79c <i2c_write8>
   i2c_write8(ACC_NM_THRE, 0b00001010);
   1a9d6:	210a      	movs	r1, #10
   1a9d8:	2015      	movs	r0, #21
   1a9da:	f7ff fedf 	bl	1a79c <i2c_write8>
   i2c_write8(ACC_NM_SET, 0b00001001);
   1a9de:	2109      	movs	r1, #9
   1a9e0:	2016      	movs	r0, #22
   1a9e2:	f7ff fedb 	bl	1a79c <i2c_write8>
   i2c_write8(ACC_INT_SET, 0b00011111);
   1a9e6:	211f      	movs	r1, #31
   1a9e8:	2012      	movs	r0, #18
   1a9ea:	f7ff fed7 	bl	1a79c <i2c_write8>
   i2c_write8(INT_MSK, 0xC0);
   1a9ee:	21c0      	movs	r1, #192	@ 0xc0
   1a9f0:	200f      	movs	r0, #15
   1a9f2:	f7ff fed3 	bl	1a79c <i2c_write8>
   i2c_write8(INT_EN, 0xC0);
   1a9f6:	21c0      	movs	r1, #192	@ 0xc0
   1a9f8:	2010      	movs	r0, #16
   1a9fa:	f7ff fecf 	bl	1a79c <i2c_write8>
   i2c_write8(BNO055_PAGE_ID_ADDR, 0);
   1a9fe:	2100      	movs	r1, #0
   1aa00:	2007      	movs	r0, #7
   1aa02:	f7ff fecb 	bl	1a79c <i2c_write8>
}
   1aa06:	bf00      	nop
   1aa08:	bd80      	pop	{r7, pc}
	...

0001aa0c <imu_init>:


// Public API Functions ------------------------------------------------------------------------------------------------

void imu_init(void)
{
   1aa0c:	b5b0      	push	{r4, r5, r7, lr}
   1aa0e:	b088      	sub	sp, #32
   1aa10:	af00      	add	r7, sp, #0
   // Initialize static variables
   previously_in_motion = false;
   1aa12:	4b5a      	ldr	r3, [pc, #360]	@ (1ab7c <imu_init+0x170>)
   1aa14:	2200      	movs	r2, #0
   1aa16:	701a      	strb	r2, [r3, #0]
   motion_change_callback = NULL;
   1aa18:	4b59      	ldr	r3, [pc, #356]	@ (1ab80 <imu_init+0x174>)
   1aa1a:	2200      	movs	r2, #0
   1aa1c:	601a      	str	r2, [r3, #0]

   // Create an I2C configuration structure
   const am_hal_iom_config_t i2c_config =
   1aa1e:	4b59      	ldr	r3, [pc, #356]	@ (1ab84 <imu_init+0x178>)
   1aa20:	f107 040c 	add.w	r4, r7, #12
   1aa24:	461d      	mov	r5, r3
   1aa26:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   1aa28:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   1aa2a:	682b      	ldr	r3, [r5, #0]
   1aa2c:	6023      	str	r3, [r4, #0]
      .pNBTxnBuf = NULL,
      .ui32NBTxnBufLength = 0
   };

   // Configure and assert the RESET pin
   configASSERT0(am_hal_gpio_pinconfig(PIN_IMU_RESET, am_hal_gpio_pincfg_output));
   1aa2e:	4b56      	ldr	r3, [pc, #344]	@ (1ab88 <imu_init+0x17c>)
   1aa30:	6819      	ldr	r1, [r3, #0]
   1aa32:	2041      	movs	r0, #65	@ 0x41
   1aa34:	f002 fbf6 	bl	1d224 <am_hal_gpio_pinconfig>
   1aa38:	4603      	mov	r3, r0
   1aa3a:	2b00      	cmp	r3, #0
   1aa3c:	d003      	beq.n	1aa46 <imu_init+0x3a>
   1aa3e:	21a1      	movs	r1, #161	@ 0xa1
   1aa40:	4852      	ldr	r0, [pc, #328]	@ (1ab8c <imu_init+0x180>)
   1aa42:	f000 facd 	bl	1afe0 <vAssertCalled>
   am_hal_gpio_output_set(PIN_IMU_RESET);
   1aa46:	4b52      	ldr	r3, [pc, #328]	@ (1ab90 <imu_init+0x184>)
   1aa48:	2202      	movs	r2, #2
   1aa4a:	601a      	str	r2, [r3, #0]

   // Initialize the I2C module and enable all relevant I2C pins
   am_hal_gpio_pincfg_t scl_config = g_AM_BSP_GPIO_IOM0_SCL;
   1aa4c:	4b51      	ldr	r3, [pc, #324]	@ (1ab94 <imu_init+0x188>)
   1aa4e:	681b      	ldr	r3, [r3, #0]
   1aa50:	60bb      	str	r3, [r7, #8]
   am_hal_gpio_pincfg_t sda_config = g_AM_BSP_GPIO_IOM0_SDA;
   1aa52:	4b51      	ldr	r3, [pc, #324]	@ (1ab98 <imu_init+0x18c>)
   1aa54:	681b      	ldr	r3, [r3, #0]
   1aa56:	607b      	str	r3, [r7, #4]
   scl_config.GP.cfg_b.uFuncSel = PIN_IMU_I2C_SCL_FUNCTION;
   1aa58:	7a3b      	ldrb	r3, [r7, #8]
   1aa5a:	2204      	movs	r2, #4
   1aa5c:	f362 0303 	bfi	r3, r2, #0, #4
   1aa60:	723b      	strb	r3, [r7, #8]
   sda_config.GP.cfg_b.uFuncSel = PIN_IMU_I2C_SDA_FUNCTION;
   1aa62:	793b      	ldrb	r3, [r7, #4]
   1aa64:	2204      	movs	r2, #4
   1aa66:	f362 0303 	bfi	r3, r2, #0, #4
   1aa6a:	713b      	strb	r3, [r7, #4]
   configASSERT0(am_hal_iom_initialize(IMU_I2C_NUMBER, &i2c_handle));
   1aa6c:	494b      	ldr	r1, [pc, #300]	@ (1ab9c <imu_init+0x190>)
   1aa6e:	2001      	movs	r0, #1
   1aa70:	f001 fafc 	bl	1c06c <am_hal_iom_initialize>
   1aa74:	4603      	mov	r3, r0
   1aa76:	2b00      	cmp	r3, #0
   1aa78:	d003      	beq.n	1aa82 <imu_init+0x76>
   1aa7a:	21a9      	movs	r1, #169	@ 0xa9
   1aa7c:	4843      	ldr	r0, [pc, #268]	@ (1ab8c <imu_init+0x180>)
   1aa7e:	f000 faaf 	bl	1afe0 <vAssertCalled>
   configASSERT0(am_hal_gpio_pinconfig(PIN_IMU_I2C_SCL, scl_config));
   1aa82:	68b9      	ldr	r1, [r7, #8]
   1aa84:	2008      	movs	r0, #8
   1aa86:	f002 fbcd 	bl	1d224 <am_hal_gpio_pinconfig>
   1aa8a:	4603      	mov	r3, r0
   1aa8c:	2b00      	cmp	r3, #0
   1aa8e:	d003      	beq.n	1aa98 <imu_init+0x8c>
   1aa90:	21aa      	movs	r1, #170	@ 0xaa
   1aa92:	483e      	ldr	r0, [pc, #248]	@ (1ab8c <imu_init+0x180>)
   1aa94:	f000 faa4 	bl	1afe0 <vAssertCalled>
   configASSERT0(am_hal_gpio_pinconfig(PIN_IMU_I2C_SDA, sda_config));
   1aa98:	6879      	ldr	r1, [r7, #4]
   1aa9a:	2009      	movs	r0, #9
   1aa9c:	f002 fbc2 	bl	1d224 <am_hal_gpio_pinconfig>
   1aaa0:	4603      	mov	r3, r0
   1aaa2:	2b00      	cmp	r3, #0
   1aaa4:	d003      	beq.n	1aaae <imu_init+0xa2>
   1aaa6:	21ab      	movs	r1, #171	@ 0xab
   1aaa8:	4838      	ldr	r0, [pc, #224]	@ (1ab8c <imu_init+0x180>)
   1aaaa:	f000 fa99 	bl	1afe0 <vAssertCalled>
   am_hal_iom_power_ctrl(i2c_handle, AM_HAL_SYSCTRL_WAKE, false);
   1aaae:	4b3b      	ldr	r3, [pc, #236]	@ (1ab9c <imu_init+0x190>)
   1aab0:	681b      	ldr	r3, [r3, #0]
   1aab2:	2200      	movs	r2, #0
   1aab4:	2100      	movs	r1, #0
   1aab6:	4618      	mov	r0, r3
   1aab8:	f001 fb78 	bl	1c1ac <am_hal_iom_power_ctrl>
   am_hal_iom_configure(i2c_handle, &i2c_config);
   1aabc:	4b37      	ldr	r3, [pc, #220]	@ (1ab9c <imu_init+0x190>)
   1aabe:	681b      	ldr	r3, [r3, #0]
   1aac0:	f107 020c 	add.w	r2, r7, #12
   1aac4:	4611      	mov	r1, r2
   1aac6:	4618      	mov	r0, r3
   1aac8:	f001 fc60 	bl	1c38c <am_hal_iom_configure>
   am_hal_iom_enable(i2c_handle);
   1aacc:	4b33      	ldr	r3, [pc, #204]	@ (1ab9c <imu_init+0x190>)
   1aace:	681b      	ldr	r3, [r3, #0]
   1aad0:	4618      	mov	r0, r3
   1aad2:	f001 faf3 	bl	1c0bc <am_hal_iom_enable>

   // Ensure that the device is accessible and enter configuration mode
   while (i2c_read8(BNO055_CHIP_ID_ADDR) != BNO055_ID)
   1aad6:	e002      	b.n	1aade <imu_init+0xd2>
      am_util_delay_ms(100);
   1aad8:	2064      	movs	r0, #100	@ 0x64
   1aada:	f7fd fcbf 	bl	1845c <am_util_delay_ms>
   while (i2c_read8(BNO055_CHIP_ID_ADDR) != BNO055_ID)
   1aade:	2000      	movs	r0, #0
   1aae0:	f7ff fe9a 	bl	1a818 <i2c_read8>
   1aae4:	4603      	mov	r3, r0
   1aae6:	2ba0      	cmp	r3, #160	@ 0xa0
   1aae8:	d1f6      	bne.n	1aad8 <imu_init+0xcc>
   i2c_write8(BNO055_PAGE_ID_ADDR, 0);
   1aaea:	2100      	movs	r1, #0
   1aaec:	2007      	movs	r0, #7
   1aaee:	f7ff fe55 	bl	1a79c <i2c_write8>
   set_mode(OPERATION_MODE_CONFIG);
   1aaf2:	2000      	movs	r0, #0
   1aaf4:	f7ff ff2c 	bl	1a950 <set_mode>

   // Set up an external crystal and the sensor output units
   set_use_external_crystal();
   1aaf8:	f7ff ff3b 	bl	1a972 <set_use_external_crystal>
   i2c_write8(BNO055_UNIT_SEL_ADDR, 0);
   1aafc:	2100      	movs	r1, #0
   1aafe:	203b      	movs	r0, #59	@ 0x3b
   1ab00:	f7ff fe4c 	bl	1a79c <i2c_write8>

   // Set device to use the low-power mode
   i2c_write8(BNO055_PWR_MODE_ADDR, POWER_MODE_LOWPOWER);
   1ab04:	2101      	movs	r1, #1
   1ab06:	203e      	movs	r0, #62	@ 0x3e
   1ab08:	f7ff fe48 	bl	1a79c <i2c_write8>
   am_util_delay_ms(30);
   1ab0c:	201e      	movs	r0, #30
   1ab0e:	f7fd fca5 	bl	1845c <am_util_delay_ms>

   // Set up incoming interrupts from the IMU
   disable_motion_interrupts();
   1ab12:	f7ff ff3a 	bl	1a98a <disable_motion_interrupts>
   uint32_t imu_interrupt_pin = PIN_IMU_INTERRUPT;
   1ab16:	2311      	movs	r3, #17
   1ab18:	603b      	str	r3, [r7, #0]
   configASSERT0(am_hal_gpio_pinconfig(PIN_IMU_INTERRUPT, am_hal_gpio_pincfg_input));
   1ab1a:	4b21      	ldr	r3, [pc, #132]	@ (1aba0 <imu_init+0x194>)
   1ab1c:	6819      	ldr	r1, [r3, #0]
   1ab1e:	2011      	movs	r0, #17
   1ab20:	f002 fb80 	bl	1d224 <am_hal_gpio_pinconfig>
   1ab24:	4603      	mov	r3, r0
   1ab26:	2b00      	cmp	r3, #0
   1ab28:	d003      	beq.n	1ab32 <imu_init+0x126>
   1ab2a:	21c1      	movs	r1, #193	@ 0xc1
   1ab2c:	4817      	ldr	r0, [pc, #92]	@ (1ab8c <imu_init+0x180>)
   1ab2e:	f000 fa57 	bl	1afe0 <vAssertCalled>
   configASSERT0(am_hal_gpio_interrupt_control(AM_HAL_GPIO_INT_CHANNEL_0, AM_HAL_GPIO_INT_CTRL_INDV_ENABLE, &imu_interrupt_pin));
   1ab32:	463b      	mov	r3, r7
   1ab34:	461a      	mov	r2, r3
   1ab36:	2101      	movs	r1, #1
   1ab38:	2000      	movs	r0, #0
   1ab3a:	f002 fb9f 	bl	1d27c <am_hal_gpio_interrupt_control>
   1ab3e:	4603      	mov	r3, r0
   1ab40:	2b00      	cmp	r3, #0
   1ab42:	d003      	beq.n	1ab4c <imu_init+0x140>
   1ab44:	21c2      	movs	r1, #194	@ 0xc2
   1ab46:	4811      	ldr	r0, [pc, #68]	@ (1ab8c <imu_init+0x180>)
   1ab48:	f000 fa4a 	bl	1afe0 <vAssertCalled>
   configASSERT0(am_hal_gpio_interrupt_register(AM_HAL_GPIO_INT_CHANNEL_0, PIN_IMU_INTERRUPT, imu_isr, NULL));
   1ab4c:	2300      	movs	r3, #0
   1ab4e:	4a15      	ldr	r2, [pc, #84]	@ (1aba4 <imu_init+0x198>)
   1ab50:	2111      	movs	r1, #17
   1ab52:	2000      	movs	r0, #0
   1ab54:	f002 fca4 	bl	1d4a0 <am_hal_gpio_interrupt_register>
   1ab58:	4603      	mov	r3, r0
   1ab5a:	2b00      	cmp	r3, #0
   1ab5c:	d003      	beq.n	1ab66 <imu_init+0x15a>
   1ab5e:	21c3      	movs	r1, #195	@ 0xc3
   1ab60:	480a      	ldr	r0, [pc, #40]	@ (1ab8c <imu_init+0x180>)
   1ab62:	f000 fa3d 	bl	1afe0 <vAssertCalled>
   NVIC_SetPriority(GPIO0_001F_IRQn + GPIO_NUM2IDX(PIN_IMU_INTERRUPT), NVIC_configMAX_SYSCALL_INTERRUPT_PRIORITY + 2);
   1ab66:	2105      	movs	r1, #5
   1ab68:	2038      	movs	r0, #56	@ 0x38
   1ab6a:	f7ff fded 	bl	1a748 <__NVIC_SetPriority>
   NVIC_EnableIRQ(GPIO0_001F_IRQn + GPIO_NUM2IDX(PIN_IMU_INTERRUPT));
   1ab6e:	2038      	movs	r0, #56	@ 0x38
   1ab70:	f7ff fdcc 	bl	1a70c <__NVIC_EnableIRQ>
}
   1ab74:	bf00      	nop
   1ab76:	3720      	adds	r7, #32
   1ab78:	46bd      	mov	sp, r7
   1ab7a:	bdb0      	pop	{r4, r5, r7, pc}
   1ab7c:	100035fc 	.word	0x100035fc
   1ab80:	10003600 	.word	0x10003600
   1ab84:	0002ba40 	.word	0x0002ba40
   1ab88:	0002bd08 	.word	0x0002bd08
   1ab8c:	0002ba20 	.word	0x0002ba20
   1ab90:	4001022c 	.word	0x4001022c
   1ab94:	10003038 	.word	0x10003038
   1ab98:	1000303c 	.word	0x1000303c
   1ab9c:	100035f8 	.word	0x100035f8
   1aba0:	0002bd04 	.word	0x0002bd04
   1aba4:	0001a901 	.word	0x0001a901

0001aba8 <imu_register_motion_change_callback>:
   while (am_hal_iom_disable(i2c_handle) != AM_HAL_STATUS_SUCCESS);
   am_hal_iom_uninitialize(i2c_handle);
}

void imu_register_motion_change_callback(motion_change_callback_t callback, bno055_opmode_t mode)
{
   1aba8:	b580      	push	{r7, lr}
   1abaa:	b082      	sub	sp, #8
   1abac:	af00      	add	r7, sp, #0
   1abae:	6078      	str	r0, [r7, #4]
   1abb0:	460b      	mov	r3, r1
   1abb2:	70fb      	strb	r3, [r7, #3]
   // Set up IMU motion-based interrupts
   motion_change_callback = callback;
   1abb4:	4a07      	ldr	r2, [pc, #28]	@ (1abd4 <imu_register_motion_change_callback+0x2c>)
   1abb6:	687b      	ldr	r3, [r7, #4]
   1abb8:	6013      	str	r3, [r2, #0]
   set_mode(OPERATION_MODE_CONFIG);
   1abba:	2000      	movs	r0, #0
   1abbc:	f7ff fec8 	bl	1a950 <set_mode>
   enable_motion_interrupts();
   1abc0:	f7ff fefb 	bl	1a9ba <enable_motion_interrupts>
   set_mode(mode);
   1abc4:	78fb      	ldrb	r3, [r7, #3]
   1abc6:	4618      	mov	r0, r3
   1abc8:	f7ff fec2 	bl	1a950 <set_mode>
}
   1abcc:	bf00      	nop
   1abce:	3708      	adds	r7, #8
   1abd0:	46bd      	mov	sp, r7
   1abd2:	bd80      	pop	{r7, pc}
   1abd4:	10003600 	.word	0x10003600

0001abd8 <imu_read_linear_accel_data>:
   *x = (int16_t)(accel_data[0] << 2) / 4;
   *y = (int16_t)(accel_data[1] << 2) / 4;
   *z = (int16_t)(accel_data[2] << 2) / 4;
}

void imu_read_linear_accel_data(int16_t *x, int16_t *y, int16_t *z){
   1abd8:	b580      	push	{r7, lr}
   1abda:	b084      	sub	sp, #16
   1abdc:	af00      	add	r7, sp, #0
   1abde:	60f8      	str	r0, [r7, #12]
   1abe0:	60b9      	str	r1, [r7, #8]
   1abe2:	607a      	str	r2, [r7, #4]
    static int16_t accel_data[3];
    i2c_read(BNO055_LINEAR_ACCEL_DATA_X_LSB_ADDR, (uint8_t*)accel_data, sizeof(accel_data));
   1abe4:	2206      	movs	r2, #6
   1abe6:	4916      	ldr	r1, [pc, #88]	@ (1ac40 <imu_read_linear_accel_data+0x68>)
   1abe8:	2028      	movs	r0, #40	@ 0x28
   1abea:	f7ff fe4f 	bl	1a88c <i2c_read>
    *x = (int16_t)(accel_data[0] << 2) / 4;
   1abee:	4b14      	ldr	r3, [pc, #80]	@ (1ac40 <imu_read_linear_accel_data+0x68>)
   1abf0:	f9b3 3000 	ldrsh.w	r3, [r3]
   1abf4:	009b      	lsls	r3, r3, #2
   1abf6:	b21b      	sxth	r3, r3
   1abf8:	2b00      	cmp	r3, #0
   1abfa:	da00      	bge.n	1abfe <imu_read_linear_accel_data+0x26>
   1abfc:	3303      	adds	r3, #3
   1abfe:	109b      	asrs	r3, r3, #2
   1ac00:	b21a      	sxth	r2, r3
   1ac02:	68fb      	ldr	r3, [r7, #12]
   1ac04:	801a      	strh	r2, [r3, #0]
    *y = (int16_t)(accel_data[1] << 2) / 4;
   1ac06:	4b0e      	ldr	r3, [pc, #56]	@ (1ac40 <imu_read_linear_accel_data+0x68>)
   1ac08:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
   1ac0c:	009b      	lsls	r3, r3, #2
   1ac0e:	b21b      	sxth	r3, r3
   1ac10:	2b00      	cmp	r3, #0
   1ac12:	da00      	bge.n	1ac16 <imu_read_linear_accel_data+0x3e>
   1ac14:	3303      	adds	r3, #3
   1ac16:	109b      	asrs	r3, r3, #2
   1ac18:	b21a      	sxth	r2, r3
   1ac1a:	68bb      	ldr	r3, [r7, #8]
   1ac1c:	801a      	strh	r2, [r3, #0]
    *z = (int16_t)(accel_data[2] << 2) / 4;
   1ac1e:	4b08      	ldr	r3, [pc, #32]	@ (1ac40 <imu_read_linear_accel_data+0x68>)
   1ac20:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
   1ac24:	009b      	lsls	r3, r3, #2
   1ac26:	b21b      	sxth	r3, r3
   1ac28:	2b00      	cmp	r3, #0
   1ac2a:	da00      	bge.n	1ac2e <imu_read_linear_accel_data+0x56>
   1ac2c:	3303      	adds	r3, #3
   1ac2e:	109b      	asrs	r3, r3, #2
   1ac30:	b21a      	sxth	r2, r3
   1ac32:	687b      	ldr	r3, [r7, #4]
   1ac34:	801a      	strh	r2, [r3, #0]
   1ac36:	bf00      	nop
   1ac38:	3710      	adds	r7, #16
   1ac3a:	46bd      	mov	sp, r7
   1ac3c:	bd80      	pop	{r7, pc}
   1ac3e:	bf00      	nop
   1ac40:	10003608 	.word	0x10003608

0001ac44 <logging_init>:


// Public API Functions ------------------------------------------------------------------------------------------------

void logging_init(void)
{
   1ac44:	b580      	push	{r7, lr}
   1ac46:	b082      	sub	sp, #8
   1ac48:	af00      	add	r7, sp, #0
#if defined(ENABLE_LOGGING) && ((7-ENABLE_LOGGING-7 == 14) || (7-ENABLE_LOGGING-7 != 0))

   // Enable SWO
   {
      if ((PWRCTRL->DEVPWRSTATUS_b.PWRSTCRYPTO == 1) && (CRYPTO->HOSTCCISIDLE_b.HOSTCCISIDLE == 1))
   1ac4a:	4b21      	ldr	r3, [pc, #132]	@ (1acd0 <logging_init+0x8c>)
   1ac4c:	689b      	ldr	r3, [r3, #8]
   1ac4e:	f3c3 5300 	ubfx	r3, r3, #20, #1
   1ac52:	b2db      	uxtb	r3, r3
   1ac54:	2b01      	cmp	r3, #1
   1ac56:	d11c      	bne.n	1ac92 <logging_init+0x4e>
   1ac58:	4b1e      	ldr	r3, [pc, #120]	@ (1acd4 <logging_init+0x90>)
   1ac5a:	f8d3 3a7c 	ldr.w	r3, [r3, #2684]	@ 0xa7c
   1ac5e:	f3c3 0300 	ubfx	r3, r3, #0, #1
   1ac62:	b2db      	uxtb	r3, r3
   1ac64:	2b01      	cmp	r3, #1
   1ac66:	d114      	bne.n	1ac92 <logging_init+0x4e>
      {
         uint32_t ui32dcuVal;
         am_hal_dcu_get(&ui32dcuVal);
   1ac68:	463b      	mov	r3, r7
   1ac6a:	4618      	mov	r0, r3
   1ac6c:	f002 fa3a 	bl	1d0e4 <am_hal_dcu_get>
         if (!(ui32dcuVal & AM_HAL_DCU_CPUTRC_TPIU_SWO) && (am_hal_dcu_update(true, AM_HAL_DCU_CPUTRC_TPIU_SWO) != AM_HAL_STATUS_SUCCESS))
   1ac70:	683b      	ldr	r3, [r7, #0]
   1ac72:	f003 0310 	and.w	r3, r3, #16
   1ac76:	2b00      	cmp	r3, #0
   1ac78:	d110      	bne.n	1ac9c <logging_init+0x58>
   1ac7a:	2110      	movs	r1, #16
   1ac7c:	2001      	movs	r0, #1
   1ac7e:	f002 fa79 	bl	1d174 <am_hal_dcu_update>
   1ac82:	4603      	mov	r3, r0
   1ac84:	2b00      	cmp	r3, #0
   1ac86:	d009      	beq.n	1ac9c <logging_init+0x58>
            configASSERT0(1);
   1ac88:	2113      	movs	r1, #19
   1ac8a:	4813      	ldr	r0, [pc, #76]	@ (1acd8 <logging_init+0x94>)
   1ac8c:	f000 f9a8 	bl	1afe0 <vAssertCalled>
      {
   1ac90:	e004      	b.n	1ac9c <logging_init+0x58>
      }
      else
         configASSERT0(1);
   1ac92:	2116      	movs	r1, #22
   1ac94:	4810      	ldr	r0, [pc, #64]	@ (1acd8 <logging_init+0x94>)
   1ac96:	f000 f9a3 	bl	1afe0 <vAssertCalled>
   1ac9a:	e000      	b.n	1ac9e <logging_init+0x5a>
      {
   1ac9c:	bf00      	nop
   }

   // Enable the ITM interface and the SWO pin
   am_hal_itm_enable();
   1ac9e:	f001 feaf 	bl	1ca00 <am_hal_itm_enable>
   am_hal_tpiu_enable(AM_HAL_TPIU_BAUD_1M);
   1aca2:	480e      	ldr	r0, [pc, #56]	@ (1acdc <logging_init+0x98>)
   1aca4:	f001 fffa 	bl	1cc9c <am_hal_tpiu_enable>
   am_hal_gpio_pincfg_t swo_pinconfig = g_AM_BSP_GPIO_ITM_SWO;
   1aca8:	4b0d      	ldr	r3, [pc, #52]	@ (1ace0 <logging_init+0x9c>)
   1acaa:	681b      	ldr	r3, [r3, #0]
   1acac:	607b      	str	r3, [r7, #4]
   swo_pinconfig.GP.cfg_b.uFuncSel = PIN_SWO_FUNCTION;
   1acae:	793b      	ldrb	r3, [r7, #4]
   1acb0:	2202      	movs	r2, #2
   1acb2:	f362 0303 	bfi	r3, r2, #0, #4
   1acb6:	713b      	strb	r3, [r7, #4]
   am_hal_gpio_pinconfig(PIN_SWO, swo_pinconfig);
   1acb8:	6879      	ldr	r1, [r7, #4]
   1acba:	2003      	movs	r0, #3
   1acbc:	f002 fab2 	bl	1d224 <am_hal_gpio_pinconfig>

   // Attach the ITM to the STDIO driver
   am_util_stdio_printf_init(am_hal_itm_print);
   1acc0:	4808      	ldr	r0, [pc, #32]	@ (1ace4 <logging_init+0xa0>)
   1acc2:	f7fd fbdb 	bl	1847c <am_util_stdio_printf_init>
#else

   logging_disable();

#endif
}
   1acc6:	bf00      	nop
   1acc8:	3708      	adds	r7, #8
   1acca:	46bd      	mov	sp, r7
   1accc:	bd80      	pop	{r7, pc}
   1acce:	bf00      	nop
   1acd0:	40021000 	.word	0x40021000
   1acd4:	400c0000 	.word	0x400c0000
   1acd8:	0002ba54 	.word	0x0002ba54
   1acdc:	000f4240 	.word	0x000f4240
   1ace0:	10003040 	.word	0x10003040
   1ace4:	0001ca49 	.word	0x0001ca49

0001ace8 <print_reset_reason>:
}

#if defined(ENABLE_LOGGING) && ((7-ENABLE_LOGGING-7 == 14) || (7-ENABLE_LOGGING-7 != 0))

void print_reset_reason(const am_hal_reset_status_t* reason)
{
   1ace8:	b580      	push	{r7, lr}
   1acea:	b082      	sub	sp, #8
   1acec:	af00      	add	r7, sp, #0
   1acee:	6078      	str	r0, [r7, #4]
   print("\n----------------------------------------\n");
   1acf0:	4830      	ldr	r0, [pc, #192]	@ (1adb4 <print_reset_reason+0xcc>)
   1acf2:	f7fe fa79 	bl	191e8 <am_util_stdio_printf>
   print("Reset Reasons: ");
   1acf6:	4830      	ldr	r0, [pc, #192]	@ (1adb8 <print_reset_reason+0xd0>)
   1acf8:	f7fe fa76 	bl	191e8 <am_util_stdio_printf>
   if (reason->bEXTStat)
   1acfc:	687b      	ldr	r3, [r7, #4]
   1acfe:	789b      	ldrb	r3, [r3, #2]
   1ad00:	2b00      	cmp	r3, #0
   1ad02:	d002      	beq.n	1ad0a <print_reset_reason+0x22>
      print("External Reset, ");
   1ad04:	482d      	ldr	r0, [pc, #180]	@ (1adbc <print_reset_reason+0xd4>)
   1ad06:	f7fe fa6f 	bl	191e8 <am_util_stdio_printf>
   if (reason->bPORStat)
   1ad0a:	687b      	ldr	r3, [r7, #4]
   1ad0c:	78db      	ldrb	r3, [r3, #3]
   1ad0e:	2b00      	cmp	r3, #0
   1ad10:	d002      	beq.n	1ad18 <print_reset_reason+0x30>
      print("HW Power-On Reset, ");
   1ad12:	482b      	ldr	r0, [pc, #172]	@ (1adc0 <print_reset_reason+0xd8>)
   1ad14:	f7fe fa68 	bl	191e8 <am_util_stdio_printf>
   if (reason->bBODStat)
   1ad18:	687b      	ldr	r3, [r7, #4]
   1ad1a:	791b      	ldrb	r3, [r3, #4]
   1ad1c:	2b00      	cmp	r3, #0
   1ad1e:	d002      	beq.n	1ad26 <print_reset_reason+0x3e>
      print("Brown-Out Reset, ");
   1ad20:	4828      	ldr	r0, [pc, #160]	@ (1adc4 <print_reset_reason+0xdc>)
   1ad22:	f7fe fa61 	bl	191e8 <am_util_stdio_printf>
   if (reason->bSWPORStat)
   1ad26:	687b      	ldr	r3, [r7, #4]
   1ad28:	795b      	ldrb	r3, [r3, #5]
   1ad2a:	2b00      	cmp	r3, #0
   1ad2c:	d002      	beq.n	1ad34 <print_reset_reason+0x4c>
      print("SW Power-On Reset, ");
   1ad2e:	4826      	ldr	r0, [pc, #152]	@ (1adc8 <print_reset_reason+0xe0>)
   1ad30:	f7fe fa5a 	bl	191e8 <am_util_stdio_printf>
   if (reason->bSWPOIStat)
   1ad34:	687b      	ldr	r3, [r7, #4]
   1ad36:	799b      	ldrb	r3, [r3, #6]
   1ad38:	2b00      	cmp	r3, #0
   1ad3a:	d002      	beq.n	1ad42 <print_reset_reason+0x5a>
      print("SW Power-On Initialization, ");
   1ad3c:	4823      	ldr	r0, [pc, #140]	@ (1adcc <print_reset_reason+0xe4>)
   1ad3e:	f7fe fa53 	bl	191e8 <am_util_stdio_printf>
   if (reason->bDBGRStat)
   1ad42:	687b      	ldr	r3, [r7, #4]
   1ad44:	79db      	ldrb	r3, [r3, #7]
   1ad46:	2b00      	cmp	r3, #0
   1ad48:	d002      	beq.n	1ad50 <print_reset_reason+0x68>
      print("Debugger Reset, ");
   1ad4a:	4821      	ldr	r0, [pc, #132]	@ (1add0 <print_reset_reason+0xe8>)
   1ad4c:	f7fe fa4c 	bl	191e8 <am_util_stdio_printf>
   if (reason->bWDTStat)
   1ad50:	687b      	ldr	r3, [r7, #4]
   1ad52:	7a1b      	ldrb	r3, [r3, #8]
   1ad54:	2b00      	cmp	r3, #0
   1ad56:	d002      	beq.n	1ad5e <print_reset_reason+0x76>
      print("Watch Dog Timer Reset, ");
   1ad58:	481e      	ldr	r0, [pc, #120]	@ (1add4 <print_reset_reason+0xec>)
   1ad5a:	f7fe fa45 	bl	191e8 <am_util_stdio_printf>
   if (reason->bBOUnregStat)
   1ad5e:	687b      	ldr	r3, [r7, #4]
   1ad60:	7a5b      	ldrb	r3, [r3, #9]
   1ad62:	2b00      	cmp	r3, #0
   1ad64:	d002      	beq.n	1ad6c <print_reset_reason+0x84>
      print("Unregulated Supply Brownout, ");
   1ad66:	481c      	ldr	r0, [pc, #112]	@ (1add8 <print_reset_reason+0xf0>)
   1ad68:	f7fe fa3e 	bl	191e8 <am_util_stdio_printf>
   if (reason->bBOCOREStat)
   1ad6c:	687b      	ldr	r3, [r7, #4]
   1ad6e:	7a9b      	ldrb	r3, [r3, #10]
   1ad70:	2b00      	cmp	r3, #0
   1ad72:	d002      	beq.n	1ad7a <print_reset_reason+0x92>
      print("Core Regulator Brownout, ");
   1ad74:	4819      	ldr	r0, [pc, #100]	@ (1addc <print_reset_reason+0xf4>)
   1ad76:	f7fe fa37 	bl	191e8 <am_util_stdio_printf>
   if (reason->bBOMEMStat)
   1ad7a:	687b      	ldr	r3, [r7, #4]
   1ad7c:	7adb      	ldrb	r3, [r3, #11]
   1ad7e:	2b00      	cmp	r3, #0
   1ad80:	d002      	beq.n	1ad88 <print_reset_reason+0xa0>
      print("Memory Regulator Brownout, ");
   1ad82:	4817      	ldr	r0, [pc, #92]	@ (1ade0 <print_reset_reason+0xf8>)
   1ad84:	f7fe fa30 	bl	191e8 <am_util_stdio_printf>
   if (reason->bBOHPMEMStat)
   1ad88:	687b      	ldr	r3, [r7, #4]
   1ad8a:	7b1b      	ldrb	r3, [r3, #12]
   1ad8c:	2b00      	cmp	r3, #0
   1ad8e:	d002      	beq.n	1ad96 <print_reset_reason+0xae>
      print("High-Power Memory Regulator Brownout, ");
   1ad90:	4814      	ldr	r0, [pc, #80]	@ (1ade4 <print_reset_reason+0xfc>)
   1ad92:	f7fe fa29 	bl	191e8 <am_util_stdio_printf>
   if (reason->bBOLPCOREStat)
   1ad96:	687b      	ldr	r3, [r7, #4]
   1ad98:	7b5b      	ldrb	r3, [r3, #13]
   1ad9a:	2b00      	cmp	r3, #0
   1ad9c:	d002      	beq.n	1ada4 <print_reset_reason+0xbc>
      print("Low-Power Core Regulator Brownout, ");
   1ad9e:	4812      	ldr	r0, [pc, #72]	@ (1ade8 <print_reset_reason+0x100>)
   1ada0:	f7fe fa22 	bl	191e8 <am_util_stdio_printf>
   print("\n");
   1ada4:	4811      	ldr	r0, [pc, #68]	@ (1adec <print_reset_reason+0x104>)
   1ada6:	f7fe fa1f 	bl	191e8 <am_util_stdio_printf>
}
   1adaa:	bf00      	nop
   1adac:	3708      	adds	r7, #8
   1adae:	46bd      	mov	sp, r7
   1adb0:	bd80      	pop	{r7, pc}
   1adb2:	bf00      	nop
   1adb4:	0002ba78 	.word	0x0002ba78
   1adb8:	0002baa4 	.word	0x0002baa4
   1adbc:	0002bab4 	.word	0x0002bab4
   1adc0:	0002bac8 	.word	0x0002bac8
   1adc4:	0002badc 	.word	0x0002badc
   1adc8:	0002baf0 	.word	0x0002baf0
   1adcc:	0002bb04 	.word	0x0002bb04
   1add0:	0002bb24 	.word	0x0002bb24
   1add4:	0002bb38 	.word	0x0002bb38
   1add8:	0002bb50 	.word	0x0002bb50
   1addc:	0002bb70 	.word	0x0002bb70
   1ade0:	0002bb8c 	.word	0x0002bb8c
   1ade4:	0002bba8 	.word	0x0002bba8
   1ade8:	0002bbd0 	.word	0x0002bbd0
   1adec:	0002bbf4 	.word	0x0002bbf4

0001adf0 <decamutexon>:
// DW3000 Required Driver Function Implementations ---------------------------------------------------------------------

static struct dwt_spi_s spi_functions;
static struct dwt_probe_s driver_interface;

decaIrqStatus_t decamutexon(void) { return (decaIrqStatus_t)am_hal_interrupt_master_disable(); }
   1adf0:	b580      	push	{r7, lr}
   1adf2:	af00      	add	r7, sp, #0
   1adf4:	f001 f8ae 	bl	1bf54 <am_hal_interrupt_master_disable>
   1adf8:	4603      	mov	r3, r0
   1adfa:	4618      	mov	r0, r3
   1adfc:	bd80      	pop	{r7, pc}

0001adfe <decamutexoff>:
void decamutexoff(decaIrqStatus_t status) { am_hal_interrupt_master_set((uint32_t)status); }
   1adfe:	b580      	push	{r7, lr}
   1ae00:	b082      	sub	sp, #8
   1ae02:	af00      	add	r7, sp, #0
   1ae04:	6078      	str	r0, [r7, #4]
   1ae06:	687b      	ldr	r3, [r7, #4]
   1ae08:	4618      	mov	r0, r3
   1ae0a:	f001 f8a7 	bl	1bf5c <am_hal_interrupt_master_set>
   1ae0e:	bf00      	nop
   1ae10:	3708      	adds	r7, #8
   1ae12:	46bd      	mov	sp, r7
   1ae14:	bd80      	pop	{r7, pc}

0001ae16 <deca_sleep>:
void deca_sleep(unsigned int time_ms) { am_hal_delay_us(time_ms * 1000); }
   1ae16:	b580      	push	{r7, lr}
   1ae18:	b082      	sub	sp, #8
   1ae1a:	af00      	add	r7, sp, #0
   1ae1c:	6078      	str	r0, [r7, #4]
   1ae1e:	687b      	ldr	r3, [r7, #4]
   1ae20:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
   1ae24:	fb02 f303 	mul.w	r3, r2, r3
   1ae28:	4618      	mov	r0, r3
   1ae2a:	f001 ff6d 	bl	1cd08 <am_hal_delay_us>
   1ae2e:	bf00      	nop
   1ae30:	3708      	adds	r7, #8
   1ae32:	46bd      	mov	sp, r7
   1ae34:	bd80      	pop	{r7, pc}

0001ae36 <deca_usleep>:
void deca_usleep(unsigned long time_us) { am_hal_delay_us(time_us); }
   1ae36:	b580      	push	{r7, lr}
   1ae38:	b082      	sub	sp, #8
   1ae3a:	af00      	add	r7, sp, #0
   1ae3c:	6078      	str	r0, [r7, #4]
   1ae3e:	6878      	ldr	r0, [r7, #4]
   1ae40:	f001 ff62 	bl	1cd08 <am_hal_delay_us>
   1ae44:	bf00      	nop
   1ae46:	3708      	adds	r7, #8
   1ae48:	46bd      	mov	sp, r7
   1ae4a:	bd80      	pop	{r7, pc}

0001ae4c <am_gpio0_001f_isr>:
void _getpid(void) {}
void _isatty(void) {}
void _kill(void) {}

void am_gpio0_001f_isr(void)
{
   1ae4c:	b580      	push	{r7, lr}
   1ae4e:	b082      	sub	sp, #8
   1ae50:	af00      	add	r7, sp, #0
   static uint32_t status;
   AM_CRITICAL_BEGIN
   1ae52:	f001 f87f 	bl	1bf54 <am_hal_interrupt_master_disable>
   1ae56:	4603      	mov	r3, r0
   1ae58:	607b      	str	r3, [r7, #4]
   am_hal_gpio_interrupt_irq_status_get(GPIO0_001F_IRQn, false, &status);
   1ae5a:	4a0c      	ldr	r2, [pc, #48]	@ (1ae8c <am_gpio0_001f_isr+0x40>)
   1ae5c:	2100      	movs	r1, #0
   1ae5e:	2038      	movs	r0, #56	@ 0x38
   1ae60:	f002 fad8 	bl	1d414 <am_hal_gpio_interrupt_irq_status_get>
   am_hal_gpio_interrupt_irq_clear(GPIO0_001F_IRQn, status);
   1ae64:	4b09      	ldr	r3, [pc, #36]	@ (1ae8c <am_gpio0_001f_isr+0x40>)
   1ae66:	681b      	ldr	r3, [r3, #0]
   1ae68:	4619      	mov	r1, r3
   1ae6a:	2038      	movs	r0, #56	@ 0x38
   1ae6c:	f002 fb0c 	bl	1d488 <am_hal_gpio_interrupt_irq_clear>
   AM_CRITICAL_END
   1ae70:	687b      	ldr	r3, [r7, #4]
   1ae72:	4618      	mov	r0, r3
   1ae74:	f001 f872 	bl	1bf5c <am_hal_interrupt_master_set>
   am_hal_gpio_interrupt_service(GPIO0_001F_IRQn, status);
   1ae78:	4b04      	ldr	r3, [pc, #16]	@ (1ae8c <am_gpio0_001f_isr+0x40>)
   1ae7a:	681b      	ldr	r3, [r3, #0]
   1ae7c:	4619      	mov	r1, r3
   1ae7e:	2038      	movs	r0, #56	@ 0x38
   1ae80:	f002 fb50 	bl	1d524 <am_hal_gpio_interrupt_service>
}
   1ae84:	bf00      	nop
   1ae86:	3708      	adds	r7, #8
   1ae88:	46bd      	mov	sp, r7
   1ae8a:	bd80      	pop	{r7, pc}
   1ae8c:	10003610 	.word	0x10003610

0001ae90 <am_gpio0_203f_isr>:

void am_gpio0_203f_isr(void)
{
   1ae90:	b580      	push	{r7, lr}
   1ae92:	b082      	sub	sp, #8
   1ae94:	af00      	add	r7, sp, #0
   static uint32_t status;
   AM_CRITICAL_BEGIN
   1ae96:	f001 f85d 	bl	1bf54 <am_hal_interrupt_master_disable>
   1ae9a:	4603      	mov	r3, r0
   1ae9c:	607b      	str	r3, [r7, #4]
   am_hal_gpio_interrupt_irq_status_get(GPIO0_203F_IRQn, false, &status);
   1ae9e:	4a0c      	ldr	r2, [pc, #48]	@ (1aed0 <am_gpio0_203f_isr+0x40>)
   1aea0:	2100      	movs	r1, #0
   1aea2:	2039      	movs	r0, #57	@ 0x39
   1aea4:	f002 fab6 	bl	1d414 <am_hal_gpio_interrupt_irq_status_get>
   am_hal_gpio_interrupt_irq_clear(GPIO0_203F_IRQn, status);
   1aea8:	4b09      	ldr	r3, [pc, #36]	@ (1aed0 <am_gpio0_203f_isr+0x40>)
   1aeaa:	681b      	ldr	r3, [r3, #0]
   1aeac:	4619      	mov	r1, r3
   1aeae:	2039      	movs	r0, #57	@ 0x39
   1aeb0:	f002 faea 	bl	1d488 <am_hal_gpio_interrupt_irq_clear>
   AM_CRITICAL_END
   1aeb4:	687b      	ldr	r3, [r7, #4]
   1aeb6:	4618      	mov	r0, r3
   1aeb8:	f001 f850 	bl	1bf5c <am_hal_interrupt_master_set>
   am_hal_gpio_interrupt_service(GPIO0_203F_IRQn, status);
   1aebc:	4b04      	ldr	r3, [pc, #16]	@ (1aed0 <am_gpio0_203f_isr+0x40>)
   1aebe:	681b      	ldr	r3, [r3, #0]
   1aec0:	4619      	mov	r1, r3
   1aec2:	2039      	movs	r0, #57	@ 0x39
   1aec4:	f002 fb2e 	bl	1d524 <am_hal_gpio_interrupt_service>
}
   1aec8:	bf00      	nop
   1aeca:	3708      	adds	r7, #8
   1aecc:	46bd      	mov	sp, r7
   1aece:	bd80      	pop	{r7, pc}
   1aed0:	10003614 	.word	0x10003614

0001aed4 <am_gpio0_405f_isr>:

void am_gpio0_405f_isr(void)
{
   1aed4:	b580      	push	{r7, lr}
   1aed6:	b082      	sub	sp, #8
   1aed8:	af00      	add	r7, sp, #0
   static uint32_t status;
   AM_CRITICAL_BEGIN
   1aeda:	f001 f83b 	bl	1bf54 <am_hal_interrupt_master_disable>
   1aede:	4603      	mov	r3, r0
   1aee0:	607b      	str	r3, [r7, #4]
   am_hal_gpio_interrupt_irq_status_get(GPIO0_405F_IRQn, false, &status);
   1aee2:	4a0c      	ldr	r2, [pc, #48]	@ (1af14 <am_gpio0_405f_isr+0x40>)
   1aee4:	2100      	movs	r1, #0
   1aee6:	203a      	movs	r0, #58	@ 0x3a
   1aee8:	f002 fa94 	bl	1d414 <am_hal_gpio_interrupt_irq_status_get>
   am_hal_gpio_interrupt_irq_clear(GPIO0_405F_IRQn, status);
   1aeec:	4b09      	ldr	r3, [pc, #36]	@ (1af14 <am_gpio0_405f_isr+0x40>)
   1aeee:	681b      	ldr	r3, [r3, #0]
   1aef0:	4619      	mov	r1, r3
   1aef2:	203a      	movs	r0, #58	@ 0x3a
   1aef4:	f002 fac8 	bl	1d488 <am_hal_gpio_interrupt_irq_clear>
   AM_CRITICAL_END
   1aef8:	687b      	ldr	r3, [r7, #4]
   1aefa:	4618      	mov	r0, r3
   1aefc:	f001 f82e 	bl	1bf5c <am_hal_interrupt_master_set>
   am_hal_gpio_interrupt_service(GPIO0_405F_IRQn, status);
   1af00:	4b04      	ldr	r3, [pc, #16]	@ (1af14 <am_gpio0_405f_isr+0x40>)
   1af02:	681b      	ldr	r3, [r3, #0]
   1af04:	4619      	mov	r1, r3
   1af06:	203a      	movs	r0, #58	@ 0x3a
   1af08:	f002 fb0c 	bl	1d524 <am_hal_gpio_interrupt_service>
}
   1af0c:	bf00      	nop
   1af0e:	3708      	adds	r7, #8
   1af10:	46bd      	mov	sp, r7
   1af12:	bd80      	pop	{r7, pc}
   1af14:	10003618 	.word	0x10003618

0001af18 <am_gpio0_607f_isr>:

void am_gpio0_607f_isr(void)
{
   1af18:	b580      	push	{r7, lr}
   1af1a:	b082      	sub	sp, #8
   1af1c:	af00      	add	r7, sp, #0
   static uint32_t status;
   AM_CRITICAL_BEGIN
   1af1e:	f001 f819 	bl	1bf54 <am_hal_interrupt_master_disable>
   1af22:	4603      	mov	r3, r0
   1af24:	607b      	str	r3, [r7, #4]
   am_hal_gpio_interrupt_irq_status_get(GPIO0_607F_IRQn, false, &status);
   1af26:	4a0c      	ldr	r2, [pc, #48]	@ (1af58 <am_gpio0_607f_isr+0x40>)
   1af28:	2100      	movs	r1, #0
   1af2a:	203b      	movs	r0, #59	@ 0x3b
   1af2c:	f002 fa72 	bl	1d414 <am_hal_gpio_interrupt_irq_status_get>
   am_hal_gpio_interrupt_irq_clear(GPIO0_607F_IRQn, status);
   1af30:	4b09      	ldr	r3, [pc, #36]	@ (1af58 <am_gpio0_607f_isr+0x40>)
   1af32:	681b      	ldr	r3, [r3, #0]
   1af34:	4619      	mov	r1, r3
   1af36:	203b      	movs	r0, #59	@ 0x3b
   1af38:	f002 faa6 	bl	1d488 <am_hal_gpio_interrupt_irq_clear>
   AM_CRITICAL_END
   1af3c:	687b      	ldr	r3, [r7, #4]
   1af3e:	4618      	mov	r0, r3
   1af40:	f001 f80c 	bl	1bf5c <am_hal_interrupt_master_set>
   am_hal_gpio_interrupt_service(GPIO0_607F_IRQn, status);
   1af44:	4b04      	ldr	r3, [pc, #16]	@ (1af58 <am_gpio0_607f_isr+0x40>)
   1af46:	681b      	ldr	r3, [r3, #0]
   1af48:	4619      	mov	r1, r3
   1af4a:	203b      	movs	r0, #59	@ 0x3b
   1af4c:	f002 faea 	bl	1d524 <am_hal_gpio_interrupt_service>
}
   1af50:	bf00      	nop
   1af52:	3708      	adds	r7, #8
   1af54:	46bd      	mov	sp, r7
   1af56:	bd80      	pop	{r7, pc}
   1af58:	1000361c 	.word	0x1000361c

0001af5c <am_rtc_isr>:

void am_rtc_isr(void)
{
   1af5c:	b580      	push	{r7, lr}
   1af5e:	b082      	sub	sp, #8
   1af60:	af00      	add	r7, sp, #0
   static am_hal_rtc_alarm_repeat_e repeat_interval;
   AM_CRITICAL_BEGIN
   1af62:	f000 fff7 	bl	1bf54 <am_hal_interrupt_master_disable>
   1af66:	4603      	mov	r3, r0
   1af68:	607b      	str	r3, [r7, #4]
   am_hal_rtc_alarm_get(NULL, &repeat_interval);
   1af6a:	490a      	ldr	r1, [pc, #40]	@ (1af94 <am_rtc_isr+0x38>)
   1af6c:	2000      	movs	r0, #0
   1af6e:	f001 fdf7 	bl	1cb60 <am_hal_rtc_alarm_get>
   am_hal_rtc_interrupt_clear(AM_HAL_RTC_INT_ALM);
   1af72:	2001      	movs	r0, #1
   1af74:	f001 fe68 	bl	1cc48 <am_hal_rtc_interrupt_clear>
   AM_CRITICAL_END
   1af78:	687b      	ldr	r3, [r7, #4]
   1af7a:	4618      	mov	r0, r3
   1af7c:	f000 ffee 	bl	1bf5c <am_hal_interrupt_master_set>
   if (repeat_interval == AM_HAL_RTC_ALM_RPT_SEC)
   1af80:	4b04      	ldr	r3, [pc, #16]	@ (1af94 <am_rtc_isr+0x38>)
   1af82:	781b      	ldrb	r3, [r3, #0]
   1af84:	2b07      	cmp	r3, #7
   1af86:	d101      	bne.n	1af8c <am_rtc_isr+0x30>
      scheduler_rtc_isr();
   1af88:	f000 f8e8 	bl	1b15c <scheduler_rtc_isr>
}
   1af8c:	bf00      	nop
   1af8e:	3708      	adds	r7, #8
   1af90:	46bd      	mov	sp, r7
   1af92:	bd80      	pop	{r7, pc}
   1af94:	10003620 	.word	0x10003620

0001af98 <system_hard_fault_handler>:
      "mrsne r0, psp \n"                         \
      "b system_hard_fault_handler \n"           )

__attribute__((optimize("O0")))
void system_hard_fault_handler(sContextStateFrame *frame)
{
   1af98:	b480      	push	{r7}
   1af9a:	b083      	sub	sp, #12
   1af9c:	af00      	add	r7, sp, #0
   1af9e:	6078      	str	r0, [r7, #4]
#ifdef DEBUGGING
   do {
      if (CoreDebug->DHCSR & (1 << 0))
   1afa0:	4b06      	ldr	r3, [pc, #24]	@ (1afbc <system_hard_fault_handler+0x24>)
   1afa2:	681b      	ldr	r3, [r3, #0]
   1afa4:	f003 0301 	and.w	r3, r3, #1
   1afa8:	2b00      	cmp	r3, #0
   1afaa:	d000      	beq.n	1afae <system_hard_fault_handler+0x16>
         __asm("bkpt 1");
   1afac:	be01      	bkpt	0x0001
   } while (0);
#else
   NVIC_SystemReset();
   while (true) {}
#endif
}
   1afae:	bf00      	nop
   1afb0:	370c      	adds	r7, #12
   1afb2:	46bd      	mov	sp, r7
   1afb4:	f85d 7b04 	ldr.w	r7, [sp], #4
   1afb8:	4770      	bx	lr
   1afba:	bf00      	nop
   1afbc:	e000edf0 	.word	0xe000edf0

0001afc0 <HardFault_Handler>:

void HardFault_Handler(void) { HARDFAULT_HANDLING_ASM(); }
   1afc0:	b480      	push	{r7}
   1afc2:	af00      	add	r7, sp, #0
   1afc4:	f01e 0f04 	tst.w	lr, #4
   1afc8:	bf0c      	ite	eq
   1afca:	f3ef 8008 	mrseq	r0, MSP
   1afce:	f3ef 8009 	mrsne	r0, PSP
   1afd2:	f7ff bfe1 	b.w	1af98 <system_hard_fault_handler>
   1afd6:	bf00      	nop
   1afd8:	46bd      	mov	sp, r7
   1afda:	f85d 7b04 	ldr.w	r7, [sp], #4
   1afde:	4770      	bx	lr

0001afe0 <vAssertCalled>:
   while (1)
      __asm("BKPT #0\n");
}

void vAssertCalled(const char * const pcFileName, unsigned long ulLine)
{
   1afe0:	b580      	push	{r7, lr}
   1afe2:	b084      	sub	sp, #16
   1afe4:	af00      	add	r7, sp, #0
   1afe6:	6078      	str	r0, [r7, #4]
   1afe8:	6039      	str	r1, [r7, #0]
   volatile uint32_t ulSetToNonZeroInDebuggerToContinue = 0;
   1afea:	2300      	movs	r3, #0
   1afec:	60fb      	str	r3, [r7, #12]
   taskENTER_CRITICAL();
   1afee:	f7fe f9cb 	bl	19388 <vPortEnterCritical>
   {
      // You can step out of this function to debug the assertion by using
      // the debugger to set ulSetToNonZeroInDebuggerToContinue to a non-zero value.
      while (ulSetToNonZeroInDebuggerToContinue == 0)
   1aff2:	bf00      	nop
   1aff4:	68fb      	ldr	r3, [r7, #12]
   1aff6:	2b00      	cmp	r3, #0
   1aff8:	d0fc      	beq.n	1aff4 <vAssertCalled+0x14>
         portNOP();
   }
   taskEXIT_CRITICAL();
   1affa:	f7fe f9df 	bl	193bc <vPortExitCritical>
}
   1affe:	bf00      	nop
   1b000:	3710      	adds	r7, #16
   1b002:	46bd      	mov	sp, r7
   1b004:	bd80      	pop	{r7, pc}
	...

0001b008 <setup_hardware>:


// Public API Functions ------------------------------------------------------------------------------------------------

void setup_hardware(void)
{
   1b008:	b580      	push	{r7, lr}
   1b00a:	b08a      	sub	sp, #40	@ 0x28
   1b00c:	af00      	add	r7, sp, #0
   // Read the hardware reset reason
   am_hal_reset_status_t reset_reason;
   am_hal_reset_status_get(&reset_reason);
   1b00e:	f107 0318 	add.w	r3, r7, #24
   1b012:	4618      	mov	r0, r3
   1b014:	f001 fd62 	bl	1cadc <am_hal_reset_status_get>

   // Enable the floating point module
   am_hal_sysctrl_fpu_enable();
   1b018:	f001 fe1e 	bl	1cc58 <am_hal_sysctrl_fpu_enable>
   am_hal_sysctrl_fpu_stacking_enable(true);
   1b01c:	2001      	movs	r0, #1
   1b01e:	f001 fe23 	bl	1cc68 <am_hal_sysctrl_fpu_stacking_enable>

   // Configure the board to operate in low-power mode
   am_hal_pwrctrl_low_power_init();
   1b022:	f002 fe35 	bl	1dc90 <am_hal_pwrctrl_low_power_init>
   am_hal_pwrctrl_control(AM_HAL_PWRCTRL_CONTROL_SIMOBUCK_INIT, NULL);
   1b026:	2100      	movs	r1, #0
   1b028:	2000      	movs	r0, #0
   1b02a:	f002 fefb 	bl	1de24 <am_hal_pwrctrl_control>

   // Configure only the necessary memory
   am_hal_pwrctrl_dsp_memory_config_t dsp_mem_config =
   1b02e:	f107 0310 	add.w	r3, r7, #16
   1b032:	2200      	movs	r2, #0
   1b034:	601a      	str	r2, [r3, #0]
   1b036:	711a      	strb	r2, [r3, #4]
      .bRetainCache = false,
      .bEnableRAM = false,
      .bActiveRAM = false,
      .bRetainRAM = false
   };
   am_hal_pwrctrl_mcu_memory_config_t mcu_mem_config =
   1b038:	4a16      	ldr	r2, [pc, #88]	@ (1b094 <setup_hardware+0x8c>)
   1b03a:	f107 0308 	add.w	r3, r7, #8
   1b03e:	e892 0003 	ldmia.w	r2, {r0, r1}
   1b042:	6018      	str	r0, [r3, #0]
   1b044:	3304      	adds	r3, #4
   1b046:	8019      	strh	r1, [r3, #0]
      .eDTCMCfg     = AM_HAL_PWRCTRL_DTCM_384K,
      .eRetainDTCM  = AM_HAL_PWRCTRL_DTCM_384K,
      .bEnableNVM0  = true,
      .bRetainNVM0  = false
   };
   am_hal_pwrctrl_sram_memcfg_t sram_mem_config =
   1b048:	463b      	mov	r3, r7
   1b04a:	2200      	movs	r2, #0
   1b04c:	601a      	str	r2, [r3, #0]
   1b04e:	809a      	strh	r2, [r3, #4]
      .eActiveWithGFX     = AM_HAL_PWRCTRL_SRAM_NONE,
      .eActiveWithDISP    = AM_HAL_PWRCTRL_SRAM_NONE,
      .eActiveWithDSP     = AM_HAL_PWRCTRL_SRAM_NONE,
      .eSRAMRetain        = AM_HAL_PWRCTRL_SRAM_NONE
   };
   am_hal_pwrctrl_dsp_memory_config(AM_HAL_DSP0, &dsp_mem_config);
   1b050:	f107 0310 	add.w	r3, r7, #16
   1b054:	4619      	mov	r1, r3
   1b056:	2000      	movs	r0, #0
   1b058:	f002 fba2 	bl	1d7a0 <am_hal_pwrctrl_dsp_memory_config>
   am_hal_pwrctrl_dsp_memory_config(AM_HAL_DSP1, &dsp_mem_config);
   1b05c:	f107 0310 	add.w	r3, r7, #16
   1b060:	4619      	mov	r1, r3
   1b062:	2001      	movs	r0, #1
   1b064:	f002 fb9c 	bl	1d7a0 <am_hal_pwrctrl_dsp_memory_config>
   am_hal_pwrctrl_mcu_memory_config(&mcu_mem_config);
   1b068:	f107 0308 	add.w	r3, r7, #8
   1b06c:	4618      	mov	r0, r3
   1b06e:	f002 fa91 	bl	1d594 <am_hal_pwrctrl_mcu_memory_config>
   am_hal_pwrctrl_sram_config(&sram_mem_config);
   1b072:	463b      	mov	r3, r7
   1b074:	4618      	mov	r0, r3
   1b076:	f002 fb3b 	bl	1d6f0 <am_hal_pwrctrl_sram_config>
   am_hal_cachectrl_disable();
   1b07a:	f000 fe95 	bl	1bda8 <am_hal_cachectrl_disable>

   // Set up printing to the console
   logging_init();
   1b07e:	f7ff fde1 	bl	1ac44 <logging_init>
   print_reset_reason(&reset_reason);
   1b082:	f107 0318 	add.w	r3, r7, #24
   1b086:	4618      	mov	r0, r3
   1b088:	f7ff fe2e 	bl	1ace8 <print_reset_reason>
}
   1b08c:	bf00      	nop
   1b08e:	3728      	adds	r7, #40	@ 0x28
   1b090:	46bd      	mov	sp, r7
   1b092:	bd80      	pop	{r7, pc}
   1b094:	0002bc2c 	.word	0x0002bc2c

0001b098 <system_enable_interrupts>:
{
   am_hal_reset_control(AM_HAL_RESET_CONTROL_SWPOR, NULL);
}

void system_enable_interrupts(bool enabled)
{
   1b098:	b580      	push	{r7, lr}
   1b09a:	b082      	sub	sp, #8
   1b09c:	af00      	add	r7, sp, #0
   1b09e:	4603      	mov	r3, r0
   1b0a0:	71fb      	strb	r3, [r7, #7]
   // Enable or disable all system interrupts
   if (enabled)
   1b0a2:	79fb      	ldrb	r3, [r7, #7]
   1b0a4:	2b00      	cmp	r3, #0
   1b0a6:	d002      	beq.n	1b0ae <system_enable_interrupts+0x16>
      am_hal_interrupt_master_enable();
   1b0a8:	f000 ff50 	bl	1bf4c <am_hal_interrupt_master_enable>
   else
      am_hal_interrupt_master_disable();
}
   1b0ac:	e001      	b.n	1b0b2 <system_enable_interrupts+0x1a>
      am_hal_interrupt_master_disable();
   1b0ae:	f000 ff51 	bl	1bf54 <am_hal_interrupt_master_disable>
}
   1b0b2:	bf00      	nop
   1b0b4:	3708      	adds	r7, #8
   1b0b6:	46bd      	mov	sp, r7
   1b0b8:	bd80      	pop	{r7, pc}
	...

0001b0bc <am_timer04_isr>:
      discovered_devices[num_discovered_devices++][EUI_LEN] = ranging_role;
   }
}

void am_timer04_isr(void)
{
   1b0bc:	b580      	push	{r7, lr}
   1b0be:	b084      	sub	sp, #16
   1b0c0:	af02      	add	r7, sp, #8
   // Immediately stop scanning for additional devices
   bluetooth_stop_scanning();
   1b0c2:	f7ff fa7d 	bl	1a5c0 <bluetooth_stop_scanning>

   // Notify the main task to handle the interrupt
   BaseType_t xHigherPriorityTaskWoken = pdFALSE;
   1b0c6:	2300      	movs	r3, #0
   1b0c8:	607b      	str	r3, [r7, #4]
   am_hal_timer_interrupt_clear(AM_HAL_TIMER_MASK(BLE_SCANNING_TIMER_NUMBER, AM_HAL_TIMER_COMPARE_BOTH));
   1b0ca:	f44f 7040 	mov.w	r0, #768	@ 0x300
   1b0ce:	f003 f907 	bl	1e2e0 <am_hal_timer_interrupt_clear>
   xTaskNotifyFromISR(app_task_handle, APP_NOTIFY_NETWORK_FOUND, eSetBits, &xHigherPriorityTaskWoken);
   1b0d2:	4b0d      	ldr	r3, [pc, #52]	@ (1b108 <am_timer04_isr+0x4c>)
   1b0d4:	6818      	ldr	r0, [r3, #0]
   1b0d6:	1d3b      	adds	r3, r7, #4
   1b0d8:	9301      	str	r3, [sp, #4]
   1b0da:	2300      	movs	r3, #0
   1b0dc:	9300      	str	r3, [sp, #0]
   1b0de:	2301      	movs	r3, #1
   1b0e0:	2204      	movs	r2, #4
   1b0e2:	2100      	movs	r1, #0
   1b0e4:	f7fe ff52 	bl	19f8c <xTaskGenericNotifyFromISR>
   portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
   1b0e8:	687b      	ldr	r3, [r7, #4]
   1b0ea:	2b00      	cmp	r3, #0
   1b0ec:	d007      	beq.n	1b0fe <am_timer04_isr+0x42>
   1b0ee:	4b07      	ldr	r3, [pc, #28]	@ (1b10c <am_timer04_isr+0x50>)
   1b0f0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
   1b0f4:	601a      	str	r2, [r3, #0]
   1b0f6:	f3bf 8f4f 	dsb	sy
   1b0fa:	f3bf 8f6f 	isb	sy
}
   1b0fe:	bf00      	nop
   1b100:	3708      	adds	r7, #8
   1b102:	46bd      	mov	sp, r7
   1b104:	bd80      	pop	{r7, pc}
   1b106:	bf00      	nop
   1b108:	10003624 	.word	0x10003624
   1b10c:	e000ed04 	.word	0xe000ed04

0001b110 <am_timer02_isr>:


// Interrupt Service Routines and Callbacks ----------------------------------------------------------------------------

void am_timer02_isr(void)
{
   1b110:	b580      	push	{r7, lr}
   1b112:	b084      	sub	sp, #16
   1b114:	af02      	add	r7, sp, #8
   // Notify the main task to handle the interrupt
   BaseType_t xHigherPriorityTaskWoken = pdFALSE;
   1b116:	2300      	movs	r3, #0
   1b118:	607b      	str	r3, [r7, #4]
   am_hal_timer_interrupt_clear(AM_HAL_TIMER_MASK(RADIO_WAKEUP_TIMER_NUMBER, AM_HAL_TIMER_COMPARE_BOTH));
   1b11a:	2030      	movs	r0, #48	@ 0x30
   1b11c:	f003 f8e0 	bl	1e2e0 <am_hal_timer_interrupt_clear>
   xTaskNotifyFromISR(notification_handle, RANGING_NEW_ROUND_START, eSetBits, &xHigherPriorityTaskWoken);
   1b120:	4b0c      	ldr	r3, [pc, #48]	@ (1b154 <am_timer02_isr+0x44>)
   1b122:	6818      	ldr	r0, [r3, #0]
   1b124:	1d3b      	adds	r3, r7, #4
   1b126:	9301      	str	r3, [sp, #4]
   1b128:	2300      	movs	r3, #0
   1b12a:	9300      	str	r3, [sp, #0]
   1b12c:	2301      	movs	r3, #1
   1b12e:	2202      	movs	r2, #2
   1b130:	2100      	movs	r1, #0
   1b132:	f7fe ff2b 	bl	19f8c <xTaskGenericNotifyFromISR>
   portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
   1b136:	687b      	ldr	r3, [r7, #4]
   1b138:	2b00      	cmp	r3, #0
   1b13a:	d007      	beq.n	1b14c <am_timer02_isr+0x3c>
   1b13c:	4b06      	ldr	r3, [pc, #24]	@ (1b158 <am_timer02_isr+0x48>)
   1b13e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
   1b142:	601a      	str	r2, [r3, #0]
   1b144:	f3bf 8f4f 	dsb	sy
   1b148:	f3bf 8f6f 	isb	sy
}
   1b14c:	bf00      	nop
   1b14e:	3708      	adds	r7, #8
   1b150:	46bd      	mov	sp, r7
   1b152:	bd80      	pop	{r7, pc}
   1b154:	10003628 	.word	0x10003628
   1b158:	e000ed04 	.word	0xe000ed04

0001b15c <scheduler_rtc_isr>:

void scheduler_rtc_isr(void)
{
   1b15c:	b580      	push	{r7, lr}
   1b15e:	b084      	sub	sp, #16
   1b160:	af02      	add	r7, sp, #8
   // Notify the main task to handle the interrupt
   BaseType_t xHigherPriorityTaskWoken = pdFALSE;
   1b162:	2300      	movs	r3, #0
   1b164:	607b      	str	r3, [r7, #4]
   xTaskNotifyFromISR(notification_handle, RANGING_NEW_ROUND_START, eSetBits, &xHigherPriorityTaskWoken);
   1b166:	4b0d      	ldr	r3, [pc, #52]	@ (1b19c <scheduler_rtc_isr+0x40>)
   1b168:	6818      	ldr	r0, [r3, #0]
   1b16a:	1d3b      	adds	r3, r7, #4
   1b16c:	9301      	str	r3, [sp, #4]
   1b16e:	2300      	movs	r3, #0
   1b170:	9300      	str	r3, [sp, #0]
   1b172:	2301      	movs	r3, #1
   1b174:	2202      	movs	r2, #2
   1b176:	2100      	movs	r1, #0
   1b178:	f7fe ff08 	bl	19f8c <xTaskGenericNotifyFromISR>
   portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
   1b17c:	687b      	ldr	r3, [r7, #4]
   1b17e:	2b00      	cmp	r3, #0
   1b180:	d007      	beq.n	1b192 <scheduler_rtc_isr+0x36>
   1b182:	4b07      	ldr	r3, [pc, #28]	@ (1b1a0 <scheduler_rtc_isr+0x44>)
   1b184:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
   1b188:	601a      	str	r2, [r3, #0]
   1b18a:	f3bf 8f4f 	dsb	sy
   1b18e:	f3bf 8f6f 	isb	sy
}
   1b192:	bf00      	nop
   1b194:	3708      	adds	r7, #8
   1b196:	46bd      	mov	sp, r7
   1b198:	bd80      	pop	{r7, pc}
   1b19a:	bf00      	nop
   1b19c:	10003628 	.word	0x10003628
   1b1a0:	e000ed04 	.word	0xe000ed04

0001b1a4 <motion_interrupt>:
#include "imu.h"
#include "logging.h"
#include "system.h"

static void motion_interrupt(bool in_motion)
{
   1b1a4:	b580      	push	{r7, lr}
   1b1a6:	b082      	sub	sp, #8
   1b1a8:	af00      	add	r7, sp, #0
   1b1aa:	4603      	mov	r3, r0
   1b1ac:	71fb      	strb	r3, [r7, #7]
   print("Device is %s\n", in_motion ? "IN MOTION" : "STATIONARY");
   1b1ae:	79fb      	ldrb	r3, [r7, #7]
   1b1b0:	2b00      	cmp	r3, #0
   1b1b2:	d001      	beq.n	1b1b8 <motion_interrupt+0x14>
   1b1b4:	4b05      	ldr	r3, [pc, #20]	@ (1b1cc <motion_interrupt+0x28>)
   1b1b6:	e000      	b.n	1b1ba <motion_interrupt+0x16>
   1b1b8:	4b05      	ldr	r3, [pc, #20]	@ (1b1d0 <motion_interrupt+0x2c>)
   1b1ba:	4619      	mov	r1, r3
   1b1bc:	4805      	ldr	r0, [pc, #20]	@ (1b1d4 <motion_interrupt+0x30>)
   1b1be:	f7fe f813 	bl	191e8 <am_util_stdio_printf>
}
   1b1c2:	bf00      	nop
   1b1c4:	3708      	adds	r7, #8
   1b1c6:	46bd      	mov	sp, r7
   1b1c8:	bd80      	pop	{r7, pc}
   1b1ca:	bf00      	nop
   1b1cc:	0002bc50 	.word	0x0002bc50
   1b1d0:	0002bc5c 	.word	0x0002bc5c
   1b1d4:	0002bc68 	.word	0x0002bc68

0001b1d8 <main>:

int main(void)
{
   1b1d8:	b580      	push	{r7, lr}
   1b1da:	b082      	sub	sp, #8
   1b1dc:	af00      	add	r7, sp, #0
   // Set up system hardware
   setup_hardware();
   1b1de:	f7ff ff13 	bl	1b008 <setup_hardware>
   imu_init();
   1b1e2:	f7ff fc13 	bl	1aa0c <imu_init>
   system_enable_interrupts(true);
   1b1e6:	2001      	movs	r0, #1
   1b1e8:	f7ff ff56 	bl	1b098 <system_enable_interrupts>

   // Loop forever, waiting for IMU interrupts
   int16_t x, y, z;
   imu_register_motion_change_callback(motion_interrupt, OPERATION_MODE_NDOF);
   1b1ec:	210c      	movs	r1, #12
   1b1ee:	480c      	ldr	r0, [pc, #48]	@ (1b220 <main+0x48>)
   1b1f0:	f7ff fcda 	bl	1aba8 <imu_register_motion_change_callback>
   while (true)
   {
      am_hal_delay_us(2000000);
   1b1f4:	480b      	ldr	r0, [pc, #44]	@ (1b224 <main+0x4c>)
   1b1f6:	f001 fd87 	bl	1cd08 <am_hal_delay_us>
      //imu_read_accel_data(&x, &y, &z);
      //print("X = %d, Y = %d, Z = %d\n", (int32_t)x, (int32_t)y, (int32_t)z);
      imu_read_linear_accel_data(&x, &y, &z);
   1b1fa:	1cba      	adds	r2, r7, #2
   1b1fc:	1d39      	adds	r1, r7, #4
   1b1fe:	1dbb      	adds	r3, r7, #6
   1b200:	4618      	mov	r0, r3
   1b202:	f7ff fce9 	bl	1abd8 <imu_read_linear_accel_data>
      print("X = %d, Y = %d, Z = %d\n", (int32_t)x, (int32_t)y, (int32_t)z);
   1b206:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
   1b20a:	4619      	mov	r1, r3
   1b20c:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
   1b210:	461a      	mov	r2, r3
   1b212:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
   1b216:	4804      	ldr	r0, [pc, #16]	@ (1b228 <main+0x50>)
   1b218:	f7fd ffe6 	bl	191e8 <am_util_stdio_printf>
      am_hal_delay_us(2000000);
   1b21c:	bf00      	nop
   1b21e:	e7e9      	b.n	1b1f4 <main+0x1c>
   1b220:	0001b1a5 	.word	0x0001b1a5
   1b224:	001e8480 	.word	0x001e8480
   1b228:	0002bc78 	.word	0x0002bc78

0001b22c <__errno>:
   1b22c:	4b01      	ldr	r3, [pc, #4]	@ (1b234 <__errno+0x8>)
   1b22e:	6818      	ldr	r0, [r3, #0]
   1b230:	4770      	bx	lr
   1b232:	bf00      	nop
   1b234:	10002b04 	.word	0x10002b04

0001b238 <__retarget_lock_acquire_recursive>:
   1b238:	4770      	bx	lr
   1b23a:	bf00      	nop

0001b23c <__retarget_lock_release_recursive>:
   1b23c:	4770      	bx	lr
   1b23e:	bf00      	nop

0001b240 <malloc>:
   1b240:	4b02      	ldr	r3, [pc, #8]	@ (1b24c <malloc+0xc>)
   1b242:	4601      	mov	r1, r0
   1b244:	6818      	ldr	r0, [r3, #0]
   1b246:	f000 b803 	b.w	1b250 <_malloc_r>
   1b24a:	bf00      	nop
   1b24c:	10002b04 	.word	0x10002b04

0001b250 <_malloc_r>:
   1b250:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b254:	f101 050b 	add.w	r5, r1, #11
   1b258:	2d16      	cmp	r5, #22
   1b25a:	b085      	sub	sp, #20
   1b25c:	4606      	mov	r6, r0
   1b25e:	d824      	bhi.n	1b2aa <_malloc_r+0x5a>
   1b260:	2910      	cmp	r1, #16
   1b262:	f200 80b1 	bhi.w	1b3c8 <_malloc_r+0x178>
   1b266:	f000 faad 	bl	1b7c4 <__malloc_lock>
   1b26a:	2510      	movs	r5, #16
   1b26c:	2318      	movs	r3, #24
   1b26e:	f04f 0c02 	mov.w	ip, #2
   1b272:	4fba      	ldr	r7, [pc, #744]	@ (1b55c <_malloc_r+0x30c>)
   1b274:	443b      	add	r3, r7
   1b276:	f1a3 0208 	sub.w	r2, r3, #8
   1b27a:	685c      	ldr	r4, [r3, #4]
   1b27c:	4294      	cmp	r4, r2
   1b27e:	f000 8122 	beq.w	1b4c6 <_malloc_r+0x276>
   1b282:	6863      	ldr	r3, [r4, #4]
   1b284:	68e2      	ldr	r2, [r4, #12]
   1b286:	68a1      	ldr	r1, [r4, #8]
   1b288:	f023 0303 	bic.w	r3, r3, #3
   1b28c:	60ca      	str	r2, [r1, #12]
   1b28e:	4423      	add	r3, r4
   1b290:	4630      	mov	r0, r6
   1b292:	6091      	str	r1, [r2, #8]
   1b294:	685a      	ldr	r2, [r3, #4]
   1b296:	f042 0201 	orr.w	r2, r2, #1
   1b29a:	605a      	str	r2, [r3, #4]
   1b29c:	3408      	adds	r4, #8
   1b29e:	f000 fa97 	bl	1b7d0 <__malloc_unlock>
   1b2a2:	4620      	mov	r0, r4
   1b2a4:	b005      	add	sp, #20
   1b2a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b2aa:	f035 0507 	bics.w	r5, r5, #7
   1b2ae:	f100 808b 	bmi.w	1b3c8 <_malloc_r+0x178>
   1b2b2:	42a9      	cmp	r1, r5
   1b2b4:	f200 8088 	bhi.w	1b3c8 <_malloc_r+0x178>
   1b2b8:	f000 fa84 	bl	1b7c4 <__malloc_lock>
   1b2bc:	f5b5 7ffc 	cmp.w	r5, #504	@ 0x1f8
   1b2c0:	f0c0 8173 	bcc.w	1b5aa <_malloc_r+0x35a>
   1b2c4:	0a6b      	lsrs	r3, r5, #9
   1b2c6:	f000 8083 	beq.w	1b3d0 <_malloc_r+0x180>
   1b2ca:	2b04      	cmp	r3, #4
   1b2cc:	f200 8122 	bhi.w	1b514 <_malloc_r+0x2c4>
   1b2d0:	09ab      	lsrs	r3, r5, #6
   1b2d2:	f103 0c39 	add.w	ip, r3, #57	@ 0x39
   1b2d6:	f103 0e38 	add.w	lr, r3, #56	@ 0x38
   1b2da:	ea4f 03cc 	mov.w	r3, ip, lsl #3
   1b2de:	4f9f      	ldr	r7, [pc, #636]	@ (1b55c <_malloc_r+0x30c>)
   1b2e0:	443b      	add	r3, r7
   1b2e2:	f1a3 0008 	sub.w	r0, r3, #8
   1b2e6:	685c      	ldr	r4, [r3, #4]
   1b2e8:	42a0      	cmp	r0, r4
   1b2ea:	d107      	bne.n	1b2fc <_malloc_r+0xac>
   1b2ec:	e00d      	b.n	1b30a <_malloc_r+0xba>
   1b2ee:	2a00      	cmp	r2, #0
   1b2f0:	68e1      	ldr	r1, [r4, #12]
   1b2f2:	f280 80e2 	bge.w	1b4ba <_malloc_r+0x26a>
   1b2f6:	4288      	cmp	r0, r1
   1b2f8:	d007      	beq.n	1b30a <_malloc_r+0xba>
   1b2fa:	460c      	mov	r4, r1
   1b2fc:	6863      	ldr	r3, [r4, #4]
   1b2fe:	f023 0303 	bic.w	r3, r3, #3
   1b302:	1b5a      	subs	r2, r3, r5
   1b304:	2a0f      	cmp	r2, #15
   1b306:	ddf2      	ble.n	1b2ee <_malloc_r+0x9e>
   1b308:	46f4      	mov	ip, lr
   1b30a:	f8df 8264 	ldr.w	r8, [pc, #612]	@ 1b570 <_malloc_r+0x320>
   1b30e:	693c      	ldr	r4, [r7, #16]
   1b310:	4544      	cmp	r4, r8
   1b312:	f000 80bf 	beq.w	1b494 <_malloc_r+0x244>
   1b316:	6863      	ldr	r3, [r4, #4]
   1b318:	f023 0903 	bic.w	r9, r3, #3
   1b31c:	eba9 0305 	sub.w	r3, r9, r5
   1b320:	2b0f      	cmp	r3, #15
   1b322:	f300 8147 	bgt.w	1b5b4 <_malloc_r+0x364>
   1b326:	2b00      	cmp	r3, #0
   1b328:	e9c7 8804 	strd	r8, r8, [r7, #16]
   1b32c:	f280 8131 	bge.w	1b592 <_malloc_r+0x342>
   1b330:	f5b9 7f00 	cmp.w	r9, #512	@ 0x200
   1b334:	f8d7 e004 	ldr.w	lr, [r7, #4]
   1b338:	f080 80cc 	bcs.w	1b4d4 <_malloc_r+0x284>
   1b33c:	ea4f 01d9 	mov.w	r1, r9, lsr #3
   1b340:	3101      	adds	r1, #1
   1b342:	ea4f 1959 	mov.w	r9, r9, lsr #5
   1b346:	2301      	movs	r3, #1
   1b348:	fa03 f309 	lsl.w	r3, r3, r9
   1b34c:	f857 2031 	ldr.w	r2, [r7, r1, lsl #3]
   1b350:	60a2      	str	r2, [r4, #8]
   1b352:	ea4e 0e03 	orr.w	lr, lr, r3
   1b356:	eb07 03c1 	add.w	r3, r7, r1, lsl #3
   1b35a:	3b08      	subs	r3, #8
   1b35c:	60e3      	str	r3, [r4, #12]
   1b35e:	f8c7 e004 	str.w	lr, [r7, #4]
   1b362:	f847 4031 	str.w	r4, [r7, r1, lsl #3]
   1b366:	60d4      	str	r4, [r2, #12]
   1b368:	ea4f 03ac 	mov.w	r3, ip, asr #2
   1b36c:	2001      	movs	r0, #1
   1b36e:	4098      	lsls	r0, r3
   1b370:	4570      	cmp	r0, lr
   1b372:	d834      	bhi.n	1b3de <_malloc_r+0x18e>
   1b374:	ea10 0f0e 	tst.w	r0, lr
   1b378:	d107      	bne.n	1b38a <_malloc_r+0x13a>
   1b37a:	f02c 0c03 	bic.w	ip, ip, #3
   1b37e:	0040      	lsls	r0, r0, #1
   1b380:	ea10 0f0e 	tst.w	r0, lr
   1b384:	f10c 0c04 	add.w	ip, ip, #4
   1b388:	d0f9      	beq.n	1b37e <_malloc_r+0x12e>
   1b38a:	eb07 0acc 	add.w	sl, r7, ip, lsl #3
   1b38e:	4652      	mov	r2, sl
   1b390:	46e1      	mov	r9, ip
   1b392:	68d1      	ldr	r1, [r2, #12]
   1b394:	e00e      	b.n	1b3b4 <_malloc_r+0x164>
   1b396:	684b      	ldr	r3, [r1, #4]
   1b398:	f023 0303 	bic.w	r3, r3, #3
   1b39c:	eba3 0e05 	sub.w	lr, r3, r5
   1b3a0:	f1be 0f0f 	cmp.w	lr, #15
   1b3a4:	460c      	mov	r4, r1
   1b3a6:	68c9      	ldr	r1, [r1, #12]
   1b3a8:	f300 80c1 	bgt.w	1b52e <_malloc_r+0x2de>
   1b3ac:	f1be 0f00 	cmp.w	lr, #0
   1b3b0:	f280 80e2 	bge.w	1b578 <_malloc_r+0x328>
   1b3b4:	428a      	cmp	r2, r1
   1b3b6:	d1ee      	bne.n	1b396 <_malloc_r+0x146>
   1b3b8:	f109 0901 	add.w	r9, r9, #1
   1b3bc:	f019 0f03 	tst.w	r9, #3
   1b3c0:	f102 0208 	add.w	r2, r2, #8
   1b3c4:	d1e5      	bne.n	1b392 <_malloc_r+0x142>
   1b3c6:	e121      	b.n	1b60c <_malloc_r+0x3bc>
   1b3c8:	230c      	movs	r3, #12
   1b3ca:	6033      	str	r3, [r6, #0]
   1b3cc:	2400      	movs	r4, #0
   1b3ce:	e768      	b.n	1b2a2 <_malloc_r+0x52>
   1b3d0:	f44f 7300 	mov.w	r3, #512	@ 0x200
   1b3d4:	f04f 0c40 	mov.w	ip, #64	@ 0x40
   1b3d8:	f04f 0e3f 	mov.w	lr, #63	@ 0x3f
   1b3dc:	e77f      	b.n	1b2de <_malloc_r+0x8e>
   1b3de:	68bc      	ldr	r4, [r7, #8]
   1b3e0:	6863      	ldr	r3, [r4, #4]
   1b3e2:	f023 0903 	bic.w	r9, r3, #3
   1b3e6:	45a9      	cmp	r9, r5
   1b3e8:	d303      	bcc.n	1b3f2 <_malloc_r+0x1a2>
   1b3ea:	eba9 0305 	sub.w	r3, r9, r5
   1b3ee:	2b0f      	cmp	r3, #15
   1b3f0:	dc53      	bgt.n	1b49a <_malloc_r+0x24a>
   1b3f2:	4b5b      	ldr	r3, [pc, #364]	@ (1b560 <_malloc_r+0x310>)
   1b3f4:	f8df b17c 	ldr.w	fp, [pc, #380]	@ 1b574 <_malloc_r+0x324>
   1b3f8:	681b      	ldr	r3, [r3, #0]
   1b3fa:	2008      	movs	r0, #8
   1b3fc:	f103 0810 	add.w	r8, r3, #16
   1b400:	f000 f9fe 	bl	1b800 <sysconf>
   1b404:	f8db 3000 	ldr.w	r3, [fp]
   1b408:	9001      	str	r0, [sp, #4]
   1b40a:	3301      	adds	r3, #1
   1b40c:	44a8      	add	r8, r5
   1b40e:	eb04 0209 	add.w	r2, r4, r9
   1b412:	d005      	beq.n	1b420 <_malloc_r+0x1d0>
   1b414:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
   1b418:	4480      	add	r8, r0
   1b41a:	4243      	negs	r3, r0
   1b41c:	ea03 0808 	and.w	r8, r3, r8
   1b420:	4641      	mov	r1, r8
   1b422:	4630      	mov	r0, r6
   1b424:	9202      	str	r2, [sp, #8]
   1b426:	f000 f9d9 	bl	1b7dc <_sbrk_r>
   1b42a:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
   1b42e:	9a02      	ldr	r2, [sp, #8]
   1b430:	4682      	mov	sl, r0
   1b432:	f000 80dc 	beq.w	1b5ee <_malloc_r+0x39e>
   1b436:	4282      	cmp	r2, r0
   1b438:	f200 80d7 	bhi.w	1b5ea <_malloc_r+0x39a>
   1b43c:	4b49      	ldr	r3, [pc, #292]	@ (1b564 <_malloc_r+0x314>)
   1b43e:	9901      	ldr	r1, [sp, #4]
   1b440:	6818      	ldr	r0, [r3, #0]
   1b442:	4440      	add	r0, r8
   1b444:	f101 31ff 	add.w	r1, r1, #4294967295	@ 0xffffffff
   1b448:	6018      	str	r0, [r3, #0]
   1b44a:	4684      	mov	ip, r0
   1b44c:	f040 80fc 	bne.w	1b648 <_malloc_r+0x3f8>
   1b450:	ea1a 0f01 	tst.w	sl, r1
   1b454:	f040 80f8 	bne.w	1b648 <_malloc_r+0x3f8>
   1b458:	f8d7 a008 	ldr.w	sl, [r7, #8]
   1b45c:	44c8      	add	r8, r9
   1b45e:	f048 0201 	orr.w	r2, r8, #1
   1b462:	f8ca 2004 	str.w	r2, [sl, #4]
   1b466:	4b40      	ldr	r3, [pc, #256]	@ (1b568 <_malloc_r+0x318>)
   1b468:	6819      	ldr	r1, [r3, #0]
   1b46a:	4281      	cmp	r1, r0
   1b46c:	bf38      	it	cc
   1b46e:	6018      	strcc	r0, [r3, #0]
   1b470:	4b3e      	ldr	r3, [pc, #248]	@ (1b56c <_malloc_r+0x31c>)
   1b472:	6819      	ldr	r1, [r3, #0]
   1b474:	4281      	cmp	r1, r0
   1b476:	bf38      	it	cc
   1b478:	6018      	strcc	r0, [r3, #0]
   1b47a:	4654      	mov	r4, sl
   1b47c:	f022 0803 	bic.w	r8, r2, #3
   1b480:	45a8      	cmp	r8, r5
   1b482:	eba8 0305 	sub.w	r3, r8, r5
   1b486:	d301      	bcc.n	1b48c <_malloc_r+0x23c>
   1b488:	2b0f      	cmp	r3, #15
   1b48a:	dc06      	bgt.n	1b49a <_malloc_r+0x24a>
   1b48c:	4630      	mov	r0, r6
   1b48e:	f000 f99f 	bl	1b7d0 <__malloc_unlock>
   1b492:	e79b      	b.n	1b3cc <_malloc_r+0x17c>
   1b494:	f8d7 e004 	ldr.w	lr, [r7, #4]
   1b498:	e766      	b.n	1b368 <_malloc_r+0x118>
   1b49a:	1962      	adds	r2, r4, r5
   1b49c:	f043 0301 	orr.w	r3, r3, #1
   1b4a0:	f045 0501 	orr.w	r5, r5, #1
   1b4a4:	6065      	str	r5, [r4, #4]
   1b4a6:	4630      	mov	r0, r6
   1b4a8:	60ba      	str	r2, [r7, #8]
   1b4aa:	6053      	str	r3, [r2, #4]
   1b4ac:	f000 f990 	bl	1b7d0 <__malloc_unlock>
   1b4b0:	3408      	adds	r4, #8
   1b4b2:	4620      	mov	r0, r4
   1b4b4:	b005      	add	sp, #20
   1b4b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b4ba:	68a2      	ldr	r2, [r4, #8]
   1b4bc:	4423      	add	r3, r4
   1b4be:	60d1      	str	r1, [r2, #12]
   1b4c0:	4630      	mov	r0, r6
   1b4c2:	608a      	str	r2, [r1, #8]
   1b4c4:	e6e6      	b.n	1b294 <_malloc_r+0x44>
   1b4c6:	68dc      	ldr	r4, [r3, #12]
   1b4c8:	42a3      	cmp	r3, r4
   1b4ca:	f47f aeda 	bne.w	1b282 <_malloc_r+0x32>
   1b4ce:	f10c 0c02 	add.w	ip, ip, #2
   1b4d2:	e71a      	b.n	1b30a <_malloc_r+0xba>
   1b4d4:	f5b9 6f20 	cmp.w	r9, #2560	@ 0xa00
   1b4d8:	ea4f 2259 	mov.w	r2, r9, lsr #9
   1b4dc:	d37e      	bcc.n	1b5dc <_malloc_r+0x38c>
   1b4de:	2a14      	cmp	r2, #20
   1b4e0:	f200 8115 	bhi.w	1b70e <_malloc_r+0x4be>
   1b4e4:	f102 035c 	add.w	r3, r2, #92	@ 0x5c
   1b4e8:	00db      	lsls	r3, r3, #3
   1b4ea:	325b      	adds	r2, #91	@ 0x5b
   1b4ec:	18f9      	adds	r1, r7, r3
   1b4ee:	58fb      	ldr	r3, [r7, r3]
   1b4f0:	3908      	subs	r1, #8
   1b4f2:	4299      	cmp	r1, r3
   1b4f4:	d103      	bne.n	1b4fe <_malloc_r+0x2ae>
   1b4f6:	e0f0      	b.n	1b6da <_malloc_r+0x48a>
   1b4f8:	689b      	ldr	r3, [r3, #8]
   1b4fa:	4299      	cmp	r1, r3
   1b4fc:	d004      	beq.n	1b508 <_malloc_r+0x2b8>
   1b4fe:	685a      	ldr	r2, [r3, #4]
   1b500:	f022 0203 	bic.w	r2, r2, #3
   1b504:	454a      	cmp	r2, r9
   1b506:	d8f7      	bhi.n	1b4f8 <_malloc_r+0x2a8>
   1b508:	68d9      	ldr	r1, [r3, #12]
   1b50a:	e9c4 3102 	strd	r3, r1, [r4, #8]
   1b50e:	608c      	str	r4, [r1, #8]
   1b510:	60dc      	str	r4, [r3, #12]
   1b512:	e729      	b.n	1b368 <_malloc_r+0x118>
   1b514:	2b14      	cmp	r3, #20
   1b516:	d96d      	bls.n	1b5f4 <_malloc_r+0x3a4>
   1b518:	2b54      	cmp	r3, #84	@ 0x54
   1b51a:	f200 8101 	bhi.w	1b720 <_malloc_r+0x4d0>
   1b51e:	0b2b      	lsrs	r3, r5, #12
   1b520:	f103 0c6f 	add.w	ip, r3, #111	@ 0x6f
   1b524:	f103 0e6e 	add.w	lr, r3, #110	@ 0x6e
   1b528:	ea4f 03cc 	mov.w	r3, ip, lsl #3
   1b52c:	e6d7      	b.n	1b2de <_malloc_r+0x8e>
   1b52e:	4630      	mov	r0, r6
   1b530:	68a6      	ldr	r6, [r4, #8]
   1b532:	1962      	adds	r2, r4, r5
   1b534:	f045 0501 	orr.w	r5, r5, #1
   1b538:	6065      	str	r5, [r4, #4]
   1b53a:	60f1      	str	r1, [r6, #12]
   1b53c:	608e      	str	r6, [r1, #8]
   1b53e:	f04e 0101 	orr.w	r1, lr, #1
   1b542:	e9c7 2204 	strd	r2, r2, [r7, #16]
   1b546:	f8c2 8008 	str.w	r8, [r2, #8]
   1b54a:	f8c2 800c 	str.w	r8, [r2, #12]
   1b54e:	6051      	str	r1, [r2, #4]
   1b550:	f844 e003 	str.w	lr, [r4, r3]
   1b554:	f000 f93c 	bl	1b7d0 <__malloc_unlock>
   1b558:	3408      	adds	r4, #8
   1b55a:	e6a2      	b.n	1b2a2 <_malloc_r+0x52>
   1b55c:	10002c30 	.word	0x10002c30
   1b560:	10003660 	.word	0x10003660
   1b564:	10003630 	.word	0x10003630
   1b568:	1000365c 	.word	0x1000365c
   1b56c:	10003658 	.word	0x10003658
   1b570:	10002c38 	.word	0x10002c38
   1b574:	10002c28 	.word	0x10002c28
   1b578:	4423      	add	r3, r4
   1b57a:	4630      	mov	r0, r6
   1b57c:	685a      	ldr	r2, [r3, #4]
   1b57e:	f042 0201 	orr.w	r2, r2, #1
   1b582:	605a      	str	r2, [r3, #4]
   1b584:	f854 3f08 	ldr.w	r3, [r4, #8]!
   1b588:	60d9      	str	r1, [r3, #12]
   1b58a:	608b      	str	r3, [r1, #8]
   1b58c:	f000 f920 	bl	1b7d0 <__malloc_unlock>
   1b590:	e687      	b.n	1b2a2 <_malloc_r+0x52>
   1b592:	44a1      	add	r9, r4
   1b594:	4630      	mov	r0, r6
   1b596:	f8d9 3004 	ldr.w	r3, [r9, #4]
   1b59a:	f043 0301 	orr.w	r3, r3, #1
   1b59e:	f8c9 3004 	str.w	r3, [r9, #4]
   1b5a2:	3408      	adds	r4, #8
   1b5a4:	f000 f914 	bl	1b7d0 <__malloc_unlock>
   1b5a8:	e67b      	b.n	1b2a2 <_malloc_r+0x52>
   1b5aa:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
   1b5ae:	f105 0308 	add.w	r3, r5, #8
   1b5b2:	e65e      	b.n	1b272 <_malloc_r+0x22>
   1b5b4:	1962      	adds	r2, r4, r5
   1b5b6:	f043 0101 	orr.w	r1, r3, #1
   1b5ba:	f045 0501 	orr.w	r5, r5, #1
   1b5be:	6065      	str	r5, [r4, #4]
   1b5c0:	4630      	mov	r0, r6
   1b5c2:	e9c7 2204 	strd	r2, r2, [r7, #16]
   1b5c6:	f8c2 8008 	str.w	r8, [r2, #8]
   1b5ca:	f8c2 800c 	str.w	r8, [r2, #12]
   1b5ce:	6051      	str	r1, [r2, #4]
   1b5d0:	f844 3009 	str.w	r3, [r4, r9]
   1b5d4:	f000 f8fc 	bl	1b7d0 <__malloc_unlock>
   1b5d8:	3408      	adds	r4, #8
   1b5da:	e662      	b.n	1b2a2 <_malloc_r+0x52>
   1b5dc:	ea4f 1299 	mov.w	r2, r9, lsr #6
   1b5e0:	f102 0339 	add.w	r3, r2, #57	@ 0x39
   1b5e4:	00db      	lsls	r3, r3, #3
   1b5e6:	3238      	adds	r2, #56	@ 0x38
   1b5e8:	e780      	b.n	1b4ec <_malloc_r+0x29c>
   1b5ea:	42bc      	cmp	r4, r7
   1b5ec:	d024      	beq.n	1b638 <_malloc_r+0x3e8>
   1b5ee:	68bc      	ldr	r4, [r7, #8]
   1b5f0:	6862      	ldr	r2, [r4, #4]
   1b5f2:	e743      	b.n	1b47c <_malloc_r+0x22c>
   1b5f4:	f103 0c5c 	add.w	ip, r3, #92	@ 0x5c
   1b5f8:	f103 0e5b 	add.w	lr, r3, #91	@ 0x5b
   1b5fc:	ea4f 03cc 	mov.w	r3, ip, lsl #3
   1b600:	e66d      	b.n	1b2de <_malloc_r+0x8e>
   1b602:	f85a 3908 	ldr.w	r3, [sl], #-8
   1b606:	4553      	cmp	r3, sl
   1b608:	f040 80d8 	bne.w	1b7bc <_malloc_r+0x56c>
   1b60c:	f01c 0f03 	tst.w	ip, #3
   1b610:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
   1b614:	d1f5      	bne.n	1b602 <_malloc_r+0x3b2>
   1b616:	687b      	ldr	r3, [r7, #4]
   1b618:	ea23 0300 	bic.w	r3, r3, r0
   1b61c:	607b      	str	r3, [r7, #4]
   1b61e:	0040      	lsls	r0, r0, #1
   1b620:	4298      	cmp	r0, r3
   1b622:	f63f aedc 	bhi.w	1b3de <_malloc_r+0x18e>
   1b626:	b918      	cbnz	r0, 1b630 <_malloc_r+0x3e0>
   1b628:	e6d9      	b.n	1b3de <_malloc_r+0x18e>
   1b62a:	0040      	lsls	r0, r0, #1
   1b62c:	f109 0904 	add.w	r9, r9, #4
   1b630:	4218      	tst	r0, r3
   1b632:	d0fa      	beq.n	1b62a <_malloc_r+0x3da>
   1b634:	46cc      	mov	ip, r9
   1b636:	e6a8      	b.n	1b38a <_malloc_r+0x13a>
   1b638:	4b61      	ldr	r3, [pc, #388]	@ (1b7c0 <_malloc_r+0x570>)
   1b63a:	9901      	ldr	r1, [sp, #4]
   1b63c:	6818      	ldr	r0, [r3, #0]
   1b63e:	eb08 0c00 	add.w	ip, r8, r0
   1b642:	3901      	subs	r1, #1
   1b644:	f8c3 c000 	str.w	ip, [r3]
   1b648:	f8db 0000 	ldr.w	r0, [fp]
   1b64c:	3001      	adds	r0, #1
   1b64e:	bf1b      	ittet	ne
   1b650:	ebaa 0202 	subne.w	r2, sl, r2
   1b654:	4462      	addne	r2, ip
   1b656:	f8cb a000 	streq.w	sl, [fp]
   1b65a:	601a      	strne	r2, [r3, #0]
   1b65c:	f01a 0207 	ands.w	r2, sl, #7
   1b660:	e9cd 2302 	strd	r2, r3, [sp, #8]
   1b664:	d042      	beq.n	1b6ec <_malloc_r+0x49c>
   1b666:	f1c2 0208 	rsb	r2, r2, #8
   1b66a:	9b01      	ldr	r3, [sp, #4]
   1b66c:	4492      	add	sl, r2
   1b66e:	44d0      	add	r8, sl
   1b670:	4413      	add	r3, r2
   1b672:	ea08 0001 	and.w	r0, r8, r1
   1b676:	1a1a      	subs	r2, r3, r0
   1b678:	ea02 0b01 	and.w	fp, r2, r1
   1b67c:	4659      	mov	r1, fp
   1b67e:	4630      	mov	r0, r6
   1b680:	f000 f8ac 	bl	1b7dc <_sbrk_r>
   1b684:	1c42      	adds	r2, r0, #1
   1b686:	9b03      	ldr	r3, [sp, #12]
   1b688:	d07a      	beq.n	1b780 <_malloc_r+0x530>
   1b68a:	eba0 000a 	sub.w	r0, r0, sl
   1b68e:	eb00 080b 	add.w	r8, r0, fp
   1b692:	6818      	ldr	r0, [r3, #0]
   1b694:	f8c7 a008 	str.w	sl, [r7, #8]
   1b698:	f048 0201 	orr.w	r2, r8, #1
   1b69c:	4458      	add	r0, fp
   1b69e:	42bc      	cmp	r4, r7
   1b6a0:	f8ca 2004 	str.w	r2, [sl, #4]
   1b6a4:	6018      	str	r0, [r3, #0]
   1b6a6:	f43f aede 	beq.w	1b466 <_malloc_r+0x216>
   1b6aa:	f1b9 0f0f 	cmp.w	r9, #15
   1b6ae:	d942      	bls.n	1b736 <_malloc_r+0x4e6>
   1b6b0:	6861      	ldr	r1, [r4, #4]
   1b6b2:	f1a9 020c 	sub.w	r2, r9, #12
   1b6b6:	f022 0207 	bic.w	r2, r2, #7
   1b6ba:	f001 0101 	and.w	r1, r1, #1
   1b6be:	4311      	orrs	r1, r2
   1b6c0:	6061      	str	r1, [r4, #4]
   1b6c2:	18a1      	adds	r1, r4, r2
   1b6c4:	f04f 0c05 	mov.w	ip, #5
   1b6c8:	2a0f      	cmp	r2, #15
   1b6ca:	f8c1 c004 	str.w	ip, [r1, #4]
   1b6ce:	f8c1 c008 	str.w	ip, [r1, #8]
   1b6d2:	d84a      	bhi.n	1b76a <_malloc_r+0x51a>
   1b6d4:	f8da 2004 	ldr.w	r2, [sl, #4]
   1b6d8:	e6c5      	b.n	1b466 <_malloc_r+0x216>
   1b6da:	1092      	asrs	r2, r2, #2
   1b6dc:	2001      	movs	r0, #1
   1b6de:	fa00 f202 	lsl.w	r2, r0, r2
   1b6e2:	ea4e 0e02 	orr.w	lr, lr, r2
   1b6e6:	f8c7 e004 	str.w	lr, [r7, #4]
   1b6ea:	e70e      	b.n	1b50a <_malloc_r+0x2ba>
   1b6ec:	9b01      	ldr	r3, [sp, #4]
   1b6ee:	eb0a 0208 	add.w	r2, sl, r8
   1b6f2:	400a      	ands	r2, r1
   1b6f4:	1a9a      	subs	r2, r3, r2
   1b6f6:	ea02 0b01 	and.w	fp, r2, r1
   1b6fa:	4659      	mov	r1, fp
   1b6fc:	4630      	mov	r0, r6
   1b6fe:	f000 f86d 	bl	1b7dc <_sbrk_r>
   1b702:	1c43      	adds	r3, r0, #1
   1b704:	9b03      	ldr	r3, [sp, #12]
   1b706:	d1c0      	bne.n	1b68a <_malloc_r+0x43a>
   1b708:	f8dd b008 	ldr.w	fp, [sp, #8]
   1b70c:	e7c1      	b.n	1b692 <_malloc_r+0x442>
   1b70e:	2a54      	cmp	r2, #84	@ 0x54
   1b710:	d815      	bhi.n	1b73e <_malloc_r+0x4ee>
   1b712:	ea4f 3219 	mov.w	r2, r9, lsr #12
   1b716:	f102 036f 	add.w	r3, r2, #111	@ 0x6f
   1b71a:	00db      	lsls	r3, r3, #3
   1b71c:	326e      	adds	r2, #110	@ 0x6e
   1b71e:	e6e5      	b.n	1b4ec <_malloc_r+0x29c>
   1b720:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
   1b724:	d815      	bhi.n	1b752 <_malloc_r+0x502>
   1b726:	0beb      	lsrs	r3, r5, #15
   1b728:	f103 0c78 	add.w	ip, r3, #120	@ 0x78
   1b72c:	f103 0e77 	add.w	lr, r3, #119	@ 0x77
   1b730:	ea4f 03cc 	mov.w	r3, ip, lsl #3
   1b734:	e5d3      	b.n	1b2de <_malloc_r+0x8e>
   1b736:	2301      	movs	r3, #1
   1b738:	f8ca 3004 	str.w	r3, [sl, #4]
   1b73c:	e6a6      	b.n	1b48c <_malloc_r+0x23c>
   1b73e:	f5b2 7faa 	cmp.w	r2, #340	@ 0x154
   1b742:	d825      	bhi.n	1b790 <_malloc_r+0x540>
   1b744:	ea4f 32d9 	mov.w	r2, r9, lsr #15
   1b748:	f102 0378 	add.w	r3, r2, #120	@ 0x78
   1b74c:	00db      	lsls	r3, r3, #3
   1b74e:	3277      	adds	r2, #119	@ 0x77
   1b750:	e6cc      	b.n	1b4ec <_malloc_r+0x29c>
   1b752:	f240 5254 	movw	r2, #1364	@ 0x554
   1b756:	4293      	cmp	r3, r2
   1b758:	d825      	bhi.n	1b7a6 <_malloc_r+0x556>
   1b75a:	0cab      	lsrs	r3, r5, #18
   1b75c:	f103 0c7d 	add.w	ip, r3, #125	@ 0x7d
   1b760:	f103 0e7c 	add.w	lr, r3, #124	@ 0x7c
   1b764:	ea4f 03cc 	mov.w	r3, ip, lsl #3
   1b768:	e5b9      	b.n	1b2de <_malloc_r+0x8e>
   1b76a:	4630      	mov	r0, r6
   1b76c:	f104 0108 	add.w	r1, r4, #8
   1b770:	9301      	str	r3, [sp, #4]
   1b772:	f000 f8af 	bl	1b8d4 <_free_r>
   1b776:	9b01      	ldr	r3, [sp, #4]
   1b778:	f8d7 a008 	ldr.w	sl, [r7, #8]
   1b77c:	6818      	ldr	r0, [r3, #0]
   1b77e:	e7a9      	b.n	1b6d4 <_malloc_r+0x484>
   1b780:	9a02      	ldr	r2, [sp, #8]
   1b782:	3a08      	subs	r2, #8
   1b784:	4490      	add	r8, r2
   1b786:	eba8 080a 	sub.w	r8, r8, sl
   1b78a:	f04f 0b00 	mov.w	fp, #0
   1b78e:	e780      	b.n	1b692 <_malloc_r+0x442>
   1b790:	f240 5354 	movw	r3, #1364	@ 0x554
   1b794:	429a      	cmp	r2, r3
   1b796:	d80d      	bhi.n	1b7b4 <_malloc_r+0x564>
   1b798:	ea4f 4299 	mov.w	r2, r9, lsr #18
   1b79c:	f102 037d 	add.w	r3, r2, #125	@ 0x7d
   1b7a0:	00db      	lsls	r3, r3, #3
   1b7a2:	327c      	adds	r2, #124	@ 0x7c
   1b7a4:	e6a2      	b.n	1b4ec <_malloc_r+0x29c>
   1b7a6:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
   1b7aa:	f04f 0c7f 	mov.w	ip, #127	@ 0x7f
   1b7ae:	f04f 0e7e 	mov.w	lr, #126	@ 0x7e
   1b7b2:	e594      	b.n	1b2de <_malloc_r+0x8e>
   1b7b4:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
   1b7b8:	227e      	movs	r2, #126	@ 0x7e
   1b7ba:	e697      	b.n	1b4ec <_malloc_r+0x29c>
   1b7bc:	687b      	ldr	r3, [r7, #4]
   1b7be:	e72e      	b.n	1b61e <_malloc_r+0x3ce>
   1b7c0:	10003630 	.word	0x10003630

0001b7c4 <__malloc_lock>:
   1b7c4:	4801      	ldr	r0, [pc, #4]	@ (1b7cc <__malloc_lock+0x8>)
   1b7c6:	f7ff bd37 	b.w	1b238 <__retarget_lock_acquire_recursive>
   1b7ca:	bf00      	nop
   1b7cc:	1000362c 	.word	0x1000362c

0001b7d0 <__malloc_unlock>:
   1b7d0:	4801      	ldr	r0, [pc, #4]	@ (1b7d8 <__malloc_unlock+0x8>)
   1b7d2:	f7ff bd33 	b.w	1b23c <__retarget_lock_release_recursive>
   1b7d6:	bf00      	nop
   1b7d8:	1000362c 	.word	0x1000362c

0001b7dc <_sbrk_r>:
   1b7dc:	b538      	push	{r3, r4, r5, lr}
   1b7de:	4d07      	ldr	r5, [pc, #28]	@ (1b7fc <_sbrk_r+0x20>)
   1b7e0:	2200      	movs	r2, #0
   1b7e2:	4604      	mov	r4, r0
   1b7e4:	4608      	mov	r0, r1
   1b7e6:	602a      	str	r2, [r5, #0]
   1b7e8:	f000 fad0 	bl	1bd8c <_sbrk>
   1b7ec:	1c43      	adds	r3, r0, #1
   1b7ee:	d000      	beq.n	1b7f2 <_sbrk_r+0x16>
   1b7f0:	bd38      	pop	{r3, r4, r5, pc}
   1b7f2:	682b      	ldr	r3, [r5, #0]
   1b7f4:	2b00      	cmp	r3, #0
   1b7f6:	d0fb      	beq.n	1b7f0 <_sbrk_r+0x14>
   1b7f8:	6023      	str	r3, [r4, #0]
   1b7fa:	bd38      	pop	{r3, r4, r5, pc}
   1b7fc:	1000379c 	.word	0x1000379c

0001b800 <sysconf>:
   1b800:	2808      	cmp	r0, #8
   1b802:	d102      	bne.n	1b80a <sysconf+0xa>
   1b804:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
   1b808:	4770      	bx	lr
   1b80a:	b508      	push	{r3, lr}
   1b80c:	f7ff fd0e 	bl	1b22c <__errno>
   1b810:	2316      	movs	r3, #22
   1b812:	6003      	str	r3, [r0, #0]
   1b814:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
   1b818:	bd08      	pop	{r3, pc}
   1b81a:	bf00      	nop

0001b81c <_malloc_trim_r>:
   1b81c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1b820:	4606      	mov	r6, r0
   1b822:	2008      	movs	r0, #8
   1b824:	4689      	mov	r9, r1
   1b826:	f7ff ffeb 	bl	1b800 <sysconf>
   1b82a:	f8df 80a4 	ldr.w	r8, [pc, #164]	@ 1b8d0 <_malloc_trim_r+0xb4>
   1b82e:	4605      	mov	r5, r0
   1b830:	4630      	mov	r0, r6
   1b832:	f7ff ffc7 	bl	1b7c4 <__malloc_lock>
   1b836:	f8d8 3008 	ldr.w	r3, [r8, #8]
   1b83a:	685f      	ldr	r7, [r3, #4]
   1b83c:	f027 0703 	bic.w	r7, r7, #3
   1b840:	f1a7 0411 	sub.w	r4, r7, #17
   1b844:	eba4 0409 	sub.w	r4, r4, r9
   1b848:	442c      	add	r4, r5
   1b84a:	fbb4 f4f5 	udiv	r4, r4, r5
   1b84e:	3c01      	subs	r4, #1
   1b850:	fb05 f404 	mul.w	r4, r5, r4
   1b854:	42a5      	cmp	r5, r4
   1b856:	dc08      	bgt.n	1b86a <_malloc_trim_r+0x4e>
   1b858:	2100      	movs	r1, #0
   1b85a:	4630      	mov	r0, r6
   1b85c:	f7ff ffbe 	bl	1b7dc <_sbrk_r>
   1b860:	f8d8 3008 	ldr.w	r3, [r8, #8]
   1b864:	443b      	add	r3, r7
   1b866:	4298      	cmp	r0, r3
   1b868:	d005      	beq.n	1b876 <_malloc_trim_r+0x5a>
   1b86a:	4630      	mov	r0, r6
   1b86c:	f7ff ffb0 	bl	1b7d0 <__malloc_unlock>
   1b870:	2000      	movs	r0, #0
   1b872:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1b876:	4261      	negs	r1, r4
   1b878:	4630      	mov	r0, r6
   1b87a:	f7ff ffaf 	bl	1b7dc <_sbrk_r>
   1b87e:	3001      	adds	r0, #1
   1b880:	d00f      	beq.n	1b8a2 <_malloc_trim_r+0x86>
   1b882:	4a11      	ldr	r2, [pc, #68]	@ (1b8c8 <_malloc_trim_r+0xac>)
   1b884:	f8d8 3008 	ldr.w	r3, [r8, #8]
   1b888:	1b3f      	subs	r7, r7, r4
   1b88a:	f047 0701 	orr.w	r7, r7, #1
   1b88e:	605f      	str	r7, [r3, #4]
   1b890:	6813      	ldr	r3, [r2, #0]
   1b892:	4630      	mov	r0, r6
   1b894:	1b1b      	subs	r3, r3, r4
   1b896:	6013      	str	r3, [r2, #0]
   1b898:	f7ff ff9a 	bl	1b7d0 <__malloc_unlock>
   1b89c:	2001      	movs	r0, #1
   1b89e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1b8a2:	2100      	movs	r1, #0
   1b8a4:	4630      	mov	r0, r6
   1b8a6:	f7ff ff99 	bl	1b7dc <_sbrk_r>
   1b8aa:	f8d8 2008 	ldr.w	r2, [r8, #8]
   1b8ae:	1a83      	subs	r3, r0, r2
   1b8b0:	2b0f      	cmp	r3, #15
   1b8b2:	ddda      	ble.n	1b86a <_malloc_trim_r+0x4e>
   1b8b4:	f043 0301 	orr.w	r3, r3, #1
   1b8b8:	6053      	str	r3, [r2, #4]
   1b8ba:	4b04      	ldr	r3, [pc, #16]	@ (1b8cc <_malloc_trim_r+0xb0>)
   1b8bc:	4902      	ldr	r1, [pc, #8]	@ (1b8c8 <_malloc_trim_r+0xac>)
   1b8be:	681b      	ldr	r3, [r3, #0]
   1b8c0:	1ac0      	subs	r0, r0, r3
   1b8c2:	6008      	str	r0, [r1, #0]
   1b8c4:	e7d1      	b.n	1b86a <_malloc_trim_r+0x4e>
   1b8c6:	bf00      	nop
   1b8c8:	10003630 	.word	0x10003630
   1b8cc:	10002c28 	.word	0x10002c28
   1b8d0:	10002c30 	.word	0x10002c30

0001b8d4 <_free_r>:
   1b8d4:	2900      	cmp	r1, #0
   1b8d6:	d07c      	beq.n	1b9d2 <_free_r+0xfe>
   1b8d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1b8dc:	460c      	mov	r4, r1
   1b8de:	4680      	mov	r8, r0
   1b8e0:	f7ff ff70 	bl	1b7c4 <__malloc_lock>
   1b8e4:	f854 3c04 	ldr.w	r3, [r4, #-4]
   1b8e8:	4f76      	ldr	r7, [pc, #472]	@ (1bac4 <_free_r+0x1f0>)
   1b8ea:	f1a4 0508 	sub.w	r5, r4, #8
   1b8ee:	f023 0101 	bic.w	r1, r3, #1
   1b8f2:	1868      	adds	r0, r5, r1
   1b8f4:	68be      	ldr	r6, [r7, #8]
   1b8f6:	6842      	ldr	r2, [r0, #4]
   1b8f8:	4286      	cmp	r6, r0
   1b8fa:	f022 0203 	bic.w	r2, r2, #3
   1b8fe:	f000 8083 	beq.w	1ba08 <_free_r+0x134>
   1b902:	07de      	lsls	r6, r3, #31
   1b904:	6042      	str	r2, [r0, #4]
   1b906:	eb00 0c02 	add.w	ip, r0, r2
   1b90a:	d433      	bmi.n	1b974 <_free_r+0xa0>
   1b90c:	f854 4c08 	ldr.w	r4, [r4, #-8]
   1b910:	f8dc 3004 	ldr.w	r3, [ip, #4]
   1b914:	1b2d      	subs	r5, r5, r4
   1b916:	4421      	add	r1, r4
   1b918:	68ac      	ldr	r4, [r5, #8]
   1b91a:	f107 0c08 	add.w	ip, r7, #8
   1b91e:	4564      	cmp	r4, ip
   1b920:	f003 0301 	and.w	r3, r3, #1
   1b924:	d064      	beq.n	1b9f0 <_free_r+0x11c>
   1b926:	f8d5 e00c 	ldr.w	lr, [r5, #12]
   1b92a:	f8c4 e00c 	str.w	lr, [r4, #12]
   1b92e:	f8ce 4008 	str.w	r4, [lr, #8]
   1b932:	2b00      	cmp	r3, #0
   1b934:	f000 8081 	beq.w	1ba3a <_free_r+0x166>
   1b938:	f041 0301 	orr.w	r3, r1, #1
   1b93c:	606b      	str	r3, [r5, #4]
   1b93e:	6001      	str	r1, [r0, #0]
   1b940:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
   1b944:	d222      	bcs.n	1b98c <_free_r+0xb8>
   1b946:	6878      	ldr	r0, [r7, #4]
   1b948:	08cb      	lsrs	r3, r1, #3
   1b94a:	2201      	movs	r2, #1
   1b94c:	0949      	lsrs	r1, r1, #5
   1b94e:	3301      	adds	r3, #1
   1b950:	408a      	lsls	r2, r1
   1b952:	4302      	orrs	r2, r0
   1b954:	f857 1033 	ldr.w	r1, [r7, r3, lsl #3]
   1b958:	607a      	str	r2, [r7, #4]
   1b95a:	eb07 02c3 	add.w	r2, r7, r3, lsl #3
   1b95e:	3a08      	subs	r2, #8
   1b960:	e9c5 1202 	strd	r1, r2, [r5, #8]
   1b964:	f847 5033 	str.w	r5, [r7, r3, lsl #3]
   1b968:	60cd      	str	r5, [r1, #12]
   1b96a:	4640      	mov	r0, r8
   1b96c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1b970:	f7ff bf2e 	b.w	1b7d0 <__malloc_unlock>
   1b974:	f8dc 3004 	ldr.w	r3, [ip, #4]
   1b978:	07db      	lsls	r3, r3, #31
   1b97a:	d52b      	bpl.n	1b9d4 <_free_r+0x100>
   1b97c:	f041 0301 	orr.w	r3, r1, #1
   1b980:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
   1b984:	f844 3c04 	str.w	r3, [r4, #-4]
   1b988:	6001      	str	r1, [r0, #0]
   1b98a:	d3dc      	bcc.n	1b946 <_free_r+0x72>
   1b98c:	f5b1 6f20 	cmp.w	r1, #2560	@ 0xa00
   1b990:	ea4f 2351 	mov.w	r3, r1, lsr #9
   1b994:	d253      	bcs.n	1ba3e <_free_r+0x16a>
   1b996:	098b      	lsrs	r3, r1, #6
   1b998:	f103 0039 	add.w	r0, r3, #57	@ 0x39
   1b99c:	f103 0238 	add.w	r2, r3, #56	@ 0x38
   1b9a0:	00c3      	lsls	r3, r0, #3
   1b9a2:	18f8      	adds	r0, r7, r3
   1b9a4:	58fb      	ldr	r3, [r7, r3]
   1b9a6:	3808      	subs	r0, #8
   1b9a8:	4298      	cmp	r0, r3
   1b9aa:	d103      	bne.n	1b9b4 <_free_r+0xe0>
   1b9ac:	e063      	b.n	1ba76 <_free_r+0x1a2>
   1b9ae:	689b      	ldr	r3, [r3, #8]
   1b9b0:	4298      	cmp	r0, r3
   1b9b2:	d004      	beq.n	1b9be <_free_r+0xea>
   1b9b4:	685a      	ldr	r2, [r3, #4]
   1b9b6:	f022 0203 	bic.w	r2, r2, #3
   1b9ba:	428a      	cmp	r2, r1
   1b9bc:	d8f7      	bhi.n	1b9ae <_free_r+0xda>
   1b9be:	68d8      	ldr	r0, [r3, #12]
   1b9c0:	e9c5 3002 	strd	r3, r0, [r5, #8]
   1b9c4:	6085      	str	r5, [r0, #8]
   1b9c6:	60dd      	str	r5, [r3, #12]
   1b9c8:	4640      	mov	r0, r8
   1b9ca:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1b9ce:	f7ff beff 	b.w	1b7d0 <__malloc_unlock>
   1b9d2:	4770      	bx	lr
   1b9d4:	4411      	add	r1, r2
   1b9d6:	f107 0c08 	add.w	ip, r7, #8
   1b9da:	6883      	ldr	r3, [r0, #8]
   1b9dc:	4563      	cmp	r3, ip
   1b9de:	d03f      	beq.n	1ba60 <_free_r+0x18c>
   1b9e0:	68c2      	ldr	r2, [r0, #12]
   1b9e2:	60da      	str	r2, [r3, #12]
   1b9e4:	6093      	str	r3, [r2, #8]
   1b9e6:	f041 0301 	orr.w	r3, r1, #1
   1b9ea:	606b      	str	r3, [r5, #4]
   1b9ec:	5069      	str	r1, [r5, r1]
   1b9ee:	e7a7      	b.n	1b940 <_free_r+0x6c>
   1b9f0:	2b00      	cmp	r3, #0
   1b9f2:	d161      	bne.n	1bab8 <_free_r+0x1e4>
   1b9f4:	440a      	add	r2, r1
   1b9f6:	e9d0 1302 	ldrd	r1, r3, [r0, #8]
   1b9fa:	60cb      	str	r3, [r1, #12]
   1b9fc:	6099      	str	r1, [r3, #8]
   1b9fe:	f042 0301 	orr.w	r3, r2, #1
   1ba02:	606b      	str	r3, [r5, #4]
   1ba04:	50aa      	str	r2, [r5, r2]
   1ba06:	e7b0      	b.n	1b96a <_free_r+0x96>
   1ba08:	07db      	lsls	r3, r3, #31
   1ba0a:	440a      	add	r2, r1
   1ba0c:	d407      	bmi.n	1ba1e <_free_r+0x14a>
   1ba0e:	f854 3c08 	ldr.w	r3, [r4, #-8]
   1ba12:	1aed      	subs	r5, r5, r3
   1ba14:	441a      	add	r2, r3
   1ba16:	e9d5 1302 	ldrd	r1, r3, [r5, #8]
   1ba1a:	60cb      	str	r3, [r1, #12]
   1ba1c:	6099      	str	r1, [r3, #8]
   1ba1e:	f042 0301 	orr.w	r3, r2, #1
   1ba22:	606b      	str	r3, [r5, #4]
   1ba24:	4b28      	ldr	r3, [pc, #160]	@ (1bac8 <_free_r+0x1f4>)
   1ba26:	60bd      	str	r5, [r7, #8]
   1ba28:	681b      	ldr	r3, [r3, #0]
   1ba2a:	4293      	cmp	r3, r2
   1ba2c:	d89d      	bhi.n	1b96a <_free_r+0x96>
   1ba2e:	4b27      	ldr	r3, [pc, #156]	@ (1bacc <_free_r+0x1f8>)
   1ba30:	4640      	mov	r0, r8
   1ba32:	6819      	ldr	r1, [r3, #0]
   1ba34:	f7ff fef2 	bl	1b81c <_malloc_trim_r>
   1ba38:	e797      	b.n	1b96a <_free_r+0x96>
   1ba3a:	4411      	add	r1, r2
   1ba3c:	e7cd      	b.n	1b9da <_free_r+0x106>
   1ba3e:	2b14      	cmp	r3, #20
   1ba40:	d908      	bls.n	1ba54 <_free_r+0x180>
   1ba42:	2b54      	cmp	r3, #84	@ 0x54
   1ba44:	d81f      	bhi.n	1ba86 <_free_r+0x1b2>
   1ba46:	0b0b      	lsrs	r3, r1, #12
   1ba48:	f103 006f 	add.w	r0, r3, #111	@ 0x6f
   1ba4c:	f103 026e 	add.w	r2, r3, #110	@ 0x6e
   1ba50:	00c3      	lsls	r3, r0, #3
   1ba52:	e7a6      	b.n	1b9a2 <_free_r+0xce>
   1ba54:	f103 005c 	add.w	r0, r3, #92	@ 0x5c
   1ba58:	f103 025b 	add.w	r2, r3, #91	@ 0x5b
   1ba5c:	00c3      	lsls	r3, r0, #3
   1ba5e:	e7a0      	b.n	1b9a2 <_free_r+0xce>
   1ba60:	f041 0301 	orr.w	r3, r1, #1
   1ba64:	613d      	str	r5, [r7, #16]
   1ba66:	617d      	str	r5, [r7, #20]
   1ba68:	f8c5 c008 	str.w	ip, [r5, #8]
   1ba6c:	f8c5 c00c 	str.w	ip, [r5, #12]
   1ba70:	606b      	str	r3, [r5, #4]
   1ba72:	5069      	str	r1, [r5, r1]
   1ba74:	e779      	b.n	1b96a <_free_r+0x96>
   1ba76:	6879      	ldr	r1, [r7, #4]
   1ba78:	1092      	asrs	r2, r2, #2
   1ba7a:	2401      	movs	r4, #1
   1ba7c:	fa04 f202 	lsl.w	r2, r4, r2
   1ba80:	430a      	orrs	r2, r1
   1ba82:	607a      	str	r2, [r7, #4]
   1ba84:	e79c      	b.n	1b9c0 <_free_r+0xec>
   1ba86:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
   1ba8a:	d806      	bhi.n	1ba9a <_free_r+0x1c6>
   1ba8c:	0bcb      	lsrs	r3, r1, #15
   1ba8e:	f103 0078 	add.w	r0, r3, #120	@ 0x78
   1ba92:	f103 0277 	add.w	r2, r3, #119	@ 0x77
   1ba96:	00c3      	lsls	r3, r0, #3
   1ba98:	e783      	b.n	1b9a2 <_free_r+0xce>
   1ba9a:	f240 5254 	movw	r2, #1364	@ 0x554
   1ba9e:	4293      	cmp	r3, r2
   1baa0:	d806      	bhi.n	1bab0 <_free_r+0x1dc>
   1baa2:	0c8b      	lsrs	r3, r1, #18
   1baa4:	f103 007d 	add.w	r0, r3, #125	@ 0x7d
   1baa8:	f103 027c 	add.w	r2, r3, #124	@ 0x7c
   1baac:	00c3      	lsls	r3, r0, #3
   1baae:	e778      	b.n	1b9a2 <_free_r+0xce>
   1bab0:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
   1bab4:	227e      	movs	r2, #126	@ 0x7e
   1bab6:	e774      	b.n	1b9a2 <_free_r+0xce>
   1bab8:	f041 0301 	orr.w	r3, r1, #1
   1babc:	606b      	str	r3, [r5, #4]
   1babe:	6001      	str	r1, [r0, #0]
   1bac0:	e753      	b.n	1b96a <_free_r+0x96>
   1bac2:	bf00      	nop
   1bac4:	10002c30 	.word	0x10002c30
   1bac8:	10002c2c 	.word	0x10002c2c
   1bacc:	10003660 	.word	0x10003660

0001bad0 <__udivmoddi4>:
   1bad0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1bad4:	9d08      	ldr	r5, [sp, #32]
   1bad6:	460c      	mov	r4, r1
   1bad8:	2b00      	cmp	r3, #0
   1bada:	d14e      	bne.n	1bb7a <__udivmoddi4+0xaa>
   1badc:	4694      	mov	ip, r2
   1bade:	458c      	cmp	ip, r1
   1bae0:	4686      	mov	lr, r0
   1bae2:	fab2 f282 	clz	r2, r2
   1bae6:	d962      	bls.n	1bbae <__udivmoddi4+0xde>
   1bae8:	b14a      	cbz	r2, 1bafe <__udivmoddi4+0x2e>
   1baea:	f1c2 0320 	rsb	r3, r2, #32
   1baee:	4091      	lsls	r1, r2
   1baf0:	fa20 f303 	lsr.w	r3, r0, r3
   1baf4:	fa0c fc02 	lsl.w	ip, ip, r2
   1baf8:	4319      	orrs	r1, r3
   1bafa:	fa00 fe02 	lsl.w	lr, r0, r2
   1bafe:	ea4f 471c 	mov.w	r7, ip, lsr #16
   1bb02:	fa1f f68c 	uxth.w	r6, ip
   1bb06:	fbb1 f4f7 	udiv	r4, r1, r7
   1bb0a:	ea4f 431e 	mov.w	r3, lr, lsr #16
   1bb0e:	fb07 1114 	mls	r1, r7, r4, r1
   1bb12:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   1bb16:	fb04 f106 	mul.w	r1, r4, r6
   1bb1a:	4299      	cmp	r1, r3
   1bb1c:	d90a      	bls.n	1bb34 <__udivmoddi4+0x64>
   1bb1e:	eb1c 0303 	adds.w	r3, ip, r3
   1bb22:	f104 30ff 	add.w	r0, r4, #4294967295	@ 0xffffffff
   1bb26:	f080 8112 	bcs.w	1bd4e <__udivmoddi4+0x27e>
   1bb2a:	4299      	cmp	r1, r3
   1bb2c:	f240 810f 	bls.w	1bd4e <__udivmoddi4+0x27e>
   1bb30:	3c02      	subs	r4, #2
   1bb32:	4463      	add	r3, ip
   1bb34:	1a59      	subs	r1, r3, r1
   1bb36:	fa1f f38e 	uxth.w	r3, lr
   1bb3a:	fbb1 f0f7 	udiv	r0, r1, r7
   1bb3e:	fb07 1110 	mls	r1, r7, r0, r1
   1bb42:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   1bb46:	fb00 f606 	mul.w	r6, r0, r6
   1bb4a:	429e      	cmp	r6, r3
   1bb4c:	d90a      	bls.n	1bb64 <__udivmoddi4+0x94>
   1bb4e:	eb1c 0303 	adds.w	r3, ip, r3
   1bb52:	f100 31ff 	add.w	r1, r0, #4294967295	@ 0xffffffff
   1bb56:	f080 80fc 	bcs.w	1bd52 <__udivmoddi4+0x282>
   1bb5a:	429e      	cmp	r6, r3
   1bb5c:	f240 80f9 	bls.w	1bd52 <__udivmoddi4+0x282>
   1bb60:	4463      	add	r3, ip
   1bb62:	3802      	subs	r0, #2
   1bb64:	1b9b      	subs	r3, r3, r6
   1bb66:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
   1bb6a:	2100      	movs	r1, #0
   1bb6c:	b11d      	cbz	r5, 1bb76 <__udivmoddi4+0xa6>
   1bb6e:	40d3      	lsrs	r3, r2
   1bb70:	2200      	movs	r2, #0
   1bb72:	e9c5 3200 	strd	r3, r2, [r5]
   1bb76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1bb7a:	428b      	cmp	r3, r1
   1bb7c:	d905      	bls.n	1bb8a <__udivmoddi4+0xba>
   1bb7e:	b10d      	cbz	r5, 1bb84 <__udivmoddi4+0xb4>
   1bb80:	e9c5 0100 	strd	r0, r1, [r5]
   1bb84:	2100      	movs	r1, #0
   1bb86:	4608      	mov	r0, r1
   1bb88:	e7f5      	b.n	1bb76 <__udivmoddi4+0xa6>
   1bb8a:	fab3 f183 	clz	r1, r3
   1bb8e:	2900      	cmp	r1, #0
   1bb90:	d146      	bne.n	1bc20 <__udivmoddi4+0x150>
   1bb92:	42a3      	cmp	r3, r4
   1bb94:	d302      	bcc.n	1bb9c <__udivmoddi4+0xcc>
   1bb96:	4290      	cmp	r0, r2
   1bb98:	f0c0 80f0 	bcc.w	1bd7c <__udivmoddi4+0x2ac>
   1bb9c:	1a86      	subs	r6, r0, r2
   1bb9e:	eb64 0303 	sbc.w	r3, r4, r3
   1bba2:	2001      	movs	r0, #1
   1bba4:	2d00      	cmp	r5, #0
   1bba6:	d0e6      	beq.n	1bb76 <__udivmoddi4+0xa6>
   1bba8:	e9c5 6300 	strd	r6, r3, [r5]
   1bbac:	e7e3      	b.n	1bb76 <__udivmoddi4+0xa6>
   1bbae:	2a00      	cmp	r2, #0
   1bbb0:	f040 8090 	bne.w	1bcd4 <__udivmoddi4+0x204>
   1bbb4:	eba1 040c 	sub.w	r4, r1, ip
   1bbb8:	ea4f 481c 	mov.w	r8, ip, lsr #16
   1bbbc:	fa1f f78c 	uxth.w	r7, ip
   1bbc0:	2101      	movs	r1, #1
   1bbc2:	fbb4 f6f8 	udiv	r6, r4, r8
   1bbc6:	ea4f 431e 	mov.w	r3, lr, lsr #16
   1bbca:	fb08 4416 	mls	r4, r8, r6, r4
   1bbce:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
   1bbd2:	fb07 f006 	mul.w	r0, r7, r6
   1bbd6:	4298      	cmp	r0, r3
   1bbd8:	d908      	bls.n	1bbec <__udivmoddi4+0x11c>
   1bbda:	eb1c 0303 	adds.w	r3, ip, r3
   1bbde:	f106 34ff 	add.w	r4, r6, #4294967295	@ 0xffffffff
   1bbe2:	d202      	bcs.n	1bbea <__udivmoddi4+0x11a>
   1bbe4:	4298      	cmp	r0, r3
   1bbe6:	f200 80cd 	bhi.w	1bd84 <__udivmoddi4+0x2b4>
   1bbea:	4626      	mov	r6, r4
   1bbec:	1a1c      	subs	r4, r3, r0
   1bbee:	fa1f f38e 	uxth.w	r3, lr
   1bbf2:	fbb4 f0f8 	udiv	r0, r4, r8
   1bbf6:	fb08 4410 	mls	r4, r8, r0, r4
   1bbfa:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
   1bbfe:	fb00 f707 	mul.w	r7, r0, r7
   1bc02:	429f      	cmp	r7, r3
   1bc04:	d908      	bls.n	1bc18 <__udivmoddi4+0x148>
   1bc06:	eb1c 0303 	adds.w	r3, ip, r3
   1bc0a:	f100 34ff 	add.w	r4, r0, #4294967295	@ 0xffffffff
   1bc0e:	d202      	bcs.n	1bc16 <__udivmoddi4+0x146>
   1bc10:	429f      	cmp	r7, r3
   1bc12:	f200 80b0 	bhi.w	1bd76 <__udivmoddi4+0x2a6>
   1bc16:	4620      	mov	r0, r4
   1bc18:	1bdb      	subs	r3, r3, r7
   1bc1a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
   1bc1e:	e7a5      	b.n	1bb6c <__udivmoddi4+0x9c>
   1bc20:	f1c1 0620 	rsb	r6, r1, #32
   1bc24:	408b      	lsls	r3, r1
   1bc26:	fa22 f706 	lsr.w	r7, r2, r6
   1bc2a:	431f      	orrs	r7, r3
   1bc2c:	fa20 fc06 	lsr.w	ip, r0, r6
   1bc30:	fa04 f301 	lsl.w	r3, r4, r1
   1bc34:	ea43 030c 	orr.w	r3, r3, ip
   1bc38:	40f4      	lsrs	r4, r6
   1bc3a:	fa00 f801 	lsl.w	r8, r0, r1
   1bc3e:	0c38      	lsrs	r0, r7, #16
   1bc40:	ea4f 4913 	mov.w	r9, r3, lsr #16
   1bc44:	fbb4 fef0 	udiv	lr, r4, r0
   1bc48:	fa1f fc87 	uxth.w	ip, r7
   1bc4c:	fb00 441e 	mls	r4, r0, lr, r4
   1bc50:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
   1bc54:	fb0e f90c 	mul.w	r9, lr, ip
   1bc58:	45a1      	cmp	r9, r4
   1bc5a:	fa02 f201 	lsl.w	r2, r2, r1
   1bc5e:	d90a      	bls.n	1bc76 <__udivmoddi4+0x1a6>
   1bc60:	193c      	adds	r4, r7, r4
   1bc62:	f10e 3aff 	add.w	sl, lr, #4294967295	@ 0xffffffff
   1bc66:	f080 8084 	bcs.w	1bd72 <__udivmoddi4+0x2a2>
   1bc6a:	45a1      	cmp	r9, r4
   1bc6c:	f240 8081 	bls.w	1bd72 <__udivmoddi4+0x2a2>
   1bc70:	f1ae 0e02 	sub.w	lr, lr, #2
   1bc74:	443c      	add	r4, r7
   1bc76:	eba4 0409 	sub.w	r4, r4, r9
   1bc7a:	fa1f f983 	uxth.w	r9, r3
   1bc7e:	fbb4 f3f0 	udiv	r3, r4, r0
   1bc82:	fb00 4413 	mls	r4, r0, r3, r4
   1bc86:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
   1bc8a:	fb03 fc0c 	mul.w	ip, r3, ip
   1bc8e:	45a4      	cmp	ip, r4
   1bc90:	d907      	bls.n	1bca2 <__udivmoddi4+0x1d2>
   1bc92:	193c      	adds	r4, r7, r4
   1bc94:	f103 30ff 	add.w	r0, r3, #4294967295	@ 0xffffffff
   1bc98:	d267      	bcs.n	1bd6a <__udivmoddi4+0x29a>
   1bc9a:	45a4      	cmp	ip, r4
   1bc9c:	d965      	bls.n	1bd6a <__udivmoddi4+0x29a>
   1bc9e:	3b02      	subs	r3, #2
   1bca0:	443c      	add	r4, r7
   1bca2:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
   1bca6:	fba0 9302 	umull	r9, r3, r0, r2
   1bcaa:	eba4 040c 	sub.w	r4, r4, ip
   1bcae:	429c      	cmp	r4, r3
   1bcb0:	46ce      	mov	lr, r9
   1bcb2:	469c      	mov	ip, r3
   1bcb4:	d351      	bcc.n	1bd5a <__udivmoddi4+0x28a>
   1bcb6:	d04e      	beq.n	1bd56 <__udivmoddi4+0x286>
   1bcb8:	b155      	cbz	r5, 1bcd0 <__udivmoddi4+0x200>
   1bcba:	ebb8 030e 	subs.w	r3, r8, lr
   1bcbe:	eb64 040c 	sbc.w	r4, r4, ip
   1bcc2:	fa04 f606 	lsl.w	r6, r4, r6
   1bcc6:	40cb      	lsrs	r3, r1
   1bcc8:	431e      	orrs	r6, r3
   1bcca:	40cc      	lsrs	r4, r1
   1bccc:	e9c5 6400 	strd	r6, r4, [r5]
   1bcd0:	2100      	movs	r1, #0
   1bcd2:	e750      	b.n	1bb76 <__udivmoddi4+0xa6>
   1bcd4:	f1c2 0320 	rsb	r3, r2, #32
   1bcd8:	fa20 f103 	lsr.w	r1, r0, r3
   1bcdc:	fa0c fc02 	lsl.w	ip, ip, r2
   1bce0:	fa24 f303 	lsr.w	r3, r4, r3
   1bce4:	4094      	lsls	r4, r2
   1bce6:	430c      	orrs	r4, r1
   1bce8:	ea4f 481c 	mov.w	r8, ip, lsr #16
   1bcec:	fa00 fe02 	lsl.w	lr, r0, r2
   1bcf0:	fa1f f78c 	uxth.w	r7, ip
   1bcf4:	fbb3 f0f8 	udiv	r0, r3, r8
   1bcf8:	fb08 3110 	mls	r1, r8, r0, r3
   1bcfc:	0c23      	lsrs	r3, r4, #16
   1bcfe:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   1bd02:	fb00 f107 	mul.w	r1, r0, r7
   1bd06:	4299      	cmp	r1, r3
   1bd08:	d908      	bls.n	1bd1c <__udivmoddi4+0x24c>
   1bd0a:	eb1c 0303 	adds.w	r3, ip, r3
   1bd0e:	f100 36ff 	add.w	r6, r0, #4294967295	@ 0xffffffff
   1bd12:	d22c      	bcs.n	1bd6e <__udivmoddi4+0x29e>
   1bd14:	4299      	cmp	r1, r3
   1bd16:	d92a      	bls.n	1bd6e <__udivmoddi4+0x29e>
   1bd18:	3802      	subs	r0, #2
   1bd1a:	4463      	add	r3, ip
   1bd1c:	1a5b      	subs	r3, r3, r1
   1bd1e:	b2a4      	uxth	r4, r4
   1bd20:	fbb3 f1f8 	udiv	r1, r3, r8
   1bd24:	fb08 3311 	mls	r3, r8, r1, r3
   1bd28:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
   1bd2c:	fb01 f307 	mul.w	r3, r1, r7
   1bd30:	42a3      	cmp	r3, r4
   1bd32:	d908      	bls.n	1bd46 <__udivmoddi4+0x276>
   1bd34:	eb1c 0404 	adds.w	r4, ip, r4
   1bd38:	f101 36ff 	add.w	r6, r1, #4294967295	@ 0xffffffff
   1bd3c:	d213      	bcs.n	1bd66 <__udivmoddi4+0x296>
   1bd3e:	42a3      	cmp	r3, r4
   1bd40:	d911      	bls.n	1bd66 <__udivmoddi4+0x296>
   1bd42:	3902      	subs	r1, #2
   1bd44:	4464      	add	r4, ip
   1bd46:	1ae4      	subs	r4, r4, r3
   1bd48:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
   1bd4c:	e739      	b.n	1bbc2 <__udivmoddi4+0xf2>
   1bd4e:	4604      	mov	r4, r0
   1bd50:	e6f0      	b.n	1bb34 <__udivmoddi4+0x64>
   1bd52:	4608      	mov	r0, r1
   1bd54:	e706      	b.n	1bb64 <__udivmoddi4+0x94>
   1bd56:	45c8      	cmp	r8, r9
   1bd58:	d2ae      	bcs.n	1bcb8 <__udivmoddi4+0x1e8>
   1bd5a:	ebb9 0e02 	subs.w	lr, r9, r2
   1bd5e:	eb63 0c07 	sbc.w	ip, r3, r7
   1bd62:	3801      	subs	r0, #1
   1bd64:	e7a8      	b.n	1bcb8 <__udivmoddi4+0x1e8>
   1bd66:	4631      	mov	r1, r6
   1bd68:	e7ed      	b.n	1bd46 <__udivmoddi4+0x276>
   1bd6a:	4603      	mov	r3, r0
   1bd6c:	e799      	b.n	1bca2 <__udivmoddi4+0x1d2>
   1bd6e:	4630      	mov	r0, r6
   1bd70:	e7d4      	b.n	1bd1c <__udivmoddi4+0x24c>
   1bd72:	46d6      	mov	lr, sl
   1bd74:	e77f      	b.n	1bc76 <__udivmoddi4+0x1a6>
   1bd76:	4463      	add	r3, ip
   1bd78:	3802      	subs	r0, #2
   1bd7a:	e74d      	b.n	1bc18 <__udivmoddi4+0x148>
   1bd7c:	4606      	mov	r6, r0
   1bd7e:	4623      	mov	r3, r4
   1bd80:	4608      	mov	r0, r1
   1bd82:	e70f      	b.n	1bba4 <__udivmoddi4+0xd4>
   1bd84:	3e02      	subs	r6, #2
   1bd86:	4463      	add	r3, ip
   1bd88:	e730      	b.n	1bbec <__udivmoddi4+0x11c>
   1bd8a:	bf00      	nop

0001bd8c <_sbrk>:
   1bd8c:	4a04      	ldr	r2, [pc, #16]	@ (1bda0 <_sbrk+0x14>)
   1bd8e:	4905      	ldr	r1, [pc, #20]	@ (1bda4 <_sbrk+0x18>)
   1bd90:	6813      	ldr	r3, [r2, #0]
   1bd92:	2b00      	cmp	r3, #0
   1bd94:	bf08      	it	eq
   1bd96:	460b      	moveq	r3, r1
   1bd98:	4418      	add	r0, r3
   1bd9a:	6010      	str	r0, [r2, #0]
   1bd9c:	4618      	mov	r0, r3
   1bd9e:	4770      	bx	lr
   1bda0:	100037a0 	.word	0x100037a0
   1bda4:	10002b00 	.word	0x10002b00

0001bda8 <am_hal_cachectrl_disable>:
   1bda8:	b500      	push	{lr}
   1bdaa:	b083      	sub	sp, #12
   1bdac:	f000 f8d2 	bl	1bf54 <am_hal_interrupt_master_disable>
   1bdb0:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
   1bdb4:	9001      	str	r0, [sp, #4]
   1bdb6:	681a      	ldr	r2, [r3, #0]
   1bdb8:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
   1bdbc:	601a      	str	r2, [r3, #0]
   1bdbe:	681a      	ldr	r2, [r3, #0]
   1bdc0:	f022 0201 	bic.w	r2, r2, #1
   1bdc4:	601a      	str	r2, [r3, #0]
   1bdc6:	9801      	ldr	r0, [sp, #4]
   1bdc8:	f000 f8c8 	bl	1bf5c <am_hal_interrupt_master_set>
   1bdcc:	2000      	movs	r0, #0
   1bdce:	b003      	add	sp, #12
   1bdd0:	f85d fb04 	ldr.w	pc, [sp], #4

0001bdd4 <am_hal_daxi_config>:
   1bdd4:	b530      	push	{r4, r5, lr}
   1bdd6:	b083      	sub	sp, #12
   1bdd8:	4605      	mov	r5, r0
   1bdda:	f000 f8bb 	bl	1bf54 <am_hal_interrupt_master_disable>
   1bdde:	9000      	str	r0, [sp, #0]
   1bde0:	f000 f8b8 	bl	1bf54 <am_hal_interrupt_master_disable>
   1bde4:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
   1bde8:	9001      	str	r0, [sp, #4]
   1bdea:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
   1bdec:	0752      	lsls	r2, r2, #29
   1bdee:	d40c      	bmi.n	1be0a <am_hal_daxi_config+0x36>
   1bdf0:	f3bf 8f4f 	dsb	sy
   1bdf4:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
   1bdf6:	491a      	ldr	r1, [pc, #104]	@ (1be60 <am_hal_daxi_config+0x8c>)
   1bdf8:	f042 0201 	orr.w	r2, r2, #1
   1bdfc:	655a      	str	r2, [r3, #84]	@ 0x54
   1bdfe:	680a      	ldr	r2, [r1, #0]
   1be00:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
   1be02:	f042 0202 	orr.w	r2, r2, #2
   1be06:	655a      	str	r2, [r3, #84]	@ 0x54
   1be08:	680b      	ldr	r3, [r1, #0]
   1be0a:	f04f 4490 	mov.w	r4, #1207959552	@ 0x48000000
   1be0e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
   1be10:	075b      	lsls	r3, r3, #29
   1be12:	d5fc      	bpl.n	1be0e <am_hal_daxi_config+0x3a>
   1be14:	9801      	ldr	r0, [sp, #4]
   1be16:	f000 f8a1 	bl	1bf5c <am_hal_interrupt_master_set>
   1be1a:	b1ed      	cbz	r5, 1be58 <am_hal_daxi_config+0x84>
   1be1c:	792b      	ldrb	r3, [r5, #4]
   1be1e:	78ea      	ldrb	r2, [r5, #3]
   1be20:	7869      	ldrb	r1, [r5, #1]
   1be22:	6828      	ldr	r0, [r5, #0]
   1be24:	f003 0301 	and.w	r3, r3, #1
   1be28:	0212      	lsls	r2, r2, #8
   1be2a:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
   1be2e:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
   1be32:	4313      	orrs	r3, r2
   1be34:	78aa      	ldrb	r2, [r5, #2]
   1be36:	490b      	ldr	r1, [pc, #44]	@ (1be64 <am_hal_daxi_config+0x90>)
   1be38:	0412      	lsls	r2, r2, #16
   1be3a:	f402 12f8 	and.w	r2, r2, #2031616	@ 0x1f0000
   1be3e:	4313      	orrs	r3, r2
   1be40:	6523      	str	r3, [r4, #80]	@ 0x50
   1be42:	6008      	str	r0, [r1, #0]
   1be44:	792b      	ldrb	r3, [r5, #4]
   1be46:	710b      	strb	r3, [r1, #4]
   1be48:	4b05      	ldr	r3, [pc, #20]	@ (1be60 <am_hal_daxi_config+0x8c>)
   1be4a:	681b      	ldr	r3, [r3, #0]
   1be4c:	9800      	ldr	r0, [sp, #0]
   1be4e:	f000 f885 	bl	1bf5c <am_hal_interrupt_master_set>
   1be52:	2000      	movs	r0, #0
   1be54:	b003      	add	sp, #12
   1be56:	bd30      	pop	{r4, r5, pc}
   1be58:	2306      	movs	r3, #6
   1be5a:	6523      	str	r3, [r4, #80]	@ 0x50
   1be5c:	e7f4      	b.n	1be48 <am_hal_daxi_config+0x74>
   1be5e:	bf00      	nop
   1be60:	47ff0000 	.word	0x47ff0000
   1be64:	10003044 	.word	0x10003044

0001be68 <am_hal_daxi_control>:
   1be68:	b510      	push	{r4, lr}
   1be6a:	b084      	sub	sp, #16
   1be6c:	2803      	cmp	r0, #3
   1be6e:	d866      	bhi.n	1bf3e <am_hal_daxi_control+0xd6>
   1be70:	e8df f000 	tbb	[pc, r0]
   1be74:	02083252 	.word	0x02083252
   1be78:	4832      	ldr	r0, [pc, #200]	@ (1bf44 <am_hal_daxi_control+0xdc>)
   1be7a:	f7ff ffab 	bl	1bdd4 <am_hal_daxi_config>
   1be7e:	2000      	movs	r0, #0
   1be80:	b004      	add	sp, #16
   1be82:	bd10      	pop	{r4, pc}
   1be84:	f000 f866 	bl	1bf54 <am_hal_interrupt_master_disable>
   1be88:	9002      	str	r0, [sp, #8]
   1be8a:	f000 f863 	bl	1bf54 <am_hal_interrupt_master_disable>
   1be8e:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
   1be92:	9003      	str	r0, [sp, #12]
   1be94:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
   1be96:	0752      	lsls	r2, r2, #29
   1be98:	d40c      	bmi.n	1beb4 <am_hal_daxi_control+0x4c>
   1be9a:	f3bf 8f4f 	dsb	sy
   1be9e:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
   1bea0:	4929      	ldr	r1, [pc, #164]	@ (1bf48 <am_hal_daxi_control+0xe0>)
   1bea2:	f042 0201 	orr.w	r2, r2, #1
   1bea6:	655a      	str	r2, [r3, #84]	@ 0x54
   1bea8:	680a      	ldr	r2, [r1, #0]
   1beaa:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
   1beac:	f042 0202 	orr.w	r2, r2, #2
   1beb0:	655a      	str	r2, [r3, #84]	@ 0x54
   1beb2:	680b      	ldr	r3, [r1, #0]
   1beb4:	f04f 4490 	mov.w	r4, #1207959552	@ 0x48000000
   1beb8:	6d63      	ldr	r3, [r4, #84]	@ 0x54
   1beba:	075b      	lsls	r3, r3, #29
   1bebc:	d5fc      	bpl.n	1beb8 <am_hal_daxi_control+0x50>
   1bebe:	9803      	ldr	r0, [sp, #12]
   1bec0:	f000 f84c 	bl	1bf5c <am_hal_interrupt_master_set>
   1bec4:	2206      	movs	r2, #6
   1bec6:	4b20      	ldr	r3, [pc, #128]	@ (1bf48 <am_hal_daxi_control+0xe0>)
   1bec8:	6522      	str	r2, [r4, #80]	@ 0x50
   1beca:	681b      	ldr	r3, [r3, #0]
   1becc:	9802      	ldr	r0, [sp, #8]
   1bece:	f000 f845 	bl	1bf5c <am_hal_interrupt_master_set>
   1bed2:	2000      	movs	r0, #0
   1bed4:	b004      	add	sp, #16
   1bed6:	bd10      	pop	{r4, pc}
   1bed8:	f000 f83c 	bl	1bf54 <am_hal_interrupt_master_disable>
   1bedc:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
   1bee0:	9001      	str	r0, [sp, #4]
   1bee2:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
   1bee4:	0754      	lsls	r4, r2, #29
   1bee6:	d40c      	bmi.n	1bf02 <am_hal_daxi_control+0x9a>
   1bee8:	f3bf 8f4f 	dsb	sy
   1beec:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
   1beee:	4916      	ldr	r1, [pc, #88]	@ (1bf48 <am_hal_daxi_control+0xe0>)
   1bef0:	f042 0201 	orr.w	r2, r2, #1
   1bef4:	655a      	str	r2, [r3, #84]	@ 0x54
   1bef6:	680a      	ldr	r2, [r1, #0]
   1bef8:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
   1befa:	f042 0202 	orr.w	r2, r2, #2
   1befe:	655a      	str	r2, [r3, #84]	@ 0x54
   1bf00:	680b      	ldr	r3, [r1, #0]
   1bf02:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
   1bf06:	6d53      	ldr	r3, [r2, #84]	@ 0x54
   1bf08:	0758      	lsls	r0, r3, #29
   1bf0a:	d5fc      	bpl.n	1bf06 <am_hal_daxi_control+0x9e>
   1bf0c:	9801      	ldr	r0, [sp, #4]
   1bf0e:	f000 f825 	bl	1bf5c <am_hal_interrupt_master_set>
   1bf12:	2000      	movs	r0, #0
   1bf14:	b004      	add	sp, #16
   1bf16:	bd10      	pop	{r4, pc}
   1bf18:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
   1bf1c:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
   1bf1e:	0751      	lsls	r1, r2, #29
   1bf20:	f3c2 0080 	ubfx	r0, r2, #2, #1
   1bf24:	d409      	bmi.n	1bf3a <am_hal_daxi_control+0xd2>
   1bf26:	f3bf 8f4f 	dsb	sy
   1bf2a:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
   1bf2c:	4906      	ldr	r1, [pc, #24]	@ (1bf48 <am_hal_daxi_control+0xe0>)
   1bf2e:	f042 0202 	orr.w	r2, r2, #2
   1bf32:	655a      	str	r2, [r3, #84]	@ 0x54
   1bf34:	680b      	ldr	r3, [r1, #0]
   1bf36:	b004      	add	sp, #16
   1bf38:	bd10      	pop	{r4, pc}
   1bf3a:	2000      	movs	r0, #0
   1bf3c:	e7a0      	b.n	1be80 <am_hal_daxi_control+0x18>
   1bf3e:	2006      	movs	r0, #6
   1bf40:	e79e      	b.n	1be80 <am_hal_daxi_control+0x18>
   1bf42:	bf00      	nop
   1bf44:	10003044 	.word	0x10003044
   1bf48:	47ff0000 	.word	0x47ff0000

0001bf4c <am_hal_interrupt_master_enable>:
   1bf4c:	f3ef 8010 	mrs	r0, PRIMASK
   1bf50:	b662      	cpsie	i
   1bf52:	4770      	bx	lr

0001bf54 <am_hal_interrupt_master_disable>:
   1bf54:	f3ef 8010 	mrs	r0, PRIMASK
   1bf58:	b672      	cpsid	i
   1bf5a:	4770      	bx	lr

0001bf5c <am_hal_interrupt_master_set>:
   1bf5c:	f380 8810 	msr	PRIMASK, r0
   1bf60:	4770      	bx	lr
   1bf62:	bf00      	nop

0001bf64 <internal_iom_reset_on_error>:
   1bf64:	b570      	push	{r4, r5, r6, lr}
   1bf66:	6844      	ldr	r4, [r0, #4]
   1bf68:	f8d0 0864 	ldr.w	r0, [r0, #2148]	@ 0x864
   1bf6c:	f504 2480 	add.w	r4, r4, #262144	@ 0x40000
   1bf70:	3450      	adds	r4, #80	@ 0x50
   1bf72:	0324      	lsls	r4, r4, #12
   1bf74:	2300      	movs	r3, #0
   1bf76:	050e      	lsls	r6, r1, #20
   1bf78:	f8d4 5200 	ldr.w	r5, [r4, #512]	@ 0x200
   1bf7c:	f8c4 3200 	str.w	r3, [r4, #512]	@ 0x200
   1bf80:	d52a      	bpl.n	1bfd8 <internal_iom_reset_on_error+0x74>
   1bf82:	f8d4 3218 	ldr.w	r3, [r4, #536]	@ 0x218
   1bf86:	079a      	lsls	r2, r3, #30
   1bf88:	d45d      	bmi.n	1c046 <internal_iom_reset_on_error+0xe2>
   1bf8a:	f8d4 3248 	ldr.w	r3, [r4, #584]	@ 0x248
   1bf8e:	079b      	lsls	r3, r3, #30
   1bf90:	d508      	bpl.n	1bfa4 <internal_iom_reset_on_error+0x40>
   1bf92:	f8d4 3100 	ldr.w	r3, [r4, #256]	@ 0x100
   1bf96:	f3c3 4307 	ubfx	r3, r3, #16, #8
   1bf9a:	2b03      	cmp	r3, #3
   1bf9c:	d9f5      	bls.n	1bf8a <internal_iom_reset_on_error+0x26>
   1bf9e:	f8d4 3108 	ldr.w	r3, [r4, #264]	@ 0x108
   1bfa2:	e7f6      	b.n	1bf92 <internal_iom_reset_on_error+0x2e>
   1bfa4:	f8d4 3248 	ldr.w	r3, [r4, #584]	@ 0x248
   1bfa8:	f003 0306 	and.w	r3, r3, #6
   1bfac:	2b04      	cmp	r3, #4
   1bfae:	d1f9      	bne.n	1bfa4 <internal_iom_reset_on_error+0x40>
   1bfb0:	f8d4 3100 	ldr.w	r3, [r4, #256]	@ 0x100
   1bfb4:	f413 0f7f 	tst.w	r3, #16711680	@ 0xff0000
   1bfb8:	d00e      	beq.n	1bfd8 <internal_iom_reset_on_error+0x74>
   1bfba:	f8d4 3100 	ldr.w	r3, [r4, #256]	@ 0x100
   1bfbe:	f3c3 4307 	ubfx	r3, r3, #16, #8
   1bfc2:	2b03      	cmp	r3, #3
   1bfc4:	d9f4      	bls.n	1bfb0 <internal_iom_reset_on_error+0x4c>
   1bfc6:	f8d4 3108 	ldr.w	r3, [r4, #264]	@ 0x108
   1bfca:	e7f6      	b.n	1bfba <internal_iom_reset_on_error+0x56>
   1bfcc:	f8d4 3248 	ldr.w	r3, [r4, #584]	@ 0x248
   1bfd0:	f003 0306 	and.w	r3, r3, #6
   1bfd4:	2b04      	cmp	r3, #4
   1bfd6:	d1f9      	bne.n	1bfcc <internal_iom_reset_on_error+0x68>
   1bfd8:	f411 7f04 	tst.w	r1, #528	@ 0x210
   1bfdc:	d02c      	beq.n	1c038 <internal_iom_reset_on_error+0xd4>
   1bfde:	f8d4 6388 	ldr.w	r6, [r4, #904]	@ 0x388
   1bfe2:	f8d4 3248 	ldr.w	r3, [r4, #584]	@ 0x248
   1bfe6:	f003 0306 	and.w	r3, r3, #6
   1bfea:	2b04      	cmp	r3, #4
   1bfec:	d1f9      	bne.n	1bfe2 <internal_iom_reset_on_error+0x7e>
   1bfee:	f8d4 311c 	ldr.w	r3, [r4, #284]	@ 0x11c
   1bff2:	f36f 1304 	bfc	r3, #4, #1
   1bff6:	f8c4 311c 	str.w	r3, [r4, #284]	@ 0x11c
   1bffa:	f8d4 3110 	ldr.w	r3, [r4, #272]	@ 0x110
   1bffe:	f36f 0341 	bfc	r3, #1, #1
   1c002:	f8c4 3110 	str.w	r3, [r4, #272]	@ 0x110
   1c006:	f8d4 3388 	ldr.w	r3, [r4, #904]	@ 0x388
   1c00a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
   1c00e:	f043 0302 	orr.w	r3, r3, #2
   1c012:	f8c4 3388 	str.w	r3, [r4, #904]	@ 0x388
   1c016:	0040      	lsls	r0, r0, #1
   1c018:	f000 fe76 	bl	1cd08 <am_hal_delay_us>
   1c01c:	f8c4 6388 	str.w	r6, [r4, #904]	@ 0x388
   1c020:	f8d4 3110 	ldr.w	r3, [r4, #272]	@ 0x110
   1c024:	f043 0302 	orr.w	r3, r3, #2
   1c028:	f8c4 3110 	str.w	r3, [r4, #272]	@ 0x110
   1c02c:	f8d4 311c 	ldr.w	r3, [r4, #284]	@ 0x11c
   1c030:	f043 0310 	orr.w	r3, r3, #16
   1c034:	f8c4 311c 	str.w	r3, [r4, #284]	@ 0x11c
   1c038:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   1c03c:	f8c4 3208 	str.w	r3, [r4, #520]	@ 0x208
   1c040:	f8c4 5200 	str.w	r5, [r4, #512]	@ 0x200
   1c044:	bd70      	pop	{r4, r5, r6, pc}
   1c046:	f8d4 221c 	ldr.w	r2, [r4, #540]	@ 0x21c
   1c04a:	4e07      	ldr	r6, [pc, #28]	@ (1c068 <internal_iom_reset_on_error+0x104>)
   1c04c:	2a00      	cmp	r2, #0
   1c04e:	d0bd      	beq.n	1bfcc <internal_iom_reset_on_error+0x68>
   1c050:	f8d4 3100 	ldr.w	r3, [r4, #256]	@ 0x100
   1c054:	f3c3 2307 	ubfx	r3, r3, #8, #8
   1c058:	2b03      	cmp	r3, #3
   1c05a:	d9f9      	bls.n	1c050 <internal_iom_reset_on_error+0xec>
   1c05c:	2a04      	cmp	r2, #4
   1c05e:	f8c4 610c 	str.w	r6, [r4, #268]	@ 0x10c
   1c062:	d9b3      	bls.n	1bfcc <internal_iom_reset_on_error+0x68>
   1c064:	3a04      	subs	r2, #4
   1c066:	e7f1      	b.n	1c04c <internal_iom_reset_on_error+0xe8>
   1c068:	deadbeef 	.word	0xdeadbeef

0001c06c <am_hal_iom_initialize>:
   1c06c:	2807      	cmp	r0, #7
   1c06e:	d81a      	bhi.n	1c0a6 <am_hal_iom_initialize+0x3a>
   1c070:	b1e9      	cbz	r1, 1c0ae <am_hal_iom_initialize+0x42>
   1c072:	b530      	push	{r4, r5, lr}
   1c074:	f640 0ca8 	movw	ip, #2216	@ 0x8a8
   1c078:	4d0e      	ldr	r5, [pc, #56]	@ (1c0b4 <am_hal_iom_initialize+0x48>)
   1c07a:	fb0c fc00 	mul.w	ip, ip, r0
   1c07e:	eb05 040c 	add.w	r4, r5, ip
   1c082:	4602      	mov	r2, r0
   1c084:	78e3      	ldrb	r3, [r4, #3]
   1c086:	f013 0301 	ands.w	r3, r3, #1
   1c08a:	d10e      	bne.n	1c0aa <am_hal_iom_initialize+0x3e>
   1c08c:	4618      	mov	r0, r3
   1c08e:	f855 300c 	ldr.w	r3, [r5, ip]
   1c092:	f003 4e7c 	and.w	lr, r3, #4227858432	@ 0xfc000000
   1c096:	4b08      	ldr	r3, [pc, #32]	@ (1c0b8 <am_hal_iom_initialize+0x4c>)
   1c098:	ea4e 0303 	orr.w	r3, lr, r3
   1c09c:	f845 300c 	str.w	r3, [r5, ip]
   1c0a0:	6062      	str	r2, [r4, #4]
   1c0a2:	600c      	str	r4, [r1, #0]
   1c0a4:	bd30      	pop	{r4, r5, pc}
   1c0a6:	2005      	movs	r0, #5
   1c0a8:	4770      	bx	lr
   1c0aa:	2007      	movs	r0, #7
   1c0ac:	bd30      	pop	{r4, r5, pc}
   1c0ae:	2006      	movs	r0, #6
   1c0b0:	4770      	bx	lr
   1c0b2:	bf00      	nop
   1c0b4:	100037a4 	.word	0x100037a4
   1c0b8:	01123456 	.word	0x01123456

0001c0bc <am_hal_iom_enable>:
   1c0bc:	2800      	cmp	r0, #0
   1c0be:	d06b      	beq.n	1c198 <am_hal_iom_enable+0xdc>
   1c0c0:	b530      	push	{r4, r5, lr}
   1c0c2:	6803      	ldr	r3, [r0, #0]
   1c0c4:	4a37      	ldr	r2, [pc, #220]	@ (1c1a4 <am_hal_iom_enable+0xe8>)
   1c0c6:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   1c0ca:	4293      	cmp	r3, r2
   1c0cc:	b085      	sub	sp, #20
   1c0ce:	4604      	mov	r4, r0
   1c0d0:	d155      	bne.n	1c17e <am_hal_iom_enable+0xc2>
   1c0d2:	78c3      	ldrb	r3, [r0, #3]
   1c0d4:	079b      	lsls	r3, r3, #30
   1c0d6:	d455      	bmi.n	1c184 <am_hal_iom_enable+0xc8>
   1c0d8:	6840      	ldr	r0, [r0, #4]
   1c0da:	7a23      	ldrb	r3, [r4, #8]
   1c0dc:	f500 2280 	add.w	r2, r0, #262144	@ 0x40000
   1c0e0:	3250      	adds	r2, #80	@ 0x50
   1c0e2:	0311      	lsls	r1, r2, #12
   1c0e4:	3b00      	subs	r3, #0
   1c0e6:	f8d1 211c 	ldr.w	r2, [r1, #284]	@ 0x11c
   1c0ea:	bf18      	it	ne
   1c0ec:	2301      	movne	r3, #1
   1c0ee:	f3c2 0242 	ubfx	r2, r2, #1, #3
   1c0f2:	4293      	cmp	r3, r2
   1c0f4:	d04c      	beq.n	1c190 <am_hal_iom_enable+0xd4>
   1c0f6:	f8d1 211c 	ldr.w	r2, [r1, #284]	@ 0x11c
   1c0fa:	f3c2 1242 	ubfx	r2, r2, #5, #3
   1c0fe:	4293      	cmp	r3, r2
   1c100:	d143      	bne.n	1c18a <am_hal_iom_enable+0xce>
   1c102:	2310      	movs	r3, #16
   1c104:	f8c1 311c 	str.w	r3, [r1, #284]	@ 0x11c
   1c108:	68e3      	ldr	r3, [r4, #12]
   1c10a:	b38b      	cbz	r3, 1c170 <am_hal_iom_enable+0xb4>
   1c10c:	4a26      	ldr	r2, [pc, #152]	@ (1c1a8 <am_hal_iom_enable+0xec>)
   1c10e:	9302      	str	r3, [sp, #8]
   1c110:	2300      	movs	r3, #0
   1c112:	6263      	str	r3, [r4, #36]	@ 0x24
   1c114:	61e3      	str	r3, [r4, #28]
   1c116:	f8c1 2238 	str.w	r2, [r1, #568]	@ 0x238
   1c11a:	6922      	ldr	r2, [r4, #16]
   1c11c:	f8c4 3854 	str.w	r3, [r4, #2132]	@ 0x854
   1c120:	0852      	lsrs	r2, r2, #1
   1c122:	f44f 7580 	mov.w	r5, #256	@ 0x100
   1c126:	f884 383c 	strb.w	r3, [r4, #2108]	@ 0x83c
   1c12a:	f8c4 3838 	str.w	r3, [r4, #2104]	@ 0x838
   1c12e:	f8c4 3844 	str.w	r3, [r4, #2116]	@ 0x844
   1c132:	f8c4 3840 	str.w	r3, [r4, #2112]	@ 0x840
   1c136:	f8c4 3830 	str.w	r3, [r4, #2096]	@ 0x830
   1c13a:	f8c4 3828 	str.w	r3, [r4, #2088]	@ 0x828
   1c13e:	6223      	str	r3, [r4, #32]
   1c140:	f8c4 385c 	str.w	r3, [r4, #2140]	@ 0x85c
   1c144:	9201      	str	r2, [sp, #4]
   1c146:	2301      	movs	r3, #1
   1c148:	f604 0228 	addw	r2, r4, #2088	@ 0x828
   1c14c:	b2c0      	uxtb	r0, r0
   1c14e:	f8a4 582c 	strh.w	r5, [r4, #2092]	@ 0x82c
   1c152:	a901      	add	r1, sp, #4
   1c154:	f88d 300c 	strb.w	r3, [sp, #12]
   1c158:	f002 f8c8 	bl	1e2ec <am_hal_cmdq_init>
   1c15c:	6863      	ldr	r3, [r4, #4]
   1c15e:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   1c162:	3350      	adds	r3, #80	@ 0x50
   1c164:	2202      	movs	r2, #2
   1c166:	031b      	lsls	r3, r3, #12
   1c168:	b9c0      	cbnz	r0, 1c19c <am_hal_iom_enable+0xe0>
   1c16a:	6225      	str	r5, [r4, #32]
   1c16c:	f8c3 2210 	str.w	r2, [r3, #528]	@ 0x210
   1c170:	78e3      	ldrb	r3, [r4, #3]
   1c172:	2000      	movs	r0, #0
   1c174:	f043 0302 	orr.w	r3, r3, #2
   1c178:	70e3      	strb	r3, [r4, #3]
   1c17a:	b005      	add	sp, #20
   1c17c:	bd30      	pop	{r4, r5, pc}
   1c17e:	2002      	movs	r0, #2
   1c180:	b005      	add	sp, #20
   1c182:	bd30      	pop	{r4, r5, pc}
   1c184:	2000      	movs	r0, #0
   1c186:	b005      	add	sp, #20
   1c188:	bd30      	pop	{r4, r5, pc}
   1c18a:	2009      	movs	r0, #9
   1c18c:	b005      	add	sp, #20
   1c18e:	bd30      	pop	{r4, r5, pc}
   1c190:	2301      	movs	r3, #1
   1c192:	f8c1 311c 	str.w	r3, [r1, #284]	@ 0x11c
   1c196:	e7b7      	b.n	1c108 <am_hal_iom_enable+0x4c>
   1c198:	2002      	movs	r0, #2
   1c19a:	4770      	bx	lr
   1c19c:	f8c3 2210 	str.w	r2, [r3, #528]	@ 0x210
   1c1a0:	e7ee      	b.n	1c180 <am_hal_iom_enable+0xc4>
   1c1a2:	bf00      	nop
   1c1a4:	01123456 	.word	0x01123456
   1c1a8:	00800040 	.word	0x00800040

0001c1ac <am_hal_iom_power_ctrl>:
   1c1ac:	2800      	cmp	r0, #0
   1c1ae:	f000 80c5 	beq.w	1c33c <am_hal_iom_power_ctrl+0x190>
   1c1b2:	b530      	push	{r4, r5, lr}
   1c1b4:	6803      	ldr	r3, [r0, #0]
   1c1b6:	4604      	mov	r4, r0
   1c1b8:	4873      	ldr	r0, [pc, #460]	@ (1c388 <am_hal_iom_power_ctrl+0x1dc>)
   1c1ba:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   1c1be:	4283      	cmp	r3, r0
   1c1c0:	b083      	sub	sp, #12
   1c1c2:	d169      	bne.n	1c298 <am_hal_iom_power_ctrl+0xec>
   1c1c4:	2900      	cmp	r1, #0
   1c1c6:	d06d      	beq.n	1c2a4 <am_hal_iom_power_ctrl+0xf8>
   1c1c8:	3901      	subs	r1, #1
   1c1ca:	2901      	cmp	r1, #1
   1c1cc:	d867      	bhi.n	1c29e <am_hal_iom_power_ctrl+0xf2>
   1c1ce:	78e3      	ldrb	r3, [r4, #3]
   1c1d0:	6860      	ldr	r0, [r4, #4]
   1c1d2:	f013 0f02 	tst.w	r3, #2
   1c1d6:	f500 2380 	add.w	r3, r0, #262144	@ 0x40000
   1c1da:	f103 0350 	add.w	r3, r3, #80	@ 0x50
   1c1de:	ea4f 3303 	mov.w	r3, r3, lsl #12
   1c1e2:	d00a      	beq.n	1c1fa <am_hal_iom_power_ctrl+0x4e>
   1c1e4:	f8d3 1248 	ldr.w	r1, [r3, #584]	@ 0x248
   1c1e8:	f001 0106 	and.w	r1, r1, #6
   1c1ec:	2904      	cmp	r1, #4
   1c1ee:	f040 80ba 	bne.w	1c366 <am_hal_iom_power_ctrl+0x1ba>
   1c1f2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
   1c1f4:	2900      	cmp	r1, #0
   1c1f6:	f040 80b6 	bne.w	1c366 <am_hal_iom_power_ctrl+0x1ba>
   1c1fa:	b3d2      	cbz	r2, 1c272 <am_hal_iom_power_ctrl+0xc6>
   1c1fc:	f8d3 1104 	ldr.w	r1, [r3, #260]	@ 0x104
   1c200:	f8d3 2118 	ldr.w	r2, [r3, #280]	@ 0x118
   1c204:	f8c4 2874 	str.w	r2, [r4, #2164]	@ 0x874
   1c208:	f8c4 186c 	str.w	r1, [r4, #2156]	@ 0x86c
   1c20c:	f8d3 111c 	ldr.w	r1, [r3, #284]	@ 0x11c
   1c210:	f8d3 2228 	ldr.w	r2, [r3, #552]	@ 0x228
   1c214:	f8c4 287c 	str.w	r2, [r4, #2172]	@ 0x87c
   1c218:	f8c4 1878 	str.w	r1, [r4, #2168]	@ 0x878
   1c21c:	f8d3 122c 	ldr.w	r1, [r3, #556]	@ 0x22c
   1c220:	f8d3 2234 	ldr.w	r2, [r3, #564]	@ 0x234
   1c224:	f8c4 2884 	str.w	r2, [r4, #2180]	@ 0x884
   1c228:	f8c4 1880 	str.w	r1, [r4, #2176]	@ 0x880
   1c22c:	f8d3 123c 	ldr.w	r1, [r3, #572]	@ 0x23c
   1c230:	f8d3 2240 	ldr.w	r2, [r3, #576]	@ 0x240
   1c234:	f8c4 288c 	str.w	r2, [r4, #2188]	@ 0x88c
   1c238:	f8c4 1888 	str.w	r1, [r4, #2184]	@ 0x888
   1c23c:	f8d3 1244 	ldr.w	r1, [r3, #580]	@ 0x244
   1c240:	f8d3 2280 	ldr.w	r2, [r3, #640]	@ 0x280
   1c244:	f8c4 2894 	str.w	r2, [r4, #2196]	@ 0x894
   1c248:	f8c4 1890 	str.w	r1, [r4, #2192]	@ 0x890
   1c24c:	f8d3 12c0 	ldr.w	r1, [r3, #704]	@ 0x2c0
   1c250:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
   1c254:	f8c4 289c 	str.w	r2, [r4, #2204]	@ 0x89c
   1c258:	f8c4 1898 	str.w	r1, [r4, #2200]	@ 0x898
   1c25c:	f8d3 1210 	ldr.w	r1, [r3, #528]	@ 0x210
   1c260:	f8d3 2228 	ldr.w	r2, [r3, #552]	@ 0x228
   1c264:	f8c4 1870 	str.w	r1, [r4, #2160]	@ 0x870
   1c268:	07d1      	lsls	r1, r2, #31
   1c26a:	d472      	bmi.n	1c352 <am_hal_iom_power_ctrl+0x1a6>
   1c26c:	2201      	movs	r2, #1
   1c26e:	f884 2868 	strb.w	r2, [r4, #2152]	@ 0x868
   1c272:	f8d3 211c 	ldr.w	r2, [r3, #284]	@ 0x11c
   1c276:	f36f 0200 	bfc	r2, #0, #1
   1c27a:	f8c3 211c 	str.w	r2, [r3, #284]	@ 0x11c
   1c27e:	f8d3 211c 	ldr.w	r2, [r3, #284]	@ 0x11c
   1c282:	3001      	adds	r0, #1
   1c284:	f36f 1204 	bfc	r2, #4, #1
   1c288:	f8c3 211c 	str.w	r2, [r3, #284]	@ 0x11c
   1c28c:	b2c0      	uxtb	r0, r0
   1c28e:	f001 fc3d 	bl	1db0c <am_hal_pwrctrl_periph_disable>
   1c292:	2000      	movs	r0, #0
   1c294:	b003      	add	sp, #12
   1c296:	bd30      	pop	{r4, r5, pc}
   1c298:	2002      	movs	r0, #2
   1c29a:	b003      	add	sp, #12
   1c29c:	bd30      	pop	{r4, r5, pc}
   1c29e:	2006      	movs	r0, #6
   1c2a0:	b003      	add	sp, #12
   1c2a2:	bd30      	pop	{r4, r5, pc}
   1c2a4:	2a00      	cmp	r2, #0
   1c2a6:	d04b      	beq.n	1c340 <am_hal_iom_power_ctrl+0x194>
   1c2a8:	f894 3868 	ldrb.w	r3, [r4, #2152]	@ 0x868
   1c2ac:	2b00      	cmp	r3, #0
   1c2ae:	d05c      	beq.n	1c36a <am_hal_iom_power_ctrl+0x1be>
   1c2b0:	6860      	ldr	r0, [r4, #4]
   1c2b2:	3001      	adds	r0, #1
   1c2b4:	b2c0      	uxtb	r0, r0
   1c2b6:	f001 fb59 	bl	1d96c <am_hal_pwrctrl_periph_enable>
   1c2ba:	6863      	ldr	r3, [r4, #4]
   1c2bc:	f8d4 086c 	ldr.w	r0, [r4, #2156]	@ 0x86c
   1c2c0:	f8d4 1874 	ldr.w	r1, [r4, #2164]	@ 0x874
   1c2c4:	f8d4 287c 	ldr.w	r2, [r4, #2172]	@ 0x87c
   1c2c8:	f8d4 5870 	ldr.w	r5, [r4, #2160]	@ 0x870
   1c2cc:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   1c2d0:	3350      	adds	r3, #80	@ 0x50
   1c2d2:	031b      	lsls	r3, r3, #12
   1c2d4:	f8c3 0104 	str.w	r0, [r3, #260]	@ 0x104
   1c2d8:	f8d4 0880 	ldr.w	r0, [r4, #2176]	@ 0x880
   1c2dc:	f8c3 1118 	str.w	r1, [r3, #280]	@ 0x118
   1c2e0:	f8d4 1884 	ldr.w	r1, [r4, #2180]	@ 0x884
   1c2e4:	f8c3 022c 	str.w	r0, [r3, #556]	@ 0x22c
   1c2e8:	f8d4 0888 	ldr.w	r0, [r4, #2184]	@ 0x888
   1c2ec:	f8c3 1234 	str.w	r1, [r3, #564]	@ 0x234
   1c2f0:	f8d4 188c 	ldr.w	r1, [r4, #2188]	@ 0x88c
   1c2f4:	f8c3 023c 	str.w	r0, [r3, #572]	@ 0x23c
   1c2f8:	f8d4 0890 	ldr.w	r0, [r4, #2192]	@ 0x890
   1c2fc:	f8c3 1240 	str.w	r1, [r3, #576]	@ 0x240
   1c300:	f8d4 1894 	ldr.w	r1, [r4, #2196]	@ 0x894
   1c304:	f8c3 0244 	str.w	r0, [r3, #580]	@ 0x244
   1c308:	f8d4 0898 	ldr.w	r0, [r4, #2200]	@ 0x898
   1c30c:	f8c3 1280 	str.w	r1, [r3, #640]	@ 0x280
   1c310:	f8d4 189c 	ldr.w	r1, [r4, #2204]	@ 0x89c
   1c314:	f8c3 02c0 	str.w	r0, [r3, #704]	@ 0x2c0
   1c318:	f8c3 1200 	str.w	r1, [r3, #512]	@ 0x200
   1c31c:	f022 0001 	bic.w	r0, r2, #1
   1c320:	f8d4 1878 	ldr.w	r1, [r4, #2168]	@ 0x878
   1c324:	f8c3 5210 	str.w	r5, [r3, #528]	@ 0x210
   1c328:	07d2      	lsls	r2, r2, #31
   1c32a:	f8c3 0228 	str.w	r0, [r3, #552]	@ 0x228
   1c32e:	f8c3 111c 	str.w	r1, [r3, #284]	@ 0x11c
   1c332:	d41c      	bmi.n	1c36e <am_hal_iom_power_ctrl+0x1c2>
   1c334:	2000      	movs	r0, #0
   1c336:	f884 0868 	strb.w	r0, [r4, #2152]	@ 0x868
   1c33a:	e7ae      	b.n	1c29a <am_hal_iom_power_ctrl+0xee>
   1c33c:	2002      	movs	r0, #2
   1c33e:	4770      	bx	lr
   1c340:	6860      	ldr	r0, [r4, #4]
   1c342:	9201      	str	r2, [sp, #4]
   1c344:	3001      	adds	r0, #1
   1c346:	b2c0      	uxtb	r0, r0
   1c348:	f001 fb10 	bl	1d96c <am_hal_pwrctrl_periph_enable>
   1c34c:	9a01      	ldr	r2, [sp, #4]
   1c34e:	4610      	mov	r0, r2
   1c350:	e7a3      	b.n	1c29a <am_hal_iom_power_ctrl+0xee>
   1c352:	f8d4 0828 	ldr.w	r0, [r4, #2088]	@ 0x828
   1c356:	f002 f84d 	bl	1e3f4 <am_hal_cmdq_disable>
   1c35a:	6860      	ldr	r0, [r4, #4]
   1c35c:	f500 2380 	add.w	r3, r0, #262144	@ 0x40000
   1c360:	3350      	adds	r3, #80	@ 0x50
   1c362:	031b      	lsls	r3, r3, #12
   1c364:	e782      	b.n	1c26c <am_hal_iom_power_ctrl+0xc0>
   1c366:	2003      	movs	r0, #3
   1c368:	e797      	b.n	1c29a <am_hal_iom_power_ctrl+0xee>
   1c36a:	2007      	movs	r0, #7
   1c36c:	e795      	b.n	1c29a <am_hal_iom_power_ctrl+0xee>
   1c36e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
   1c370:	b92a      	cbnz	r2, 1c37e <am_hal_iom_power_ctrl+0x1d2>
   1c372:	f8d3 222c 	ldr.w	r2, [r3, #556]	@ 0x22c
   1c376:	f503 730b 	add.w	r3, r3, #556	@ 0x22c
   1c37a:	e9c2 3200 	strd	r3, r2, [r2]
   1c37e:	f8d4 0828 	ldr.w	r0, [r4, #2088]	@ 0x828
   1c382:	f002 f80b 	bl	1e39c <am_hal_cmdq_enable>
   1c386:	e7d5      	b.n	1c334 <am_hal_iom_power_ctrl+0x188>
   1c388:	01123456 	.word	0x01123456

0001c38c <am_hal_iom_configure>:
   1c38c:	b380      	cbz	r0, 1c3f0 <am_hal_iom_configure+0x64>
   1c38e:	6803      	ldr	r3, [r0, #0]
   1c390:	4aa1      	ldr	r2, [pc, #644]	@ (1c618 <am_hal_iom_configure+0x28c>)
   1c392:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   1c396:	4293      	cmp	r3, r2
   1c398:	d12a      	bne.n	1c3f0 <am_hal_iom_configure+0x64>
   1c39a:	2900      	cmp	r1, #0
   1c39c:	f000 810c 	beq.w	1c5b8 <am_hal_iom_configure+0x22c>
   1c3a0:	6843      	ldr	r3, [r0, #4]
   1c3a2:	2b07      	cmp	r3, #7
   1c3a4:	f200 8108 	bhi.w	1c5b8 <am_hal_iom_configure+0x22c>
   1c3a8:	78c2      	ldrb	r2, [r0, #3]
   1c3aa:	0792      	lsls	r2, r2, #30
   1c3ac:	f100 8106 	bmi.w	1c5bc <am_hal_iom_configure+0x230>
   1c3b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c3b4:	f503 2380 	add.w	r3, r3, #262144	@ 0x40000
   1c3b8:	3350      	adds	r3, #80	@ 0x50
   1c3ba:	780a      	ldrb	r2, [r1, #0]
   1c3bc:	7202      	strb	r2, [r0, #8]
   1c3be:	031b      	lsls	r3, r3, #12
   1c3c0:	f241 0410 	movw	r4, #4112	@ 0x1010
   1c3c4:	f8c3 4104 	str.w	r4, [r3, #260]	@ 0x104
   1c3c8:	b1a2      	cbz	r2, 1c3f4 <am_hal_iom_configure+0x68>
   1c3ca:	2a01      	cmp	r2, #1
   1c3cc:	f040 80f8 	bne.w	1c5c0 <am_hal_iom_configure+0x234>
   1c3d0:	684a      	ldr	r2, [r1, #4]
   1c3d2:	4c92      	ldr	r4, [pc, #584]	@ (1c61c <am_hal_iom_configure+0x290>)
   1c3d4:	42a2      	cmp	r2, r4
   1c3d6:	f000 8114 	beq.w	1c602 <am_hal_iom_configure+0x276>
   1c3da:	4c91      	ldr	r4, [pc, #580]	@ (1c620 <am_hal_iom_configure+0x294>)
   1c3dc:	42a2      	cmp	r2, r4
   1c3de:	f000 810b 	beq.w	1c5f8 <am_hal_iom_configure+0x26c>
   1c3e2:	4c90      	ldr	r4, [pc, #576]	@ (1c624 <am_hal_iom_configure+0x298>)
   1c3e4:	42a2      	cmp	r2, r4
   1c3e6:	f000 8102 	beq.w	1c5ee <am_hal_iom_configure+0x262>
   1c3ea:	2006      	movs	r0, #6
   1c3ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c3f0:	2002      	movs	r0, #2
   1c3f2:	4770      	bx	lr
   1c3f4:	7a0d      	ldrb	r5, [r1, #8]
   1c3f6:	2d03      	cmp	r5, #3
   1c3f8:	d8f7      	bhi.n	1c3ea <am_hal_iom_configure+0x5e>
   1c3fa:	684a      	ldr	r2, [r1, #4]
   1c3fc:	4c8a      	ldr	r4, [pc, #552]	@ (1c628 <am_hal_iom_configure+0x29c>)
   1c3fe:	42a2      	cmp	r2, r4
   1c400:	d8f3      	bhi.n	1c3ea <am_hal_iom_configure+0x5e>
   1c402:	2a00      	cmp	r2, #0
   1c404:	f000 80e8 	beq.w	1c5d8 <am_hal_iom_configure+0x24c>
   1c408:	4c88      	ldr	r4, [pc, #544]	@ (1c62c <am_hal_iom_configure+0x2a0>)
   1c40a:	fbb4 fef2 	udiv	lr, r4, r2
   1c40e:	fb02 441e 	mls	r4, r2, lr, r4
   1c412:	2c00      	cmp	r4, #0
   1c414:	bf18      	it	ne
   1c416:	f10e 0e01 	addne.w	lr, lr, #1
   1c41a:	f1ce 0400 	rsb	r4, lr, #0
   1c41e:	ea04 040e 	and.w	r4, r4, lr
   1c422:	fab4 f484 	clz	r4, r4
   1c426:	f1c4 041f 	rsb	r4, r4, #31
   1c42a:	2c06      	cmp	r4, #6
   1c42c:	f241 66e2 	movw	r6, #5858	@ 0x16e2
   1c430:	bfa8      	it	ge
   1c432:	2406      	movge	r4, #6
   1c434:	42b2      	cmp	r2, r6
   1c436:	f240 80c5 	bls.w	1c5c4 <am_hal_iom_configure+0x238>
   1c43a:	4e7d      	ldr	r6, [pc, #500]	@ (1c630 <am_hal_iom_configure+0x2a4>)
   1c43c:	42b2      	cmp	r2, r6
   1c43e:	f0c0 80e5 	bcc.w	1c60c <am_hal_iom_configure+0x280>
   1c442:	4e79      	ldr	r6, [pc, #484]	@ (1c628 <am_hal_iom_configure+0x29c>)
   1c444:	ebb2 0c06 	subs.w	ip, r2, r6
   1c448:	bf18      	it	ne
   1c44a:	f04f 0c01 	movne.w	ip, #1
   1c44e:	ea4f 094c 	mov.w	r9, ip, lsl #1
   1c452:	f109 0901 	add.w	r9, r9, #1
   1c456:	fa09 f604 	lsl.w	r6, r9, r4
   1c45a:	fbbe faf6 	udiv	sl, lr, r6
   1c45e:	fb06 e61a 	mls	r6, r6, sl, lr
   1c462:	2e00      	cmp	r6, #0
   1c464:	bf18      	it	ne
   1c466:	f10a 0a01 	addne.w	sl, sl, #1
   1c46a:	faba f78a 	clz	r7, sl
   1c46e:	f1c7 061f 	rsb	r6, r7, #31
   1c472:	2e07      	cmp	r6, #7
   1c474:	f240 80b2 	bls.w	1c5dc <am_hal_iom_configure+0x250>
   1c478:	3c07      	subs	r4, #7
   1c47a:	4434      	add	r4, r6
   1c47c:	1c66      	adds	r6, r4, #1
   1c47e:	2e07      	cmp	r6, #7
   1c480:	f200 80aa 	bhi.w	1c5d8 <am_hal_iom_configure+0x24c>
   1c484:	f1c7 0718 	rsb	r7, r7, #24
   1c488:	f04f 0801 	mov.w	r8, #1
   1c48c:	fa08 f807 	lsl.w	r8, r8, r7
   1c490:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
   1c494:	fa2a f707 	lsr.w	r7, sl, r7
   1c498:	ea08 080a 	and.w	r8, r8, sl
   1c49c:	f1b8 0f00 	cmp.w	r8, #0
   1c4a0:	bf0c      	ite	eq
   1c4a2:	46ba      	moveq	sl, r7
   1c4a4:	f107 0a01 	addne.w	sl, r7, #1
   1c4a8:	4f62      	ldr	r7, [pc, #392]	@ (1c634 <am_hal_iom_configure+0x2a8>)
   1c4aa:	42ba      	cmp	r2, r7
   1c4ac:	f080 8098 	bcs.w	1c5e0 <am_hal_iom_configure+0x254>
   1c4b0:	2701      	movs	r7, #1
   1c4b2:	40a7      	lsls	r7, r4
   1c4b4:	45be      	cmp	lr, r7
   1c4b6:	f000 8093 	beq.w	1c5e0 <am_hal_iom_configure+0x254>
   1c4ba:	f10a 37ff 	add.w	r7, sl, #4294967295	@ 0xffffffff
   1c4be:	46d3      	mov	fp, sl
   1c4c0:	f44f 5880 	mov.w	r8, #4096	@ 0x1000
   1c4c4:	ea4f 0e65 	mov.w	lr, r5, asr #1
   1c4c8:	f1be 0f01 	cmp.w	lr, #1
   1c4cc:	ea4f 2ccc 	mov.w	ip, ip, lsl #11
   1c4d0:	bf08      	it	eq
   1c4d2:	f1aa 0e02 	subeq.w	lr, sl, #2
   1c4d6:	ea4c 2c06 	orr.w	ip, ip, r6, lsl #8
   1c4da:	bf14      	ite	ne
   1c4dc:	ea4f 0e57 	movne.w	lr, r7, lsr #1
   1c4e0:	ea4f 0e5e 	moveq.w	lr, lr, lsr #1
   1c4e4:	ea4c 0c08 	orr.w	ip, ip, r8
   1c4e8:	fa09 f404 	lsl.w	r4, r9, r4
   1c4ec:	ea4c 6c07 	orr.w	ip, ip, r7, lsl #24
   1c4f0:	ea4f 4e0e 	mov.w	lr, lr, lsl #16
   1c4f4:	4f4d      	ldr	r7, [pc, #308]	@ (1c62c <am_hal_iom_configure+0x2a0>)
   1c4f6:	fb0b f404 	mul.w	r4, fp, r4
   1c4fa:	f40e 0e7f 	and.w	lr, lr, #16711680	@ 0xff0000
   1c4fe:	fbb7 f9f4 	udiv	r9, r7, r4
   1c502:	ea4c 0c0e 	orr.w	ip, ip, lr
   1c506:	fb04 7819 	mls	r8, r4, r9, r7
   1c50a:	ea4f 2e06 	mov.w	lr, r6, lsl #8
   1c50e:	0864      	lsrs	r4, r4, #1
   1c510:	4e49      	ldr	r6, [pc, #292]	@ (1c638 <am_hal_iom_configure+0x2ac>)
   1c512:	4544      	cmp	r4, r8
   1c514:	bf2c      	ite	cs
   1c516:	464f      	movcs	r7, r9
   1c518:	f109 0701 	addcc.w	r7, r9, #1
   1c51c:	f8df 8140 	ldr.w	r8, [pc, #320]	@ 1c660 <am_hal_iom_configure+0x2d4>
   1c520:	fba6 6407 	umull	r6, r4, r6, r7
   1c524:	4e45      	ldr	r6, [pc, #276]	@ (1c63c <am_hal_iom_configure+0x2b0>)
   1c526:	0c24      	lsrs	r4, r4, #16
   1c528:	4547      	cmp	r7, r8
   1c52a:	fb06 7614 	mls	r6, r6, r4, r7
   1c52e:	d905      	bls.n	1c53c <am_hal_iom_configure+0x1b0>
   1c530:	1e67      	subs	r7, r4, #1
   1c532:	403c      	ands	r4, r7
   1c534:	4334      	orrs	r4, r6
   1c536:	d101      	bne.n	1c53c <am_hal_iom_configure+0x1b0>
   1c538:	f44e 6c00 	orr.w	ip, lr, #2048	@ 0x800
   1c53c:	f04c 0401 	orr.w	r4, ip, #1
   1c540:	f8c3 5280 	str.w	r5, [r3, #640]	@ 0x280
   1c544:	f8c3 4118 	str.w	r4, [r3, #280]	@ 0x118
   1c548:	e9d1 4303 	ldrd	r4, r3, [r1, #12]
   1c54c:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
   1c550:	4933      	ldr	r1, [pc, #204]	@ (1c620 <am_hal_iom_configure+0x294>)
   1c552:	f8c0 5860 	str.w	r5, [r0, #2144]	@ 0x860
   1c556:	fbb1 f2f2 	udiv	r2, r1, r2
   1c55a:	60c4      	str	r4, [r0, #12]
   1c55c:	f8c0 2864 	str.w	r2, [r0, #2148]	@ 0x864
   1c560:	6103      	str	r3, [r0, #16]
   1c562:	b31c      	cbz	r4, 1c5ac <am_hal_iom_configure+0x220>
   1c564:	4936      	ldr	r1, [pc, #216]	@ (1c640 <am_hal_iom_configure+0x2b4>)
   1c566:	eb04 0583 	add.w	r5, r4, r3, lsl #2
   1c56a:	428d      	cmp	r5, r1
   1c56c:	bf94      	ite	ls
   1c56e:	2101      	movls	r1, #1
   1c570:	2100      	movhi	r1, #0
   1c572:	ea4f 0283 	mov.w	r2, r3, lsl #2
   1c576:	f880 18a4 	strb.w	r1, [r0, #2212]	@ 0x8a4
   1c57a:	d909      	bls.n	1c590 <am_hal_iom_configure+0x204>
   1c57c:	f004 030f 	and.w	r3, r4, #15
   1c580:	1ad3      	subs	r3, r2, r3
   1c582:	340f      	adds	r4, #15
   1c584:	091b      	lsrs	r3, r3, #4
   1c586:	f024 040f 	bic.w	r4, r4, #15
   1c58a:	009b      	lsls	r3, r3, #2
   1c58c:	e9c0 4303 	strd	r4, r3, [r0, #12]
   1c590:	3b08      	subs	r3, #8
   1c592:	f246 015f 	movw	r1, #24671	@ 0x605f
   1c596:	ebb1 0f83 	cmp.w	r1, r3, lsl #2
   1c59a:	ea4f 0283 	mov.w	r2, r3, lsl #2
   1c59e:	d316      	bcc.n	1c5ce <am_hal_iom_configure+0x242>
   1c5a0:	4b28      	ldr	r3, [pc, #160]	@ (1c644 <am_hal_iom_configure+0x2b8>)
   1c5a2:	fba3 3202 	umull	r3, r2, r3, r2
   1c5a6:	0992      	lsrs	r2, r2, #6
   1c5a8:	f8c0 2858 	str.w	r2, [r0, #2136]	@ 0x858
   1c5ac:	2300      	movs	r3, #0
   1c5ae:	f8c0 38a0 	str.w	r3, [r0, #2208]	@ 0x8a0
   1c5b2:	4618      	mov	r0, r3
   1c5b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c5b8:	2006      	movs	r0, #6
   1c5ba:	4770      	bx	lr
   1c5bc:	2007      	movs	r0, #7
   1c5be:	4770      	bx	lr
   1c5c0:	2005      	movs	r0, #5
   1c5c2:	e713      	b.n	1c3ec <am_hal_iom_configure+0x60>
   1c5c4:	f04f 0903 	mov.w	r9, #3
   1c5c8:	f04f 0c01 	mov.w	ip, #1
   1c5cc:	e743      	b.n	1c456 <am_hal_iom_configure+0xca>
   1c5ce:	f44f 7380 	mov.w	r3, #256	@ 0x100
   1c5d2:	f8c0 3858 	str.w	r3, [r0, #2136]	@ 0x858
   1c5d6:	e7e9      	b.n	1c5ac <am_hal_iom_configure+0x220>
   1c5d8:	2401      	movs	r4, #1
   1c5da:	e7b1      	b.n	1c540 <am_hal_iom_configure+0x1b4>
   1c5dc:	1c66      	adds	r6, r4, #1
   1c5de:	e763      	b.n	1c4a8 <am_hal_iom_configure+0x11c>
   1c5e0:	f10a 37ff 	add.w	r7, sl, #4294967295	@ 0xffffffff
   1c5e4:	f04f 0b01 	mov.w	fp, #1
   1c5e8:	f04f 0800 	mov.w	r8, #0
   1c5ec:	e76a      	b.n	1c4c4 <am_hal_iom_configure+0x138>
   1c5ee:	4c16      	ldr	r4, [pc, #88]	@ (1c648 <am_hal_iom_configure+0x2bc>)
   1c5f0:	f8c3 42c0 	str.w	r4, [r3, #704]	@ 0x2c0
   1c5f4:	4c15      	ldr	r4, [pc, #84]	@ (1c64c <am_hal_iom_configure+0x2c0>)
   1c5f6:	e7a5      	b.n	1c544 <am_hal_iom_configure+0x1b8>
   1c5f8:	4c15      	ldr	r4, [pc, #84]	@ (1c650 <am_hal_iom_configure+0x2c4>)
   1c5fa:	f8c3 42c0 	str.w	r4, [r3, #704]	@ 0x2c0
   1c5fe:	4c15      	ldr	r4, [pc, #84]	@ (1c654 <am_hal_iom_configure+0x2c8>)
   1c600:	e7a0      	b.n	1c544 <am_hal_iom_configure+0x1b8>
   1c602:	4c15      	ldr	r4, [pc, #84]	@ (1c658 <am_hal_iom_configure+0x2cc>)
   1c604:	f8c3 42c0 	str.w	r4, [r3, #704]	@ 0x2c0
   1c608:	4c14      	ldr	r4, [pc, #80]	@ (1c65c <am_hal_iom_configure+0x2d0>)
   1c60a:	e79b      	b.n	1c544 <am_hal_iom_configure+0x1b8>
   1c60c:	f04f 0901 	mov.w	r9, #1
   1c610:	f04f 0c00 	mov.w	ip, #0
   1c614:	e71f      	b.n	1c456 <am_hal_iom_configure+0xca>
   1c616:	bf00      	nop
   1c618:	01123456 	.word	0x01123456
   1c61c:	00061a80 	.word	0x00061a80
   1c620:	000f4240 	.word	0x000f4240
   1c624:	000186a0 	.word	0x000186a0
   1c628:	02dc6c00 	.word	0x02dc6c00
   1c62c:	05b8d800 	.word	0x05b8d800
   1c630:	01e84800 	.word	0x01e84800
   1c634:	016e3600 	.word	0x016e3600
   1c638:	431bde83 	.word	0x431bde83
   1c63c:	0003d090 	.word	0x0003d090
   1c640:	1005ffff 	.word	0x1005ffff
   1c644:	aaaaaaab 	.word	0xaaaaaaab
   1c648:	0003f070 	.word	0x0003f070
   1c64c:	773b1301 	.word	0x773b1301
   1c650:	00023040 	.word	0x00023040
   1c654:	0b051301 	.word	0x0b051301
   1c658:	0003f270 	.word	0x0003f270
   1c65c:	1d0e1301 	.word	0x1d0e1301
   1c660:	0003d08f 	.word	0x0003d08f

0001c664 <am_hal_iom_blocking_transfer>:
   1c664:	2800      	cmp	r0, #0
   1c666:	f000 813e 	beq.w	1c8e6 <am_hal_iom_blocking_transfer+0x282>
   1c66a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c66e:	6803      	ldr	r3, [r0, #0]
   1c670:	4abd      	ldr	r2, [pc, #756]	@ (1c968 <am_hal_iom_blocking_transfer+0x304>)
   1c672:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   1c676:	4293      	cmp	r3, r2
   1c678:	b087      	sub	sp, #28
   1c67a:	4606      	mov	r6, r0
   1c67c:	f040 8117 	bne.w	1c8ae <am_hal_iom_blocking_transfer+0x24a>
   1c680:	460d      	mov	r5, r1
   1c682:	2900      	cmp	r1, #0
   1c684:	f000 811c 	beq.w	1c8c0 <am_hal_iom_blocking_transfer+0x25c>
   1c688:	f891 8014 	ldrb.w	r8, [r1, #20]
   1c68c:	f1b8 0f01 	cmp.w	r8, #1
   1c690:	f200 811f 	bhi.w	1c8d2 <am_hal_iom_blocking_transfer+0x26e>
   1c694:	f8d1 9010 	ldr.w	r9, [r1, #16]
   1c698:	f1b9 0f00 	cmp.w	r9, #0
   1c69c:	f000 8115 	beq.w	1c8ca <am_hal_iom_blocking_transfer+0x266>
   1c6a0:	f8d5 a004 	ldr.w	sl, [r5, #4]
   1c6a4:	f1ba 0f05 	cmp.w	sl, #5
   1c6a8:	f200 810a 	bhi.w	1c8c0 <am_hal_iom_blocking_transfer+0x25c>
   1c6ac:	ea4f 01ca 	mov.w	r1, sl, lsl #3
   1c6b0:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   1c6b4:	f1a1 0420 	sub.w	r4, r1, #32
   1c6b8:	f1c1 0020 	rsb	r0, r1, #32
   1c6bc:	fa03 f201 	lsl.w	r2, r3, r1
   1c6c0:	fa03 f404 	lsl.w	r4, r3, r4
   1c6c4:	fa23 f000 	lsr.w	r0, r3, r0
   1c6c8:	408b      	lsls	r3, r1
   1c6ca:	68a9      	ldr	r1, [r5, #8]
   1c6cc:	9102      	str	r1, [sp, #8]
   1c6ce:	400b      	ands	r3, r1
   1c6d0:	4322      	orrs	r2, r4
   1c6d2:	68e9      	ldr	r1, [r5, #12]
   1c6d4:	9103      	str	r1, [sp, #12]
   1c6d6:	4302      	orrs	r2, r0
   1c6d8:	400a      	ands	r2, r1
   1c6da:	4313      	orrs	r3, r2
   1c6dc:	f040 80f0 	bne.w	1c8c0 <am_hal_iom_blocking_transfer+0x25c>
   1c6e0:	f1b9 0f00 	cmp.w	r9, #0
   1c6e4:	f000 80fa 	beq.w	1c8dc <am_hal_iom_blocking_transfer+0x278>
   1c6e8:	f1b8 0f00 	cmp.w	r8, #0
   1c6ec:	f000 80e4 	beq.w	1c8b8 <am_hal_iom_blocking_transfer+0x254>
   1c6f0:	69eb      	ldr	r3, [r5, #28]
   1c6f2:	2b00      	cmp	r3, #0
   1c6f4:	f000 80e4 	beq.w	1c8c0 <am_hal_iom_blocking_transfer+0x25c>
   1c6f8:	7a33      	ldrb	r3, [r6, #8]
   1c6fa:	2b01      	cmp	r3, #1
   1c6fc:	d004      	beq.n	1c708 <am_hal_iom_blocking_transfer+0xa4>
   1c6fe:	b93b      	cbnz	r3, 1c710 <am_hal_iom_blocking_transfer+0xac>
   1c700:	682b      	ldr	r3, [r5, #0]
   1c702:	2b04      	cmp	r3, #4
   1c704:	f200 80dc 	bhi.w	1c8c0 <am_hal_iom_blocking_transfer+0x25c>
   1c708:	f5b9 5f80 	cmp.w	r9, #4096	@ 0x1000
   1c70c:	f080 80d8 	bcs.w	1c8c0 <am_hal_iom_blocking_transfer+0x25c>
   1c710:	f896 382c 	ldrb.w	r3, [r6, #2092]	@ 0x82c
   1c714:	2b02      	cmp	r3, #2
   1c716:	f000 80dc 	beq.w	1c8d2 <am_hal_iom_blocking_transfer+0x26e>
   1c71a:	e9d5 3706 	ldrd	r3, r7, [r5, #24]
   1c71e:	f04f 0b01 	mov.w	fp, #1
   1c722:	f8cd b000 	str.w	fp, [sp]
   1c726:	6874      	ldr	r4, [r6, #4]
   1c728:	9404      	str	r4, [sp, #16]
   1c72a:	f8d6 0860 	ldr.w	r0, [r6, #2144]	@ 0x860
   1c72e:	f895 4020 	ldrb.w	r4, [r5, #32]
   1c732:	9405      	str	r4, [sp, #20]
   1c734:	f1b8 0f00 	cmp.w	r8, #0
   1c738:	bf08      	it	eq
   1c73a:	461f      	moveq	r7, r3
   1c73c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
   1c740:	2300      	movs	r3, #0
   1c742:	f106 0124 	add.w	r1, r6, #36	@ 0x24
   1c746:	f000 fb23 	bl	1cd90 <am_hal_delay_us_status_check>
   1c74a:	4603      	mov	r3, r0
   1c74c:	2800      	cmp	r0, #0
   1c74e:	f040 80af 	bne.w	1c8b0 <am_hal_iom_blocking_transfer+0x24c>
   1c752:	9b04      	ldr	r3, [sp, #16]
   1c754:	f8cd b000 	str.w	fp, [sp]
   1c758:	f503 2480 	add.w	r4, r3, #262144	@ 0x40000
   1c75c:	3450      	adds	r4, #80	@ 0x50
   1c75e:	0324      	lsls	r4, r4, #12
   1c760:	f504 7b12 	add.w	fp, r4, #584	@ 0x248
   1c764:	2304      	movs	r3, #4
   1c766:	f8d6 0860 	ldr.w	r0, [r6, #2144]	@ 0x860
   1c76a:	2206      	movs	r2, #6
   1c76c:	4659      	mov	r1, fp
   1c76e:	f000 fb0f 	bl	1cd90 <am_hal_delay_us_status_check>
   1c772:	4603      	mov	r3, r0
   1c774:	2800      	cmp	r0, #0
   1c776:	f040 809b 	bne.w	1c8b0 <am_hal_iom_blocking_transfer+0x24c>
   1c77a:	f8d4 2200 	ldr.w	r2, [r4, #512]	@ 0x200
   1c77e:	9204      	str	r2, [sp, #16]
   1c780:	f8c4 0200 	str.w	r0, [r4, #512]	@ 0x200
   1c784:	f8d4 2218 	ldr.w	r2, [r4, #536]	@ 0x218
   1c788:	f360 0200 	bfi	r2, r0, #0, #1
   1c78c:	f8c4 2218 	str.w	r2, [r4, #536]	@ 0x218
   1c790:	682a      	ldr	r2, [r5, #0]
   1c792:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
   1c796:	f8c4 1208 	str.w	r1, [r4, #520]	@ 0x208
   1c79a:	f8c4 22c4 	str.w	r2, [r4, #708]	@ 0x2c4
   1c79e:	7a31      	ldrb	r1, [r6, #8]
   1c7a0:	2900      	cmp	r1, #0
   1c7a2:	f000 80a3 	beq.w	1c8ec <am_hal_iom_blocking_transfer+0x288>
   1c7a6:	f8c4 0124 	str.w	r0, [r4, #292]	@ 0x124
   1c7aa:	4a70      	ldr	r2, [pc, #448]	@ (1c96c <am_hal_iom_blocking_transfer+0x308>)
   1c7ac:	f1b8 0f01 	cmp.w	r8, #1
   1c7b0:	ea02 2909 	and.w	r9, r2, r9, lsl #8
   1c7b4:	ea49 0303 	orr.w	r3, r9, r3
   1c7b8:	f000 80de 	beq.w	1c978 <am_hal_iom_blocking_transfer+0x314>
   1c7bc:	9a02      	ldr	r2, [sp, #8]
   1c7be:	9903      	ldr	r1, [sp, #12]
   1c7c0:	692d      	ldr	r5, [r5, #16]
   1c7c2:	0a12      	lsrs	r2, r2, #8
   1c7c4:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
   1c7c8:	f8c4 2128 	str.w	r2, [r4, #296]	@ 0x128
   1c7cc:	f8d4 2100 	ldr.w	r2, [r4, #256]	@ 0x100
   1c7d0:	f3c2 2207 	ubfx	r2, r2, #8, #8
   1c7d4:	2a03      	cmp	r2, #3
   1c7d6:	46b9      	mov	r9, r7
   1c7d8:	d917      	bls.n	1c80a <am_hal_iom_blocking_transfer+0x1a6>
   1c7da:	b1b5      	cbz	r5, 1c80a <am_hal_iom_blocking_transfer+0x1a6>
   1c7dc:	f859 1b04 	ldr.w	r1, [r9], #4
   1c7e0:	f8c4 110c 	str.w	r1, [r4, #268]	@ 0x10c
   1c7e4:	2d03      	cmp	r5, #3
   1c7e6:	d90f      	bls.n	1c808 <am_hal_iom_blocking_transfer+0x1a4>
   1c7e8:	3a04      	subs	r2, #4
   1c7ea:	f022 0203 	bic.w	r2, r2, #3
   1c7ee:	3204      	adds	r2, #4
   1c7f0:	4417      	add	r7, r2
   1c7f2:	454f      	cmp	r7, r9
   1c7f4:	f1a5 0504 	sub.w	r5, r5, #4
   1c7f8:	d007      	beq.n	1c80a <am_hal_iom_blocking_transfer+0x1a6>
   1c7fa:	b135      	cbz	r5, 1c80a <am_hal_iom_blocking_transfer+0x1a6>
   1c7fc:	f859 2b04 	ldr.w	r2, [r9], #4
   1c800:	f8c4 210c 	str.w	r2, [r4, #268]	@ 0x10c
   1c804:	2d03      	cmp	r5, #3
   1c806:	d8f4      	bhi.n	1c7f2 <am_hal_iom_blocking_transfer+0x18e>
   1c808:	4645      	mov	r5, r8
   1c80a:	9a05      	ldr	r2, [sp, #20]
   1c80c:	ea43 130a 	orr.w	r3, r3, sl, lsl #4
   1c810:	ea43 13c2 	orr.w	r3, r3, r2, lsl #7
   1c814:	9a02      	ldr	r2, [sp, #8]
   1c816:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1c81a:	f043 0301 	orr.w	r3, r3, #1
   1c81e:	f8c4 3120 	str.w	r3, [r4, #288]	@ 0x120
   1c822:	2d00      	cmp	r5, #0
   1c824:	f000 8088 	beq.w	1c938 <am_hal_iom_blocking_transfer+0x2d4>
   1c828:	f8d4 3100 	ldr.w	r3, [r4, #256]	@ 0x100
   1c82c:	f3c3 2307 	ubfx	r3, r3, #8, #8
   1c830:	2b03      	cmp	r3, #3
   1c832:	f200 8083 	bhi.w	1c93c <am_hal_iom_blocking_transfer+0x2d8>
   1c836:	4f4e      	ldr	r7, [pc, #312]	@ (1c970 <am_hal_iom_blocking_transfer+0x30c>)
   1c838:	e009      	b.n	1c84e <am_hal_iom_blocking_transfer+0x1ea>
   1c83a:	3f01      	subs	r7, #1
   1c83c:	d00d      	beq.n	1c85a <am_hal_iom_blocking_transfer+0x1f6>
   1c83e:	f000 fa63 	bl	1cd08 <am_hal_delay_us>
   1c842:	f8d4 3100 	ldr.w	r3, [r4, #256]	@ 0x100
   1c846:	f3c3 2307 	ubfx	r3, r3, #8, #8
   1c84a:	2b03      	cmp	r3, #3
   1c84c:	d876      	bhi.n	1c93c <am_hal_iom_blocking_transfer+0x2d8>
   1c84e:	f8d4 3204 	ldr.w	r3, [r4, #516]	@ 0x204
   1c852:	07db      	lsls	r3, r3, #31
   1c854:	f04f 0001 	mov.w	r0, #1
   1c858:	d5ef      	bpl.n	1c83a <am_hal_iom_blocking_transfer+0x1d6>
   1c85a:	2701      	movs	r7, #1
   1c85c:	2304      	movs	r3, #4
   1c85e:	4845      	ldr	r0, [pc, #276]	@ (1c974 <am_hal_iom_blocking_transfer+0x310>)
   1c860:	9700      	str	r7, [sp, #0]
   1c862:	4659      	mov	r1, fp
   1c864:	2206      	movs	r2, #6
   1c866:	f000 fa93 	bl	1cd90 <am_hal_delay_us_status_check>
   1c86a:	4603      	mov	r3, r0
   1c86c:	b980      	cbnz	r0, 1c890 <am_hal_iom_blocking_transfer+0x22c>
   1c86e:	f8d4 3204 	ldr.w	r3, [r4, #516]	@ 0x204
   1c872:	f013 0f6c 	tst.w	r3, #108	@ 0x6c
   1c876:	f040 80b6 	bne.w	1c9e6 <am_hal_iom_blocking_transfer+0x382>
   1c87a:	0599      	lsls	r1, r3, #22
   1c87c:	f100 80b6 	bmi.w	1c9ec <am_hal_iom_blocking_transfer+0x388>
   1c880:	06da      	lsls	r2, r3, #27
   1c882:	f100 80b5 	bmi.w	1c9f0 <am_hal_iom_blocking_transfer+0x38c>
   1c886:	f403 4390 	and.w	r3, r3, #18432	@ 0x4800
   1c88a:	432b      	orrs	r3, r5
   1c88c:	d007      	beq.n	1c89e <am_hal_iom_blocking_transfer+0x23a>
   1c88e:	463b      	mov	r3, r7
   1c890:	f8d4 1204 	ldr.w	r1, [r4, #516]	@ 0x204
   1c894:	9302      	str	r3, [sp, #8]
   1c896:	4630      	mov	r0, r6
   1c898:	f7ff fb64 	bl	1bf64 <internal_iom_reset_on_error>
   1c89c:	9b02      	ldr	r3, [sp, #8]
   1c89e:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
   1c8a2:	f8c4 2208 	str.w	r2, [r4, #520]	@ 0x208
   1c8a6:	9a04      	ldr	r2, [sp, #16]
   1c8a8:	f8c4 2200 	str.w	r2, [r4, #512]	@ 0x200
   1c8ac:	e000      	b.n	1c8b0 <am_hal_iom_blocking_transfer+0x24c>
   1c8ae:	2302      	movs	r3, #2
   1c8b0:	4618      	mov	r0, r3
   1c8b2:	b007      	add	sp, #28
   1c8b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c8b8:	69ab      	ldr	r3, [r5, #24]
   1c8ba:	2b00      	cmp	r3, #0
   1c8bc:	f47f af1c 	bne.w	1c6f8 <am_hal_iom_blocking_transfer+0x94>
   1c8c0:	2306      	movs	r3, #6
   1c8c2:	4618      	mov	r0, r3
   1c8c4:	b007      	add	sp, #28
   1c8c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c8ca:	f881 9014 	strb.w	r9, [r1, #20]
   1c8ce:	46c8      	mov	r8, r9
   1c8d0:	e6e6      	b.n	1c6a0 <am_hal_iom_blocking_transfer+0x3c>
   1c8d2:	2307      	movs	r3, #7
   1c8d4:	4618      	mov	r0, r3
   1c8d6:	b007      	add	sp, #28
   1c8d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c8dc:	7a33      	ldrb	r3, [r6, #8]
   1c8de:	2b01      	cmp	r3, #1
   1c8e0:	f47f af0d 	bne.w	1c6fe <am_hal_iom_blocking_transfer+0x9a>
   1c8e4:	e714      	b.n	1c710 <am_hal_iom_blocking_transfer+0xac>
   1c8e6:	2302      	movs	r3, #2
   1c8e8:	4618      	mov	r0, r3
   1c8ea:	4770      	bx	lr
   1c8ec:	18b1      	adds	r1, r6, r2
   1c8ee:	0513      	lsls	r3, r2, #20
   1c8f0:	f891 28a0 	ldrb.w	r2, [r1, #2208]	@ 0x8a0
   1c8f4:	f8c4 2124 	str.w	r2, [r4, #292]	@ 0x124
   1c8f8:	f403 1340 	and.w	r3, r3, #3145728	@ 0x300000
   1c8fc:	e755      	b.n	1c7aa <am_hal_iom_blocking_transfer+0x146>
   1c8fe:	2b03      	cmp	r3, #3
   1c900:	f8c8 1000 	str.w	r1, [r8]
   1c904:	f1a5 0504 	sub.w	r5, r5, #4
   1c908:	f108 0804 	add.w	r8, r8, #4
   1c90c:	d968      	bls.n	1c9e0 <am_hal_iom_blocking_transfer+0x37c>
   1c90e:	b19d      	cbz	r5, 1c938 <am_hal_iom_blocking_transfer+0x2d4>
   1c910:	2d03      	cmp	r5, #3
   1c912:	f8d4 1108 	ldr.w	r1, [r4, #264]	@ 0x108
   1c916:	f1a3 0304 	sub.w	r3, r3, #4
   1c91a:	d8f0      	bhi.n	1c8fe <am_hal_iom_blocking_transfer+0x29a>
   1c91c:	3d01      	subs	r5, #1
   1c91e:	f888 1000 	strb.w	r1, [r8]
   1c922:	ea4f 2311 	mov.w	r3, r1, lsr #8
   1c926:	d007      	beq.n	1c938 <am_hal_iom_blocking_transfer+0x2d4>
   1c928:	2d01      	cmp	r5, #1
   1c92a:	f888 3001 	strb.w	r3, [r8, #1]
   1c92e:	ea4f 4111 	mov.w	r1, r1, lsr #16
   1c932:	d001      	beq.n	1c938 <am_hal_iom_blocking_transfer+0x2d4>
   1c934:	f888 1002 	strb.w	r1, [r8, #2]
   1c938:	2500      	movs	r5, #0
   1c93a:	e78e      	b.n	1c85a <am_hal_iom_blocking_transfer+0x1f6>
   1c93c:	f005 0003 	and.w	r0, r5, #3
   1c940:	464a      	mov	r2, r9
   1c942:	f852 1b04 	ldr.w	r1, [r2], #4
   1c946:	f8c4 110c 	str.w	r1, [r4, #268]	@ 0x10c
   1c94a:	42a8      	cmp	r0, r5
   1c94c:	eba9 0102 	sub.w	r1, r9, r2
   1c950:	4419      	add	r1, r3
   1c952:	f1a5 0504 	sub.w	r5, r5, #4
   1c956:	d004      	beq.n	1c962 <am_hal_iom_blocking_transfer+0x2fe>
   1c958:	2903      	cmp	r1, #3
   1c95a:	d903      	bls.n	1c964 <am_hal_iom_blocking_transfer+0x300>
   1c95c:	2d00      	cmp	r5, #0
   1c95e:	d1f0      	bne.n	1c942 <am_hal_iom_blocking_transfer+0x2de>
   1c960:	e7ea      	b.n	1c938 <am_hal_iom_blocking_transfer+0x2d4>
   1c962:	4645      	mov	r5, r8
   1c964:	4691      	mov	r9, r2
   1c966:	e75c      	b.n	1c822 <am_hal_iom_blocking_transfer+0x1be>
   1c968:	01123456 	.word	0x01123456
   1c96c:	000fff00 	.word	0x000fff00
   1c970:	0007a121 	.word	0x0007a121
   1c974:	0007a120 	.word	0x0007a120
   1c978:	9a05      	ldr	r2, [sp, #20]
   1c97a:	9903      	ldr	r1, [sp, #12]
   1c97c:	692d      	ldr	r5, [r5, #16]
   1c97e:	ea43 130a 	orr.w	r3, r3, sl, lsl #4
   1c982:	ea43 13c2 	orr.w	r3, r3, r2, lsl #7
   1c986:	9a02      	ldr	r2, [sp, #8]
   1c988:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1c98c:	0a12      	lsrs	r2, r2, #8
   1c98e:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
   1c992:	f043 0302 	orr.w	r3, r3, #2
   1c996:	f8c4 2128 	str.w	r2, [r4, #296]	@ 0x128
   1c99a:	f8c4 3120 	str.w	r3, [r4, #288]	@ 0x120
   1c99e:	2d00      	cmp	r5, #0
   1c9a0:	d0ca      	beq.n	1c938 <am_hal_iom_blocking_transfer+0x2d4>
   1c9a2:	2200      	movs	r2, #0
   1c9a4:	46b8      	mov	r8, r7
   1c9a6:	f8d4 3100 	ldr.w	r3, [r4, #256]	@ 0x100
   1c9aa:	f3c3 4307 	ubfx	r3, r3, #16, #8
   1c9ae:	2b03      	cmp	r3, #3
   1c9b0:	d8ae      	bhi.n	1c910 <am_hal_iom_blocking_transfer+0x2ac>
   1c9b2:	4f10      	ldr	r7, [pc, #64]	@ (1c9f4 <am_hal_iom_blocking_transfer+0x390>)
   1c9b4:	e002      	b.n	1c9bc <am_hal_iom_blocking_transfer+0x358>
   1c9b6:	3f01      	subs	r7, #1
   1c9b8:	f43f af4f 	beq.w	1c85a <am_hal_iom_blocking_transfer+0x1f6>
   1c9bc:	2001      	movs	r0, #1
   1c9be:	b112      	cbz	r2, 1c9c6 <am_hal_iom_blocking_transfer+0x362>
   1c9c0:	42ab      	cmp	r3, r5
   1c9c2:	f4ff af4a 	bcc.w	1c85a <am_hal_iom_blocking_transfer+0x1f6>
   1c9c6:	f000 f99f 	bl	1cd08 <am_hal_delay_us>
   1c9ca:	f8d4 2204 	ldr.w	r2, [r4, #516]	@ 0x204
   1c9ce:	f8d4 3100 	ldr.w	r3, [r4, #256]	@ 0x100
   1c9d2:	f3c3 4307 	ubfx	r3, r3, #16, #8
   1c9d6:	2b03      	cmp	r3, #3
   1c9d8:	f002 0201 	and.w	r2, r2, #1
   1c9dc:	d9eb      	bls.n	1c9b6 <am_hal_iom_blocking_transfer+0x352>
   1c9de:	e797      	b.n	1c910 <am_hal_iom_blocking_transfer+0x2ac>
   1c9e0:	2d00      	cmp	r5, #0
   1c9e2:	d1e0      	bne.n	1c9a6 <am_hal_iom_blocking_transfer+0x342>
   1c9e4:	e7a8      	b.n	1c938 <am_hal_iom_blocking_transfer+0x2d4>
   1c9e6:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
   1c9ea:	e751      	b.n	1c890 <am_hal_iom_blocking_transfer+0x22c>
   1c9ec:	4b02      	ldr	r3, [pc, #8]	@ (1c9f8 <am_hal_iom_blocking_transfer+0x394>)
   1c9ee:	e74f      	b.n	1c890 <am_hal_iom_blocking_transfer+0x22c>
   1c9f0:	4b02      	ldr	r3, [pc, #8]	@ (1c9fc <am_hal_iom_blocking_transfer+0x398>)
   1c9f2:	e74d      	b.n	1c890 <am_hal_iom_blocking_transfer+0x22c>
   1c9f4:	0007a120 	.word	0x0007a120
   1c9f8:	08000001 	.word	0x08000001
   1c9fc:	08000002 	.word	0x08000002

0001ca00 <am_hal_itm_enable>:
   1ca00:	4a0e      	ldr	r2, [pc, #56]	@ (1ca3c <am_hal_itm_enable+0x3c>)
   1ca02:	f8d2 30fc 	ldr.w	r3, [r2, #252]	@ 0xfc
   1ca06:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
   1ca0a:	b410      	push	{r4}
   1ca0c:	f8c2 30fc 	str.w	r3, [r2, #252]	@ 0xfc
   1ca10:	f8d2 30fc 	ldr.w	r3, [r2, #252]	@ 0xfc
   1ca14:	01db      	lsls	r3, r3, #7
   1ca16:	d5fb      	bpl.n	1ca10 <am_hal_itm_enable+0x10>
   1ca18:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
   1ca1c:	4c08      	ldr	r4, [pc, #32]	@ (1ca40 <am_hal_itm_enable+0x40>)
   1ca1e:	4a09      	ldr	r2, [pc, #36]	@ (1ca44 <am_hal_itm_enable+0x44>)
   1ca20:	f8c3 4fb0 	str.w	r4, [r3, #4016]	@ 0xfb0
   1ca24:	200f      	movs	r0, #15
   1ca26:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
   1ca2a:	f8c3 0e40 	str.w	r0, [r3, #3648]	@ 0xe40
   1ca2e:	f85d 4b04 	ldr.w	r4, [sp], #4
   1ca32:	f8c3 1e00 	str.w	r1, [r3, #3584]	@ 0xe00
   1ca36:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
   1ca3a:	4770      	bx	lr
   1ca3c:	e000ed00 	.word	0xe000ed00
   1ca40:	c5acce55 	.word	0xc5acce55
   1ca44:	00150511 	.word	0x00150511

0001ca48 <am_hal_itm_print>:
   1ca48:	7803      	ldrb	r3, [r0, #0]
   1ca4a:	b1a3      	cbz	r3, 1ca76 <am_hal_itm_print+0x2e>
   1ca4c:	4603      	mov	r3, r0
   1ca4e:	f1c0 0c01 	rsb	ip, r0, #1
   1ca52:	eb0c 0103 	add.w	r1, ip, r3
   1ca56:	f813 2f01 	ldrb.w	r2, [r3, #1]!
   1ca5a:	2a00      	cmp	r2, #0
   1ca5c:	d1f9      	bne.n	1ca52 <am_hal_itm_print+0xa>
   1ca5e:	4401      	add	r1, r0
   1ca60:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
   1ca64:	f810 cb01 	ldrb.w	ip, [r0], #1
   1ca68:	6813      	ldr	r3, [r2, #0]
   1ca6a:	2b00      	cmp	r3, #0
   1ca6c:	d0fc      	beq.n	1ca68 <am_hal_itm_print+0x20>
   1ca6e:	4288      	cmp	r0, r1
   1ca70:	f882 c000 	strb.w	ip, [r2]
   1ca74:	d1f6      	bne.n	1ca64 <am_hal_itm_print+0x1c>
   1ca76:	4770      	bx	lr

0001ca78 <am_hal_mram_info_read>:
   1ca78:	b9c0      	cbnz	r0, 1caac <am_hal_mram_info_read+0x34>
   1ca7a:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
   1ca7e:	d228      	bcs.n	1cad2 <am_hal_mram_info_read+0x5a>
   1ca80:	1888      	adds	r0, r1, r2
   1ca82:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
   1ca86:	d824      	bhi.n	1cad2 <am_hal_mram_info_read+0x5a>
   1ca88:	f101 5184 	add.w	r1, r1, #276824064	@ 0x10800000
   1ca8c:	0089      	lsls	r1, r1, #2
   1ca8e:	b312      	cbz	r2, 1cad6 <am_hal_mram_info_read+0x5e>
   1ca90:	b410      	push	{r4}
   1ca92:	2000      	movs	r0, #0
   1ca94:	3001      	adds	r0, #1
   1ca96:	680c      	ldr	r4, [r1, #0]
   1ca98:	f843 4b04 	str.w	r4, [r3], #4
   1ca9c:	4282      	cmp	r2, r0
   1ca9e:	f101 0104 	add.w	r1, r1, #4
   1caa2:	d1f7      	bne.n	1ca94 <am_hal_mram_info_read+0x1c>
   1caa4:	2000      	movs	r0, #0
   1caa6:	f85d 4b04 	ldr.w	r4, [sp], #4
   1caaa:	4770      	bx	lr
   1caac:	2801      	cmp	r0, #1
   1caae:	d10e      	bne.n	1cace <am_hal_mram_info_read+0x56>
   1cab0:	f5a1 6090 	sub.w	r0, r1, #1152	@ 0x480
   1cab4:	f5b0 7fc0 	cmp.w	r0, #384	@ 0x180
   1cab8:	d20b      	bcs.n	1cad2 <am_hal_mram_info_read+0x5a>
   1caba:	1888      	adds	r0, r1, r2
   1cabc:	f5b0 6fc0 	cmp.w	r0, #1536	@ 0x600
   1cac0:	d807      	bhi.n	1cad2 <am_hal_mram_info_read+0x5a>
   1cac2:	f101 5184 	add.w	r1, r1, #276824064	@ 0x10800000
   1cac6:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
   1caca:	0089      	lsls	r1, r1, #2
   1cacc:	e7df      	b.n	1ca8e <am_hal_mram_info_read+0x16>
   1cace:	2001      	movs	r0, #1
   1cad0:	4770      	bx	lr
   1cad2:	2002      	movs	r0, #2
   1cad4:	4770      	bx	lr
   1cad6:	2000      	movs	r0, #0
   1cad8:	4770      	bx	lr
   1cada:	bf00      	nop

0001cadc <am_hal_reset_status_get>:
   1cadc:	b3c0      	cbz	r0, 1cb50 <am_hal_reset_status_get+0x74>
   1cade:	491e      	ldr	r1, [pc, #120]	@ (1cb58 <am_hal_reset_status_get+0x7c>)
   1cae0:	680b      	ldr	r3, [r1, #0]
   1cae2:	b38b      	cbz	r3, 1cb48 <am_hal_reset_status_get+0x6c>
   1cae4:	f3c3 020a 	ubfx	r2, r3, #0, #11
   1cae8:	f002 0c01 	and.w	ip, r2, #1
   1caec:	600a      	str	r2, [r1, #0]
   1caee:	f880 c002 	strb.w	ip, [r0, #2]
   1caf2:	f3c3 0180 	ubfx	r1, r3, #2, #1
   1caf6:	f3c3 0c40 	ubfx	ip, r3, #1, #1
   1cafa:	f880 c003 	strb.w	ip, [r0, #3]
   1cafe:	7101      	strb	r1, [r0, #4]
   1cb00:	f3c3 0cc0 	ubfx	ip, r3, #3, #1
   1cb04:	f3c3 1100 	ubfx	r1, r3, #4, #1
   1cb08:	f880 c005 	strb.w	ip, [r0, #5]
   1cb0c:	7181      	strb	r1, [r0, #6]
   1cb0e:	f3c3 1c40 	ubfx	ip, r3, #5, #1
   1cb12:	f3c3 1180 	ubfx	r1, r3, #6, #1
   1cb16:	8002      	strh	r2, [r0, #0]
   1cb18:	f880 c007 	strb.w	ip, [r0, #7]
   1cb1c:	7201      	strb	r1, [r0, #8]
   1cb1e:	f3c3 1cc0 	ubfx	ip, r3, #7, #1
   1cb22:	f3c3 2100 	ubfx	r1, r3, #8, #1
   1cb26:	fab2 f282 	clz	r2, r2
   1cb2a:	f880 c009 	strb.w	ip, [r0, #9]
   1cb2e:	7281      	strb	r1, [r0, #10]
   1cb30:	f3c3 2c40 	ubfx	ip, r3, #9, #1
   1cb34:	2100      	movs	r1, #0
   1cb36:	f3c3 2380 	ubfx	r3, r3, #10, #1
   1cb3a:	0952      	lsrs	r2, r2, #5
   1cb3c:	f880 c00b 	strb.w	ip, [r0, #11]
   1cb40:	7303      	strb	r3, [r0, #12]
   1cb42:	7341      	strb	r1, [r0, #13]
   1cb44:	4610      	mov	r0, r2
   1cb46:	4770      	bx	lr
   1cb48:	4b04      	ldr	r3, [pc, #16]	@ (1cb5c <am_hal_reset_status_get+0x80>)
   1cb4a:	f8d3 385c 	ldr.w	r3, [r3, #2140]	@ 0x85c
   1cb4e:	e7c9      	b.n	1cae4 <am_hal_reset_status_get+0x8>
   1cb50:	2206      	movs	r2, #6
   1cb52:	4610      	mov	r0, r2
   1cb54:	4770      	bx	lr
   1cb56:	bf00      	nop
   1cb58:	10007ce4 	.word	0x10007ce4
   1cb5c:	40008000 	.word	0x40008000

0001cb60 <am_hal_rtc_alarm_get>:
   1cb60:	4a38      	ldr	r2, [pc, #224]	@ (1cc44 <am_hal_rtc_alarm_get+0xe4>)
   1cb62:	6b13      	ldr	r3, [r2, #48]	@ 0x30
   1cb64:	6b52      	ldr	r2, [r2, #52]	@ 0x34
   1cb66:	2800      	cmp	r0, #0
   1cb68:	d049      	beq.n	1cbfe <am_hal_rtc_alarm_get+0x9e>
   1cb6a:	b5f0      	push	{r4, r5, r6, r7, lr}
   1cb6c:	f3c3 7601 	ubfx	r6, r3, #28, #2
   1cb70:	f3c3 6703 	ubfx	r7, r3, #24, #4
   1cb74:	eb06 0686 	add.w	r6, r6, r6, lsl #2
   1cb78:	f3c3 1403 	ubfx	r4, r3, #4, #4
   1cb7c:	f3c3 3e02 	ubfx	lr, r3, #12, #3
   1cb80:	eb07 0646 	add.w	r6, r7, r6, lsl #1
   1cb84:	eb04 0c84 	add.w	ip, r4, r4, lsl #2
   1cb88:	f3c3 5502 	ubfx	r5, r3, #20, #3
   1cb8c:	f003 040f 	and.w	r4, r3, #15
   1cb90:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
   1cb94:	61c6      	str	r6, [r0, #28]
   1cb96:	f3c3 4603 	ubfx	r6, r3, #16, #4
   1cb9a:	f3c3 2303 	ubfx	r3, r3, #8, #4
   1cb9e:	eb04 044c 	add.w	r4, r4, ip, lsl #1
   1cba2:	eb03 034e 	add.w	r3, r3, lr, lsl #1
   1cba6:	f3c2 3c00 	ubfx	ip, r2, #12, #1
   1cbaa:	b2e4      	uxtb	r4, r4
   1cbac:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
   1cbb0:	6243      	str	r3, [r0, #36]	@ 0x24
   1cbb2:	f3c2 2303 	ubfx	r3, r2, #8, #4
   1cbb6:	eb03 034c 	add.w	r3, r3, ip, lsl #1
   1cbba:	6284      	str	r4, [r0, #40]	@ 0x28
   1cbbc:	f3c2 1401 	ubfx	r4, r2, #4, #2
   1cbc0:	eb05 0585 	add.w	r5, r5, r5, lsl #2
   1cbc4:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   1cbc8:	6143      	str	r3, [r0, #20]
   1cbca:	f002 030f 	and.w	r3, r2, #15
   1cbce:	eb03 0444 	add.w	r4, r3, r4, lsl #1
   1cbd2:	eb06 0545 	add.w	r5, r6, r5, lsl #1
   1cbd6:	2300      	movs	r3, #0
   1cbd8:	f3c2 4202 	ubfx	r2, r2, #16, #3
   1cbdc:	e9c0 3300 	strd	r3, r3, [r0]
   1cbe0:	e9c0 3303 	strd	r3, r3, [r0, #12]
   1cbe4:	6205      	str	r5, [r0, #32]
   1cbe6:	6082      	str	r2, [r0, #8]
   1cbe8:	6184      	str	r4, [r0, #24]
   1cbea:	b131      	cbz	r1, 1cbfa <am_hal_rtc_alarm_get+0x9a>
   1cbec:	4a15      	ldr	r2, [pc, #84]	@ (1cc44 <am_hal_rtc_alarm_get+0xe4>)
   1cbee:	6813      	ldr	r3, [r2, #0]
   1cbf0:	f3c3 0342 	ubfx	r3, r3, #1, #3
   1cbf4:	2b07      	cmp	r3, #7
   1cbf6:	d00c      	beq.n	1cc12 <am_hal_rtc_alarm_get+0xb2>
   1cbf8:	700b      	strb	r3, [r1, #0]
   1cbfa:	2000      	movs	r0, #0
   1cbfc:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1cbfe:	b131      	cbz	r1, 1cc0e <am_hal_rtc_alarm_get+0xae>
   1cc00:	4a10      	ldr	r2, [pc, #64]	@ (1cc44 <am_hal_rtc_alarm_get+0xe4>)
   1cc02:	6813      	ldr	r3, [r2, #0]
   1cc04:	f3c3 0342 	ubfx	r3, r3, #1, #3
   1cc08:	2b07      	cmp	r3, #7
   1cc0a:	d00c      	beq.n	1cc26 <am_hal_rtc_alarm_get+0xc6>
   1cc0c:	700b      	strb	r3, [r1, #0]
   1cc0e:	2000      	movs	r0, #0
   1cc10:	4770      	bx	lr
   1cc12:	6b13      	ldr	r3, [r2, #48]	@ 0x30
   1cc14:	b2db      	uxtb	r3, r3
   1cc16:	2bf0      	cmp	r3, #240	@ 0xf0
   1cc18:	d00e      	beq.n	1cc38 <am_hal_rtc_alarm_get+0xd8>
   1cc1a:	2bff      	cmp	r3, #255	@ 0xff
   1cc1c:	bf0c      	ite	eq
   1cc1e:	2309      	moveq	r3, #9
   1cc20:	2307      	movne	r3, #7
   1cc22:	700b      	strb	r3, [r1, #0]
   1cc24:	e7e9      	b.n	1cbfa <am_hal_rtc_alarm_get+0x9a>
   1cc26:	6b13      	ldr	r3, [r2, #48]	@ 0x30
   1cc28:	b2db      	uxtb	r3, r3
   1cc2a:	2bf0      	cmp	r3, #240	@ 0xf0
   1cc2c:	d007      	beq.n	1cc3e <am_hal_rtc_alarm_get+0xde>
   1cc2e:	2bff      	cmp	r3, #255	@ 0xff
   1cc30:	bf0c      	ite	eq
   1cc32:	2309      	moveq	r3, #9
   1cc34:	2307      	movne	r3, #7
   1cc36:	e7e9      	b.n	1cc0c <am_hal_rtc_alarm_get+0xac>
   1cc38:	2308      	movs	r3, #8
   1cc3a:	700b      	strb	r3, [r1, #0]
   1cc3c:	e7dd      	b.n	1cbfa <am_hal_rtc_alarm_get+0x9a>
   1cc3e:	2308      	movs	r3, #8
   1cc40:	e7e4      	b.n	1cc0c <am_hal_rtc_alarm_get+0xac>
   1cc42:	bf00      	nop
   1cc44:	40004800 	.word	0x40004800

0001cc48 <am_hal_rtc_interrupt_clear>:
   1cc48:	4b02      	ldr	r3, [pc, #8]	@ (1cc54 <am_hal_rtc_interrupt_clear+0xc>)
   1cc4a:	f8c3 0208 	str.w	r0, [r3, #520]	@ 0x208
   1cc4e:	2000      	movs	r0, #0
   1cc50:	4770      	bx	lr
   1cc52:	bf00      	nop
   1cc54:	40004800 	.word	0x40004800

0001cc58 <am_hal_sysctrl_fpu_enable>:
   1cc58:	4b02      	ldr	r3, [pc, #8]	@ (1cc64 <am_hal_sysctrl_fpu_enable+0xc>)
   1cc5a:	f44f 0270 	mov.w	r2, #15728640	@ 0xf00000
   1cc5e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
   1cc62:	4770      	bx	lr
   1cc64:	e000ed00 	.word	0xe000ed00

0001cc68 <am_hal_sysctrl_fpu_stacking_enable>:
   1cc68:	b510      	push	{r4, lr}
   1cc6a:	b082      	sub	sp, #8
   1cc6c:	4604      	mov	r4, r0
   1cc6e:	f7ff f971 	bl	1bf54 <am_hal_interrupt_master_disable>
   1cc72:	4909      	ldr	r1, [pc, #36]	@ (1cc98 <am_hal_sysctrl_fpu_stacking_enable+0x30>)
   1cc74:	9001      	str	r0, [sp, #4]
   1cc76:	6b4a      	ldr	r2, [r1, #52]	@ 0x34
   1cc78:	2c00      	cmp	r4, #0
   1cc7a:	f022 4240 	bic.w	r2, r2, #3221225472	@ 0xc0000000
   1cc7e:	bf14      	ite	ne
   1cc80:	f04f 4340 	movne.w	r3, #3221225472	@ 0xc0000000
   1cc84:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
   1cc88:	4313      	orrs	r3, r2
   1cc8a:	634b      	str	r3, [r1, #52]	@ 0x34
   1cc8c:	9801      	ldr	r0, [sp, #4]
   1cc8e:	b002      	add	sp, #8
   1cc90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1cc94:	f7ff b962 	b.w	1bf5c <am_hal_interrupt_master_set>
   1cc98:	e000ef00 	.word	0xe000ef00

0001cc9c <am_hal_tpiu_enable>:
   1cc9c:	4b16      	ldr	r3, [pc, #88]	@ (1ccf8 <am_hal_tpiu_enable+0x5c>)
   1cc9e:	4a17      	ldr	r2, [pc, #92]	@ (1ccfc <am_hal_tpiu_enable+0x60>)
   1cca0:	b410      	push	{r4}
   1cca2:	2101      	movs	r1, #1
   1cca4:	2400      	movs	r4, #0
   1cca6:	f8c3 4304 	str.w	r4, [r3, #772]	@ 0x304
   1ccaa:	6059      	str	r1, [r3, #4]
   1ccac:	f5a0 4361 	sub.w	r3, r0, #57600	@ 0xe100
   1ccb0:	4293      	cmp	r3, r2
   1ccb2:	4a11      	ldr	r2, [pc, #68]	@ (1ccf8 <am_hal_tpiu_enable+0x5c>)
   1ccb4:	bf9a      	itte	ls
   1ccb6:	4b12      	ldrls	r3, [pc, #72]	@ (1cd00 <am_hal_tpiu_enable+0x64>)
   1ccb8:	fbb3 f0f0 	udivls	r0, r3, r0
   1ccbc:	202f      	movhi	r0, #47	@ 0x2f
   1ccbe:	4b11      	ldr	r3, [pc, #68]	@ (1cd04 <am_hal_tpiu_enable+0x68>)
   1ccc0:	bf98      	it	ls
   1ccc2:	f100 30ff 	addls.w	r0, r0, #4294967295	@ 0xffffffff
   1ccc6:	2102      	movs	r1, #2
   1ccc8:	2400      	movs	r4, #0
   1ccca:	6110      	str	r0, [r2, #16]
   1cccc:	f8c2 10f0 	str.w	r1, [r2, #240]	@ 0xf0
   1ccd0:	f8c2 4f00 	str.w	r4, [r2, #3840]	@ 0xf00
   1ccd4:	f8d3 2250 	ldr.w	r2, [r3, #592]	@ 0x250
   1ccd8:	f361 0243 	bfi	r2, r1, #1, #3
   1ccdc:	f8c3 2250 	str.w	r2, [r3, #592]	@ 0x250
   1cce0:	f8d3 2250 	ldr.w	r2, [r3, #592]	@ 0x250
   1cce4:	f042 0201 	orr.w	r2, r2, #1
   1cce8:	f8c3 2250 	str.w	r2, [r3, #592]	@ 0x250
   1ccec:	f85d 4b04 	ldr.w	r4, [sp], #4
   1ccf0:	2064      	movs	r0, #100	@ 0x64
   1ccf2:	f000 b809 	b.w	1cd08 <am_hal_delay_us>
   1ccf6:	bf00      	nop
   1ccf8:	e0040000 	.word	0xe0040000
   1ccfc:	001da380 	.word	0x001da380
   1cd00:	02dc6c00 	.word	0x02dc6c00
   1cd04:	40020000 	.word	0x40020000

0001cd08 <am_hal_delay_us>:
   1cd08:	4b09      	ldr	r3, [pc, #36]	@ (1cd30 <am_hal_delay_us+0x28>)
   1cd0a:	681b      	ldr	r3, [r3, #0]
   1cd0c:	f3c3 03c1 	ubfx	r3, r3, #3, #2
   1cd10:	2b02      	cmp	r3, #2
   1cd12:	bf0b      	itete	eq
   1cd14:	0182      	lsleq	r2, r0, #6
   1cd16:	0142      	lslne	r2, r0, #5
   1cd18:	2015      	moveq	r0, #21
   1cd1a:	200f      	movne	r0, #15
   1cd1c:	4282      	cmp	r2, r0
   1cd1e:	d906      	bls.n	1cd2e <am_hal_delay_us+0x26>
   1cd20:	4b04      	ldr	r3, [pc, #16]	@ (1cd34 <am_hal_delay_us+0x2c>)
   1cd22:	b082      	sub	sp, #8
   1cd24:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
   1cd26:	9301      	str	r3, [sp, #4]
   1cd28:	1a10      	subs	r0, r2, r0
   1cd2a:	b002      	add	sp, #8
   1cd2c:	4718      	bx	r3
   1cd2e:	4770      	bx	lr
   1cd30:	40021000 	.word	0x40021000
   1cd34:	0002bf4c 	.word	0x0002bf4c

0001cd38 <am_hal_delay_us_status_change>:
   1cd38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1cd3c:	460c      	mov	r4, r1
   1cd3e:	6809      	ldr	r1, [r1, #0]
   1cd40:	4011      	ands	r1, r2
   1cd42:	428b      	cmp	r3, r1
   1cd44:	d01a      	beq.n	1cd7c <am_hal_delay_us_status_change+0x44>
   1cd46:	f100 39ff 	add.w	r9, r0, #4294967295	@ 0xffffffff
   1cd4a:	b1d0      	cbz	r0, 1cd82 <am_hal_delay_us_status_change+0x4a>
   1cd4c:	461e      	mov	r6, r3
   1cd4e:	4b0e      	ldr	r3, [pc, #56]	@ (1cd88 <am_hal_delay_us_status_change+0x50>)
   1cd50:	4f0e      	ldr	r7, [pc, #56]	@ (1cd8c <am_hal_delay_us_status_change+0x54>)
   1cd52:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
   1cd56:	4615      	mov	r5, r2
   1cd58:	e002      	b.n	1cd60 <am_hal_delay_us_status_change+0x28>
   1cd5a:	f1b9 3fff 	cmp.w	r9, #4294967295	@ 0xffffffff
   1cd5e:	d010      	beq.n	1cd82 <am_hal_delay_us_status_change+0x4a>
   1cd60:	6838      	ldr	r0, [r7, #0]
   1cd62:	f3c0 00c1 	ubfx	r0, r0, #3, #2
   1cd66:	2802      	cmp	r0, #2
   1cd68:	bf14      	ite	ne
   1cd6a:	2011      	movne	r0, #17
   1cd6c:	202b      	moveq	r0, #43	@ 0x2b
   1cd6e:	47c0      	blx	r8
   1cd70:	6820      	ldr	r0, [r4, #0]
   1cd72:	4028      	ands	r0, r5
   1cd74:	42b0      	cmp	r0, r6
   1cd76:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
   1cd7a:	d1ee      	bne.n	1cd5a <am_hal_delay_us_status_change+0x22>
   1cd7c:	2000      	movs	r0, #0
   1cd7e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1cd82:	2004      	movs	r0, #4
   1cd84:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1cd88:	0002bf4c 	.word	0x0002bf4c
   1cd8c:	40021000 	.word	0x40021000

0001cd90 <am_hal_delay_us_status_check>:
   1cd90:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1cd94:	f89d c020 	ldrb.w	ip, [sp, #32]
   1cd98:	f8df 8068 	ldr.w	r8, [pc, #104]	@ 1ce04 <am_hal_delay_us_status_check+0x74>
   1cd9c:	f8df 9068 	ldr.w	r9, [pc, #104]	@ 1ce08 <am_hal_delay_us_status_check+0x78>
   1cda0:	4604      	mov	r4, r0
   1cda2:	460d      	mov	r5, r1
   1cda4:	4616      	mov	r6, r2
   1cda6:	461f      	mov	r7, r3
   1cda8:	f1bc 0f00 	cmp.w	ip, #0
   1cdac:	d00d      	beq.n	1cdca <am_hal_delay_us_status_check+0x3a>
   1cdae:	e020      	b.n	1cdf2 <am_hal_delay_us_status_check+0x62>
   1cdb0:	b324      	cbz	r4, 1cdfc <am_hal_delay_us_status_check+0x6c>
   1cdb2:	f8d8 3000 	ldr.w	r3, [r8]
   1cdb6:	f8d9 2024 	ldr.w	r2, [r9, #36]	@ 0x24
   1cdba:	f3c3 03c1 	ubfx	r3, r3, #3, #2
   1cdbe:	2b02      	cmp	r3, #2
   1cdc0:	bf14      	ite	ne
   1cdc2:	2011      	movne	r0, #17
   1cdc4:	202b      	moveq	r0, #43	@ 0x2b
   1cdc6:	4790      	blx	r2
   1cdc8:	3c01      	subs	r4, #1
   1cdca:	6828      	ldr	r0, [r5, #0]
   1cdcc:	4030      	ands	r0, r6
   1cdce:	42b8      	cmp	r0, r7
   1cdd0:	d0ee      	beq.n	1cdb0 <am_hal_delay_us_status_check+0x20>
   1cdd2:	2000      	movs	r0, #0
   1cdd4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1cdd8:	b184      	cbz	r4, 1cdfc <am_hal_delay_us_status_check+0x6c>
   1cdda:	f8d8 3000 	ldr.w	r3, [r8]
   1cdde:	f8d9 2024 	ldr.w	r2, [r9, #36]	@ 0x24
   1cde2:	f3c3 03c1 	ubfx	r3, r3, #3, #2
   1cde6:	2b02      	cmp	r3, #2
   1cde8:	bf14      	ite	ne
   1cdea:	2011      	movne	r0, #17
   1cdec:	202b      	moveq	r0, #43	@ 0x2b
   1cdee:	4790      	blx	r2
   1cdf0:	3c01      	subs	r4, #1
   1cdf2:	6828      	ldr	r0, [r5, #0]
   1cdf4:	4030      	ands	r0, r6
   1cdf6:	42b8      	cmp	r0, r7
   1cdf8:	d1ee      	bne.n	1cdd8 <am_hal_delay_us_status_check+0x48>
   1cdfa:	e7ea      	b.n	1cdd2 <am_hal_delay_us_status_check+0x42>
   1cdfc:	2004      	movs	r0, #4
   1cdfe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1ce02:	bf00      	nop
   1ce04:	40021000 	.word	0x40021000
   1ce08:	0002bf4c 	.word	0x0002bf4c

0001ce0c <am_hal_adc_interrupt_status>:
   1ce0c:	6803      	ldr	r3, [r0, #0]
   1ce0e:	b410      	push	{r4}
   1ce10:	4c0e      	ldr	r4, [pc, #56]	@ (1ce4c <am_hal_adc_interrupt_status+0x40>)
   1ce12:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   1ce16:	42a3      	cmp	r3, r4
   1ce18:	d113      	bne.n	1ce42 <am_hal_adc_interrupt_status+0x36>
   1ce1a:	b93a      	cbnz	r2, 1ce2c <am_hal_adc_interrupt_status+0x20>
   1ce1c:	4b0c      	ldr	r3, [pc, #48]	@ (1ce50 <am_hal_adc_interrupt_status+0x44>)
   1ce1e:	f85d 4b04 	ldr.w	r4, [sp], #4
   1ce22:	f8d3 3204 	ldr.w	r3, [r3, #516]	@ 0x204
   1ce26:	600b      	str	r3, [r1, #0]
   1ce28:	4610      	mov	r0, r2
   1ce2a:	4770      	bx	lr
   1ce2c:	4a08      	ldr	r2, [pc, #32]	@ (1ce50 <am_hal_adc_interrupt_status+0x44>)
   1ce2e:	f8d2 4204 	ldr.w	r4, [r2, #516]	@ 0x204
   1ce32:	f8d2 3200 	ldr.w	r3, [r2, #512]	@ 0x200
   1ce36:	4023      	ands	r3, r4
   1ce38:	2000      	movs	r0, #0
   1ce3a:	f85d 4b04 	ldr.w	r4, [sp], #4
   1ce3e:	600b      	str	r3, [r1, #0]
   1ce40:	4770      	bx	lr
   1ce42:	2002      	movs	r0, #2
   1ce44:	f85d 4b04 	ldr.w	r4, [sp], #4
   1ce48:	4770      	bx	lr
   1ce4a:	bf00      	nop
   1ce4c:	01afafaf 	.word	0x01afafaf
   1ce50:	40038000 	.word	0x40038000

0001ce54 <am_hal_adc_interrupt_clear>:
   1ce54:	6803      	ldr	r3, [r0, #0]
   1ce56:	4a05      	ldr	r2, [pc, #20]	@ (1ce6c <am_hal_adc_interrupt_clear+0x18>)
   1ce58:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   1ce5c:	4293      	cmp	r3, r2
   1ce5e:	bf03      	ittte	eq
   1ce60:	4b03      	ldreq	r3, [pc, #12]	@ (1ce70 <am_hal_adc_interrupt_clear+0x1c>)
   1ce62:	2000      	moveq	r0, #0
   1ce64:	f8c3 1208 	streq.w	r1, [r3, #520]	@ 0x208
   1ce68:	2002      	movne	r0, #2
   1ce6a:	4770      	bx	lr
   1ce6c:	01afafaf 	.word	0x01afafaf
   1ce70:	40038000 	.word	0x40038000

0001ce74 <am_hal_adc_samples_read>:
   1ce74:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1ce78:	6804      	ldr	r4, [r0, #0]
   1ce7a:	4e90      	ldr	r6, [pc, #576]	@ (1d0bc <am_hal_adc_samples_read+0x248>)
   1ce7c:	9d07      	ldr	r5, [sp, #28]
   1ce7e:	f024 447e 	bic.w	r4, r4, #4261412864	@ 0xfe000000
   1ce82:	42b4      	cmp	r4, r6
   1ce84:	d160      	bne.n	1cf48 <am_hal_adc_samples_read+0xd4>
   1ce86:	2d00      	cmp	r5, #0
   1ce88:	f000 8116 	beq.w	1d0b8 <am_hal_adc_samples_read+0x244>
   1ce8c:	2000      	movs	r0, #0
   1ce8e:	681c      	ldr	r4, [r3, #0]
   1ce90:	6018      	str	r0, [r3, #0]
   1ce92:	2a00      	cmp	r2, #0
   1ce94:	f000 80a9 	beq.w	1cfea <am_hal_adc_samples_read+0x176>
   1ce98:	4989      	ldr	r1, [pc, #548]	@ (1d0c0 <am_hal_adc_samples_read+0x24c>)
   1ce9a:	68c8      	ldr	r0, [r1, #12]
   1ce9c:	6909      	ldr	r1, [r1, #16]
   1ce9e:	f3c1 2103 	ubfx	r1, r1, #8, #4
   1cea2:	2908      	cmp	r1, #8
   1cea4:	4986      	ldr	r1, [pc, #536]	@ (1d0c0 <am_hal_adc_samples_read+0x24c>)
   1cea6:	f3c0 2e03 	ubfx	lr, r0, #8, #4
   1ceaa:	6949      	ldr	r1, [r1, #20]
   1ceac:	f1ae 0e08 	sub.w	lr, lr, #8
   1ceb0:	fabe fe8e 	clz	lr, lr
   1ceb4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
   1ceb8:	f3c1 2103 	ubfx	r1, r1, #8, #4
   1cebc:	bf08      	it	eq
   1cebe:	f04e 0e02 	orreq.w	lr, lr, #2
   1cec2:	2908      	cmp	r1, #8
   1cec4:	497e      	ldr	r1, [pc, #504]	@ (1d0c0 <am_hal_adc_samples_read+0x24c>)
   1cec6:	6989      	ldr	r1, [r1, #24]
   1cec8:	f3c1 2103 	ubfx	r1, r1, #8, #4
   1cecc:	bf08      	it	eq
   1cece:	f04e 0e04 	orreq.w	lr, lr, #4
   1ced2:	2908      	cmp	r1, #8
   1ced4:	497a      	ldr	r1, [pc, #488]	@ (1d0c0 <am_hal_adc_samples_read+0x24c>)
   1ced6:	69c9      	ldr	r1, [r1, #28]
   1ced8:	f3c1 2103 	ubfx	r1, r1, #8, #4
   1cedc:	bf08      	it	eq
   1cede:	f04e 0e08 	orreq.w	lr, lr, #8
   1cee2:	2908      	cmp	r1, #8
   1cee4:	4976      	ldr	r1, [pc, #472]	@ (1d0c0 <am_hal_adc_samples_read+0x24c>)
   1cee6:	6a09      	ldr	r1, [r1, #32]
   1cee8:	f3c1 2103 	ubfx	r1, r1, #8, #4
   1ceec:	bf08      	it	eq
   1ceee:	f04e 0e10 	orreq.w	lr, lr, #16
   1cef2:	2908      	cmp	r1, #8
   1cef4:	4972      	ldr	r1, [pc, #456]	@ (1d0c0 <am_hal_adc_samples_read+0x24c>)
   1cef6:	6a49      	ldr	r1, [r1, #36]	@ 0x24
   1cef8:	f3c1 2103 	ubfx	r1, r1, #8, #4
   1cefc:	bf08      	it	eq
   1cefe:	f04e 0e20 	orreq.w	lr, lr, #32
   1cf02:	2908      	cmp	r1, #8
   1cf04:	496e      	ldr	r1, [pc, #440]	@ (1d0c0 <am_hal_adc_samples_read+0x24c>)
   1cf06:	6a89      	ldr	r1, [r1, #40]	@ 0x28
   1cf08:	f3c1 2103 	ubfx	r1, r1, #8, #4
   1cf0c:	bf08      	it	eq
   1cf0e:	f04e 0e40 	orreq.w	lr, lr, #64	@ 0x40
   1cf12:	2908      	cmp	r1, #8
   1cf14:	496b      	ldr	r1, [pc, #428]	@ (1d0c4 <am_hal_adc_samples_read+0x250>)
   1cf16:	7809      	ldrb	r1, [r1, #0]
   1cf18:	bf08      	it	eq
   1cf1a:	f04e 0e80 	orreq.w	lr, lr, #128	@ 0x80
   1cf1e:	b9b1      	cbnz	r1, 1cf4e <am_hal_adc_samples_read+0xda>
   1cf20:	f105 0108 	add.w	r1, r5, #8
   1cf24:	1f10      	subs	r0, r2, #4
   1cf26:	f850 2f04 	ldr.w	r2, [r0, #4]!
   1cf2a:	3108      	adds	r1, #8
   1cf2c:	f3c2 158d 	ubfx	r5, r2, #6, #14
   1cf30:	f3c2 7202 	ubfx	r2, r2, #28, #3
   1cf34:	e941 5204 	strd	r5, r2, [r1, #-16]
   1cf38:	681a      	ldr	r2, [r3, #0]
   1cf3a:	3201      	adds	r2, #1
   1cf3c:	4294      	cmp	r4, r2
   1cf3e:	601a      	str	r2, [r3, #0]
   1cf40:	d8f1      	bhi.n	1cf26 <am_hal_adc_samples_read+0xb2>
   1cf42:	2000      	movs	r0, #0
   1cf44:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1cf48:	2002      	movs	r0, #2
   1cf4a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1cf4e:	eddf 3a5e 	vldr	s7, [pc, #376]	@ 1d0c8 <am_hal_adc_samples_read+0x254>
   1cf52:	ed9f 4a5e 	vldr	s8, [pc, #376]	@ 1d0cc <am_hal_adc_samples_read+0x258>
   1cf56:	eddf 4a5e 	vldr	s9, [pc, #376]	@ 1d0d0 <am_hal_adc_samples_read+0x25c>
   1cf5a:	ed9f 5a5e 	vldr	s10, [pc, #376]	@ 1d0d4 <am_hal_adc_samples_read+0x260>
   1cf5e:	4e5e      	ldr	r6, [pc, #376]	@ (1d0d8 <am_hal_adc_samples_read+0x264>)
   1cf60:	f105 0108 	add.w	r1, r5, #8
   1cf64:	1f10      	subs	r0, r2, #4
   1cf66:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
   1cf6a:	f240 45a6 	movw	r5, #1190	@ 0x4a6
   1cf6e:	f850 2f04 	ldr.w	r2, [r0, #4]!
   1cf72:	f3c2 7702 	ubfx	r7, r2, #28, #3
   1cf76:	f3c2 0213 	ubfx	r2, r2, #0, #20
   1cf7a:	ea4f 1c92 	mov.w	ip, r2, lsr #6
   1cf7e:	fa2e f807 	lsr.w	r8, lr, r7
   1cf82:	fb05 fc0c 	mul.w	ip, r5, ip
   1cf86:	f018 0f01 	tst.w	r8, #1
   1cf8a:	ea4f 3c1c 	mov.w	ip, ip, lsr #12
   1cf8e:	ea4f 1292 	mov.w	r2, r2, lsr #6
   1cf92:	d120      	bne.n	1cfd6 <am_hal_adc_samples_read+0x162>
   1cf94:	ed96 6a01 	vldr	s12, [r6, #4]
   1cf98:	edd6 6a00 	vldr	s13, [r6]
   1cf9c:	ee07 ca90 	vmov	s15, ip
   1cfa0:	ee35 6ac6 	vsub.f32	s12, s11, s12
   1cfa4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
   1cfa8:	f640 72ff 	movw	r2, #4095	@ 0xfff
   1cfac:	ee87 7a86 	vdiv.f32	s14, s15, s12
   1cfb0:	ee66 7aa3 	vmul.f32	s15, s13, s7
   1cfb4:	ee77 7a67 	vsub.f32	s15, s14, s15
   1cfb8:	ee67 7a84 	vmul.f32	s15, s15, s8
   1cfbc:	ee87 7aa4 	vdiv.f32	s14, s15, s9
   1cfc0:	eeb4 7ac5 	vcmpe.f32	s14, s10
   1cfc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   1cfc8:	dc05      	bgt.n	1cfd6 <am_hal_adc_samples_read+0x162>
   1cfca:	eefc 7ac7 	vcvt.u32.f32	s15, s14
   1cfce:	ee17 2a90 	vmov	r2, s15
   1cfd2:	f3c2 020b 	ubfx	r2, r2, #0, #12
   1cfd6:	e941 2702 	strd	r2, r7, [r1, #-8]
   1cfda:	681a      	ldr	r2, [r3, #0]
   1cfdc:	3201      	adds	r2, #1
   1cfde:	42a2      	cmp	r2, r4
   1cfe0:	f101 0108 	add.w	r1, r1, #8
   1cfe4:	601a      	str	r2, [r3, #0]
   1cfe6:	d3c2      	bcc.n	1cf6e <am_hal_adc_samples_read+0xfa>
   1cfe8:	e7ab      	b.n	1cf42 <am_hal_adc_samples_read+0xce>
   1cfea:	4a36      	ldr	r2, [pc, #216]	@ (1d0c4 <am_hal_adc_samples_read+0x250>)
   1cfec:	ed9f 4a36 	vldr	s8, [pc, #216]	@ 1d0c8 <am_hal_adc_samples_read+0x254>
   1cff0:	f892 c000 	ldrb.w	ip, [r2]
   1cff4:	eddf 4a35 	vldr	s9, [pc, #212]	@ 1d0cc <am_hal_adc_samples_read+0x258>
   1cff8:	ed9f 5a35 	vldr	s10, [pc, #212]	@ 1d0d0 <am_hal_adc_samples_read+0x25c>
   1cffc:	eddf 5a35 	vldr	s11, [pc, #212]	@ 1d0d4 <am_hal_adc_samples_read+0x260>
   1d000:	4f2f      	ldr	r7, [pc, #188]	@ (1d0c0 <am_hal_adc_samples_read+0x24c>)
   1d002:	4e36      	ldr	r6, [pc, #216]	@ (1d0dc <am_hal_adc_samples_read+0x268>)
   1d004:	f8df e0d0 	ldr.w	lr, [pc, #208]	@ 1d0d8 <am_hal_adc_samples_read+0x264>
   1d008:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 1d0e0 <am_hal_adc_samples_read+0x26c>
   1d00c:	f105 0008 	add.w	r0, r5, #8
   1d010:	e00e      	b.n	1d030 <am_hal_adc_samples_read+0x1bc>
   1d012:	f3c5 0213 	ubfx	r2, r5, #0, #20
   1d016:	f840 2c08 	str.w	r2, [r0, #-8]
   1d01a:	681a      	ldr	r2, [r3, #0]
   1d01c:	f015 6f7f 	tst.w	r5, #267386880	@ 0xff00000
   1d020:	f102 0201 	add.w	r2, r2, #1
   1d024:	601a      	str	r2, [r3, #0]
   1d026:	d08c      	beq.n	1cf42 <am_hal_adc_samples_read+0xce>
   1d028:	42a2      	cmp	r2, r4
   1d02a:	f100 0008 	add.w	r0, r0, #8
   1d02e:	d288      	bcs.n	1cf42 <am_hal_adc_samples_read+0xce>
   1d030:	6bfd      	ldr	r5, [r7, #60]	@ 0x3c
   1d032:	f3c5 7902 	ubfx	r9, r5, #28, #3
   1d036:	eb09 0206 	add.w	r2, r9, r6
   1d03a:	0092      	lsls	r2, r2, #2
   1d03c:	6812      	ldr	r2, [r2, #0]
   1d03e:	f1bc 0f00 	cmp.w	ip, #0
   1d042:	d030      	beq.n	1d0a6 <am_hal_adc_samples_read+0x232>
   1d044:	f3c2 2203 	ubfx	r2, r2, #8, #4
   1d048:	2a08      	cmp	r2, #8
   1d04a:	d02c      	beq.n	1d0a6 <am_hal_adc_samples_read+0x232>
   1d04c:	f3c5 128d 	ubfx	r2, r5, #6, #14
   1d050:	f240 49a6 	movw	r9, #1190	@ 0x4a6
   1d054:	edde 7a01 	vldr	s15, [lr, #4]
   1d058:	ed9e 7a00 	vldr	s14, [lr]
   1d05c:	fb09 f202 	mul.w	r2, r9, r2
   1d060:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
   1d064:	0b12      	lsrs	r2, r2, #12
   1d066:	ee36 6a67 	vsub.f32	s12, s12, s15
   1d06a:	ee07 2a90 	vmov	s15, r2
   1d06e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
   1d072:	ee67 6a04 	vmul.f32	s13, s14, s8
   1d076:	ee87 7a86 	vdiv.f32	s14, s15, s12
   1d07a:	ee37 7a66 	vsub.f32	s14, s14, s13
   1d07e:	ee27 7a24 	vmul.f32	s14, s14, s9
   1d082:	eec7 7a05 	vdiv.f32	s15, s14, s10
   1d086:	eef4 7ae5 	vcmpe.f32	s15, s11
   1d08a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
   1d08e:	dc11      	bgt.n	1d0b4 <am_hal_adc_samples_read+0x240>
   1d090:	eefc 7ae7 	vcvt.u32.f32	s15, s15
   1d094:	ee17 2a90 	vmov	r2, s15
   1d098:	0192      	lsls	r2, r2, #6
   1d09a:	f3c2 0211 	ubfx	r2, r2, #0, #18
   1d09e:	f362 0513 	bfi	r5, r2, #0, #20
   1d0a2:	f3c5 7902 	ubfx	r9, r5, #28, #3
   1d0a6:	f840 9c04 	str.w	r9, [r0, #-4]
   1d0aa:	2900      	cmp	r1, #0
   1d0ac:	d1b1      	bne.n	1d012 <am_hal_adc_samples_read+0x19e>
   1d0ae:	f3c5 128d 	ubfx	r2, r5, #6, #14
   1d0b2:	e7b0      	b.n	1d016 <am_hal_adc_samples_read+0x1a2>
   1d0b4:	4642      	mov	r2, r8
   1d0b6:	e7f2      	b.n	1d09e <am_hal_adc_samples_read+0x22a>
   1d0b8:	2006      	movs	r0, #6
   1d0ba:	e743      	b.n	1cf44 <am_hal_adc_samples_read+0xd0>
   1d0bc:	01afafaf 	.word	0x01afafaf
   1d0c0:	40038000 	.word	0x40038000
   1d0c4:	10007ce8 	.word	0x10007ce8
   1d0c8:	447a0000 	.word	0x447a0000
   1d0cc:	45800000 	.word	0x45800000
   1d0d0:	4494c000 	.word	0x4494c000
   1d0d4:	457ff000 	.word	0x457ff000
   1d0d8:	10007cec 	.word	0x10007cec
   1d0dc:	1000e003 	.word	0x1000e003
   1d0e0:	0003ffc0 	.word	0x0003ffc0

0001d0e4 <am_hal_dcu_get>:
   1d0e4:	4b1f      	ldr	r3, [pc, #124]	@ (1d164 <am_hal_dcu_get+0x80>)
   1d0e6:	689b      	ldr	r3, [r3, #8]
   1d0e8:	02da      	lsls	r2, r3, #11
   1d0ea:	d538      	bpl.n	1d15e <am_hal_dcu_get+0x7a>
   1d0ec:	4b1e      	ldr	r3, [pc, #120]	@ (1d168 <am_hal_dcu_get+0x84>)
   1d0ee:	f8d3 3a7c 	ldr.w	r3, [r3, #2684]	@ 0xa7c
   1d0f2:	07db      	lsls	r3, r3, #31
   1d0f4:	d533      	bpl.n	1d15e <am_hal_dcu_get+0x7a>
   1d0f6:	b510      	push	{r4, lr}
   1d0f8:	4b1c      	ldr	r3, [pc, #112]	@ (1d16c <am_hal_dcu_get+0x88>)
   1d0fa:	4a1d      	ldr	r2, [pc, #116]	@ (1d170 <am_hal_dcu_get+0x8c>)
   1d0fc:	681b      	ldr	r3, [r3, #0]
   1d0fe:	6814      	ldr	r4, [r2, #0]
   1d100:	685a      	ldr	r2, [r3, #4]
   1d102:	b082      	sub	sp, #8
   1d104:	f04f 0e01 	mov.w	lr, #1
   1d108:	9201      	str	r2, [sp, #4]
   1d10a:	681b      	ldr	r3, [r3, #0]
   1d10c:	9300      	str	r3, [sp, #0]
   1d10e:	e9dd 3100 	ldrd	r3, r1, [sp]
   1d112:	f1c4 0220 	rsb	r2, r4, #32
   1d116:	fa01 f202 	lsl.w	r2, r1, r2
   1d11a:	40e3      	lsrs	r3, r4
   1d11c:	4313      	orrs	r3, r2
   1d11e:	f1a4 0220 	sub.w	r2, r4, #32
   1d122:	fa21 f202 	lsr.w	r2, r1, r2
   1d126:	4313      	orrs	r3, r2
   1d128:	2200      	movs	r2, #0
   1d12a:	40e1      	lsrs	r1, r4
   1d12c:	4614      	mov	r4, r2
   1d12e:	f003 0c07 	and.w	ip, r3, #7
   1d132:	f1bc 0f05 	cmp.w	ip, #5
   1d136:	bf08      	it	eq
   1d138:	fa0e fc02 	lsleq.w	ip, lr, r2
   1d13c:	f102 0201 	add.w	r2, r2, #1
   1d140:	ea4f 03d3 	mov.w	r3, r3, lsr #3
   1d144:	bf08      	it	eq
   1d146:	ea44 040c 	orreq.w	r4, r4, ip
   1d14a:	2a14      	cmp	r2, #20
   1d14c:	ea43 7341 	orr.w	r3, r3, r1, lsl #29
   1d150:	ea4f 01d1 	mov.w	r1, r1, lsr #3
   1d154:	d1eb      	bne.n	1d12e <am_hal_dcu_get+0x4a>
   1d156:	6004      	str	r4, [r0, #0]
   1d158:	2000      	movs	r0, #0
   1d15a:	b002      	add	sp, #8
   1d15c:	bd10      	pop	{r4, pc}
   1d15e:	2007      	movs	r0, #7
   1d160:	4770      	bx	lr
   1d162:	bf00      	nop
   1d164:	40021000 	.word	0x40021000
   1d168:	400c0000 	.word	0x400c0000
   1d16c:	1000304c 	.word	0x1000304c
   1d170:	10007cf8 	.word	0x10007cf8

0001d174 <am_hal_dcu_update>:
   1d174:	4b26      	ldr	r3, [pc, #152]	@ (1d210 <am_hal_dcu_update+0x9c>)
   1d176:	689b      	ldr	r3, [r3, #8]
   1d178:	02d8      	lsls	r0, r3, #11
   1d17a:	d544      	bpl.n	1d206 <am_hal_dcu_update+0x92>
   1d17c:	4b25      	ldr	r3, [pc, #148]	@ (1d214 <am_hal_dcu_update+0xa0>)
   1d17e:	f8d3 3a7c 	ldr.w	r3, [r3, #2684]	@ 0xa7c
   1d182:	07da      	lsls	r2, r3, #31
   1d184:	d53f      	bpl.n	1d206 <am_hal_dcu_update+0x92>
   1d186:	b570      	push	{r4, r5, r6, lr}
   1d188:	4b23      	ldr	r3, [pc, #140]	@ (1d218 <am_hal_dcu_update+0xa4>)
   1d18a:	681b      	ldr	r3, [r3, #0]
   1d18c:	2400      	movs	r4, #0
   1d18e:	b084      	sub	sp, #16
   1d190:	0849      	lsrs	r1, r1, #1
   1d192:	f103 063c 	add.w	r6, r3, #60	@ 0x3c
   1d196:	4625      	mov	r5, r4
   1d198:	f04f 0e07 	mov.w	lr, #7
   1d19c:	f011 0f01 	tst.w	r1, #1
   1d1a0:	f1a3 0220 	sub.w	r2, r3, #32
   1d1a4:	ea4f 0151 	mov.w	r1, r1, lsr #1
   1d1a8:	f1c3 0020 	rsb	r0, r3, #32
   1d1ac:	d009      	beq.n	1d1c2 <am_hal_dcu_update+0x4e>
   1d1ae:	fa2e f000 	lsr.w	r0, lr, r0
   1d1b2:	fa0e f202 	lsl.w	r2, lr, r2
   1d1b6:	fa0e fc03 	lsl.w	ip, lr, r3
   1d1ba:	4302      	orrs	r2, r0
   1d1bc:	4660      	mov	r0, ip
   1d1be:	4304      	orrs	r4, r0
   1d1c0:	4315      	orrs	r5, r2
   1d1c2:	3303      	adds	r3, #3
   1d1c4:	429e      	cmp	r6, r3
   1d1c6:	d1e9      	bne.n	1d19c <am_hal_dcu_update+0x28>
   1d1c8:	4b14      	ldr	r3, [pc, #80]	@ (1d21c <am_hal_dcu_update+0xa8>)
   1d1ca:	681b      	ldr	r3, [r3, #0]
   1d1cc:	685a      	ldr	r2, [r3, #4]
   1d1ce:	9203      	str	r2, [sp, #12]
   1d1d0:	681b      	ldr	r3, [r3, #0]
   1d1d2:	9302      	str	r3, [sp, #8]
   1d1d4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1d1d8:	4014      	ands	r4, r2
   1d1da:	401d      	ands	r5, r3
   1d1dc:	ea54 0305 	orrs.w	r3, r4, r5
   1d1e0:	d113      	bne.n	1d20a <am_hal_dcu_update+0x96>
   1d1e2:	4b0f      	ldr	r3, [pc, #60]	@ (1d220 <am_hal_dcu_update+0xac>)
   1d1e4:	4a0b      	ldr	r2, [pc, #44]	@ (1d214 <am_hal_dcu_update+0xa0>)
   1d1e6:	681b      	ldr	r3, [r3, #0]
   1d1e8:	6859      	ldr	r1, [r3, #4]
   1d1ea:	9101      	str	r1, [sp, #4]
   1d1ec:	6819      	ldr	r1, [r3, #0]
   1d1ee:	9100      	str	r1, [sp, #0]
   1d1f0:	9901      	ldr	r1, [sp, #4]
   1d1f2:	6059      	str	r1, [r3, #4]
   1d1f4:	9900      	ldr	r1, [sp, #0]
   1d1f6:	6019      	str	r1, [r3, #0]
   1d1f8:	f8d2 3a7c 	ldr.w	r3, [r2, #2684]	@ 0xa7c
   1d1fc:	07db      	lsls	r3, r3, #31
   1d1fe:	d5fb      	bpl.n	1d1f8 <am_hal_dcu_update+0x84>
   1d200:	2000      	movs	r0, #0
   1d202:	b004      	add	sp, #16
   1d204:	bd70      	pop	{r4, r5, r6, pc}
   1d206:	2007      	movs	r0, #7
   1d208:	4770      	bx	lr
   1d20a:	2007      	movs	r0, #7
   1d20c:	b004      	add	sp, #16
   1d20e:	bd70      	pop	{r4, r5, r6, pc}
   1d210:	40021000 	.word	0x40021000
   1d214:	400c0000 	.word	0x400c0000
   1d218:	10007cf8 	.word	0x10007cf8
   1d21c:	10003050 	.word	0x10003050
   1d220:	1000304c 	.word	0x1000304c

0001d224 <am_hal_gpio_pinconfig>:
   1d224:	287f      	cmp	r0, #127	@ 0x7f
   1d226:	d81f      	bhi.n	1d268 <am_hal_gpio_pinconfig+0x44>
   1d228:	f3c1 2381 	ubfx	r3, r1, #10, #2
   1d22c:	2b01      	cmp	r3, #1
   1d22e:	b410      	push	{r4}
   1d230:	d909      	bls.n	1d246 <am_hal_gpio_pinconfig+0x22>
   1d232:	4b10      	ldr	r3, [pc, #64]	@ (1d274 <am_hal_gpio_pinconfig+0x50>)
   1d234:	0942      	lsrs	r2, r0, #5
   1d236:	f000 041f 	and.w	r4, r0, #31
   1d23a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
   1d23e:	2301      	movs	r3, #1
   1d240:	40a3      	lsls	r3, r4
   1d242:	4213      	tst	r3, r2
   1d244:	d012      	beq.n	1d26c <am_hal_gpio_pinconfig+0x48>
   1d246:	0080      	lsls	r0, r0, #2
   1d248:	f100 4080 	add.w	r0, r0, #1073741824	@ 0x40000000
   1d24c:	4b0a      	ldr	r3, [pc, #40]	@ (1d278 <am_hal_gpio_pinconfig+0x54>)
   1d24e:	f500 3080 	add.w	r0, r0, #65536	@ 0x10000
   1d252:	2200      	movs	r2, #0
   1d254:	2473      	movs	r4, #115	@ 0x73
   1d256:	f8c3 4200 	str.w	r4, [r3, #512]	@ 0x200
   1d25a:	6001      	str	r1, [r0, #0]
   1d25c:	f85d 4b04 	ldr.w	r4, [sp], #4
   1d260:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
   1d264:	4610      	mov	r0, r2
   1d266:	4770      	bx	lr
   1d268:	2005      	movs	r0, #5
   1d26a:	4770      	bx	lr
   1d26c:	2007      	movs	r0, #7
   1d26e:	f85d 4b04 	ldr.w	r4, [sp], #4
   1d272:	4770      	bx	lr
   1d274:	0002bd0c 	.word	0x0002bd0c
   1d278:	40010000 	.word	0x40010000

0001d27c <am_hal_gpio_interrupt_control>:
   1d27c:	2a00      	cmp	r2, #0
   1d27e:	f000 80c1 	beq.w	1d404 <am_hal_gpio_interrupt_control+0x188>
   1d282:	b5f0      	push	{r4, r5, r6, r7, lr}
   1d284:	2903      	cmp	r1, #3
   1d286:	b083      	sub	sp, #12
   1d288:	460d      	mov	r5, r1
   1d28a:	d86f      	bhi.n	1d36c <am_hal_gpio_interrupt_control+0xf0>
   1d28c:	2901      	cmp	r1, #1
   1d28e:	4606      	mov	r6, r0
   1d290:	4614      	mov	r4, r2
   1d292:	d825      	bhi.n	1d2e0 <am_hal_gpio_interrupt_control+0x64>
   1d294:	6813      	ldr	r3, [r2, #0]
   1d296:	2b7f      	cmp	r3, #127	@ 0x7f
   1d298:	f200 80b6 	bhi.w	1d408 <am_hal_gpio_interrupt_control+0x18c>
   1d29c:	4c5b      	ldr	r4, [pc, #364]	@ (1d40c <am_hal_gpio_interrupt_control+0x190>)
   1d29e:	f003 021f 	and.w	r2, r3, #31
   1d2a2:	2701      	movs	r7, #1
   1d2a4:	eb04 1453 	add.w	r4, r4, r3, lsr #5
   1d2a8:	2801      	cmp	r0, #1
   1d2aa:	fa07 f702 	lsl.w	r7, r7, r2
   1d2ae:	ea4f 1404 	mov.w	r4, r4, lsl #4
   1d2b2:	f000 809d 	beq.w	1d3f0 <am_hal_gpio_interrupt_control+0x174>
   1d2b6:	f7fe fe4d 	bl	1bf54 <am_hal_interrupt_master_disable>
   1d2ba:	2d01      	cmp	r5, #1
   1d2bc:	9001      	str	r0, [sp, #4]
   1d2be:	d04b      	beq.n	1d358 <am_hal_gpio_interrupt_control+0xdc>
   1d2c0:	6823      	ldr	r3, [r4, #0]
   1d2c2:	43fa      	mvns	r2, r7
   1d2c4:	2e02      	cmp	r6, #2
   1d2c6:	ea23 0707 	bic.w	r7, r3, r7
   1d2ca:	6027      	str	r7, [r4, #0]
   1d2cc:	d102      	bne.n	1d2d4 <am_hal_gpio_interrupt_control+0x58>
   1d2ce:	6c23      	ldr	r3, [r4, #64]	@ 0x40
   1d2d0:	401a      	ands	r2, r3
   1d2d2:	6422      	str	r2, [r4, #64]	@ 0x40
   1d2d4:	9801      	ldr	r0, [sp, #4]
   1d2d6:	f7fe fe41 	bl	1bf5c <am_hal_interrupt_master_set>
   1d2da:	2000      	movs	r0, #0
   1d2dc:	b003      	add	sp, #12
   1d2de:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1d2e0:	f7fe fe38 	bl	1bf54 <am_hal_interrupt_master_disable>
   1d2e4:	2d02      	cmp	r5, #2
   1d2e6:	9001      	str	r0, [sp, #4]
   1d2e8:	d043      	beq.n	1d372 <am_hal_gpio_interrupt_control+0xf6>
   1d2ea:	2e01      	cmp	r6, #1
   1d2ec:	d01a      	beq.n	1d324 <am_hal_gpio_interrupt_control+0xa8>
   1d2ee:	4b48      	ldr	r3, [pc, #288]	@ (1d410 <am_hal_gpio_interrupt_control+0x194>)
   1d2f0:	6821      	ldr	r1, [r4, #0]
   1d2f2:	f8d3 22c0 	ldr.w	r2, [r3, #704]	@ 0x2c0
   1d2f6:	430a      	orrs	r2, r1
   1d2f8:	f8c3 22c0 	str.w	r2, [r3, #704]	@ 0x2c0
   1d2fc:	6861      	ldr	r1, [r4, #4]
   1d2fe:	f8d3 22d0 	ldr.w	r2, [r3, #720]	@ 0x2d0
   1d302:	430a      	orrs	r2, r1
   1d304:	f8c3 22d0 	str.w	r2, [r3, #720]	@ 0x2d0
   1d308:	68a1      	ldr	r1, [r4, #8]
   1d30a:	f8d3 22e0 	ldr.w	r2, [r3, #736]	@ 0x2e0
   1d30e:	430a      	orrs	r2, r1
   1d310:	f8c3 22e0 	str.w	r2, [r3, #736]	@ 0x2e0
   1d314:	68e1      	ldr	r1, [r4, #12]
   1d316:	f8d3 22f0 	ldr.w	r2, [r3, #752]	@ 0x2f0
   1d31a:	430a      	orrs	r2, r1
   1d31c:	f8c3 22f0 	str.w	r2, [r3, #752]	@ 0x2f0
   1d320:	2e00      	cmp	r6, #0
   1d322:	d0d7      	beq.n	1d2d4 <am_hal_gpio_interrupt_control+0x58>
   1d324:	4b3a      	ldr	r3, [pc, #232]	@ (1d410 <am_hal_gpio_interrupt_control+0x194>)
   1d326:	6821      	ldr	r1, [r4, #0]
   1d328:	f8d3 2300 	ldr.w	r2, [r3, #768]	@ 0x300
   1d32c:	430a      	orrs	r2, r1
   1d32e:	f8c3 2300 	str.w	r2, [r3, #768]	@ 0x300
   1d332:	6861      	ldr	r1, [r4, #4]
   1d334:	f8d3 2310 	ldr.w	r2, [r3, #784]	@ 0x310
   1d338:	430a      	orrs	r2, r1
   1d33a:	f8c3 2310 	str.w	r2, [r3, #784]	@ 0x310
   1d33e:	68a1      	ldr	r1, [r4, #8]
   1d340:	f8d3 2320 	ldr.w	r2, [r3, #800]	@ 0x320
   1d344:	430a      	orrs	r2, r1
   1d346:	f8c3 2320 	str.w	r2, [r3, #800]	@ 0x320
   1d34a:	68e1      	ldr	r1, [r4, #12]
   1d34c:	f8d3 2330 	ldr.w	r2, [r3, #816]	@ 0x330
   1d350:	430a      	orrs	r2, r1
   1d352:	f8c3 2330 	str.w	r2, [r3, #816]	@ 0x330
   1d356:	e7bd      	b.n	1d2d4 <am_hal_gpio_interrupt_control+0x58>
   1d358:	6823      	ldr	r3, [r4, #0]
   1d35a:	2e02      	cmp	r6, #2
   1d35c:	ea43 0307 	orr.w	r3, r3, r7
   1d360:	6023      	str	r3, [r4, #0]
   1d362:	d1b7      	bne.n	1d2d4 <am_hal_gpio_interrupt_control+0x58>
   1d364:	6c23      	ldr	r3, [r4, #64]	@ 0x40
   1d366:	431f      	orrs	r7, r3
   1d368:	6427      	str	r7, [r4, #64]	@ 0x40
   1d36a:	e7b3      	b.n	1d2d4 <am_hal_gpio_interrupt_control+0x58>
   1d36c:	2006      	movs	r0, #6
   1d36e:	b003      	add	sp, #12
   1d370:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1d372:	2e01      	cmp	r6, #1
   1d374:	d01e      	beq.n	1d3b4 <am_hal_gpio_interrupt_control+0x138>
   1d376:	4b26      	ldr	r3, [pc, #152]	@ (1d410 <am_hal_gpio_interrupt_control+0x194>)
   1d378:	6821      	ldr	r1, [r4, #0]
   1d37a:	f8d3 22c0 	ldr.w	r2, [r3, #704]	@ 0x2c0
   1d37e:	ea22 0201 	bic.w	r2, r2, r1
   1d382:	f8c3 22c0 	str.w	r2, [r3, #704]	@ 0x2c0
   1d386:	6861      	ldr	r1, [r4, #4]
   1d388:	f8d3 22d0 	ldr.w	r2, [r3, #720]	@ 0x2d0
   1d38c:	ea22 0201 	bic.w	r2, r2, r1
   1d390:	f8c3 22d0 	str.w	r2, [r3, #720]	@ 0x2d0
   1d394:	68a1      	ldr	r1, [r4, #8]
   1d396:	f8d3 22e0 	ldr.w	r2, [r3, #736]	@ 0x2e0
   1d39a:	ea22 0201 	bic.w	r2, r2, r1
   1d39e:	f8c3 22e0 	str.w	r2, [r3, #736]	@ 0x2e0
   1d3a2:	68e1      	ldr	r1, [r4, #12]
   1d3a4:	f8d3 22f0 	ldr.w	r2, [r3, #752]	@ 0x2f0
   1d3a8:	ea22 0201 	bic.w	r2, r2, r1
   1d3ac:	f8c3 22f0 	str.w	r2, [r3, #752]	@ 0x2f0
   1d3b0:	2e00      	cmp	r6, #0
   1d3b2:	d08f      	beq.n	1d2d4 <am_hal_gpio_interrupt_control+0x58>
   1d3b4:	4b16      	ldr	r3, [pc, #88]	@ (1d410 <am_hal_gpio_interrupt_control+0x194>)
   1d3b6:	6821      	ldr	r1, [r4, #0]
   1d3b8:	f8d3 2300 	ldr.w	r2, [r3, #768]	@ 0x300
   1d3bc:	ea22 0201 	bic.w	r2, r2, r1
   1d3c0:	f8c3 2300 	str.w	r2, [r3, #768]	@ 0x300
   1d3c4:	6861      	ldr	r1, [r4, #4]
   1d3c6:	f8d3 2310 	ldr.w	r2, [r3, #784]	@ 0x310
   1d3ca:	ea22 0201 	bic.w	r2, r2, r1
   1d3ce:	f8c3 2310 	str.w	r2, [r3, #784]	@ 0x310
   1d3d2:	68a1      	ldr	r1, [r4, #8]
   1d3d4:	f8d3 2320 	ldr.w	r2, [r3, #800]	@ 0x320
   1d3d8:	ea22 0201 	bic.w	r2, r2, r1
   1d3dc:	f8c3 2320 	str.w	r2, [r3, #800]	@ 0x320
   1d3e0:	68e1      	ldr	r1, [r4, #12]
   1d3e2:	f8d3 2330 	ldr.w	r2, [r3, #816]	@ 0x330
   1d3e6:	ea22 0201 	bic.w	r2, r2, r1
   1d3ea:	f8c3 2330 	str.w	r2, [r3, #816]	@ 0x330
   1d3ee:	e771      	b.n	1d2d4 <am_hal_gpio_interrupt_control+0x58>
   1d3f0:	f7fe fdb0 	bl	1bf54 <am_hal_interrupt_master_disable>
   1d3f4:	2d01      	cmp	r5, #1
   1d3f6:	9001      	str	r0, [sp, #4]
   1d3f8:	d0b4      	beq.n	1d364 <am_hal_gpio_interrupt_control+0xe8>
   1d3fa:	6c23      	ldr	r3, [r4, #64]	@ 0x40
   1d3fc:	ea23 0707 	bic.w	r7, r3, r7
   1d400:	6427      	str	r7, [r4, #64]	@ 0x40
   1d402:	e767      	b.n	1d2d4 <am_hal_gpio_interrupt_control+0x58>
   1d404:	2006      	movs	r0, #6
   1d406:	4770      	bx	lr
   1d408:	2005      	movs	r0, #5
   1d40a:	e767      	b.n	1d2dc <am_hal_gpio_interrupt_control+0x60>
   1d40c:	0400102c 	.word	0x0400102c
   1d410:	40010000 	.word	0x40010000

0001d414 <am_hal_gpio_interrupt_irq_status_get>:
   1d414:	2a00      	cmp	r2, #0
   1d416:	d033      	beq.n	1d480 <am_hal_gpio_interrupt_irq_status_get+0x6c>
   1d418:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1d41c:	f1a0 0638 	sub.w	r6, r0, #56	@ 0x38
   1d420:	2e07      	cmp	r6, #7
   1d422:	b082      	sub	sp, #8
   1d424:	4605      	mov	r5, r0
   1d426:	d827      	bhi.n	1d478 <am_hal_gpio_interrupt_irq_status_get+0x64>
   1d428:	4614      	mov	r4, r2
   1d42a:	460f      	mov	r7, r1
   1d42c:	f7fe fd92 	bl	1bf54 <am_hal_interrupt_master_disable>
   1d430:	ea4f 1806 	mov.w	r8, r6, lsl #4
   1d434:	4a13      	ldr	r2, [pc, #76]	@ (1d484 <am_hal_gpio_interrupt_irq_status_get+0x70>)
   1d436:	9001      	str	r0, [sp, #4]
   1d438:	b96f      	cbnz	r7, 1d456 <am_hal_gpio_interrupt_irq_status_get+0x42>
   1d43a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   1d43e:	6023      	str	r3, [r4, #0]
   1d440:	f858 2002 	ldr.w	r2, [r8, r2]
   1d444:	9801      	ldr	r0, [sp, #4]
   1d446:	4013      	ands	r3, r2
   1d448:	6023      	str	r3, [r4, #0]
   1d44a:	f7fe fd87 	bl	1bf5c <am_hal_interrupt_master_set>
   1d44e:	2000      	movs	r0, #0
   1d450:	b002      	add	sp, #8
   1d452:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1d456:	2d3b      	cmp	r5, #59	@ 0x3b
   1d458:	bf8c      	ite	hi
   1d45a:	2301      	movhi	r3, #1
   1d45c:	2300      	movls	r3, #0
   1d45e:	f103 7380 	add.w	r3, r3, #16777216	@ 0x1000000
   1d462:	bf8c      	ite	hi
   1d464:	2104      	movhi	r1, #4
   1d466:	2100      	movls	r1, #0
   1d468:	f203 430b 	addw	r3, r3, #1035	@ 0x40b
   1d46c:	1a76      	subs	r6, r6, r1
   1d46e:	eb06 0683 	add.w	r6, r6, r3, lsl #2
   1d472:	0136      	lsls	r6, r6, #4
   1d474:	6833      	ldr	r3, [r6, #0]
   1d476:	e7e2      	b.n	1d43e <am_hal_gpio_interrupt_irq_status_get+0x2a>
   1d478:	2006      	movs	r0, #6
   1d47a:	b002      	add	sp, #8
   1d47c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1d480:	2006      	movs	r0, #6
   1d482:	4770      	bx	lr
   1d484:	400102c4 	.word	0x400102c4

0001d488 <am_hal_gpio_interrupt_irq_clear>:
   1d488:	3838      	subs	r0, #56	@ 0x38
   1d48a:	2807      	cmp	r0, #7
   1d48c:	d804      	bhi.n	1d498 <am_hal_gpio_interrupt_irq_clear+0x10>
   1d48e:	0103      	lsls	r3, r0, #4
   1d490:	4a02      	ldr	r2, [pc, #8]	@ (1d49c <am_hal_gpio_interrupt_irq_clear+0x14>)
   1d492:	2000      	movs	r0, #0
   1d494:	5099      	str	r1, [r3, r2]
   1d496:	4770      	bx	lr
   1d498:	2006      	movs	r0, #6
   1d49a:	4770      	bx	lr
   1d49c:	400102c8 	.word	0x400102c8

0001d4a0 <am_hal_gpio_interrupt_register>:
   1d4a0:	b410      	push	{r4}
   1d4a2:	ea4f 1c51 	mov.w	ip, r1, lsr #5
   1d4a6:	b960      	cbnz	r0, 1d4c2 <am_hal_gpio_interrupt_register+0x22>
   1d4a8:	f001 011f 	and.w	r1, r1, #31
   1d4ac:	4c1b      	ldr	r4, [pc, #108]	@ (1d51c <am_hal_gpio_interrupt_register+0x7c>)
   1d4ae:	eb01 114c 	add.w	r1, r1, ip, lsl #5
   1d4b2:	f844 3021 	str.w	r3, [r4, r1, lsl #2]
   1d4b6:	4b1a      	ldr	r3, [pc, #104]	@ (1d520 <am_hal_gpio_interrupt_register+0x80>)
   1d4b8:	f85d 4b04 	ldr.w	r4, [sp], #4
   1d4bc:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
   1d4c0:	4770      	bx	lr
   1d4c2:	2801      	cmp	r0, #1
   1d4c4:	f10c 0404 	add.w	r4, ip, #4
   1d4c8:	d015      	beq.n	1d4f6 <am_hal_gpio_interrupt_register+0x56>
   1d4ca:	2802      	cmp	r0, #2
   1d4cc:	d121      	bne.n	1d512 <am_hal_gpio_interrupt_register+0x72>
   1d4ce:	f001 011f 	and.w	r1, r1, #31
   1d4d2:	eb01 1c4c 	add.w	ip, r1, ip, lsl #5
   1d4d6:	eb01 1144 	add.w	r1, r1, r4, lsl #5
   1d4da:	4c11      	ldr	r4, [pc, #68]	@ (1d520 <am_hal_gpio_interrupt_register+0x80>)
   1d4dc:	f844 202c 	str.w	r2, [r4, ip, lsl #2]
   1d4e0:	f844 2021 	str.w	r2, [r4, r1, lsl #2]
   1d4e4:	4a0d      	ldr	r2, [pc, #52]	@ (1d51c <am_hal_gpio_interrupt_register+0x7c>)
   1d4e6:	f85d 4b04 	ldr.w	r4, [sp], #4
   1d4ea:	f842 302c 	str.w	r3, [r2, ip, lsl #2]
   1d4ee:	2000      	movs	r0, #0
   1d4f0:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
   1d4f4:	4770      	bx	lr
   1d4f6:	f001 011f 	and.w	r1, r1, #31
   1d4fa:	eb01 1144 	add.w	r1, r1, r4, lsl #5
   1d4fe:	4807      	ldr	r0, [pc, #28]	@ (1d51c <am_hal_gpio_interrupt_register+0x7c>)
   1d500:	4c07      	ldr	r4, [pc, #28]	@ (1d520 <am_hal_gpio_interrupt_register+0x80>)
   1d502:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
   1d506:	f844 2021 	str.w	r2, [r4, r1, lsl #2]
   1d50a:	2000      	movs	r0, #0
   1d50c:	f85d 4b04 	ldr.w	r4, [sp], #4
   1d510:	4770      	bx	lr
   1d512:	2006      	movs	r0, #6
   1d514:	f85d 4b04 	ldr.w	r4, [sp], #4
   1d518:	4770      	bx	lr
   1d51a:	bf00      	nop
   1d51c:	100080fc 	.word	0x100080fc
   1d520:	10007cfc 	.word	0x10007cfc

0001d524 <am_hal_gpio_interrupt_service>:
   1d524:	3838      	subs	r0, #56	@ 0x38
   1d526:	2807      	cmp	r0, #7
   1d528:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1d52c:	d826      	bhi.n	1d57c <am_hal_gpio_interrupt_service+0x58>
   1d52e:	4689      	mov	r9, r1
   1d530:	b349      	cbz	r1, 1d586 <am_hal_gpio_interrupt_service+0x62>
   1d532:	4e16      	ldr	r6, [pc, #88]	@ (1d58c <am_hal_gpio_interrupt_service+0x68>)
   1d534:	4f16      	ldr	r7, [pc, #88]	@ (1d590 <am_hal_gpio_interrupt_service+0x6c>)
   1d536:	f04f 0800 	mov.w	r8, #0
   1d53a:	0144      	lsls	r4, r0, #5
   1d53c:	2501      	movs	r5, #1
   1d53e:	f1c9 0300 	rsb	r3, r9, #0
   1d542:	ea03 0309 	and.w	r3, r3, r9
   1d546:	fab3 f383 	clz	r3, r3
   1d54a:	f1c3 031f 	rsb	r3, r3, #31
   1d54e:	18e1      	adds	r1, r4, r3
   1d550:	fa05 f303 	lsl.w	r3, r5, r3
   1d554:	f856 2021 	ldr.w	r2, [r6, r1, lsl #2]
   1d558:	ea29 0903 	bic.w	r9, r9, r3
   1d55c:	b142      	cbz	r2, 1d570 <am_hal_gpio_interrupt_service+0x4c>
   1d55e:	f857 0021 	ldr.w	r0, [r7, r1, lsl #2]
   1d562:	4790      	blx	r2
   1d564:	f1b9 0f00 	cmp.w	r9, #0
   1d568:	d1e9      	bne.n	1d53e <am_hal_gpio_interrupt_service+0x1a>
   1d56a:	4640      	mov	r0, r8
   1d56c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1d570:	f04f 0807 	mov.w	r8, #7
   1d574:	f1b9 0f00 	cmp.w	r9, #0
   1d578:	d1e1      	bne.n	1d53e <am_hal_gpio_interrupt_service+0x1a>
   1d57a:	e7f6      	b.n	1d56a <am_hal_gpio_interrupt_service+0x46>
   1d57c:	f04f 0805 	mov.w	r8, #5
   1d580:	4640      	mov	r0, r8
   1d582:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1d586:	4688      	mov	r8, r1
   1d588:	e7ef      	b.n	1d56a <am_hal_gpio_interrupt_service+0x46>
   1d58a:	bf00      	nop
   1d58c:	10007cfc 	.word	0x10007cfc
   1d590:	100080fc 	.word	0x100080fc

0001d594 <am_hal_pwrctrl_mcu_memory_config>:
   1d594:	b570      	push	{r4, r5, r6, lr}
   1d596:	7803      	ldrb	r3, [r0, #0]
   1d598:	2b01      	cmp	r3, #1
   1d59a:	b082      	sub	sp, #8
   1d59c:	4605      	mov	r5, r0
   1d59e:	d073      	beq.n	1d688 <am_hal_pwrctrl_mcu_memory_config+0xf4>
   1d5a0:	2b02      	cmp	r3, #2
   1d5a2:	d067      	beq.n	1d674 <am_hal_pwrctrl_mcu_memory_config+0xe0>
   1d5a4:	2b00      	cmp	r3, #0
   1d5a6:	d05b      	beq.n	1d660 <am_hal_pwrctrl_mcu_memory_config+0xcc>
   1d5a8:	4c4f      	ldr	r4, [pc, #316]	@ (1d6e8 <am_hal_pwrctrl_mcu_memory_config+0x154>)
   1d5aa:	78aa      	ldrb	r2, [r5, #2]
   1d5ac:	6963      	ldr	r3, [r4, #20]
   1d5ae:	494f      	ldr	r1, [pc, #316]	@ (1d6ec <am_hal_pwrctrl_mcu_memory_config+0x158>)
   1d5b0:	f362 0302 	bfi	r3, r2, #0, #3
   1d5b4:	6163      	str	r3, [r4, #20]
   1d5b6:	6963      	ldr	r3, [r4, #20]
   1d5b8:	792a      	ldrb	r2, [r5, #4]
   1d5ba:	f362 03c3 	bfi	r3, r2, #3, #1
   1d5be:	6163      	str	r3, [r4, #20]
   1d5c0:	2601      	movs	r6, #1
   1d5c2:	6963      	ldr	r3, [r4, #20]
   1d5c4:	9600      	str	r6, [sp, #0]
   1d5c6:	223f      	movs	r2, #63	@ 0x3f
   1d5c8:	2005      	movs	r0, #5
   1d5ca:	f7ff fbe1 	bl	1cd90 <am_hal_delay_us_status_check>
   1d5ce:	b940      	cbnz	r0, 1d5e2 <am_hal_pwrctrl_mcu_memory_config+0x4e>
   1d5d0:	69a2      	ldr	r2, [r4, #24]
   1d5d2:	6963      	ldr	r3, [r4, #20]
   1d5d4:	f3c2 1200 	ubfx	r2, r2, #4, #1
   1d5d8:	f3c3 1300 	ubfx	r3, r3, #4, #1
   1d5dc:	429a      	cmp	r2, r3
   1d5de:	d002      	beq.n	1d5e6 <am_hal_pwrctrl_mcu_memory_config+0x52>
   1d5e0:	4630      	mov	r0, r6
   1d5e2:	b002      	add	sp, #8
   1d5e4:	bd70      	pop	{r4, r5, r6, pc}
   1d5e6:	69a2      	ldr	r2, [r4, #24]
   1d5e8:	6963      	ldr	r3, [r4, #20]
   1d5ea:	f3c2 1240 	ubfx	r2, r2, #5, #1
   1d5ee:	f3c3 1340 	ubfx	r3, r3, #5, #1
   1d5f2:	429a      	cmp	r2, r3
   1d5f4:	d1f4      	bne.n	1d5e0 <am_hal_pwrctrl_mcu_memory_config+0x4c>
   1d5f6:	69a2      	ldr	r2, [r4, #24]
   1d5f8:	6963      	ldr	r3, [r4, #20]
   1d5fa:	f002 0207 	and.w	r2, r2, #7
   1d5fe:	f003 0307 	and.w	r3, r3, #7
   1d602:	429a      	cmp	r2, r3
   1d604:	d1ec      	bne.n	1d5e0 <am_hal_pwrctrl_mcu_memory_config+0x4c>
   1d606:	69a2      	ldr	r2, [r4, #24]
   1d608:	6963      	ldr	r3, [r4, #20]
   1d60a:	f3c2 02c0 	ubfx	r2, r2, #3, #1
   1d60e:	f3c3 03c0 	ubfx	r3, r3, #3, #1
   1d612:	429a      	cmp	r2, r3
   1d614:	d1e4      	bne.n	1d5e0 <am_hal_pwrctrl_mcu_memory_config+0x4c>
   1d616:	786b      	ldrb	r3, [r5, #1]
   1d618:	2b00      	cmp	r3, #0
   1d61a:	d05f      	beq.n	1d6dc <am_hal_pwrctrl_mcu_memory_config+0x148>
   1d61c:	69e3      	ldr	r3, [r4, #28]
   1d61e:	f360 1304 	bfi	r3, r0, #4, #1
   1d622:	61e3      	str	r3, [r4, #28]
   1d624:	796b      	ldrb	r3, [r5, #5]
   1d626:	2b00      	cmp	r3, #0
   1d628:	d052      	beq.n	1d6d0 <am_hal_pwrctrl_mcu_memory_config+0x13c>
   1d62a:	4b2f      	ldr	r3, [pc, #188]	@ (1d6e8 <am_hal_pwrctrl_mcu_memory_config+0x154>)
   1d62c:	69da      	ldr	r2, [r3, #28]
   1d62e:	f36f 02c3 	bfc	r2, #3, #1
   1d632:	61da      	str	r2, [r3, #28]
   1d634:	78eb      	ldrb	r3, [r5, #3]
   1d636:	2b07      	cmp	r3, #7
   1d638:	d8d3      	bhi.n	1d5e2 <am_hal_pwrctrl_mcu_memory_config+0x4e>
   1d63a:	a201      	add	r2, pc, #4	@ (adr r2, 1d640 <am_hal_pwrctrl_mcu_memory_config+0xac>)
   1d63c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   1d640:	0001d6c5 	.word	0x0001d6c5
   1d644:	0001d6b7 	.word	0x0001d6b7
   1d648:	0001d5e3 	.word	0x0001d5e3
   1d64c:	0001d6a9 	.word	0x0001d6a9
   1d650:	0001d5e3 	.word	0x0001d5e3
   1d654:	0001d5e3 	.word	0x0001d5e3
   1d658:	0001d5e3 	.word	0x0001d5e3
   1d65c:	0001d69d 	.word	0x0001d69d
   1d660:	4a21      	ldr	r2, [pc, #132]	@ (1d6e8 <am_hal_pwrctrl_mcu_memory_config+0x154>)
   1d662:	6951      	ldr	r1, [r2, #20]
   1d664:	f363 1104 	bfi	r1, r3, #4, #1
   1d668:	6151      	str	r1, [r2, #20]
   1d66a:	6951      	ldr	r1, [r2, #20]
   1d66c:	f363 1145 	bfi	r1, r3, #5, #1
   1d670:	6151      	str	r1, [r2, #20]
   1d672:	e799      	b.n	1d5a8 <am_hal_pwrctrl_mcu_memory_config+0x14>
   1d674:	4b1c      	ldr	r3, [pc, #112]	@ (1d6e8 <am_hal_pwrctrl_mcu_memory_config+0x154>)
   1d676:	695a      	ldr	r2, [r3, #20]
   1d678:	f042 0210 	orr.w	r2, r2, #16
   1d67c:	615a      	str	r2, [r3, #20]
   1d67e:	695a      	ldr	r2, [r3, #20]
   1d680:	f042 0220 	orr.w	r2, r2, #32
   1d684:	615a      	str	r2, [r3, #20]
   1d686:	e78f      	b.n	1d5a8 <am_hal_pwrctrl_mcu_memory_config+0x14>
   1d688:	4b17      	ldr	r3, [pc, #92]	@ (1d6e8 <am_hal_pwrctrl_mcu_memory_config+0x154>)
   1d68a:	695a      	ldr	r2, [r3, #20]
   1d68c:	f042 0210 	orr.w	r2, r2, #16
   1d690:	615a      	str	r2, [r3, #20]
   1d692:	695a      	ldr	r2, [r3, #20]
   1d694:	f36f 1245 	bfc	r2, #5, #1
   1d698:	615a      	str	r2, [r3, #20]
   1d69a:	e785      	b.n	1d5a8 <am_hal_pwrctrl_mcu_memory_config+0x14>
   1d69c:	4b12      	ldr	r3, [pc, #72]	@ (1d6e8 <am_hal_pwrctrl_mcu_memory_config+0x154>)
   1d69e:	69da      	ldr	r2, [r3, #28]
   1d6a0:	f36f 0202 	bfc	r2, #0, #3
   1d6a4:	61da      	str	r2, [r3, #28]
   1d6a6:	e79c      	b.n	1d5e2 <am_hal_pwrctrl_mcu_memory_config+0x4e>
   1d6a8:	4b0f      	ldr	r3, [pc, #60]	@ (1d6e8 <am_hal_pwrctrl_mcu_memory_config+0x154>)
   1d6aa:	69da      	ldr	r2, [r3, #28]
   1d6ac:	2104      	movs	r1, #4
   1d6ae:	f361 0202 	bfi	r2, r1, #0, #3
   1d6b2:	61da      	str	r2, [r3, #28]
   1d6b4:	e795      	b.n	1d5e2 <am_hal_pwrctrl_mcu_memory_config+0x4e>
   1d6b6:	4b0c      	ldr	r3, [pc, #48]	@ (1d6e8 <am_hal_pwrctrl_mcu_memory_config+0x154>)
   1d6b8:	69da      	ldr	r2, [r3, #28]
   1d6ba:	2106      	movs	r1, #6
   1d6bc:	f361 0202 	bfi	r2, r1, #0, #3
   1d6c0:	61da      	str	r2, [r3, #28]
   1d6c2:	e78e      	b.n	1d5e2 <am_hal_pwrctrl_mcu_memory_config+0x4e>
   1d6c4:	4a08      	ldr	r2, [pc, #32]	@ (1d6e8 <am_hal_pwrctrl_mcu_memory_config+0x154>)
   1d6c6:	69d3      	ldr	r3, [r2, #28]
   1d6c8:	f043 0307 	orr.w	r3, r3, #7
   1d6cc:	61d3      	str	r3, [r2, #28]
   1d6ce:	e788      	b.n	1d5e2 <am_hal_pwrctrl_mcu_memory_config+0x4e>
   1d6d0:	4a05      	ldr	r2, [pc, #20]	@ (1d6e8 <am_hal_pwrctrl_mcu_memory_config+0x154>)
   1d6d2:	69d3      	ldr	r3, [r2, #28]
   1d6d4:	f043 0308 	orr.w	r3, r3, #8
   1d6d8:	61d3      	str	r3, [r2, #28]
   1d6da:	e7ab      	b.n	1d634 <am_hal_pwrctrl_mcu_memory_config+0xa0>
   1d6dc:	69e3      	ldr	r3, [r4, #28]
   1d6de:	f043 0310 	orr.w	r3, r3, #16
   1d6e2:	61e3      	str	r3, [r4, #28]
   1d6e4:	e79e      	b.n	1d624 <am_hal_pwrctrl_mcu_memory_config+0x90>
   1d6e6:	bf00      	nop
   1d6e8:	40021000 	.word	0x40021000
   1d6ec:	40021018 	.word	0x40021018

0001d6f0 <am_hal_pwrctrl_sram_config>:
   1d6f0:	b570      	push	{r4, r5, r6, lr}
   1d6f2:	4c29      	ldr	r4, [pc, #164]	@ (1d798 <am_hal_pwrctrl_sram_config+0xa8>)
   1d6f4:	7802      	ldrb	r2, [r0, #0]
   1d6f6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
   1d6f8:	4928      	ldr	r1, [pc, #160]	@ (1d79c <am_hal_pwrctrl_sram_config+0xac>)
   1d6fa:	f362 0301 	bfi	r3, r2, #0, #2
   1d6fe:	b082      	sub	sp, #8
   1d700:	6263      	str	r3, [r4, #36]	@ 0x24
   1d702:	2601      	movs	r6, #1
   1d704:	6a63      	ldr	r3, [r4, #36]	@ 0x24
   1d706:	9600      	str	r6, [sp, #0]
   1d708:	4605      	mov	r5, r0
   1d70a:	2203      	movs	r2, #3
   1d70c:	2005      	movs	r0, #5
   1d70e:	f7ff fb3f 	bl	1cd90 <am_hal_delay_us_status_check>
   1d712:	b940      	cbnz	r0, 1d726 <am_hal_pwrctrl_sram_config+0x36>
   1d714:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
   1d716:	6a63      	ldr	r3, [r4, #36]	@ 0x24
   1d718:	f002 0203 	and.w	r2, r2, #3
   1d71c:	f003 0303 	and.w	r3, r3, #3
   1d720:	429a      	cmp	r2, r3
   1d722:	d002      	beq.n	1d72a <am_hal_pwrctrl_sram_config+0x3a>
   1d724:	4630      	mov	r0, r6
   1d726:	b002      	add	sp, #8
   1d728:	bd70      	pop	{r4, r5, r6, pc}
   1d72a:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
   1d72c:	786b      	ldrb	r3, [r5, #1]
   1d72e:	f895 c002 	ldrb.w	ip, [r5, #2]
   1d732:	78ee      	ldrb	r6, [r5, #3]
   1d734:	7929      	ldrb	r1, [r5, #4]
   1d736:	f363 0283 	bfi	r2, r3, #2, #2
   1d73a:	796b      	ldrb	r3, [r5, #5]
   1d73c:	62e2      	str	r2, [r4, #44]	@ 0x2c
   1d73e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
   1d740:	f36c 1287 	bfi	r2, ip, #6, #2
   1d744:	62e2      	str	r2, [r4, #44]	@ 0x2c
   1d746:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
   1d748:	f366 2209 	bfi	r2, r6, #8, #2
   1d74c:	62e2      	str	r2, [r4, #44]	@ 0x2c
   1d74e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
   1d750:	f361 1205 	bfi	r2, r1, #4, #2
   1d754:	62e2      	str	r2, [r4, #44]	@ 0x2c
   1d756:	2b03      	cmp	r3, #3
   1d758:	d8e5      	bhi.n	1d726 <am_hal_pwrctrl_sram_config+0x36>
   1d75a:	e8df f003 	tbb	[pc, r3]
   1d75e:	0f16      	.short	0x0f16
   1d760:	0208      	.short	0x0208
   1d762:	4b0d      	ldr	r3, [pc, #52]	@ (1d798 <am_hal_pwrctrl_sram_config+0xa8>)
   1d764:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   1d766:	f36f 0201 	bfc	r2, #0, #2
   1d76a:	62da      	str	r2, [r3, #44]	@ 0x2c
   1d76c:	e7db      	b.n	1d726 <am_hal_pwrctrl_sram_config+0x36>
   1d76e:	4b0a      	ldr	r3, [pc, #40]	@ (1d798 <am_hal_pwrctrl_sram_config+0xa8>)
   1d770:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   1d772:	2101      	movs	r1, #1
   1d774:	f361 0201 	bfi	r2, r1, #0, #2
   1d778:	62da      	str	r2, [r3, #44]	@ 0x2c
   1d77a:	e7d4      	b.n	1d726 <am_hal_pwrctrl_sram_config+0x36>
   1d77c:	4b06      	ldr	r3, [pc, #24]	@ (1d798 <am_hal_pwrctrl_sram_config+0xa8>)
   1d77e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
   1d780:	2102      	movs	r1, #2
   1d782:	f361 0201 	bfi	r2, r1, #0, #2
   1d786:	62da      	str	r2, [r3, #44]	@ 0x2c
   1d788:	e7cd      	b.n	1d726 <am_hal_pwrctrl_sram_config+0x36>
   1d78a:	4a03      	ldr	r2, [pc, #12]	@ (1d798 <am_hal_pwrctrl_sram_config+0xa8>)
   1d78c:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
   1d78e:	f043 0303 	orr.w	r3, r3, #3
   1d792:	62d3      	str	r3, [r2, #44]	@ 0x2c
   1d794:	e7c7      	b.n	1d726 <am_hal_pwrctrl_sram_config+0x36>
   1d796:	bf00      	nop
   1d798:	40021000 	.word	0x40021000
   1d79c:	40021028 	.word	0x40021028

0001d7a0 <am_hal_pwrctrl_dsp_memory_config>:
   1d7a0:	b530      	push	{r4, r5, lr}
   1d7a2:	460c      	mov	r4, r1
   1d7a4:	b083      	sub	sp, #12
   1d7a6:	2800      	cmp	r0, #0
   1d7a8:	d053      	beq.n	1d852 <am_hal_pwrctrl_dsp_memory_config+0xb2>
   1d7aa:	2801      	cmp	r0, #1
   1d7ac:	d14e      	bne.n	1d84c <am_hal_pwrctrl_dsp_memory_config+0xac>
   1d7ae:	780b      	ldrb	r3, [r1, #0]
   1d7b0:	4a6b      	ldr	r2, [pc, #428]	@ (1d960 <am_hal_pwrctrl_dsp_memory_config+0x1c0>)
   1d7b2:	2b00      	cmp	r3, #0
   1d7b4:	f000 809d 	beq.w	1d8f2 <am_hal_pwrctrl_dsp_memory_config+0x152>
   1d7b8:	6f93      	ldr	r3, [r2, #120]	@ 0x78
   1d7ba:	f043 0302 	orr.w	r3, r3, #2
   1d7be:	6793      	str	r3, [r2, #120]	@ 0x78
   1d7c0:	78a3      	ldrb	r3, [r4, #2]
   1d7c2:	4a67      	ldr	r2, [pc, #412]	@ (1d960 <am_hal_pwrctrl_dsp_memory_config+0x1c0>)
   1d7c4:	2b00      	cmp	r3, #0
   1d7c6:	f000 809d 	beq.w	1d904 <am_hal_pwrctrl_dsp_memory_config+0x164>
   1d7ca:	6f93      	ldr	r3, [r2, #120]	@ 0x78
   1d7cc:	f043 0301 	orr.w	r3, r3, #1
   1d7d0:	6793      	str	r3, [r2, #120]	@ 0x78
   1d7d2:	4d63      	ldr	r5, [pc, #396]	@ (1d960 <am_hal_pwrctrl_dsp_memory_config+0x1c0>)
   1d7d4:	4963      	ldr	r1, [pc, #396]	@ (1d964 <am_hal_pwrctrl_dsp_memory_config+0x1c4>)
   1d7d6:	6fab      	ldr	r3, [r5, #120]	@ 0x78
   1d7d8:	2201      	movs	r2, #1
   1d7da:	9200      	str	r2, [sp, #0]
   1d7dc:	2005      	movs	r0, #5
   1d7de:	2203      	movs	r2, #3
   1d7e0:	f7ff fad6 	bl	1cd90 <am_hal_delay_us_status_check>
   1d7e4:	bb98      	cbnz	r0, 1d84e <am_hal_pwrctrl_dsp_memory_config+0xae>
   1d7e6:	6fea      	ldr	r2, [r5, #124]	@ 0x7c
   1d7e8:	6fab      	ldr	r3, [r5, #120]	@ 0x78
   1d7ea:	f3c2 0240 	ubfx	r2, r2, #1, #1
   1d7ee:	f3c3 0340 	ubfx	r3, r3, #1, #1
   1d7f2:	429a      	cmp	r2, r3
   1d7f4:	f040 808b 	bne.w	1d90e <am_hal_pwrctrl_dsp_memory_config+0x16e>
   1d7f8:	6fea      	ldr	r2, [r5, #124]	@ 0x7c
   1d7fa:	6fab      	ldr	r3, [r5, #120]	@ 0x78
   1d7fc:	f002 0201 	and.w	r2, r2, #1
   1d800:	f003 0301 	and.w	r3, r3, #1
   1d804:	429a      	cmp	r2, r3
   1d806:	f040 8082 	bne.w	1d90e <am_hal_pwrctrl_dsp_memory_config+0x16e>
   1d80a:	7863      	ldrb	r3, [r4, #1]
   1d80c:	2b00      	cmp	r3, #0
   1d80e:	f040 8081 	bne.w	1d914 <am_hal_pwrctrl_dsp_memory_config+0x174>
   1d812:	f8d5 3080 	ldr.w	r3, [r5, #128]	@ 0x80
   1d816:	f043 0304 	orr.w	r3, r3, #4
   1d81a:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
   1d81e:	78e3      	ldrb	r3, [r4, #3]
   1d820:	4a4f      	ldr	r2, [pc, #316]	@ (1d960 <am_hal_pwrctrl_dsp_memory_config+0x1c0>)
   1d822:	2b00      	cmp	r3, #0
   1d824:	f000 8095 	beq.w	1d952 <am_hal_pwrctrl_dsp_memory_config+0x1b2>
   1d828:	f8d2 3080 	ldr.w	r3, [r2, #128]	@ 0x80
   1d82c:	f043 0302 	orr.w	r3, r3, #2
   1d830:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
   1d834:	7923      	ldrb	r3, [r4, #4]
   1d836:	2b00      	cmp	r3, #0
   1d838:	f000 8083 	beq.w	1d942 <am_hal_pwrctrl_dsp_memory_config+0x1a2>
   1d83c:	4b48      	ldr	r3, [pc, #288]	@ (1d960 <am_hal_pwrctrl_dsp_memory_config+0x1c0>)
   1d83e:	f8d3 2080 	ldr.w	r2, [r3, #128]	@ 0x80
   1d842:	f36f 0200 	bfc	r2, #0, #1
   1d846:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
   1d84a:	e000      	b.n	1d84e <am_hal_pwrctrl_dsp_memory_config+0xae>
   1d84c:	2000      	movs	r0, #0
   1d84e:	b003      	add	sp, #12
   1d850:	bd30      	pop	{r4, r5, pc}
   1d852:	780b      	ldrb	r3, [r1, #0]
   1d854:	4a42      	ldr	r2, [pc, #264]	@ (1d960 <am_hal_pwrctrl_dsp_memory_config+0x1c0>)
   1d856:	2b00      	cmp	r3, #0
   1d858:	d13e      	bne.n	1d8d8 <am_hal_pwrctrl_dsp_memory_config+0x138>
   1d85a:	6d91      	ldr	r1, [r2, #88]	@ 0x58
   1d85c:	f363 0141 	bfi	r1, r3, #1, #1
   1d860:	6591      	str	r1, [r2, #88]	@ 0x58
   1d862:	78a3      	ldrb	r3, [r4, #2]
   1d864:	4a3e      	ldr	r2, [pc, #248]	@ (1d960 <am_hal_pwrctrl_dsp_memory_config+0x1c0>)
   1d866:	2b00      	cmp	r3, #0
   1d868:	d03e      	beq.n	1d8e8 <am_hal_pwrctrl_dsp_memory_config+0x148>
   1d86a:	6d93      	ldr	r3, [r2, #88]	@ 0x58
   1d86c:	f043 0301 	orr.w	r3, r3, #1
   1d870:	6593      	str	r3, [r2, #88]	@ 0x58
   1d872:	4d3b      	ldr	r5, [pc, #236]	@ (1d960 <am_hal_pwrctrl_dsp_memory_config+0x1c0>)
   1d874:	493c      	ldr	r1, [pc, #240]	@ (1d968 <am_hal_pwrctrl_dsp_memory_config+0x1c8>)
   1d876:	6dab      	ldr	r3, [r5, #88]	@ 0x58
   1d878:	2201      	movs	r2, #1
   1d87a:	9200      	str	r2, [sp, #0]
   1d87c:	2005      	movs	r0, #5
   1d87e:	2203      	movs	r2, #3
   1d880:	f7ff fa86 	bl	1cd90 <am_hal_delay_us_status_check>
   1d884:	2800      	cmp	r0, #0
   1d886:	d1e2      	bne.n	1d84e <am_hal_pwrctrl_dsp_memory_config+0xae>
   1d888:	6dea      	ldr	r2, [r5, #92]	@ 0x5c
   1d88a:	6dab      	ldr	r3, [r5, #88]	@ 0x58
   1d88c:	f3c2 0240 	ubfx	r2, r2, #1, #1
   1d890:	f3c3 0340 	ubfx	r3, r3, #1, #1
   1d894:	429a      	cmp	r2, r3
   1d896:	d13a      	bne.n	1d90e <am_hal_pwrctrl_dsp_memory_config+0x16e>
   1d898:	6dea      	ldr	r2, [r5, #92]	@ 0x5c
   1d89a:	6dab      	ldr	r3, [r5, #88]	@ 0x58
   1d89c:	f002 0201 	and.w	r2, r2, #1
   1d8a0:	f003 0301 	and.w	r3, r3, #1
   1d8a4:	429a      	cmp	r2, r3
   1d8a6:	d132      	bne.n	1d90e <am_hal_pwrctrl_dsp_memory_config+0x16e>
   1d8a8:	7863      	ldrb	r3, [r4, #1]
   1d8aa:	2b00      	cmp	r3, #0
   1d8ac:	d139      	bne.n	1d922 <am_hal_pwrctrl_dsp_memory_config+0x182>
   1d8ae:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
   1d8b0:	f043 0304 	orr.w	r3, r3, #4
   1d8b4:	662b      	str	r3, [r5, #96]	@ 0x60
   1d8b6:	78e3      	ldrb	r3, [r4, #3]
   1d8b8:	4a29      	ldr	r2, [pc, #164]	@ (1d960 <am_hal_pwrctrl_dsp_memory_config+0x1c0>)
   1d8ba:	2b00      	cmp	r3, #0
   1d8bc:	d03c      	beq.n	1d938 <am_hal_pwrctrl_dsp_memory_config+0x198>
   1d8be:	6e13      	ldr	r3, [r2, #96]	@ 0x60
   1d8c0:	f043 0302 	orr.w	r3, r3, #2
   1d8c4:	6613      	str	r3, [r2, #96]	@ 0x60
   1d8c6:	7923      	ldrb	r3, [r4, #4]
   1d8c8:	2b00      	cmp	r3, #0
   1d8ca:	d02f      	beq.n	1d92c <am_hal_pwrctrl_dsp_memory_config+0x18c>
   1d8cc:	4b24      	ldr	r3, [pc, #144]	@ (1d960 <am_hal_pwrctrl_dsp_memory_config+0x1c0>)
   1d8ce:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
   1d8d0:	f36f 0200 	bfc	r2, #0, #1
   1d8d4:	661a      	str	r2, [r3, #96]	@ 0x60
   1d8d6:	e7ba      	b.n	1d84e <am_hal_pwrctrl_dsp_memory_config+0xae>
   1d8d8:	6d93      	ldr	r3, [r2, #88]	@ 0x58
   1d8da:	f043 0302 	orr.w	r3, r3, #2
   1d8de:	6593      	str	r3, [r2, #88]	@ 0x58
   1d8e0:	78a3      	ldrb	r3, [r4, #2]
   1d8e2:	4a1f      	ldr	r2, [pc, #124]	@ (1d960 <am_hal_pwrctrl_dsp_memory_config+0x1c0>)
   1d8e4:	2b00      	cmp	r3, #0
   1d8e6:	d1c0      	bne.n	1d86a <am_hal_pwrctrl_dsp_memory_config+0xca>
   1d8e8:	6d91      	ldr	r1, [r2, #88]	@ 0x58
   1d8ea:	f363 0100 	bfi	r1, r3, #0, #1
   1d8ee:	6591      	str	r1, [r2, #88]	@ 0x58
   1d8f0:	e7bf      	b.n	1d872 <am_hal_pwrctrl_dsp_memory_config+0xd2>
   1d8f2:	6f91      	ldr	r1, [r2, #120]	@ 0x78
   1d8f4:	f363 0141 	bfi	r1, r3, #1, #1
   1d8f8:	6791      	str	r1, [r2, #120]	@ 0x78
   1d8fa:	78a3      	ldrb	r3, [r4, #2]
   1d8fc:	4a18      	ldr	r2, [pc, #96]	@ (1d960 <am_hal_pwrctrl_dsp_memory_config+0x1c0>)
   1d8fe:	2b00      	cmp	r3, #0
   1d900:	f47f af63 	bne.w	1d7ca <am_hal_pwrctrl_dsp_memory_config+0x2a>
   1d904:	6f91      	ldr	r1, [r2, #120]	@ 0x78
   1d906:	f363 0100 	bfi	r1, r3, #0, #1
   1d90a:	6791      	str	r1, [r2, #120]	@ 0x78
   1d90c:	e761      	b.n	1d7d2 <am_hal_pwrctrl_dsp_memory_config+0x32>
   1d90e:	2001      	movs	r0, #1
   1d910:	b003      	add	sp, #12
   1d912:	bd30      	pop	{r4, r5, pc}
   1d914:	f8d5 3080 	ldr.w	r3, [r5, #128]	@ 0x80
   1d918:	f360 0382 	bfi	r3, r0, #2, #1
   1d91c:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
   1d920:	e77d      	b.n	1d81e <am_hal_pwrctrl_dsp_memory_config+0x7e>
   1d922:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
   1d924:	f360 0382 	bfi	r3, r0, #2, #1
   1d928:	662b      	str	r3, [r5, #96]	@ 0x60
   1d92a:	e7c4      	b.n	1d8b6 <am_hal_pwrctrl_dsp_memory_config+0x116>
   1d92c:	4a0c      	ldr	r2, [pc, #48]	@ (1d960 <am_hal_pwrctrl_dsp_memory_config+0x1c0>)
   1d92e:	6e13      	ldr	r3, [r2, #96]	@ 0x60
   1d930:	f043 0301 	orr.w	r3, r3, #1
   1d934:	6613      	str	r3, [r2, #96]	@ 0x60
   1d936:	e78a      	b.n	1d84e <am_hal_pwrctrl_dsp_memory_config+0xae>
   1d938:	6e11      	ldr	r1, [r2, #96]	@ 0x60
   1d93a:	f363 0141 	bfi	r1, r3, #1, #1
   1d93e:	6611      	str	r1, [r2, #96]	@ 0x60
   1d940:	e7c1      	b.n	1d8c6 <am_hal_pwrctrl_dsp_memory_config+0x126>
   1d942:	4a07      	ldr	r2, [pc, #28]	@ (1d960 <am_hal_pwrctrl_dsp_memory_config+0x1c0>)
   1d944:	f8d2 3080 	ldr.w	r3, [r2, #128]	@ 0x80
   1d948:	f043 0301 	orr.w	r3, r3, #1
   1d94c:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
   1d950:	e77d      	b.n	1d84e <am_hal_pwrctrl_dsp_memory_config+0xae>
   1d952:	f8d2 1080 	ldr.w	r1, [r2, #128]	@ 0x80
   1d956:	f363 0141 	bfi	r1, r3, #1, #1
   1d95a:	f8c2 1080 	str.w	r1, [r2, #128]	@ 0x80
   1d95e:	e769      	b.n	1d834 <am_hal_pwrctrl_dsp_memory_config+0x94>
   1d960:	40021000 	.word	0x40021000
   1d964:	4002107c 	.word	0x4002107c
   1d968:	4002105c 	.word	0x4002105c

0001d96c <am_hal_pwrctrl_periph_enable>:
   1d96c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d970:	2821      	cmp	r0, #33	@ 0x21
   1d972:	b089      	sub	sp, #36	@ 0x24
   1d974:	d831      	bhi.n	1d9da <am_hal_pwrctrl_periph_enable+0x6e>
   1d976:	4b5e      	ldr	r3, [pc, #376]	@ (1daf0 <am_hal_pwrctrl_periph_enable+0x184>)
   1d978:	0101      	lsls	r1, r0, #4
   1d97a:	eb03 1200 	add.w	r2, r3, r0, lsl #4
   1d97e:	585f      	ldr	r7, [r3, r1]
   1d980:	f8d2 8004 	ldr.w	r8, [r2, #4]
   1d984:	6839      	ldr	r1, [r7, #0]
   1d986:	ea11 0f08 	tst.w	r1, r8
   1d98a:	4604      	mov	r4, r0
   1d98c:	d120      	bne.n	1d9d0 <am_hal_pwrctrl_periph_enable+0x64>
   1d98e:	2814      	cmp	r0, #20
   1d990:	e9d2 6502 	ldrd	r6, r5, [r2, #8]
   1d994:	d026      	beq.n	1d9e4 <am_hal_pwrctrl_periph_enable+0x78>
   1d996:	f7fe fadd 	bl	1bf54 <am_hal_interrupt_master_disable>
   1d99a:	9005      	str	r0, [sp, #20]
   1d99c:	683b      	ldr	r3, [r7, #0]
   1d99e:	ea43 0308 	orr.w	r3, r3, r8
   1d9a2:	603b      	str	r3, [r7, #0]
   1d9a4:	9805      	ldr	r0, [sp, #20]
   1d9a6:	f7fe fad9 	bl	1bf5c <am_hal_interrupt_master_set>
   1d9aa:	2301      	movs	r3, #1
   1d9ac:	9300      	str	r3, [sp, #0]
   1d9ae:	462a      	mov	r2, r5
   1d9b0:	462b      	mov	r3, r5
   1d9b2:	4631      	mov	r1, r6
   1d9b4:	2005      	movs	r0, #5
   1d9b6:	f7ff f9eb 	bl	1cd90 <am_hal_delay_us_status_check>
   1d9ba:	4604      	mov	r4, r0
   1d9bc:	b920      	cbnz	r0, 1d9c8 <am_hal_pwrctrl_periph_enable+0x5c>
   1d9be:	6833      	ldr	r3, [r6, #0]
   1d9c0:	422b      	tst	r3, r5
   1d9c2:	bf0c      	ite	eq
   1d9c4:	2401      	moveq	r4, #1
   1d9c6:	2400      	movne	r4, #0
   1d9c8:	4620      	mov	r0, r4
   1d9ca:	b009      	add	sp, #36	@ 0x24
   1d9cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d9d0:	2400      	movs	r4, #0
   1d9d2:	4620      	mov	r0, r4
   1d9d4:	b009      	add	sp, #36	@ 0x24
   1d9d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d9da:	2406      	movs	r4, #6
   1d9dc:	4620      	mov	r0, r4
   1d9de:	b009      	add	sp, #36	@ 0x24
   1d9e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d9e4:	f8df 9120 	ldr.w	r9, [pc, #288]	@ 1db08 <am_hal_pwrctrl_periph_enable+0x19c>
   1d9e8:	f8d9 a000 	ldr.w	sl, [r9]
   1d9ec:	f1ba 0f00 	cmp.w	sl, #0
   1d9f0:	d02f      	beq.n	1da52 <am_hal_pwrctrl_periph_enable+0xe6>
   1d9f2:	f8df b108 	ldr.w	fp, [pc, #264]	@ 1dafc <am_hal_pwrctrl_periph_enable+0x190>
   1d9f6:	f89b 3000 	ldrb.w	r3, [fp]
   1d9fa:	bb53      	cbnz	r3, 1da52 <am_hal_pwrctrl_periph_enable+0xe6>
   1d9fc:	f7fe faaa 	bl	1bf54 <am_hal_interrupt_master_disable>
   1da00:	4a3c      	ldr	r2, [pc, #240]	@ (1daf4 <am_hal_pwrctrl_periph_enable+0x188>)
   1da02:	493d      	ldr	r1, [pc, #244]	@ (1daf8 <am_hal_pwrctrl_periph_enable+0x18c>)
   1da04:	6813      	ldr	r3, [r2, #0]
   1da06:	9006      	str	r0, [sp, #24]
   1da08:	4453      	add	r3, sl
   1da0a:	6013      	str	r3, [r2, #0]
   1da0c:	f383 0006 	usat	r0, #6, r3
   1da10:	680b      	ldr	r3, [r1, #0]
   1da12:	2201      	movs	r2, #1
   1da14:	4453      	add	r3, sl
   1da16:	f8df a0e8 	ldr.w	sl, [pc, #232]	@ 1db00 <am_hal_pwrctrl_periph_enable+0x194>
   1da1a:	600b      	str	r3, [r1, #0]
   1da1c:	9303      	str	r3, [sp, #12]
   1da1e:	f88b 2000 	strb.w	r2, [fp]
   1da22:	f8da 236c 	ldr.w	r2, [sl, #876]	@ 0x36c
   1da26:	f360 5219 	bfi	r2, r0, #20, #6
   1da2a:	f8ca 236c 	str.w	r2, [sl, #876]	@ 0x36c
   1da2e:	4620      	mov	r0, r4
   1da30:	f7ff f96a 	bl	1cd08 <am_hal_delay_us>
   1da34:	9b03      	ldr	r3, [sp, #12]
   1da36:	f8da 2088 	ldr.w	r2, [sl, #136]	@ 0x88
   1da3a:	f383 0306 	usat	r3, #6, r3
   1da3e:	f363 0205 	bfi	r2, r3, #0, #6
   1da42:	f8ca 2088 	str.w	r2, [sl, #136]	@ 0x88
   1da46:	9806      	ldr	r0, [sp, #24]
   1da48:	f7fe fa88 	bl	1bf5c <am_hal_interrupt_master_set>
   1da4c:	4620      	mov	r0, r4
   1da4e:	f7ff f95b 	bl	1cd08 <am_hal_delay_us>
   1da52:	f7fe fa7f 	bl	1bf54 <am_hal_interrupt_master_disable>
   1da56:	9005      	str	r0, [sp, #20]
   1da58:	683b      	ldr	r3, [r7, #0]
   1da5a:	ea48 0303 	orr.w	r3, r8, r3
   1da5e:	603b      	str	r3, [r7, #0]
   1da60:	9805      	ldr	r0, [sp, #20]
   1da62:	f7fe fa7b 	bl	1bf5c <am_hal_interrupt_master_set>
   1da66:	2301      	movs	r3, #1
   1da68:	9300      	str	r3, [sp, #0]
   1da6a:	462a      	mov	r2, r5
   1da6c:	462b      	mov	r3, r5
   1da6e:	4631      	mov	r1, r6
   1da70:	2005      	movs	r0, #5
   1da72:	f7ff f98d 	bl	1cd90 <am_hal_delay_us_status_check>
   1da76:	4604      	mov	r4, r0
   1da78:	b378      	cbz	r0, 1dada <am_hal_pwrctrl_periph_enable+0x16e>
   1da7a:	f8d9 5000 	ldr.w	r5, [r9]
   1da7e:	2d00      	cmp	r5, #0
   1da80:	d0a2      	beq.n	1d9c8 <am_hal_pwrctrl_periph_enable+0x5c>
   1da82:	4e1e      	ldr	r6, [pc, #120]	@ (1dafc <am_hal_pwrctrl_periph_enable+0x190>)
   1da84:	7833      	ldrb	r3, [r6, #0]
   1da86:	2b00      	cmp	r3, #0
   1da88:	d09e      	beq.n	1d9c8 <am_hal_pwrctrl_periph_enable+0x5c>
   1da8a:	f7fe fa63 	bl	1bf54 <am_hal_interrupt_master_disable>
   1da8e:	4b19      	ldr	r3, [pc, #100]	@ (1daf4 <am_hal_pwrctrl_periph_enable+0x188>)
   1da90:	4f1b      	ldr	r7, [pc, #108]	@ (1db00 <am_hal_pwrctrl_periph_enable+0x194>)
   1da92:	9007      	str	r0, [sp, #28]
   1da94:	2200      	movs	r2, #0
   1da96:	7032      	strb	r2, [r6, #0]
   1da98:	681e      	ldr	r6, [r3, #0]
   1da9a:	4a17      	ldr	r2, [pc, #92]	@ (1daf8 <am_hal_pwrctrl_periph_enable+0x18c>)
   1da9c:	1b76      	subs	r6, r6, r5
   1da9e:	601e      	str	r6, [r3, #0]
   1daa0:	6813      	ldr	r3, [r2, #0]
   1daa2:	1b5d      	subs	r5, r3, r5
   1daa4:	6015      	str	r5, [r2, #0]
   1daa6:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
   1daaa:	f385 0506 	usat	r5, #6, r5
   1daae:	f365 0305 	bfi	r3, r5, #0, #6
   1dab2:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
   1dab6:	2014      	movs	r0, #20
   1dab8:	f7ff f926 	bl	1cd08 <am_hal_delay_us>
   1dabc:	f8d7 336c 	ldr.w	r3, [r7, #876]	@ 0x36c
   1dac0:	f386 0606 	usat	r6, #6, r6
   1dac4:	f366 5319 	bfi	r3, r6, #20, #6
   1dac8:	f8c7 336c 	str.w	r3, [r7, #876]	@ 0x36c
   1dacc:	9807      	ldr	r0, [sp, #28]
   1dace:	f7fe fa45 	bl	1bf5c <am_hal_interrupt_master_set>
   1dad2:	2014      	movs	r0, #20
   1dad4:	f7ff f918 	bl	1cd08 <am_hal_delay_us>
   1dad8:	e776      	b.n	1d9c8 <am_hal_pwrctrl_periph_enable+0x5c>
   1dada:	2301      	movs	r3, #1
   1dadc:	4909      	ldr	r1, [pc, #36]	@ (1db04 <am_hal_pwrctrl_periph_enable+0x198>)
   1dade:	461a      	mov	r2, r3
   1dae0:	2064      	movs	r0, #100	@ 0x64
   1dae2:	f7ff f929 	bl	1cd38 <am_hal_delay_us_status_change>
   1dae6:	4604      	mov	r4, r0
   1dae8:	2800      	cmp	r0, #0
   1daea:	f43f af68 	beq.w	1d9be <am_hal_pwrctrl_periph_enable+0x52>
   1daee:	e76b      	b.n	1d9c8 <am_hal_pwrctrl_periph_enable+0x5c>
   1daf0:	0002bd1c 	.word	0x0002bd1c
   1daf4:	10008504 	.word	0x10008504
   1daf8:	10008500 	.word	0x10008500
   1dafc:	100084fc 	.word	0x100084fc
   1db00:	40020000 	.word	0x40020000
   1db04:	400c1f10 	.word	0x400c1f10
   1db08:	10008524 	.word	0x10008524

0001db0c <am_hal_pwrctrl_periph_disable>:
   1db0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1db10:	2821      	cmp	r0, #33	@ 0x21
   1db12:	b085      	sub	sp, #20
   1db14:	d82b      	bhi.n	1db6e <am_hal_pwrctrl_periph_disable+0x62>
   1db16:	4b55      	ldr	r3, [pc, #340]	@ (1dc6c <am_hal_pwrctrl_periph_disable+0x160>)
   1db18:	0101      	lsls	r1, r0, #4
   1db1a:	eb03 1200 	add.w	r2, r3, r0, lsl #4
   1db1e:	585d      	ldr	r5, [r3, r1]
   1db20:	6857      	ldr	r7, [r2, #4]
   1db22:	682b      	ldr	r3, [r5, #0]
   1db24:	423b      	tst	r3, r7
   1db26:	4604      	mov	r4, r0
   1db28:	d01c      	beq.n	1db64 <am_hal_pwrctrl_periph_disable+0x58>
   1db2a:	2814      	cmp	r0, #20
   1db2c:	e9d2 9802 	ldrd	r9, r8, [r2, #8]
   1db30:	d105      	bne.n	1db3e <am_hal_pwrctrl_periph_disable+0x32>
   1db32:	f8df a150 	ldr.w	sl, [pc, #336]	@ 1dc84 <am_hal_pwrctrl_periph_disable+0x178>
   1db36:	f8da 3fe0 	ldr.w	r3, [sl, #4064]	@ 0xfe0
   1db3a:	2bc0      	cmp	r3, #192	@ 0xc0
   1db3c:	d037      	beq.n	1dbae <am_hal_pwrctrl_periph_disable+0xa2>
   1db3e:	f7fe fa09 	bl	1bf54 <am_hal_interrupt_master_disable>
   1db42:	9002      	str	r0, [sp, #8]
   1db44:	682b      	ldr	r3, [r5, #0]
   1db46:	ea23 0707 	bic.w	r7, r3, r7
   1db4a:	602f      	str	r7, [r5, #0]
   1db4c:	9802      	ldr	r0, [sp, #8]
   1db4e:	f7fe fa05 	bl	1bf5c <am_hal_interrupt_master_set>
   1db52:	2300      	movs	r3, #0
   1db54:	9300      	str	r3, [sp, #0]
   1db56:	4642      	mov	r2, r8
   1db58:	4643      	mov	r3, r8
   1db5a:	4649      	mov	r1, r9
   1db5c:	2005      	movs	r0, #5
   1db5e:	f7ff f917 	bl	1cd90 <am_hal_delay_us_status_check>
   1db62:	b948      	cbnz	r0, 1db78 <am_hal_pwrctrl_periph_disable+0x6c>
   1db64:	2600      	movs	r6, #0
   1db66:	4630      	mov	r0, r6
   1db68:	b005      	add	sp, #20
   1db6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1db6e:	2606      	movs	r6, #6
   1db70:	4630      	mov	r0, r6
   1db72:	b005      	add	sp, #20
   1db74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1db78:	f5b8 7ff0 	cmp.w	r8, #480	@ 0x1e0
   1db7c:	d070      	beq.n	1dc60 <am_hal_pwrctrl_periph_disable+0x154>
   1db7e:	d90b      	bls.n	1db98 <am_hal_pwrctrl_periph_disable+0x8c>
   1db80:	f5b8 5ff0 	cmp.w	r8, #7680	@ 0x1e00
   1db84:	d067      	beq.n	1dc56 <am_hal_pwrctrl_periph_disable+0x14a>
   1db86:	f5b8 3fe0 	cmp.w	r8, #114688	@ 0x1c000
   1db8a:	d1eb      	bne.n	1db64 <am_hal_pwrctrl_periph_disable+0x58>
   1db8c:	682b      	ldr	r3, [r5, #0]
   1db8e:	f413 3fe0 	tst.w	r3, #114688	@ 0x1c000
   1db92:	d0e7      	beq.n	1db64 <am_hal_pwrctrl_periph_disable+0x58>
   1db94:	682b      	ldr	r3, [r5, #0]
   1db96:	e7e5      	b.n	1db64 <am_hal_pwrctrl_periph_disable+0x58>
   1db98:	f1b8 0f1e 	cmp.w	r8, #30
   1db9c:	d056      	beq.n	1dc4c <am_hal_pwrctrl_periph_disable+0x140>
   1db9e:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
   1dba2:	d1df      	bne.n	1db64 <am_hal_pwrctrl_periph_disable+0x58>
   1dba4:	682b      	ldr	r3, [r5, #0]
   1dba6:	b2db      	uxtb	r3, r3
   1dba8:	2b00      	cmp	r3, #0
   1dbaa:	d0db      	beq.n	1db64 <am_hal_pwrctrl_periph_disable+0x58>
   1dbac:	e7f2      	b.n	1db94 <am_hal_pwrctrl_periph_disable+0x88>
   1dbae:	2301      	movs	r3, #1
   1dbb0:	492f      	ldr	r1, [pc, #188]	@ (1dc70 <am_hal_pwrctrl_periph_disable+0x164>)
   1dbb2:	461a      	mov	r2, r3
   1dbb4:	2064      	movs	r0, #100	@ 0x64
   1dbb6:	f7ff f8bf 	bl	1cd38 <am_hal_delay_us_status_change>
   1dbba:	4606      	mov	r6, r0
   1dbbc:	2800      	cmp	r0, #0
   1dbbe:	d1d2      	bne.n	1db66 <am_hal_pwrctrl_periph_disable+0x5a>
   1dbc0:	2301      	movs	r3, #1
   1dbc2:	492c      	ldr	r1, [pc, #176]	@ (1dc74 <am_hal_pwrctrl_periph_disable+0x168>)
   1dbc4:	461a      	mov	r2, r3
   1dbc6:	2064      	movs	r0, #100	@ 0x64
   1dbc8:	f7ff f8b6 	bl	1cd38 <am_hal_delay_us_status_change>
   1dbcc:	4606      	mov	r6, r0
   1dbce:	2800      	cmp	r0, #0
   1dbd0:	d1c9      	bne.n	1db66 <am_hal_pwrctrl_periph_disable+0x5a>
   1dbd2:	f8da 3a80 	ldr.w	r3, [sl, #2688]	@ 0xa80
   1dbd6:	f043 0301 	orr.w	r3, r3, #1
   1dbda:	f8ca 3a80 	str.w	r3, [sl, #2688]	@ 0xa80
   1dbde:	4b26      	ldr	r3, [pc, #152]	@ (1dc78 <am_hal_pwrctrl_periph_disable+0x16c>)
   1dbe0:	f8d3 a000 	ldr.w	sl, [r3]
   1dbe4:	f1ba 0f00 	cmp.w	sl, #0
   1dbe8:	d0a9      	beq.n	1db3e <am_hal_pwrctrl_periph_disable+0x32>
   1dbea:	f8df b09c 	ldr.w	fp, [pc, #156]	@ 1dc88 <am_hal_pwrctrl_periph_disable+0x17c>
   1dbee:	f89b 3000 	ldrb.w	r3, [fp]
   1dbf2:	2b00      	cmp	r3, #0
   1dbf4:	d0a3      	beq.n	1db3e <am_hal_pwrctrl_periph_disable+0x32>
   1dbf6:	f7fe f9ad 	bl	1bf54 <am_hal_interrupt_master_disable>
   1dbfa:	4b20      	ldr	r3, [pc, #128]	@ (1dc7c <am_hal_pwrctrl_periph_disable+0x170>)
   1dbfc:	f88b 6000 	strb.w	r6, [fp]
   1dc00:	681e      	ldr	r6, [r3, #0]
   1dc02:	4a1f      	ldr	r2, [pc, #124]	@ (1dc80 <am_hal_pwrctrl_periph_disable+0x174>)
   1dc04:	9003      	str	r0, [sp, #12]
   1dc06:	eba6 060a 	sub.w	r6, r6, sl
   1dc0a:	601e      	str	r6, [r3, #0]
   1dc0c:	6813      	ldr	r3, [r2, #0]
   1dc0e:	eba3 030a 	sub.w	r3, r3, sl
   1dc12:	f8df a078 	ldr.w	sl, [pc, #120]	@ 1dc8c <am_hal_pwrctrl_periph_disable+0x180>
   1dc16:	6013      	str	r3, [r2, #0]
   1dc18:	f8da 2088 	ldr.w	r2, [sl, #136]	@ 0x88
   1dc1c:	f383 0306 	usat	r3, #6, r3
   1dc20:	f363 0205 	bfi	r2, r3, #0, #6
   1dc24:	4620      	mov	r0, r4
   1dc26:	f8ca 2088 	str.w	r2, [sl, #136]	@ 0x88
   1dc2a:	f7ff f86d 	bl	1cd08 <am_hal_delay_us>
   1dc2e:	f8da 336c 	ldr.w	r3, [sl, #876]	@ 0x36c
   1dc32:	f386 0606 	usat	r6, #6, r6
   1dc36:	f366 5319 	bfi	r3, r6, #20, #6
   1dc3a:	f8ca 336c 	str.w	r3, [sl, #876]	@ 0x36c
   1dc3e:	9803      	ldr	r0, [sp, #12]
   1dc40:	f7fe f98c 	bl	1bf5c <am_hal_interrupt_master_set>
   1dc44:	4620      	mov	r0, r4
   1dc46:	f7ff f85f 	bl	1cd08 <am_hal_delay_us>
   1dc4a:	e778      	b.n	1db3e <am_hal_pwrctrl_periph_disable+0x32>
   1dc4c:	682b      	ldr	r3, [r5, #0]
   1dc4e:	f013 0f1e 	tst.w	r3, #30
   1dc52:	d087      	beq.n	1db64 <am_hal_pwrctrl_periph_disable+0x58>
   1dc54:	e79e      	b.n	1db94 <am_hal_pwrctrl_periph_disable+0x88>
   1dc56:	682b      	ldr	r3, [r5, #0]
   1dc58:	f413 5ff0 	tst.w	r3, #7680	@ 0x1e00
   1dc5c:	d082      	beq.n	1db64 <am_hal_pwrctrl_periph_disable+0x58>
   1dc5e:	e799      	b.n	1db94 <am_hal_pwrctrl_periph_disable+0x88>
   1dc60:	682b      	ldr	r3, [r5, #0]
   1dc62:	f413 7ff0 	tst.w	r3, #480	@ 0x1e0
   1dc66:	f43f af7d 	beq.w	1db64 <am_hal_pwrctrl_periph_disable+0x58>
   1dc6a:	e793      	b.n	1db94 <am_hal_pwrctrl_periph_disable+0x88>
   1dc6c:	0002bd1c 	.word	0x0002bd1c
   1dc70:	400c0a7c 	.word	0x400c0a7c
   1dc74:	400c1f10 	.word	0x400c1f10
   1dc78:	10008524 	.word	0x10008524
   1dc7c:	10008504 	.word	0x10008504
   1dc80:	10008500 	.word	0x10008500
   1dc84:	400c0000 	.word	0x400c0000
   1dc88:	100084fc 	.word	0x100084fc
   1dc8c:	40020000 	.word	0x40020000

0001dc90 <am_hal_pwrctrl_low_power_init>:
   1dc90:	b530      	push	{r4, r5, lr}
   1dc92:	4c54      	ldr	r4, [pc, #336]	@ (1dde4 <am_hal_pwrctrl_low_power_init+0x154>)
   1dc94:	4a54      	ldr	r2, [pc, #336]	@ (1dde8 <am_hal_pwrctrl_low_power_init+0x158>)
   1dc96:	68a3      	ldr	r3, [r4, #8]
   1dc98:	4854      	ldr	r0, [pc, #336]	@ (1ddec <am_hal_pwrctrl_low_power_init+0x15c>)
   1dc9a:	b083      	sub	sp, #12
   1dc9c:	f04f 2540 	mov.w	r5, #1073758208	@ 0x40004000
   1dca0:	f3c3 5300 	ubfx	r3, r3, #20, #1
   1dca4:	7013      	strb	r3, [r2, #0]
   1dca6:	f7ff fc75 	bl	1d594 <am_hal_pwrctrl_mcu_memory_config>
   1dcaa:	4851      	ldr	r0, [pc, #324]	@ (1ddf0 <am_hal_pwrctrl_low_power_init+0x160>)
   1dcac:	f7ff fd20 	bl	1d6f0 <am_hal_pwrctrl_sram_config>
   1dcb0:	6c6a      	ldr	r2, [r5, #68]	@ 0x44
   1dcb2:	4850      	ldr	r0, [pc, #320]	@ (1ddf4 <am_hal_pwrctrl_low_power_init+0x164>)
   1dcb4:	2300      	movs	r3, #0
   1dcb6:	f442 027c 	orr.w	r2, r2, #16515072	@ 0xfc0000
   1dcba:	646a      	str	r2, [r5, #68]	@ 0x44
   1dcbc:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
   1dcc0:	f8c4 3144 	str.w	r3, [r4, #324]	@ 0x144
   1dcc4:	f8c4 3148 	str.w	r3, [r4, #328]	@ 0x148
   1dcc8:	f8c4 314c 	str.w	r3, [r4, #332]	@ 0x14c
   1dccc:	f8c4 3150 	str.w	r3, [r4, #336]	@ 0x150
   1dcd0:	f8c4 3154 	str.w	r3, [r4, #340]	@ 0x154
   1dcd4:	f8c4 3158 	str.w	r3, [r4, #344]	@ 0x158
   1dcd8:	f8c4 315c 	str.w	r3, [r4, #348]	@ 0x15c
   1dcdc:	f8c4 3160 	str.w	r3, [r4, #352]	@ 0x160
   1dce0:	f8c4 3164 	str.w	r3, [r4, #356]	@ 0x164
   1dce4:	f8c4 3168 	str.w	r3, [r4, #360]	@ 0x168
   1dce8:	f8c4 316c 	str.w	r3, [r4, #364]	@ 0x16c
   1dcec:	f8c4 3170 	str.w	r3, [r4, #368]	@ 0x170
   1dcf0:	f8c4 3174 	str.w	r3, [r4, #372]	@ 0x174
   1dcf4:	f8c4 3178 	str.w	r3, [r4, #376]	@ 0x178
   1dcf8:	f8c4 317c 	str.w	r3, [r4, #380]	@ 0x17c
   1dcfc:	f8c4 3180 	str.w	r3, [r4, #384]	@ 0x180
   1dd00:	f8c4 3184 	str.w	r3, [r4, #388]	@ 0x184
   1dd04:	f8c4 3188 	str.w	r3, [r4, #392]	@ 0x188
   1dd08:	f7fe f864 	bl	1bdd4 <am_hal_daxi_config>
   1dd0c:	2064      	movs	r0, #100	@ 0x64
   1dd0e:	f7fe fffb 	bl	1cd08 <am_hal_delay_us>
   1dd12:	6c6a      	ldr	r2, [r5, #68]	@ 0x44
   1dd14:	4b38      	ldr	r3, [pc, #224]	@ (1ddf8 <am_hal_pwrctrl_low_power_init+0x168>)
   1dd16:	4c39      	ldr	r4, [pc, #228]	@ (1ddfc <am_hal_pwrctrl_low_power_init+0x16c>)
   1dd18:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
   1dd1c:	646a      	str	r2, [r5, #68]	@ 0x44
   1dd1e:	f8d3 237c 	ldr.w	r2, [r3, #892]	@ 0x37c
   1dd22:	f042 62bf 	orr.w	r2, r2, #100139008	@ 0x5f80000
   1dd26:	f442 22d0 	orr.w	r2, r2, #425984	@ 0x68000
   1dd2a:	f8c3 237c 	str.w	r2, [r3, #892]	@ 0x37c
   1dd2e:	f8d3 2444 	ldr.w	r2, [r3, #1092]	@ 0x444
   1dd32:	2104      	movs	r1, #4
   1dd34:	f361 220f 	bfi	r2, r1, #8, #8
   1dd38:	f8c3 2444 	str.w	r2, [r3, #1092]	@ 0x444
   1dd3c:	7822      	ldrb	r2, [r4, #0]
   1dd3e:	b1da      	cbz	r2, 1dd78 <am_hal_pwrctrl_low_power_init+0xe8>
   1dd40:	4a2f      	ldr	r2, [pc, #188]	@ (1de00 <am_hal_pwrctrl_low_power_init+0x170>)
   1dd42:	4b30      	ldr	r3, [pc, #192]	@ (1de04 <am_hal_pwrctrl_low_power_init+0x174>)
   1dd44:	6810      	ldr	r0, [r2, #0]
   1dd46:	6819      	ldr	r1, [r3, #0]
   1dd48:	4b2f      	ldr	r3, [pc, #188]	@ (1de08 <am_hal_pwrctrl_low_power_init+0x178>)
   1dd4a:	4d30      	ldr	r5, [pc, #192]	@ (1de0c <am_hal_pwrctrl_low_power_init+0x17c>)
   1dd4c:	4c30      	ldr	r4, [pc, #192]	@ (1de10 <am_hal_pwrctrl_low_power_init+0x180>)
   1dd4e:	6018      	str	r0, [r3, #0]
   1dd50:	2201      	movs	r2, #1
   1dd52:	2300      	movs	r3, #0
   1dd54:	6029      	str	r1, [r5, #0]
   1dd56:	6023      	str	r3, [r4, #0]
   1dd58:	f44f 6192 	mov.w	r1, #1168	@ 0x490
   1dd5c:	ab01      	add	r3, sp, #4
   1dd5e:	4610      	mov	r0, r2
   1dd60:	f7fe fe8a 	bl	1ca78 <am_hal_mram_info_read>
   1dd64:	b928      	cbnz	r0, 1dd72 <am_hal_pwrctrl_low_power_init+0xe2>
   1dd66:	9b01      	ldr	r3, [sp, #4]
   1dd68:	f013 0f06 	tst.w	r3, #6
   1dd6c:	d129      	bne.n	1ddc2 <am_hal_pwrctrl_low_power_init+0x132>
   1dd6e:	2303      	movs	r3, #3
   1dd70:	6023      	str	r3, [r4, #0]
   1dd72:	2000      	movs	r0, #0
   1dd74:	b003      	add	sp, #12
   1dd76:	bd30      	pop	{r4, r5, pc}
   1dd78:	f8d3 036c 	ldr.w	r0, [r3, #876]	@ 0x36c
   1dd7c:	4a20      	ldr	r2, [pc, #128]	@ (1de00 <am_hal_pwrctrl_low_power_init+0x170>)
   1dd7e:	4d25      	ldr	r5, [pc, #148]	@ (1de14 <am_hal_pwrctrl_low_power_init+0x184>)
   1dd80:	f3c0 5005 	ubfx	r0, r0, #20, #6
   1dd84:	6010      	str	r0, [r2, #0]
   1dd86:	f8d3 1088 	ldr.w	r1, [r3, #136]	@ 0x88
   1dd8a:	4a1e      	ldr	r2, [pc, #120]	@ (1de04 <am_hal_pwrctrl_low_power_init+0x174>)
   1dd8c:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
   1dd90:	6011      	str	r1, [r2, #0]
   1dd92:	f8d3 236c 	ldr.w	r2, [r3, #876]	@ 0x36c
   1dd96:	0e92      	lsrs	r2, r2, #26
   1dd98:	602a      	str	r2, [r5, #0]
   1dd9a:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
   1dd9e:	4d1e      	ldr	r5, [pc, #120]	@ (1de18 <am_hal_pwrctrl_low_power_init+0x188>)
   1dda0:	f3c2 4285 	ubfx	r2, r2, #18, #6
   1dda4:	602a      	str	r2, [r5, #0]
   1dda6:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
   1dda8:	4d1c      	ldr	r5, [pc, #112]	@ (1de1c <am_hal_pwrctrl_low_power_init+0x18c>)
   1ddaa:	f3c2 12c6 	ubfx	r2, r2, #7, #7
   1ddae:	602a      	str	r2, [r5, #0]
   1ddb0:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
   1ddb4:	4a1a      	ldr	r2, [pc, #104]	@ (1de20 <am_hal_pwrctrl_low_power_init+0x190>)
   1ddb6:	f3c3 0309 	ubfx	r3, r3, #0, #10
   1ddba:	6013      	str	r3, [r2, #0]
   1ddbc:	2301      	movs	r3, #1
   1ddbe:	7023      	strb	r3, [r4, #0]
   1ddc0:	e7c2      	b.n	1dd48 <am_hal_pwrctrl_low_power_init+0xb8>
   1ddc2:	079a      	lsls	r2, r3, #30
   1ddc4:	d404      	bmi.n	1ddd0 <am_hal_pwrctrl_low_power_init+0x140>
   1ddc6:	2306      	movs	r3, #6
   1ddc8:	2000      	movs	r0, #0
   1ddca:	6023      	str	r3, [r4, #0]
   1ddcc:	b003      	add	sp, #12
   1ddce:	bd30      	pop	{r4, r5, pc}
   1ddd0:	075b      	lsls	r3, r3, #29
   1ddd2:	bf54      	ite	pl
   1ddd4:	2309      	movpl	r3, #9
   1ddd6:	6020      	strmi	r0, [r4, #0]
   1ddd8:	f04f 0000 	mov.w	r0, #0
   1dddc:	bf58      	it	pl
   1ddde:	6023      	strpl	r3, [r4, #0]
   1dde0:	b003      	add	sp, #12
   1dde2:	bd30      	pop	{r4, r5, pc}
   1dde4:	40021000 	.word	0x40021000
   1dde8:	100084fc 	.word	0x100084fc
   1ddec:	0002bf3c 	.word	0x0002bf3c
   1ddf0:	0002bf44 	.word	0x0002bf44
   1ddf4:	0002bcfc 	.word	0x0002bcfc
   1ddf8:	40020000 	.word	0x40020000
   1ddfc:	100084fd 	.word	0x100084fd
   1de00:	10008508 	.word	0x10008508
   1de04:	10008514 	.word	0x10008514
   1de08:	10008504 	.word	0x10008504
   1de0c:	10008500 	.word	0x10008500
   1de10:	10008524 	.word	0x10008524
   1de14:	10008510 	.word	0x10008510
   1de18:	10008518 	.word	0x10008518
   1de1c:	1000851c 	.word	0x1000851c
   1de20:	1000850c 	.word	0x1000850c

0001de24 <am_hal_pwrctrl_control>:
   1de24:	2804      	cmp	r0, #4
   1de26:	f200 812b 	bhi.w	1e080 <am_hal_pwrctrl_control+0x25c>
   1de2a:	e8df f000 	tbb	[pc, r0]
   1de2e:	8c0b      	.short	0x8c0b
   1de30:	a093      	.short	0xa093
   1de32:	03          	.byte	0x03
   1de33:	00          	.byte	0x00
   1de34:	2900      	cmp	r1, #0
   1de36:	f000 8123 	beq.w	1e080 <am_hal_pwrctrl_control+0x25c>
   1de3a:	4b92      	ldr	r3, [pc, #584]	@ (1e084 <am_hal_pwrctrl_control+0x260>)
   1de3c:	681b      	ldr	r3, [r3, #0]
   1de3e:	600b      	str	r3, [r1, #0]
   1de40:	2006      	movs	r0, #6
   1de42:	4770      	bx	lr
   1de44:	b510      	push	{r4, lr}
   1de46:	4c90      	ldr	r4, [pc, #576]	@ (1e088 <am_hal_pwrctrl_control+0x264>)
   1de48:	6822      	ldr	r2, [r4, #0]
   1de4a:	1c51      	adds	r1, r2, #1
   1de4c:	f000 8093 	beq.w	1df76 <am_hal_pwrctrl_control+0x152>
   1de50:	2a02      	cmp	r2, #2
   1de52:	f240 809e 	bls.w	1df92 <am_hal_pwrctrl_control+0x16e>
   1de56:	4b8d      	ldr	r3, [pc, #564]	@ (1e08c <am_hal_pwrctrl_control+0x268>)
   1de58:	4c8d      	ldr	r4, [pc, #564]	@ (1e090 <am_hal_pwrctrl_control+0x26c>)
   1de5a:	f8d3 1348 	ldr.w	r1, [r3, #840]	@ 0x348
   1de5e:	200a      	movs	r0, #10
   1de60:	f360 619d 	bfi	r1, r0, #26, #4
   1de64:	f8c3 1348 	str.w	r1, [r3, #840]	@ 0x348
   1de68:	f8d3 1348 	ldr.w	r1, [r3, #840]	@ 0x348
   1de6c:	f360 3150 	bfi	r1, r0, #13, #4
   1de70:	f8c3 1348 	str.w	r1, [r3, #840]	@ 0x348
   1de74:	f8d3 135c 	ldr.w	r1, [r3, #860]	@ 0x35c
   1de78:	f041 7170 	orr.w	r1, r1, #62914560	@ 0x3c00000
   1de7c:	f8c3 135c 	str.w	r1, [r3, #860]	@ 0x35c
   1de80:	f8d3 135c 	ldr.w	r1, [r3, #860]	@ 0x35c
   1de84:	f441 51f0 	orr.w	r1, r1, #7680	@ 0x1e00
   1de88:	f8c3 135c 	str.w	r1, [r3, #860]	@ 0x35c
   1de8c:	f8d3 1380 	ldr.w	r1, [r3, #896]	@ 0x380
   1de90:	f041 4100 	orr.w	r1, r1, #2147483648	@ 0x80000000
   1de94:	f8c3 1380 	str.w	r1, [r3, #896]	@ 0x380
   1de98:	f8d3 1380 	ldr.w	r1, [r3, #896]	@ 0x380
   1de9c:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
   1dea0:	f8c3 1380 	str.w	r1, [r3, #896]	@ 0x380
   1dea4:	f8d3 1370 	ldr.w	r1, [r3, #880]	@ 0x370
   1dea8:	f3c1 5105 	ubfx	r1, r1, #20, #6
   1deac:	6021      	str	r1, [r4, #0]
   1deae:	f8d3 1370 	ldr.w	r1, [r3, #880]	@ 0x370
   1deb2:	2007      	movs	r0, #7
   1deb4:	f36f 5119 	bfc	r1, #20, #6
   1deb8:	2a05      	cmp	r2, #5
   1deba:	f8c3 1370 	str.w	r1, [r3, #880]	@ 0x370
   1debe:	f8c3 033c 	str.w	r0, [r3, #828]	@ 0x33c
   1dec2:	d908      	bls.n	1ded6 <am_hal_pwrctrl_control+0xb2>
   1dec4:	220f      	movs	r2, #15
   1dec6:	f8c3 233c 	str.w	r2, [r3, #828]	@ 0x33c
   1deca:	f8d3 21b0 	ldr.w	r2, [r3, #432]	@ 0x1b0
   1dece:	f022 0218 	bic.w	r2, r2, #24
   1ded2:	f8c3 21b0 	str.w	r2, [r3, #432]	@ 0x1b0
   1ded6:	496f      	ldr	r1, [pc, #444]	@ (1e094 <am_hal_pwrctrl_control+0x270>)
   1ded8:	4b6c      	ldr	r3, [pc, #432]	@ (1e08c <am_hal_pwrctrl_control+0x268>)
   1deda:	f8d1 2100 	ldr.w	r2, [r1, #256]	@ 0x100
   1dede:	f042 0201 	orr.w	r2, r2, #1
   1dee2:	f8c1 2100 	str.w	r2, [r1, #256]	@ 0x100
   1dee6:	f8d3 2378 	ldr.w	r2, [r3, #888]	@ 0x378
   1deea:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
   1deee:	f8c3 2378 	str.w	r2, [r3, #888]	@ 0x378
   1def2:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
   1def4:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
   1def8:	661a      	str	r2, [r3, #96]	@ 0x60
   1defa:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
   1defc:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
   1df00:	661a      	str	r2, [r3, #96]	@ 0x60
   1df02:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
   1df04:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
   1df08:	661a      	str	r2, [r3, #96]	@ 0x60
   1df0a:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
   1df0c:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
   1df10:	661a      	str	r2, [r3, #96]	@ 0x60
   1df12:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
   1df14:	f36f 1204 	bfc	r2, #4, #1
   1df18:	661a      	str	r2, [r3, #96]	@ 0x60
   1df1a:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
   1df1c:	f042 020e 	orr.w	r2, r2, #14
   1df20:	661a      	str	r2, [r3, #96]	@ 0x60
   1df22:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
   1df24:	f042 0201 	orr.w	r2, r2, #1
   1df28:	661a      	str	r2, [r3, #96]	@ 0x60
   1df2a:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
   1df2c:	f36f 2249 	bfc	r2, #9, #1
   1df30:	661a      	str	r2, [r3, #96]	@ 0x60
   1df32:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
   1df34:	f442 72e0 	orr.w	r2, r2, #448	@ 0x1c0
   1df38:	661a      	str	r2, [r3, #96]	@ 0x60
   1df3a:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
   1df3c:	f042 0220 	orr.w	r2, r2, #32
   1df40:	661a      	str	r2, [r3, #96]	@ 0x60
   1df42:	2000      	movs	r0, #0
   1df44:	bd10      	pop	{r4, pc}
   1df46:	4b53      	ldr	r3, [pc, #332]	@ (1e094 <am_hal_pwrctrl_control+0x270>)
   1df48:	6898      	ldr	r0, [r3, #8]
   1df4a:	f410 1080 	ands.w	r0, r0, #1048576	@ 0x100000
   1df4e:	f040 8094 	bne.w	1e07a <am_hal_pwrctrl_control+0x256>
   1df52:	4770      	bx	lr
   1df54:	4b4d      	ldr	r3, [pc, #308]	@ (1e08c <am_hal_pwrctrl_control+0x268>)
   1df56:	f8d3 2124 	ldr.w	r2, [r3, #292]	@ 0x124
   1df5a:	2020      	movs	r0, #32
   1df5c:	f360 0287 	bfi	r2, r0, #2, #6
   1df60:	2101      	movs	r1, #1
   1df62:	f8c3 2124 	str.w	r2, [r3, #292]	@ 0x124
   1df66:	2000      	movs	r0, #0
   1df68:	f8c3 1120 	str.w	r1, [r3, #288]	@ 0x120
   1df6c:	4770      	bx	lr
   1df6e:	4b49      	ldr	r3, [pc, #292]	@ (1e094 <am_hal_pwrctrl_control+0x270>)
   1df70:	2000      	movs	r0, #0
   1df72:	6058      	str	r0, [r3, #4]
   1df74:	4770      	bx	lr
   1df76:	2201      	movs	r2, #1
   1df78:	4623      	mov	r3, r4
   1df7a:	f240 41c4 	movw	r1, #1220	@ 0x4c4
   1df7e:	4610      	mov	r0, r2
   1df80:	f7fe fd7a 	bl	1ca78 <am_hal_mram_info_read>
   1df84:	b918      	cbnz	r0, 1df8e <am_hal_pwrctrl_control+0x16a>
   1df86:	6822      	ldr	r2, [r4, #0]
   1df88:	1c53      	adds	r3, r2, #1
   1df8a:	f47f af61 	bne.w	1de50 <am_hal_pwrctrl_control+0x2c>
   1df8e:	2300      	movs	r3, #0
   1df90:	6023      	str	r3, [r4, #0]
   1df92:	4b3e      	ldr	r3, [pc, #248]	@ (1e08c <am_hal_pwrctrl_control+0x268>)
   1df94:	483e      	ldr	r0, [pc, #248]	@ (1e090 <am_hal_pwrctrl_control+0x26c>)
   1df96:	f8d3 1378 	ldr.w	r1, [r3, #888]	@ 0x378
   1df9a:	f36f 611c 	bfc	r1, #24, #5
   1df9e:	f8c3 1378 	str.w	r1, [r3, #888]	@ 0x378
   1dfa2:	f8d3 1358 	ldr.w	r1, [r3, #856]	@ 0x358
   1dfa6:	f36f 4196 	bfc	r1, #18, #5
   1dfaa:	f8c3 1358 	str.w	r1, [r3, #856]	@ 0x358
   1dfae:	f8d3 1344 	ldr.w	r1, [r3, #836]	@ 0x344
   1dfb2:	220a      	movs	r2, #10
   1dfb4:	f362 611c 	bfi	r1, r2, #24, #5
   1dfb8:	f8c3 1344 	str.w	r1, [r3, #836]	@ 0x344
   1dfbc:	f8d3 1344 	ldr.w	r1, [r3, #836]	@ 0x344
   1dfc0:	f362 21ce 	bfi	r1, r2, #11, #4
   1dfc4:	f8c3 1344 	str.w	r1, [r3, #836]	@ 0x344
   1dfc8:	f8d3 1358 	ldr.w	r1, [r3, #856]	@ 0x358
   1dfcc:	240f      	movs	r4, #15
   1dfce:	f364 210c 	bfi	r1, r4, #8, #5
   1dfd2:	f8c3 1358 	str.w	r1, [r3, #856]	@ 0x358
   1dfd6:	f8d3 1354 	ldr.w	r1, [r3, #852]	@ 0x354
   1dfda:	f441 11f0 	orr.w	r1, r1, #1966080	@ 0x1e0000
   1dfde:	f8c3 1354 	str.w	r1, [r3, #852]	@ 0x354
   1dfe2:	f8d3 1360 	ldr.w	r1, [r3, #864]	@ 0x360
   1dfe6:	f364 519a 	bfi	r1, r4, #22, #5
   1dfea:	f8c3 1360 	str.w	r1, [r3, #864]	@ 0x360
   1dfee:	f8d3 1360 	ldr.w	r1, [r3, #864]	@ 0x360
   1dff2:	f441 11f0 	orr.w	r1, r1, #1966080	@ 0x1e0000
   1dff6:	f8c3 1360 	str.w	r1, [r3, #864]	@ 0x360
   1dffa:	f8d3 1348 	ldr.w	r1, [r3, #840]	@ 0x348
   1dffe:	f362 619d 	bfi	r1, r2, #26, #4
   1e002:	f8c3 1348 	str.w	r1, [r3, #840]	@ 0x348
   1e006:	f8d3 1348 	ldr.w	r1, [r3, #840]	@ 0x348
   1e00a:	f362 3150 	bfi	r1, r2, #13, #4
   1e00e:	f8c3 1348 	str.w	r1, [r3, #840]	@ 0x348
   1e012:	f8d3 235c 	ldr.w	r2, [r3, #860]	@ 0x35c
   1e016:	f042 7270 	orr.w	r2, r2, #62914560	@ 0x3c00000
   1e01a:	f8c3 235c 	str.w	r2, [r3, #860]	@ 0x35c
   1e01e:	f8d3 235c 	ldr.w	r2, [r3, #860]	@ 0x35c
   1e022:	f442 52f0 	orr.w	r2, r2, #7680	@ 0x1e00
   1e026:	f8c3 235c 	str.w	r2, [r3, #860]	@ 0x35c
   1e02a:	f8d3 2380 	ldr.w	r2, [r3, #896]	@ 0x380
   1e02e:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
   1e032:	f8c3 2380 	str.w	r2, [r3, #896]	@ 0x380
   1e036:	f8d3 2380 	ldr.w	r2, [r3, #896]	@ 0x380
   1e03a:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
   1e03e:	f8c3 2380 	str.w	r2, [r3, #896]	@ 0x380
   1e042:	f8d3 2370 	ldr.w	r2, [r3, #880]	@ 0x370
   1e046:	f3c2 5205 	ubfx	r2, r2, #20, #6
   1e04a:	6002      	str	r2, [r0, #0]
   1e04c:	f8d3 2370 	ldr.w	r2, [r3, #880]	@ 0x370
   1e050:	2407      	movs	r4, #7
   1e052:	f36f 5219 	bfc	r2, #20, #6
   1e056:	f8c3 2370 	str.w	r2, [r3, #880]	@ 0x370
   1e05a:	f8c3 433c 	str.w	r4, [r3, #828]	@ 0x33c
   1e05e:	f8d3 2340 	ldr.w	r2, [r3, #832]	@ 0x340
   1e062:	f36f 5299 	bfc	r2, #22, #4
   1e066:	f8c3 2340 	str.w	r2, [r3, #832]	@ 0x340
   1e06a:	f8d3 2340 	ldr.w	r2, [r3, #832]	@ 0x340
   1e06e:	2101      	movs	r1, #1
   1e070:	f361 128a 	bfi	r2, r1, #6, #5
   1e074:	f8c3 2340 	str.w	r2, [r3, #832]	@ 0x340
   1e078:	e72d      	b.n	1ded6 <am_hal_pwrctrl_control+0xb2>
   1e07a:	2014      	movs	r0, #20
   1e07c:	f7ff bd46 	b.w	1db0c <am_hal_pwrctrl_periph_disable>
   1e080:	2006      	movs	r0, #6
   1e082:	4770      	bx	lr
   1e084:	10008520 	.word	0x10008520
   1e088:	10003054 	.word	0x10003054
   1e08c:	40020000 	.word	0x40020000
   1e090:	10003058 	.word	0x10003058
   1e094:	40021000 	.word	0x40021000

0001e098 <am_hal_stimer_counter_get>:
   1e098:	b500      	push	{lr}
   1e09a:	b085      	sub	sp, #20
   1e09c:	4805      	ldr	r0, [pc, #20]	@ (1e0b4 <am_hal_stimer_counter_get+0x1c>)
   1e09e:	a901      	add	r1, sp, #4
   1e0a0:	f000 f9c4 	bl	1e42c <am_hal_triple_read>
   1e0a4:	e9dd 3001 	ldrd	r3, r0, [sp, #4]
   1e0a8:	4283      	cmp	r3, r0
   1e0aa:	bf18      	it	ne
   1e0ac:	9803      	ldrne	r0, [sp, #12]
   1e0ae:	b005      	add	sp, #20
   1e0b0:	f85d fb04 	ldr.w	pc, [sp], #4
   1e0b4:	40008804 	.word	0x40008804

0001e0b8 <am_hal_stimer_compare_delta_set>:
   1e0b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1e0bc:	b085      	sub	sp, #20
   1e0be:	4604      	mov	r4, r0
   1e0c0:	460d      	mov	r5, r1
   1e0c2:	4831      	ldr	r0, [pc, #196]	@ (1e188 <am_hal_stimer_compare_delta_set+0xd0>)
   1e0c4:	a901      	add	r1, sp, #4
   1e0c6:	f000 f9b1 	bl	1e42c <am_hal_triple_read>
   1e0ca:	e9dd 3601 	ldrd	r3, r6, [sp, #4]
   1e0ce:	42b3      	cmp	r3, r6
   1e0d0:	bf18      	it	ne
   1e0d2:	9e03      	ldrne	r6, [sp, #12]
   1e0d4:	2c07      	cmp	r4, #7
   1e0d6:	d852      	bhi.n	1e17e <am_hal_stimer_compare_delta_set+0xc6>
   1e0d8:	4a2c      	ldr	r2, [pc, #176]	@ (1e18c <am_hal_stimer_compare_delta_set+0xd4>)
   1e0da:	f8df 80b8 	ldr.w	r8, [pc, #184]	@ 1e194 <am_hal_stimer_compare_delta_set+0xdc>
   1e0de:	6817      	ldr	r7, [r2, #0]
   1e0e0:	6811      	ldr	r1, [r2, #0]
   1e0e2:	f8df 90a4 	ldr.w	r9, [pc, #164]	@ 1e188 <am_hal_stimer_compare_delta_set+0xd0>
   1e0e6:	f44f 7380 	mov.w	r3, #256	@ 0x100
   1e0ea:	40a3      	lsls	r3, r4
   1e0ec:	401f      	ands	r7, r3
   1e0ee:	ea21 0303 	bic.w	r3, r1, r3
   1e0f2:	6013      	str	r3, [r2, #0]
   1e0f4:	4633      	mov	r3, r6
   1e0f6:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
   1e0fa:	429a      	cmp	r2, r3
   1e0fc:	a901      	add	r1, sp, #4
   1e0fe:	4648      	mov	r0, r9
   1e100:	f102 0c01 	add.w	ip, r2, #1
   1e104:	d001      	beq.n	1e10a <am_hal_stimer_compare_delta_set+0x52>
   1e106:	459c      	cmp	ip, r3
   1e108:	d107      	bne.n	1e11a <am_hal_stimer_compare_delta_set+0x62>
   1e10a:	f000 f98f 	bl	1e42c <am_hal_triple_read>
   1e10e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
   1e112:	429a      	cmp	r2, r3
   1e114:	d0ef      	beq.n	1e0f6 <am_hal_stimer_compare_delta_set+0x3e>
   1e116:	9b03      	ldr	r3, [sp, #12]
   1e118:	e7ed      	b.n	1e0f6 <am_hal_stimer_compare_delta_set+0x3e>
   1e11a:	f7fd ff1b 	bl	1bf54 <am_hal_interrupt_master_disable>
   1e11e:	a901      	add	r1, sp, #4
   1e120:	9000      	str	r0, [sp, #0]
   1e122:	4819      	ldr	r0, [pc, #100]	@ (1e188 <am_hal_stimer_compare_delta_set+0xd0>)
   1e124:	f000 f982 	bl	1e42c <am_hal_triple_read>
   1e128:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
   1e12c:	429a      	cmp	r2, r3
   1e12e:	bf18      	it	ne
   1e130:	9b03      	ldrne	r3, [sp, #12]
   1e132:	f1c6 0203 	rsb	r2, r6, #3
   1e136:	441a      	add	r2, r3
   1e138:	42aa      	cmp	r2, r5
   1e13a:	d31b      	bcc.n	1e174 <am_hal_stimer_compare_delta_set+0xbc>
   1e13c:	f04f 6500 	mov.w	r5, #134217728	@ 0x8000000
   1e140:	2601      	movs	r6, #1
   1e142:	4b13      	ldr	r3, [pc, #76]	@ (1e190 <am_hal_stimer_compare_delta_set+0xd8>)
   1e144:	4a11      	ldr	r2, [pc, #68]	@ (1e18c <am_hal_stimer_compare_delta_set+0xd4>)
   1e146:	f843 6024 	str.w	r6, [r3, r4, lsl #2]
   1e14a:	6813      	ldr	r3, [r2, #0]
   1e14c:	480e      	ldr	r0, [pc, #56]	@ (1e188 <am_hal_stimer_compare_delta_set+0xd0>)
   1e14e:	431f      	orrs	r7, r3
   1e150:	a901      	add	r1, sp, #4
   1e152:	6017      	str	r7, [r2, #0]
   1e154:	f000 f96a 	bl	1e42c <am_hal_triple_read>
   1e158:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
   1e15c:	429a      	cmp	r2, r3
   1e15e:	bf18      	it	ne
   1e160:	9b03      	ldrne	r3, [sp, #12]
   1e162:	9800      	ldr	r0, [sp, #0]
   1e164:	f848 3024 	str.w	r3, [r8, r4, lsl #2]
   1e168:	f7fd fef8 	bl	1bf5c <am_hal_interrupt_master_set>
   1e16c:	4628      	mov	r0, r5
   1e16e:	b005      	add	sp, #20
   1e170:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1e174:	3d03      	subs	r5, #3
   1e176:	442e      	add	r6, r5
   1e178:	1af6      	subs	r6, r6, r3
   1e17a:	2500      	movs	r5, #0
   1e17c:	e7e1      	b.n	1e142 <am_hal_stimer_compare_delta_set+0x8a>
   1e17e:	2505      	movs	r5, #5
   1e180:	4628      	mov	r0, r5
   1e182:	b005      	add	sp, #20
   1e184:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1e188:	40008804 	.word	0x40008804
   1e18c:	40008800 	.word	0x40008800
   1e190:	40008820 	.word	0x40008820
   1e194:	1000305c 	.word	0x1000305c

0001e198 <am_hal_stimer_int_clear>:
   1e198:	4b01      	ldr	r3, [pc, #4]	@ (1e1a0 <am_hal_stimer_int_clear+0x8>)
   1e19a:	f8c3 0108 	str.w	r0, [r3, #264]	@ 0x108
   1e19e:	4770      	bx	lr
   1e1a0:	40008800 	.word	0x40008800

0001e1a4 <am_hal_stimer_int_status_get>:
   1e1a4:	4a04      	ldr	r2, [pc, #16]	@ (1e1b8 <am_hal_stimer_int_status_get+0x14>)
   1e1a6:	f8d2 3104 	ldr.w	r3, [r2, #260]	@ 0x104
   1e1aa:	b110      	cbz	r0, 1e1b2 <am_hal_stimer_int_status_get+0xe>
   1e1ac:	f8d2 2100 	ldr.w	r2, [r2, #256]	@ 0x100
   1e1b0:	4013      	ands	r3, r2
   1e1b2:	4618      	mov	r0, r3
   1e1b4:	4770      	bx	lr
   1e1b6:	bf00      	nop
   1e1b8:	40008800 	.word	0x40008800

0001e1bc <am_hal_timer_config>:
   1e1bc:	b470      	push	{r4, r5, r6}
   1e1be:	f891 c001 	ldrb.w	ip, [r1, #1]
   1e1c2:	690c      	ldr	r4, [r1, #16]
   1e1c4:	f10c 33ff 	add.w	r3, ip, #4294967295	@ 0xffffffff
   1e1c8:	e9d1 6502 	ldrd	r6, r5, [r1, #8]
   1e1cc:	2b0c      	cmp	r3, #12
   1e1ce:	d80a      	bhi.n	1e1e6 <am_hal_timer_config+0x2a>
   1e1d0:	e8df f003 	tbb	[pc, r3]
   1e1d4:	1009100c 	.word	0x1009100c
   1e1d8:	09090909 	.word	0x09090909
   1e1dc:	07090909 	.word	0x07090909
   1e1e0:	07          	.byte	0x07
   1e1e1:	00          	.byte	0x00
   1e1e2:	2e3f      	cmp	r6, #63	@ 0x3f
   1e1e4:	d906      	bls.n	1e1f4 <am_hal_timer_config+0x38>
   1e1e6:	2007      	movs	r0, #7
   1e1e8:	bc70      	pop	{r4, r5, r6}
   1e1ea:	4770      	bx	lr
   1e1ec:	1c63      	adds	r3, r4, #1
   1e1ee:	d001      	beq.n	1e1f4 <am_hal_timer_config+0x38>
   1e1f0:	42a5      	cmp	r5, r4
   1e1f2:	d9f8      	bls.n	1e1e6 <am_hal_timer_config+0x2a>
   1e1f4:	78ca      	ldrb	r2, [r1, #3]
   1e1f6:	f100 7300 	add.w	r3, r0, #33554432	@ 0x2000000
   1e1fa:	7808      	ldrb	r0, [r1, #0]
   1e1fc:	00d2      	lsls	r2, r2, #3
   1e1fe:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
   1e202:	7888      	ldrb	r0, [r1, #2]
   1e204:	ea42 6206 	orr.w	r2, r2, r6, lsl #24
   1e208:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
   1e20c:	015b      	lsls	r3, r3, #5
   1e20e:	ea42 0280 	orr.w	r2, r2, r0, lsl #2
   1e212:	7908      	ldrb	r0, [r1, #4]
   1e214:	794e      	ldrb	r6, [r1, #5]
   1e216:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
   1e21a:	0401      	lsls	r1, r0, #16
   1e21c:	fa5f fc8c 	uxtb.w	ip, ip
   1e220:	f8d3 0200 	ldr.w	r0, [r3, #512]	@ 0x200
   1e224:	ea42 020c 	orr.w	r2, r2, ip
   1e228:	f401 3140 	and.w	r1, r1, #196608	@ 0x30000
   1e22c:	430a      	orrs	r2, r1
   1e22e:	0236      	lsls	r6, r6, #8
   1e230:	f36f 0000 	bfc	r0, #0, #1
   1e234:	f8c3 0200 	str.w	r0, [r3, #512]	@ 0x200
   1e238:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
   1e23c:	f8c3 6210 	str.w	r6, [r3, #528]	@ 0x210
   1e240:	f8c3 5208 	str.w	r5, [r3, #520]	@ 0x208
   1e244:	f8c3 420c 	str.w	r4, [r3, #524]	@ 0x20c
   1e248:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
   1e24c:	f042 0202 	orr.w	r2, r2, #2
   1e250:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
   1e254:	2000      	movs	r0, #0
   1e256:	bc70      	pop	{r4, r5, r6}
   1e258:	4770      	bx	lr
   1e25a:	bf00      	nop

0001e25c <am_hal_timer_disable>:
   1e25c:	b510      	push	{r4, lr}
   1e25e:	4604      	mov	r4, r0
   1e260:	b082      	sub	sp, #8
   1e262:	f7fd fe77 	bl	1bf54 <am_hal_interrupt_master_disable>
   1e266:	f104 7300 	add.w	r3, r4, #33554432	@ 0x2000000
   1e26a:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
   1e26e:	015b      	lsls	r3, r3, #5
   1e270:	9001      	str	r0, [sp, #4]
   1e272:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
   1e276:	f36f 0200 	bfc	r2, #0, #1
   1e27a:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
   1e27e:	9801      	ldr	r0, [sp, #4]
   1e280:	f7fd fe6c 	bl	1bf5c <am_hal_interrupt_master_set>
   1e284:	2000      	movs	r0, #0
   1e286:	b002      	add	sp, #8
   1e288:	bd10      	pop	{r4, pc}
   1e28a:	bf00      	nop

0001e28c <am_hal_timer_clear>:
   1e28c:	b510      	push	{r4, lr}
   1e28e:	4604      	mov	r4, r0
   1e290:	b082      	sub	sp, #8
   1e292:	f7fd fe5f 	bl	1bf54 <am_hal_interrupt_master_disable>
   1e296:	f104 7300 	add.w	r3, r4, #33554432	@ 0x2000000
   1e29a:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
   1e29e:	015b      	lsls	r3, r3, #5
   1e2a0:	9001      	str	r0, [sp, #4]
   1e2a2:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
   1e2a6:	f36f 0200 	bfc	r2, #0, #1
   1e2aa:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
   1e2ae:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
   1e2b2:	f042 0202 	orr.w	r2, r2, #2
   1e2b6:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
   1e2ba:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
   1e2be:	f36f 0241 	bfc	r2, #1, #1
   1e2c2:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
   1e2c6:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
   1e2ca:	f042 0201 	orr.w	r2, r2, #1
   1e2ce:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
   1e2d2:	9801      	ldr	r0, [sp, #4]
   1e2d4:	f7fd fe42 	bl	1bf5c <am_hal_interrupt_master_set>
   1e2d8:	2000      	movs	r0, #0
   1e2da:	b002      	add	sp, #8
   1e2dc:	bd10      	pop	{r4, pc}
   1e2de:	bf00      	nop

0001e2e0 <am_hal_timer_interrupt_clear>:
   1e2e0:	4b01      	ldr	r3, [pc, #4]	@ (1e2e8 <am_hal_timer_interrupt_clear+0x8>)
   1e2e2:	6698      	str	r0, [r3, #104]	@ 0x68
   1e2e4:	2000      	movs	r0, #0
   1e2e6:	4770      	bx	lr
   1e2e8:	40008000 	.word	0x40008000

0001e2ec <am_hal_cmdq_init>:
   1e2ec:	280a      	cmp	r0, #10
   1e2ee:	d849      	bhi.n	1e384 <am_hal_cmdq_init+0x98>
   1e2f0:	2900      	cmp	r1, #0
   1e2f2:	d04b      	beq.n	1e38c <am_hal_cmdq_init+0xa0>
   1e2f4:	b5f0      	push	{r4, r5, r6, r7, lr}
   1e2f6:	684e      	ldr	r6, [r1, #4]
   1e2f8:	2e00      	cmp	r6, #0
   1e2fa:	d041      	beq.n	1e380 <am_hal_cmdq_init+0x94>
   1e2fc:	2a00      	cmp	r2, #0
   1e2fe:	d03f      	beq.n	1e380 <am_hal_cmdq_init+0x94>
   1e300:	680c      	ldr	r4, [r1, #0]
   1e302:	2c01      	cmp	r4, #1
   1e304:	d93c      	bls.n	1e380 <am_hal_cmdq_init+0x94>
   1e306:	4f22      	ldr	r7, [pc, #136]	@ (1e390 <am_hal_cmdq_init+0xa4>)
   1e308:	f04f 0e2c 	mov.w	lr, #44	@ 0x2c
   1e30c:	fb0e fe00 	mul.w	lr, lr, r0
   1e310:	eb07 030e 	add.w	r3, r7, lr
   1e314:	78dd      	ldrb	r5, [r3, #3]
   1e316:	f015 0501 	ands.w	r5, r5, #1
   1e31a:	d135      	bne.n	1e388 <am_hal_cmdq_init+0x9c>
   1e31c:	00e4      	lsls	r4, r4, #3
   1e31e:	619c      	str	r4, [r3, #24]
   1e320:	4434      	add	r4, r6
   1e322:	e9c3 6401 	strd	r6, r4, [r3, #4]
   1e326:	e9c3 6604 	strd	r6, r6, [r3, #16]
   1e32a:	60de      	str	r6, [r3, #12]
   1e32c:	eb00 0c80 	add.w	ip, r0, r0, lsl #2
   1e330:	4818      	ldr	r0, [pc, #96]	@ (1e394 <am_hal_cmdq_init+0xa8>)
   1e332:	f857 400e 	ldr.w	r4, [r7, lr]
   1e336:	eb00 00cc 	add.w	r0, r0, ip, lsl #3
   1e33a:	f8df c05c 	ldr.w	ip, [pc, #92]	@ 1e398 <am_hal_cmdq_init+0xac>
   1e33e:	f004 447c 	and.w	r4, r4, #4227858432	@ 0xfc000000
   1e342:	ea44 040c 	orr.w	r4, r4, ip
   1e346:	f847 400e 	str.w	r4, [r7, lr]
   1e34a:	6258      	str	r0, [r3, #36]	@ 0x24
   1e34c:	6880      	ldr	r0, [r0, #8]
   1e34e:	e9c3 5507 	strd	r5, r5, [r3, #28]
   1e352:	6005      	str	r5, [r0, #0]
   1e354:	6a58      	ldr	r0, [r3, #36]	@ 0x24
   1e356:	68c0      	ldr	r0, [r0, #12]
   1e358:	6005      	str	r5, [r0, #0]
   1e35a:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
   1e35c:	4628      	mov	r0, r5
   1e35e:	e9d4 5704 	ldrd	r5, r7, [r4, #16]
   1e362:	682c      	ldr	r4, [r5, #0]
   1e364:	433c      	orrs	r4, r7
   1e366:	602c      	str	r4, [r5, #0]
   1e368:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
   1e36a:	6864      	ldr	r4, [r4, #4]
   1e36c:	6026      	str	r6, [r4, #0]
   1e36e:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
   1e370:	7a09      	ldrb	r1, [r1, #8]
   1e372:	6824      	ldr	r4, [r4, #0]
   1e374:	0049      	lsls	r1, r1, #1
   1e376:	f001 0102 	and.w	r1, r1, #2
   1e37a:	6021      	str	r1, [r4, #0]
   1e37c:	6013      	str	r3, [r2, #0]
   1e37e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1e380:	2006      	movs	r0, #6
   1e382:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1e384:	2005      	movs	r0, #5
   1e386:	4770      	bx	lr
   1e388:	2007      	movs	r0, #7
   1e38a:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1e38c:	2006      	movs	r0, #6
   1e38e:	4770      	bx	lr
   1e390:	10008528 	.word	0x10008528
   1e394:	0002bf74 	.word	0x0002bf74
   1e398:	01cdcdcd 	.word	0x01cdcdcd

0001e39c <am_hal_cmdq_enable>:
   1e39c:	b318      	cbz	r0, 1e3e6 <am_hal_cmdq_enable+0x4a>
   1e39e:	6803      	ldr	r3, [r0, #0]
   1e3a0:	4a12      	ldr	r2, [pc, #72]	@ (1e3ec <am_hal_cmdq_enable+0x50>)
   1e3a2:	f023 437e 	bic.w	r3, r3, #4261412864	@ 0xfe000000
   1e3a6:	4293      	cmp	r3, r2
   1e3a8:	b510      	push	{r4, lr}
   1e3aa:	4604      	mov	r4, r0
   1e3ac:	d113      	bne.n	1e3d6 <am_hal_cmdq_enable+0x3a>
   1e3ae:	78c1      	ldrb	r1, [r0, #3]
   1e3b0:	f011 0102 	ands.w	r1, r1, #2
   1e3b4:	d111      	bne.n	1e3da <am_hal_cmdq_enable+0x3e>
   1e3b6:	4b0e      	ldr	r3, [pc, #56]	@ (1e3f0 <am_hal_cmdq_enable+0x54>)
   1e3b8:	6882      	ldr	r2, [r0, #8]
   1e3ba:	429a      	cmp	r2, r3
   1e3bc:	d80f      	bhi.n	1e3de <am_hal_cmdq_enable+0x42>
   1e3be:	6a63      	ldr	r3, [r4, #36]	@ 0x24
   1e3c0:	681a      	ldr	r2, [r3, #0]
   1e3c2:	6813      	ldr	r3, [r2, #0]
   1e3c4:	f043 0301 	orr.w	r3, r3, #1
   1e3c8:	6013      	str	r3, [r2, #0]
   1e3ca:	78e3      	ldrb	r3, [r4, #3]
   1e3cc:	f043 0302 	orr.w	r3, r3, #2
   1e3d0:	2000      	movs	r0, #0
   1e3d2:	70e3      	strb	r3, [r4, #3]
   1e3d4:	bd10      	pop	{r4, pc}
   1e3d6:	2002      	movs	r0, #2
   1e3d8:	bd10      	pop	{r4, pc}
   1e3da:	2000      	movs	r0, #0
   1e3dc:	bd10      	pop	{r4, pc}
   1e3de:	2001      	movs	r0, #1
   1e3e0:	f7fd fd42 	bl	1be68 <am_hal_daxi_control>
   1e3e4:	e7eb      	b.n	1e3be <am_hal_cmdq_enable+0x22>
   1e3e6:	2002      	movs	r0, #2
   1e3e8:	4770      	bx	lr
   1e3ea:	bf00      	nop
   1e3ec:	01cdcdcd 	.word	0x01cdcdcd
   1e3f0:	1005ffff 	.word	0x1005ffff

0001e3f4 <am_hal_cmdq_disable>:
   1e3f4:	4603      	mov	r3, r0
   1e3f6:	b1a8      	cbz	r0, 1e424 <am_hal_cmdq_disable+0x30>
   1e3f8:	6802      	ldr	r2, [r0, #0]
   1e3fa:	490b      	ldr	r1, [pc, #44]	@ (1e428 <am_hal_cmdq_disable+0x34>)
   1e3fc:	f022 427e 	bic.w	r2, r2, #4261412864	@ 0xfe000000
   1e400:	428a      	cmp	r2, r1
   1e402:	d10f      	bne.n	1e424 <am_hal_cmdq_disable+0x30>
   1e404:	78c0      	ldrb	r0, [r0, #3]
   1e406:	f010 0002 	ands.w	r0, r0, #2
   1e40a:	d00c      	beq.n	1e426 <am_hal_cmdq_disable+0x32>
   1e40c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
   1e40e:	6811      	ldr	r1, [r2, #0]
   1e410:	680a      	ldr	r2, [r1, #0]
   1e412:	f022 0201 	bic.w	r2, r2, #1
   1e416:	600a      	str	r2, [r1, #0]
   1e418:	78da      	ldrb	r2, [r3, #3]
   1e41a:	f36f 0241 	bfc	r2, #1, #1
   1e41e:	2000      	movs	r0, #0
   1e420:	70da      	strb	r2, [r3, #3]
   1e422:	4770      	bx	lr
   1e424:	2002      	movs	r0, #2
   1e426:	4770      	bx	lr
   1e428:	01cdcdcd 	.word	0x01cdcdcd

0001e42c <am_hal_triple_read>:
   1e42c:	b412      	push	{r1, r4}
   1e42e:	f3ef 8410 	mrs	r4, PRIMASK
   1e432:	b672      	cpsid	i
   1e434:	6801      	ldr	r1, [r0, #0]
   1e436:	6802      	ldr	r2, [r0, #0]
   1e438:	6803      	ldr	r3, [r0, #0]
   1e43a:	f384 8810 	msr	PRIMASK, r4
   1e43e:	bc11      	pop	{r0, r4}
   1e440:	6001      	str	r1, [r0, #0]
   1e442:	6042      	str	r2, [r0, #4]
   1e444:	6083      	str	r3, [r0, #8]
   1e446:	4770      	bx	lr

0001e448 <interface_tx_frame>:
   1e448:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1e44c:	b085      	sub	sp, #20
   1e44e:	4605      	mov	r5, r0
   1e450:	461c      	mov	r4, r3
   1e452:	6883      	ldr	r3, [r0, #8]
   1e454:	695e      	ldr	r6, [r3, #20]
   1e456:	b1e2      	cbz	r2, 1e492 <interface_tx_frame+0x4a>
   1e458:	9102      	str	r1, [sp, #8]
   1e45a:	fa1f f882 	uxth.w	r8, r2
   1e45e:	f8ad 800c 	strh.w	r8, [sp, #12]
   1e462:	f04f 0900 	mov.w	r9, #0
   1e466:	f8ad 900e 	strh.w	r9, [sp, #14]
   1e46a:	6b77      	ldr	r7, [r6, #52]	@ 0x34
   1e46c:	ab02      	add	r3, sp, #8
   1e46e:	464a      	mov	r2, r9
   1e470:	2120      	movs	r1, #32
   1e472:	47b8      	blx	r7
   1e474:	f8ad 8000 	strh.w	r8, [sp]
   1e478:	f8ad 9002 	strh.w	r9, [sp, #2]
   1e47c:	68e3      	ldr	r3, [r4, #12]
   1e47e:	f3c3 1380 	ubfx	r3, r3, #6, #1
   1e482:	f88d 3004 	strb.w	r3, [sp, #4]
   1e486:	6b77      	ldr	r7, [r6, #52]	@ 0x34
   1e488:	466b      	mov	r3, sp
   1e48a:	464a      	mov	r2, r9
   1e48c:	2137      	movs	r1, #55	@ 0x37
   1e48e:	4628      	mov	r0, r5
   1e490:	47b8      	blx	r7
   1e492:	68e3      	ldr	r3, [r4, #12]
   1e494:	f013 0f1d 	tst.w	r3, #29
   1e498:	d005      	beq.n	1e4a6 <interface_tx_frame+0x5e>
   1e49a:	6b77      	ldr	r7, [r6, #52]	@ 0x34
   1e49c:	4623      	mov	r3, r4
   1e49e:	2200      	movs	r2, #0
   1e4a0:	2105      	movs	r1, #5
   1e4a2:	4628      	mov	r0, r5
   1e4a4:	47b8      	blx	r7
   1e4a6:	6863      	ldr	r3, [r4, #4]
   1e4a8:	2b00      	cmp	r3, #0
   1e4aa:	db0c      	blt.n	1e4c6 <interface_tx_frame+0x7e>
   1e4ac:	6b77      	ldr	r7, [r6, #52]	@ 0x34
   1e4ae:	1d23      	adds	r3, r4, #4
   1e4b0:	2200      	movs	r2, #0
   1e4b2:	2110      	movs	r1, #16
   1e4b4:	4628      	mov	r0, r5
   1e4b6:	47b8      	blx	r7
   1e4b8:	6b77      	ldr	r7, [r6, #52]	@ 0x34
   1e4ba:	f104 0308 	add.w	r3, r4, #8
   1e4be:	2200      	movs	r2, #0
   1e4c0:	2151      	movs	r1, #81	@ 0x51
   1e4c2:	4628      	mov	r0, r5
   1e4c4:	47b8      	blx	r7
   1e4c6:	6b76      	ldr	r6, [r6, #52]	@ 0x34
   1e4c8:	f104 030c 	add.w	r3, r4, #12
   1e4cc:	2200      	movs	r2, #0
   1e4ce:	2104      	movs	r1, #4
   1e4d0:	4628      	mov	r0, r5
   1e4d2:	47b0      	blx	r6
   1e4d4:	b005      	add	sp, #20
   1e4d6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0001e4da <interface_get_timestamp>:
   1e4da:	b530      	push	{r4, r5, lr}
   1e4dc:	b083      	sub	sp, #12
   1e4de:	ab02      	add	r3, sp, #8
   1e4e0:	2400      	movs	r4, #0
   1e4e2:	2500      	movs	r5, #0
   1e4e4:	e963 4502 	strd	r4, r5, [r3, #-8]!
   1e4e8:	6882      	ldr	r2, [r0, #8]
   1e4ea:	6952      	ldr	r2, [r2, #20]
   1e4ec:	6b54      	ldr	r4, [r2, #52]	@ 0x34
   1e4ee:	2200      	movs	r2, #0
   1e4f0:	215f      	movs	r1, #95	@ 0x5f
   1e4f2:	47a0      	blx	r4
   1e4f4:	e9dd 0100 	ldrd	r0, r1, [sp]
   1e4f8:	b003      	add	sp, #12
   1e4fa:	bd30      	pop	{r4, r5, pc}

0001e4fc <interface_rx_disable>:
   1e4fc:	b510      	push	{r4, lr}
   1e4fe:	6883      	ldr	r3, [r0, #8]
   1e500:	695b      	ldr	r3, [r3, #20]
   1e502:	6b5c      	ldr	r4, [r3, #52]	@ 0x34
   1e504:	2300      	movs	r3, #0
   1e506:	461a      	mov	r2, r3
   1e508:	2103      	movs	r1, #3
   1e50a:	47a0      	blx	r4
   1e50c:	bd10      	pop	{r4, pc}
	...

0001e510 <interface_rx_enable>:
   1e510:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1e514:	b084      	sub	sp, #16
   1e516:	4604      	mov	r4, r0
   1e518:	6883      	ldr	r3, [r0, #8]
   1e51a:	695d      	ldr	r5, [r3, #20]
   1e51c:	f8d1 a008 	ldr.w	sl, [r1, #8]
   1e520:	680b      	ldr	r3, [r1, #0]
   1e522:	9303      	str	r3, [sp, #12]
   1e524:	684a      	ldr	r2, [r1, #4]
   1e526:	ab04      	add	r3, sp, #16
   1e528:	f843 2d08 	str.w	r2, [r3, #-8]!
   1e52c:	6b6f      	ldr	r7, [r5, #52]	@ 0x34
   1e52e:	2200      	movs	r2, #0
   1e530:	214f      	movs	r1, #79	@ 0x4f
   1e532:	47b8      	blx	r7
   1e534:	4607      	mov	r7, r0
   1e536:	b118      	cbz	r0, 1e540 <interface_rx_enable+0x30>
   1e538:	4638      	mov	r0, r7
   1e53a:	b004      	add	sp, #16
   1e53c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1e540:	68a3      	ldr	r3, [r4, #8]
   1e542:	695a      	ldr	r2, [r3, #20]
   1e544:	f994 304c 	ldrsb.w	r3, [r4, #76]	@ 0x4c
   1e548:	2b00      	cmp	r3, #0
   1e54a:	db3c      	blt.n	1e5c6 <interface_rx_enable+0xb6>
   1e54c:	6b57      	ldr	r7, [r2, #52]	@ 0x34
   1e54e:	ab01      	add	r3, sp, #4
   1e550:	2200      	movs	r2, #0
   1e552:	2157      	movs	r1, #87	@ 0x57
   1e554:	4620      	mov	r0, r4
   1e556:	47b8      	blx	r7
   1e558:	bba8      	cbnz	r0, 1e5c6 <interface_rx_enable+0xb6>
   1e55a:	f89d 2007 	ldrb.w	r2, [sp, #7]
   1e55e:	f89d 3006 	ldrb.w	r3, [sp, #6]
   1e562:	041b      	lsls	r3, r3, #16
   1e564:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1e568:	f89d 2004 	ldrb.w	r2, [sp, #4]
   1e56c:	4313      	orrs	r3, r2
   1e56e:	f89d 2005 	ldrb.w	r2, [sp, #5]
   1e572:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1e576:	f1ba 0f00 	cmp.w	sl, #0
   1e57a:	d131      	bne.n	1e5e0 <interface_rx_enable+0xd0>
   1e57c:	f503 3378 	add.w	r3, r3, #253952	@ 0x3e000
   1e580:	f503 7320 	add.w	r3, r3, #640	@ 0x280
   1e584:	9303      	str	r3, [sp, #12]
   1e586:	f04f 0a01 	mov.w	sl, #1
   1e58a:	68a3      	ldr	r3, [r4, #8]
   1e58c:	695f      	ldr	r7, [r3, #20]
   1e58e:	f10d 0302 	add.w	r3, sp, #2
   1e592:	2200      	movs	r2, #0
   1e594:	217b      	movs	r1, #123	@ 0x7b
   1e596:	4620      	mov	r0, r4
   1e598:	6b7e      	ldr	r6, [r7, #52]	@ 0x34
   1e59a:	47b0      	blx	r6
   1e59c:	f994 304d 	ldrsb.w	r3, [r4, #77]	@ 0x4d
   1e5a0:	2b01      	cmp	r3, #1
   1e5a2:	d04e      	beq.n	1e642 <interface_rx_enable+0x132>
   1e5a4:	f994 304c 	ldrsb.w	r3, [r4, #76]	@ 0x4c
   1e5a8:	2201      	movs	r2, #1
   1e5aa:	fa02 f303 	lsl.w	r3, r2, r3
   1e5ae:	f8bd 2002 	ldrh.w	r2, [sp, #2]
   1e5b2:	ea22 0203 	bic.w	r2, r2, r3
   1e5b6:	ab04      	add	r3, sp, #16
   1e5b8:	f823 2d0e 	strh.w	r2, [r3, #-14]!
   1e5bc:	6b7f      	ldr	r7, [r7, #52]	@ 0x34
   1e5be:	2200      	movs	r2, #0
   1e5c0:	216b      	movs	r1, #107	@ 0x6b
   1e5c2:	4620      	mov	r0, r4
   1e5c4:	47b8      	blx	r7
   1e5c6:	f1ba 0f00 	cmp.w	sl, #0
   1e5ca:	d14a      	bne.n	1e662 <interface_rx_enable+0x152>
   1e5cc:	6b6d      	ldr	r5, [r5, #52]	@ 0x34
   1e5ce:	2300      	movs	r3, #0
   1e5d0:	461a      	mov	r2, r3
   1e5d2:	211f      	movs	r1, #31
   1e5d4:	4620      	mov	r0, r4
   1e5d6:	47a8      	blx	r5
   1e5d8:	4607      	mov	r7, r0
   1e5da:	2800      	cmp	r0, #0
   1e5dc:	d150      	bne.n	1e680 <interface_rx_enable+0x170>
   1e5de:	e7ab      	b.n	1e538 <interface_rx_enable+0x28>
   1e5e0:	9a03      	ldr	r2, [sp, #12]
   1e5e2:	1ad3      	subs	r3, r2, r3
   1e5e4:	4698      	mov	r8, r3
   1e5e6:	ea4f 79e3 	mov.w	r9, r3, asr #31
   1e5ea:	ea4f 1249 	mov.w	r2, r9, lsl #5
   1e5ee:	0158      	lsls	r0, r3, #5
   1e5f0:	ea42 61d3 	orr.w	r1, r2, r3, lsr #27
   1e5f4:	1ac0      	subs	r0, r0, r3
   1e5f6:	eb61 0109 	sbc.w	r1, r1, r9
   1e5fa:	024b      	lsls	r3, r1, #9
   1e5fc:	ea43 53d0 	orr.w	r3, r3, r0, lsr #23
   1e600:	0242      	lsls	r2, r0, #9
   1e602:	eb12 0008 	adds.w	r0, r2, r8
   1e606:	eb43 0109 	adc.w	r1, r3, r9
   1e60a:	018b      	lsls	r3, r1, #6
   1e60c:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
   1e610:	0182      	lsls	r2, r0, #6
   1e612:	1a12      	subs	r2, r2, r0
   1e614:	eb63 0301 	sbc.w	r3, r3, r1
   1e618:	4616      	mov	r6, r2
   1e61a:	461f      	mov	r7, r3
   1e61c:	4a31      	ldr	r2, [pc, #196]	@ (1e6e4 <interface_rx_enable+0x1d4>)
   1e61e:	2300      	movs	r3, #0
   1e620:	eb16 0008 	adds.w	r0, r6, r8
   1e624:	eb47 0109 	adc.w	r1, r7, r9
   1e628:	f7f9 fefe 	bl	18428 <__aeabi_uldivmod>
   1e62c:	f5b0 7f7f 	cmp.w	r0, #1020	@ 0x3fc
   1e630:	ddab      	ble.n	1e58a <interface_rx_enable+0x7a>
   1e632:	68a3      	ldr	r3, [r4, #8]
   1e634:	695f      	ldr	r7, [r3, #20]
   1e636:	f5b0 707f 	subs.w	r0, r0, #1020	@ 0x3fc
   1e63a:	d0a8      	beq.n	1e58e <interface_rx_enable+0x7e>
   1e63c:	f7fc fbfb 	bl	1ae36 <deca_usleep>
   1e640:	e7a5      	b.n	1e58e <interface_rx_enable+0x7e>
   1e642:	f994 304c 	ldrsb.w	r3, [r4, #76]	@ 0x4c
   1e646:	2201      	movs	r2, #1
   1e648:	409a      	lsls	r2, r3
   1e64a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
   1e64e:	431a      	orrs	r2, r3
   1e650:	ab04      	add	r3, sp, #16
   1e652:	f823 2d0e 	strh.w	r2, [r3, #-14]!
   1e656:	6b7f      	ldr	r7, [r7, #52]	@ 0x34
   1e658:	2200      	movs	r2, #0
   1e65a:	216b      	movs	r1, #107	@ 0x6b
   1e65c:	4620      	mov	r0, r4
   1e65e:	47b8      	blx	r7
   1e660:	e7b1      	b.n	1e5c6 <interface_rx_enable+0xb6>
   1e662:	6b6e      	ldr	r6, [r5, #52]	@ 0x34
   1e664:	ab03      	add	r3, sp, #12
   1e666:	2200      	movs	r2, #0
   1e668:	2105      	movs	r1, #5
   1e66a:	4620      	mov	r0, r4
   1e66c:	47b0      	blx	r6
   1e66e:	4607      	mov	r7, r0
   1e670:	b930      	cbnz	r0, 1e680 <interface_rx_enable+0x170>
   1e672:	6b6d      	ldr	r5, [r5, #52]	@ 0x34
   1e674:	2300      	movs	r3, #0
   1e676:	2201      	movs	r2, #1
   1e678:	211f      	movs	r1, #31
   1e67a:	4620      	mov	r0, r4
   1e67c:	47a8      	blx	r5
   1e67e:	4607      	mov	r7, r0
   1e680:	f994 304c 	ldrsb.w	r3, [r4, #76]	@ 0x4c
   1e684:	2b00      	cmp	r3, #0
   1e686:	f6ff af57 	blt.w	1e538 <interface_rx_enable+0x28>
   1e68a:	68a3      	ldr	r3, [r4, #8]
   1e68c:	695d      	ldr	r5, [r3, #20]
   1e68e:	6b6e      	ldr	r6, [r5, #52]	@ 0x34
   1e690:	ab01      	add	r3, sp, #4
   1e692:	2200      	movs	r2, #0
   1e694:	217b      	movs	r1, #123	@ 0x7b
   1e696:	4620      	mov	r0, r4
   1e698:	47b0      	blx	r6
   1e69a:	f994 304d 	ldrsb.w	r3, [r4, #77]	@ 0x4d
   1e69e:	b18b      	cbz	r3, 1e6c4 <interface_rx_enable+0x1b4>
   1e6a0:	f994 304c 	ldrsb.w	r3, [r4, #76]	@ 0x4c
   1e6a4:	2201      	movs	r2, #1
   1e6a6:	fa02 f303 	lsl.w	r3, r2, r3
   1e6aa:	f8bd 2004 	ldrh.w	r2, [sp, #4]
   1e6ae:	ea22 0203 	bic.w	r2, r2, r3
   1e6b2:	ab04      	add	r3, sp, #16
   1e6b4:	f823 2d0c 	strh.w	r2, [r3, #-12]!
   1e6b8:	6b6d      	ldr	r5, [r5, #52]	@ 0x34
   1e6ba:	2200      	movs	r2, #0
   1e6bc:	216b      	movs	r1, #107	@ 0x6b
   1e6be:	4620      	mov	r0, r4
   1e6c0:	47a8      	blx	r5
   1e6c2:	e739      	b.n	1e538 <interface_rx_enable+0x28>
   1e6c4:	f994 304c 	ldrsb.w	r3, [r4, #76]	@ 0x4c
   1e6c8:	2201      	movs	r2, #1
   1e6ca:	409a      	lsls	r2, r3
   1e6cc:	f8bd 3004 	ldrh.w	r3, [sp, #4]
   1e6d0:	431a      	orrs	r2, r3
   1e6d2:	ab04      	add	r3, sp, #16
   1e6d4:	f823 2d0c 	strh.w	r2, [r3, #-12]!
   1e6d8:	6b6d      	ldr	r5, [r5, #52]	@ 0x34
   1e6da:	2200      	movs	r2, #0
   1e6dc:	216b      	movs	r1, #107	@ 0x6b
   1e6de:	4620      	mov	r0, r4
   1e6e0:	47a8      	blx	r5
   1e6e2:	e729      	b.n	1e538 <interface_rx_enable+0x28>
   1e6e4:	0ee09800 	.word	0x0ee09800

0001e6e8 <interface_read_rx_frame>:
   1e6e8:	b510      	push	{r4, lr}
   1e6ea:	b082      	sub	sp, #8
   1e6ec:	9100      	str	r1, [sp, #0]
   1e6ee:	f8ad 2004 	strh.w	r2, [sp, #4]
   1e6f2:	2200      	movs	r2, #0
   1e6f4:	f8ad 2006 	strh.w	r2, [sp, #6]
   1e6f8:	6883      	ldr	r3, [r0, #8]
   1e6fa:	695b      	ldr	r3, [r3, #20]
   1e6fc:	6b5c      	ldr	r4, [r3, #52]	@ 0x34
   1e6fe:	466b      	mov	r3, sp
   1e700:	2121      	movs	r1, #33	@ 0x21
   1e702:	47a0      	blx	r4
   1e704:	b002      	add	sp, #8
   1e706:	bd10      	pop	{r4, pc}

0001e708 <dwt_forcetrxoff>:
   1e708:	b510      	push	{r4, lr}
   1e70a:	4b05      	ldr	r3, [pc, #20]	@ (1e720 <dwt_forcetrxoff+0x18>)
   1e70c:	6818      	ldr	r0, [r3, #0]
   1e70e:	6883      	ldr	r3, [r0, #8]
   1e710:	691b      	ldr	r3, [r3, #16]
   1e712:	6adc      	ldr	r4, [r3, #44]	@ 0x2c
   1e714:	2300      	movs	r3, #0
   1e716:	461a      	mov	r2, r3
   1e718:	2103      	movs	r1, #3
   1e71a:	47a0      	blx	r4
   1e71c:	bd10      	pop	{r4, pc}
   1e71e:	bf00      	nop
   1e720:	1000870c 	.word	0x1000870c

0001e724 <dwt_rxenable>:
   1e724:	b508      	push	{r3, lr}
   1e726:	4b04      	ldr	r3, [pc, #16]	@ (1e738 <dwt_rxenable+0x14>)
   1e728:	681b      	ldr	r3, [r3, #0]
   1e72a:	689a      	ldr	r2, [r3, #8]
   1e72c:	6912      	ldr	r2, [r2, #16]
   1e72e:	6a12      	ldr	r2, [r2, #32]
   1e730:	4601      	mov	r1, r0
   1e732:	4618      	mov	r0, r3
   1e734:	4790      	blx	r2
   1e736:	bd08      	pop	{r3, pc}
   1e738:	1000870c 	.word	0x1000870c

0001e73c <dwt_generatecrc8>:
   1e73c:	2900      	cmp	r1, #0
   1e73e:	dd0d      	ble.n	1e75c <dwt_generatecrc8+0x20>
   1e740:	b410      	push	{r4}
   1e742:	1e43      	subs	r3, r0, #1
   1e744:	4419      	add	r1, r3
   1e746:	4610      	mov	r0, r2
   1e748:	4c05      	ldr	r4, [pc, #20]	@ (1e760 <dwt_generatecrc8+0x24>)
   1e74a:	f813 2f01 	ldrb.w	r2, [r3, #1]!
   1e74e:	4050      	eors	r0, r2
   1e750:	5c20      	ldrb	r0, [r4, r0]
   1e752:	428b      	cmp	r3, r1
   1e754:	d1f9      	bne.n	1e74a <dwt_generatecrc8+0xe>
   1e756:	f85d 4b04 	ldr.w	r4, [sp], #4
   1e75a:	4770      	bx	lr
   1e75c:	4610      	mov	r0, r2
   1e75e:	4770      	bx	lr
   1e760:	0002c12c 	.word	0x0002c12c

0001e764 <dwt_dbg_fn>:
   1e764:	2998      	cmp	r1, #152	@ 0x98
   1e766:	4802      	ldr	r0, [pc, #8]	@ (1e770 <dwt_dbg_fn+0xc>)
   1e768:	bf18      	it	ne
   1e76a:	2000      	movne	r0, #0
   1e76c:	4770      	bx	lr
   1e76e:	bf00      	nop
   1e770:	0002c324 	.word	0x0002c324

0001e774 <_deinit>:
   1e774:	4770      	bx	lr

0001e776 <dwt_xfer3xxx>:
   1e776:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1e77a:	b084      	sub	sp, #16
   1e77c:	4605      	mov	r5, r0
   1e77e:	460e      	mov	r6, r1
   1e780:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
   1e784:	1990      	adds	r0, r2, r6
   1e786:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
   1e78a:	4432      	add	r2, r6
   1e78c:	f3c2 4204 	ubfx	r2, r2, #16, #5
   1e790:	0084      	lsls	r4, r0, #2
   1e792:	ea44 2442 	orr.w	r4, r4, r2, lsl #9
   1e796:	ea41 0204 	orr.w	r2, r1, r4
   1e79a:	0a12      	lsrs	r2, r2, #8
   1e79c:	f88d 200c 	strb.w	r2, [sp, #12]
   1e7a0:	f001 0703 	and.w	r7, r1, #3
   1e7a4:	433c      	orrs	r4, r7
   1e7a6:	f88d 400d 	strb.w	r4, [sp, #13]
   1e7aa:	461f      	mov	r7, r3
   1e7ac:	b973      	cbnz	r3, 1e7cc <dwt_xfer3xxx+0x56>
   1e7ae:	2900      	cmp	r1, #0
   1e7b0:	d05c      	beq.n	1e86c <dwt_xfer3xxx+0xf6>
   1e7b2:	0073      	lsls	r3, r6, #1
   1e7b4:	f063 037e 	orn	r3, r3, #126	@ 0x7e
   1e7b8:	f88d 300c 	strb.w	r3, [sp, #12]
   1e7bc:	2401      	movs	r4, #1
   1e7be:	2900      	cmp	r1, #0
   1e7c0:	d02f      	beq.n	1e822 <dwt_xfer3xxx+0xac>
   1e7c2:	f5a1 4100 	sub.w	r1, r1, #32768	@ 0x8000
   1e7c6:	2903      	cmp	r1, #3
   1e7c8:	d90a      	bls.n	1e7e0 <dwt_xfer3xxx+0x6a>
   1e7ca:	e7fe      	b.n	1e7ca <dwt_xfer3xxx+0x54>
   1e7cc:	2800      	cmp	r0, #0
   1e7ce:	d14f      	bne.n	1e870 <dwt_xfer3xxx+0xfa>
   1e7d0:	f5b1 4f00 	cmp.w	r1, #32768	@ 0x8000
   1e7d4:	d003      	beq.n	1e7de <dwt_xfer3xxx+0x68>
   1e7d6:	2900      	cmp	r1, #0
   1e7d8:	d14a      	bne.n	1e870 <dwt_xfer3xxx+0xfa>
   1e7da:	2401      	movs	r4, #1
   1e7dc:	e021      	b.n	1e822 <dwt_xfer3xxx+0xac>
   1e7de:	2401      	movs	r4, #1
   1e7e0:	6d2b      	ldr	r3, [r5, #80]	@ 0x50
   1e7e2:	7d9b      	ldrb	r3, [r3, #22]
   1e7e4:	b94b      	cbnz	r3, 1e7fa <dwt_xfer3xxx+0x84>
   1e7e6:	682b      	ldr	r3, [r5, #0]
   1e7e8:	685d      	ldr	r5, [r3, #4]
   1e7ea:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   1e7ec:	463a      	mov	r2, r7
   1e7ee:	a903      	add	r1, sp, #12
   1e7f0:	4620      	mov	r0, r4
   1e7f2:	47a8      	blx	r5
   1e7f4:	b004      	add	sp, #16
   1e7f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1e7fa:	2200      	movs	r2, #0
   1e7fc:	4621      	mov	r1, r4
   1e7fe:	a803      	add	r0, sp, #12
   1e800:	f7ff ff9c 	bl	1e73c <dwt_generatecrc8>
   1e804:	4602      	mov	r2, r0
   1e806:	4639      	mov	r1, r7
   1e808:	980a      	ldr	r0, [sp, #40]	@ 0x28
   1e80a:	f7ff ff97 	bl	1e73c <dwt_generatecrc8>
   1e80e:	682b      	ldr	r3, [r5, #0]
   1e810:	9000      	str	r0, [sp, #0]
   1e812:	689d      	ldr	r5, [r3, #8]
   1e814:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   1e816:	463a      	mov	r2, r7
   1e818:	a903      	add	r1, sp, #12
   1e81a:	4620      	mov	r0, r4
   1e81c:	47a8      	blx	r5
   1e81e:	e7e9      	b.n	1e7f4 <dwt_xfer3xxx+0x7e>
   1e820:	2401      	movs	r4, #1
   1e822:	682b      	ldr	r3, [r5, #0]
   1e824:	f8d3 8000 	ldr.w	r8, [r3]
   1e828:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   1e82a:	463a      	mov	r2, r7
   1e82c:	a903      	add	r1, sp, #12
   1e82e:	4620      	mov	r0, r4
   1e830:	47c0      	blx	r8
   1e832:	6d2b      	ldr	r3, [r5, #80]	@ 0x50
   1e834:	7d9b      	ldrb	r3, [r3, #22]
   1e836:	2b02      	cmp	r3, #2
   1e838:	d1dc      	bne.n	1e7f4 <dwt_xfer3xxx+0x7e>
   1e83a:	2e18      	cmp	r6, #24
   1e83c:	d0da      	beq.n	1e7f4 <dwt_xfer3xxx+0x7e>
   1e83e:	2200      	movs	r2, #0
   1e840:	4621      	mov	r1, r4
   1e842:	a803      	add	r0, sp, #12
   1e844:	f7ff ff7a 	bl	1e73c <dwt_generatecrc8>
   1e848:	4602      	mov	r2, r0
   1e84a:	4639      	mov	r1, r7
   1e84c:	980a      	ldr	r0, [sp, #40]	@ 0x28
   1e84e:	f7ff ff75 	bl	1e73c <dwt_generatecrc8>
   1e852:	4604      	mov	r4, r0
   1e854:	2200      	movs	r2, #0
   1e856:	2118      	movs	r1, #24
   1e858:	4628      	mov	r0, r5
   1e85a:	f000 f841 	bl	1e8e0 <dwt_read8bitoffsetreg>
   1e85e:	4284      	cmp	r4, r0
   1e860:	d0c8      	beq.n	1e7f4 <dwt_xfer3xxx+0x7e>
   1e862:	68eb      	ldr	r3, [r5, #12]
   1e864:	2b00      	cmp	r3, #0
   1e866:	d0c5      	beq.n	1e7f4 <dwt_xfer3xxx+0x7e>
   1e868:	4798      	blx	r3
   1e86a:	e7c3      	b.n	1e7f4 <dwt_xfer3xxx+0x7e>
   1e86c:	2800      	cmp	r0, #0
   1e86e:	d0d7      	beq.n	1e820 <dwt_xfer3xxx+0xaa>
   1e870:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
   1e874:	f88d 200c 	strb.w	r2, [sp, #12]
   1e878:	2402      	movs	r4, #2
   1e87a:	e7a0      	b.n	1e7be <dwt_xfer3xxx+0x48>

0001e87c <dwt_readfromdevice>:
   1e87c:	b510      	push	{r4, lr}
   1e87e:	b082      	sub	sp, #8
   1e880:	2400      	movs	r4, #0
   1e882:	9401      	str	r4, [sp, #4]
   1e884:	9c04      	ldr	r4, [sp, #16]
   1e886:	9400      	str	r4, [sp, #0]
   1e888:	f7ff ff75 	bl	1e776 <dwt_xfer3xxx>
   1e88c:	b002      	add	sp, #8
   1e88e:	bd10      	pop	{r4, pc}

0001e890 <dwt_read32bitoffsetreg>:
   1e890:	b500      	push	{lr}
   1e892:	b085      	sub	sp, #20
   1e894:	ab03      	add	r3, sp, #12
   1e896:	9300      	str	r3, [sp, #0]
   1e898:	2304      	movs	r3, #4
   1e89a:	b292      	uxth	r2, r2
   1e89c:	f7ff ffee 	bl	1e87c <dwt_readfromdevice>
   1e8a0:	f10d 030f 	add.w	r3, sp, #15
   1e8a4:	f10d 010b 	add.w	r1, sp, #11
   1e8a8:	2000      	movs	r0, #0
   1e8aa:	f813 2901 	ldrb.w	r2, [r3], #-1
   1e8ae:	eb02 2000 	add.w	r0, r2, r0, lsl #8
   1e8b2:	428b      	cmp	r3, r1
   1e8b4:	d1f9      	bne.n	1e8aa <dwt_read32bitoffsetreg+0x1a>
   1e8b6:	b005      	add	sp, #20
   1e8b8:	f85d fb04 	ldr.w	pc, [sp], #4

0001e8bc <dwt_read16bitoffsetreg>:
   1e8bc:	b500      	push	{lr}
   1e8be:	b085      	sub	sp, #20
   1e8c0:	ab03      	add	r3, sp, #12
   1e8c2:	9300      	str	r3, [sp, #0]
   1e8c4:	2302      	movs	r3, #2
   1e8c6:	b292      	uxth	r2, r2
   1e8c8:	f7ff ffd8 	bl	1e87c <dwt_readfromdevice>
   1e8cc:	f89d 300d 	ldrb.w	r3, [sp, #13]
   1e8d0:	f89d 000c 	ldrb.w	r0, [sp, #12]
   1e8d4:	eb00 2003 	add.w	r0, r0, r3, lsl #8
   1e8d8:	b280      	uxth	r0, r0
   1e8da:	b005      	add	sp, #20
   1e8dc:	f85d fb04 	ldr.w	pc, [sp], #4

0001e8e0 <dwt_read8bitoffsetreg>:
   1e8e0:	b500      	push	{lr}
   1e8e2:	b085      	sub	sp, #20
   1e8e4:	f10d 030f 	add.w	r3, sp, #15
   1e8e8:	9300      	str	r3, [sp, #0]
   1e8ea:	2301      	movs	r3, #1
   1e8ec:	b292      	uxth	r2, r2
   1e8ee:	f7ff ffc5 	bl	1e87c <dwt_readfromdevice>
   1e8f2:	f89d 000f 	ldrb.w	r0, [sp, #15]
   1e8f6:	b005      	add	sp, #20
   1e8f8:	f85d fb04 	ldr.w	pc, [sp], #4

0001e8fc <ull_readdiagnostics>:
   1e8fc:	b530      	push	{r4, r5, lr}
   1e8fe:	b0bd      	sub	sp, #244	@ 0xf4
   1e900:	4605      	mov	r5, r0
   1e902:	460c      	mov	r4, r1
   1e904:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   1e906:	7bda      	ldrb	r2, [r3, #15]
   1e908:	2a01      	cmp	r2, #1
   1e90a:	d01c      	beq.n	1e946 <ull_readdiagnostics+0x4a>
   1e90c:	2a03      	cmp	r2, #3
   1e90e:	f040 81d4 	bne.w	1ecba <ull_readdiagnostics+0x3be>
   1e912:	7e1b      	ldrb	r3, [r3, #24]
   1e914:	f013 0f08 	tst.w	r3, #8
   1e918:	d10c      	bne.n	1e934 <ull_readdiagnostics+0x38>
   1e91a:	f013 0f04 	tst.w	r3, #4
   1e91e:	ab02      	add	r3, sp, #8
   1e920:	9300      	str	r3, [sp, #0]
   1e922:	bf14      	ite	ne
   1e924:	2338      	movne	r3, #56	@ 0x38
   1e926:	2320      	moveq	r3, #32
   1e928:	2200      	movs	r2, #0
   1e92a:	f44f 11f0 	mov.w	r1, #1966080	@ 0x1e0000
   1e92e:	f7ff ffa5 	bl	1e87c <dwt_readfromdevice>
   1e932:	e019      	b.n	1e968 <ull_readdiagnostics+0x6c>
   1e934:	ab02      	add	r3, sp, #8
   1e936:	9300      	str	r3, [sp, #0]
   1e938:	23e8      	movs	r3, #232	@ 0xe8
   1e93a:	2200      	movs	r2, #0
   1e93c:	f44f 11f0 	mov.w	r1, #1966080	@ 0x1e0000
   1e940:	f7ff ff9c 	bl	1e87c <dwt_readfromdevice>
   1e944:	e010      	b.n	1e968 <ull_readdiagnostics+0x6c>
   1e946:	7e1b      	ldrb	r3, [r3, #24]
   1e948:	f013 0f08 	tst.w	r3, #8
   1e94c:	f040 81ac 	bne.w	1eca8 <ull_readdiagnostics+0x3ac>
   1e950:	f013 0f04 	tst.w	r3, #4
   1e954:	ab02      	add	r3, sp, #8
   1e956:	9300      	str	r3, [sp, #0]
   1e958:	bf14      	ite	ne
   1e95a:	2338      	movne	r3, #56	@ 0x38
   1e95c:	2320      	moveq	r3, #32
   1e95e:	2200      	movs	r2, #0
   1e960:	f44f 11c0 	mov.w	r1, #1572864	@ 0x180000
   1e964:	f7ff ff8a 	bl	1e87c <dwt_readfromdevice>
   1e968:	f10d 0217 	add.w	r2, sp, #23
   1e96c:	f104 031a 	add.w	r3, r4, #26
   1e970:	f104 0020 	add.w	r0, r4, #32
   1e974:	f812 1f01 	ldrb.w	r1, [r2, #1]!
   1e978:	f803 1b01 	strb.w	r1, [r3], #1
   1e97c:	4283      	cmp	r3, r0
   1e97e:	d1f9      	bne.n	1e974 <ull_readdiagnostics+0x78>
   1e980:	f89d 2015 	ldrb.w	r2, [sp, #21]
   1e984:	f89d 3014 	ldrb.w	r3, [sp, #20]
   1e988:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1e98c:	f3c3 030c 	ubfx	r3, r3, #0, #13
   1e990:	8463      	strh	r3, [r4, #34]	@ 0x22
   1e992:	f89d 201f 	ldrb.w	r2, [sp, #31]
   1e996:	f89d 301e 	ldrb.w	r3, [sp, #30]
   1e99a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1e99e:	f3c3 030d 	ubfx	r3, r3, #0, #14
   1e9a2:	f413 5f00 	tst.w	r3, #8192	@ 0x2000
   1e9a6:	bf1c      	itt	ne
   1e9a8:	ea6f 4383 	mvnne.w	r3, r3, lsl #18
   1e9ac:	ea6f 4393 	mvnne.w	r3, r3, lsr #18
   1e9b0:	8423      	strh	r3, [r4, #32]
   1e9b2:	f89d 2025 	ldrb.w	r2, [sp, #37]	@ 0x25
   1e9b6:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
   1e9ba:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1e9be:	f3c3 030b 	ubfx	r3, r3, #0, #12
   1e9c2:	87e3      	strh	r3, [r4, #62]	@ 0x3e
   1e9c4:	6d2b      	ldr	r3, [r5, #80]	@ 0x50
   1e9c6:	7e1b      	ldrb	r3, [r3, #24]
   1e9c8:	f013 0f02 	tst.w	r3, #2
   1e9cc:	f040 816a 	bne.w	1eca4 <ull_readdiagnostics+0x3a8>
   1e9d0:	aa0a      	add	r2, sp, #40	@ 0x28
   1e9d2:	1e63      	subs	r3, r4, #1
   1e9d4:	1d20      	adds	r0, r4, #4
   1e9d6:	f812 1b01 	ldrb.w	r1, [r2], #1
   1e9da:	f803 1f01 	strb.w	r1, [r3, #1]!
   1e9de:	79d1      	ldrb	r1, [r2, #7]
   1e9e0:	7219      	strb	r1, [r3, #8]
   1e9e2:	7bd1      	ldrb	r1, [r2, #15]
   1e9e4:	7459      	strb	r1, [r3, #17]
   1e9e6:	4283      	cmp	r3, r0
   1e9e8:	d1f5      	bne.n	1e9d6 <ull_readdiagnostics+0xda>
   1e9ea:	f89d 302f 	ldrb.w	r3, [sp, #47]	@ 0x2f
   1e9ee:	7163      	strb	r3, [r4, #5]
   1e9f0:	f89d 202e 	ldrb.w	r2, [sp, #46]	@ 0x2e
   1e9f4:	f89d 302d 	ldrb.w	r3, [sp, #45]	@ 0x2d
   1e9f8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1e9fc:	80e3      	strh	r3, [r4, #6]
   1e9fe:	f89d 2037 	ldrb.w	r2, [sp, #55]	@ 0x37
   1ea02:	f89d 3036 	ldrb.w	r3, [sp, #54]	@ 0x36
   1ea06:	eb03 2302 	add.w	r3, r3, r2, lsl #8
   1ea0a:	f3c3 13cf 	ubfx	r3, r3, #7, #16
   1ea0e:	f8a4 300d 	strh.w	r3, [r4, #13]
   1ea12:	f89d 2032 	ldrb.w	r2, [sp, #50]	@ 0x32
   1ea16:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
   1ea1a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ea1e:	f8a4 300f 	strh.w	r3, [r4, #15]
   1ea22:	f89d 203f 	ldrb.w	r2, [sp, #63]	@ 0x3f
   1ea26:	f89d 303e 	ldrb.w	r3, [sp, #62]	@ 0x3e
   1ea2a:	eb03 2302 	add.w	r3, r3, r2, lsl #8
   1ea2e:	f3c3 13cf 	ubfx	r3, r3, #7, #16
   1ea32:	82e3      	strh	r3, [r4, #22]
   1ea34:	f89d 203a 	ldrb.w	r2, [sp, #58]	@ 0x3a
   1ea38:	f89d 3039 	ldrb.w	r3, [sp, #57]	@ 0x39
   1ea3c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ea40:	8323      	strh	r3, [r4, #24]
   1ea42:	6d2b      	ldr	r3, [r5, #80]	@ 0x50
   1ea44:	7e1b      	ldrb	r3, [r3, #24]
   1ea46:	f013 0f04 	tst.w	r3, #4
   1ea4a:	f040 812b 	bne.w	1eca4 <ull_readdiagnostics+0x3a8>
   1ea4e:	f89d 2043 	ldrb.w	r2, [sp, #67]	@ 0x43
   1ea52:	f89d 3042 	ldrb.w	r3, [sp, #66]	@ 0x42
   1ea56:	041b      	lsls	r3, r3, #16
   1ea58:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1ea5c:	f89d 2040 	ldrb.w	r2, [sp, #64]	@ 0x40
   1ea60:	4313      	orrs	r3, r2
   1ea62:	f89d 2041 	ldrb.w	r2, [sp, #65]	@ 0x41
   1ea66:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ea6a:	f023 4360 	bic.w	r3, r3, #3758096384	@ 0xe0000000
   1ea6e:	6263      	str	r3, [r4, #36]	@ 0x24
   1ea70:	f89d 2047 	ldrb.w	r2, [sp, #71]	@ 0x47
   1ea74:	f89d 3046 	ldrb.w	r3, [sp, #70]	@ 0x46
   1ea78:	041b      	lsls	r3, r3, #16
   1ea7a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1ea7e:	f89d 2044 	ldrb.w	r2, [sp, #68]	@ 0x44
   1ea82:	4313      	orrs	r3, r2
   1ea84:	f89d 2045 	ldrb.w	r2, [sp, #69]	@ 0x45
   1ea88:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ea8c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
   1ea90:	62a3      	str	r3, [r4, #40]	@ 0x28
   1ea92:	f89d 204b 	ldrb.w	r2, [sp, #75]	@ 0x4b
   1ea96:	f89d 304a 	ldrb.w	r3, [sp, #74]	@ 0x4a
   1ea9a:	041b      	lsls	r3, r3, #16
   1ea9c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1eaa0:	f89d 2048 	ldrb.w	r2, [sp, #72]	@ 0x48
   1eaa4:	4313      	orrs	r3, r2
   1eaa6:	f89d 2049 	ldrb.w	r2, [sp, #73]	@ 0x49
   1eaaa:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1eaae:	f3c3 0310 	ubfx	r3, r3, #0, #17
   1eab2:	62e3      	str	r3, [r4, #44]	@ 0x2c
   1eab4:	f89d 204f 	ldrb.w	r2, [sp, #79]	@ 0x4f
   1eab8:	f89d 304e 	ldrb.w	r3, [sp, #78]	@ 0x4e
   1eabc:	041b      	lsls	r3, r3, #16
   1eabe:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1eac2:	f89d 204c 	ldrb.w	r2, [sp, #76]	@ 0x4c
   1eac6:	4313      	orrs	r3, r2
   1eac8:	f89d 204d 	ldrb.w	r2, [sp, #77]	@ 0x4d
   1eacc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ead0:	f3c3 0315 	ubfx	r3, r3, #0, #22
   1ead4:	6323      	str	r3, [r4, #48]	@ 0x30
   1ead6:	f89d 2053 	ldrb.w	r2, [sp, #83]	@ 0x53
   1eada:	f89d 3052 	ldrb.w	r3, [sp, #82]	@ 0x52
   1eade:	041b      	lsls	r3, r3, #16
   1eae0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1eae4:	f89d 2050 	ldrb.w	r2, [sp, #80]	@ 0x50
   1eae8:	4313      	orrs	r3, r2
   1eaea:	f89d 2051 	ldrb.w	r2, [sp, #81]	@ 0x51
   1eaee:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1eaf2:	f3c3 0315 	ubfx	r3, r3, #0, #22
   1eaf6:	6363      	str	r3, [r4, #52]	@ 0x34
   1eaf8:	f89d 2057 	ldrb.w	r2, [sp, #87]	@ 0x57
   1eafc:	f89d 3056 	ldrb.w	r3, [sp, #86]	@ 0x56
   1eb00:	041b      	lsls	r3, r3, #16
   1eb02:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1eb06:	f89d 2054 	ldrb.w	r2, [sp, #84]	@ 0x54
   1eb0a:	4313      	orrs	r3, r2
   1eb0c:	f89d 2055 	ldrb.w	r2, [sp, #85]	@ 0x55
   1eb10:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1eb14:	f3c3 0315 	ubfx	r3, r3, #0, #22
   1eb18:	63a3      	str	r3, [r4, #56]	@ 0x38
   1eb1a:	f89d 2065 	ldrb.w	r2, [sp, #101]	@ 0x65
   1eb1e:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
   1eb22:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1eb26:	87a3      	strh	r3, [r4, #60]	@ 0x3c
   1eb28:	f89d 2077 	ldrb.w	r2, [sp, #119]	@ 0x77
   1eb2c:	f89d 3076 	ldrb.w	r3, [sp, #118]	@ 0x76
   1eb30:	041b      	lsls	r3, r3, #16
   1eb32:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1eb36:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
   1eb3a:	4313      	orrs	r3, r2
   1eb3c:	f89d 2075 	ldrb.w	r2, [sp, #117]	@ 0x75
   1eb40:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1eb44:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
   1eb48:	6423      	str	r3, [r4, #64]	@ 0x40
   1eb4a:	f89d 2079 	ldrb.w	r2, [sp, #121]	@ 0x79
   1eb4e:	f89d 3078 	ldrb.w	r3, [sp, #120]	@ 0x78
   1eb52:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1eb56:	6463      	str	r3, [r4, #68]	@ 0x44
   1eb58:	f89d 207f 	ldrb.w	r2, [sp, #127]	@ 0x7f
   1eb5c:	f89d 307e 	ldrb.w	r3, [sp, #126]	@ 0x7e
   1eb60:	041b      	lsls	r3, r3, #16
   1eb62:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1eb66:	f89d 207c 	ldrb.w	r2, [sp, #124]	@ 0x7c
   1eb6a:	4313      	orrs	r3, r2
   1eb6c:	f89d 207d 	ldrb.w	r2, [sp, #125]	@ 0x7d
   1eb70:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1eb74:	f3c3 0315 	ubfx	r3, r3, #0, #22
   1eb78:	64a3      	str	r3, [r4, #72]	@ 0x48
   1eb7a:	f89d 2083 	ldrb.w	r2, [sp, #131]	@ 0x83
   1eb7e:	f89d 3082 	ldrb.w	r3, [sp, #130]	@ 0x82
   1eb82:	041b      	lsls	r3, r3, #16
   1eb84:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1eb88:	f89d 2080 	ldrb.w	r2, [sp, #128]	@ 0x80
   1eb8c:	4313      	orrs	r3, r2
   1eb8e:	f89d 2081 	ldrb.w	r2, [sp, #129]	@ 0x81
   1eb92:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1eb96:	f3c3 0315 	ubfx	r3, r3, #0, #22
   1eb9a:	64e3      	str	r3, [r4, #76]	@ 0x4c
   1eb9c:	f89d 2087 	ldrb.w	r2, [sp, #135]	@ 0x87
   1eba0:	f89d 3086 	ldrb.w	r3, [sp, #134]	@ 0x86
   1eba4:	041b      	lsls	r3, r3, #16
   1eba6:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1ebaa:	f89d 2084 	ldrb.w	r2, [sp, #132]	@ 0x84
   1ebae:	4313      	orrs	r3, r2
   1ebb0:	f89d 2085 	ldrb.w	r2, [sp, #133]	@ 0x85
   1ebb4:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ebb8:	f3c3 0315 	ubfx	r3, r3, #0, #22
   1ebbc:	6523      	str	r3, [r4, #80]	@ 0x50
   1ebbe:	f89d 2095 	ldrb.w	r2, [sp, #149]	@ 0x95
   1ebc2:	f89d 3094 	ldrb.w	r3, [sp, #148]	@ 0x94
   1ebc6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ebca:	f3c3 030e 	ubfx	r3, r3, #0, #15
   1ebce:	f8a4 3054 	strh.w	r3, [r4, #84]	@ 0x54
   1ebd2:	f89d 20a5 	ldrb.w	r2, [sp, #165]	@ 0xa5
   1ebd6:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
   1ebda:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ebde:	f3c3 030b 	ubfx	r3, r3, #0, #12
   1ebe2:	f8a4 3056 	strh.w	r3, [r4, #86]	@ 0x56
   1ebe6:	f89d 20bf 	ldrb.w	r2, [sp, #191]	@ 0xbf
   1ebea:	f89d 30be 	ldrb.w	r3, [sp, #190]	@ 0xbe
   1ebee:	041b      	lsls	r3, r3, #16
   1ebf0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1ebf4:	f89d 20bc 	ldrb.w	r2, [sp, #188]	@ 0xbc
   1ebf8:	4313      	orrs	r3, r2
   1ebfa:	f89d 20bd 	ldrb.w	r2, [sp, #189]	@ 0xbd
   1ebfe:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ec02:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
   1ec06:	65a3      	str	r3, [r4, #88]	@ 0x58
   1ec08:	f89d 20c1 	ldrb.w	r2, [sp, #193]	@ 0xc1
   1ec0c:	f89d 30c0 	ldrb.w	r3, [sp, #192]	@ 0xc0
   1ec10:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ec14:	65e3      	str	r3, [r4, #92]	@ 0x5c
   1ec16:	f89d 20c7 	ldrb.w	r2, [sp, #199]	@ 0xc7
   1ec1a:	f89d 30c6 	ldrb.w	r3, [sp, #198]	@ 0xc6
   1ec1e:	041b      	lsls	r3, r3, #16
   1ec20:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1ec24:	f89d 20c4 	ldrb.w	r2, [sp, #196]	@ 0xc4
   1ec28:	4313      	orrs	r3, r2
   1ec2a:	f89d 20c5 	ldrb.w	r2, [sp, #197]	@ 0xc5
   1ec2e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ec32:	f3c3 0315 	ubfx	r3, r3, #0, #22
   1ec36:	6623      	str	r3, [r4, #96]	@ 0x60
   1ec38:	f89d 20cb 	ldrb.w	r2, [sp, #203]	@ 0xcb
   1ec3c:	f89d 30ca 	ldrb.w	r3, [sp, #202]	@ 0xca
   1ec40:	041b      	lsls	r3, r3, #16
   1ec42:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1ec46:	f89d 20c8 	ldrb.w	r2, [sp, #200]	@ 0xc8
   1ec4a:	4313      	orrs	r3, r2
   1ec4c:	f89d 20c9 	ldrb.w	r2, [sp, #201]	@ 0xc9
   1ec50:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ec54:	f3c3 0315 	ubfx	r3, r3, #0, #22
   1ec58:	6663      	str	r3, [r4, #100]	@ 0x64
   1ec5a:	f89d 20cf 	ldrb.w	r2, [sp, #207]	@ 0xcf
   1ec5e:	f89d 30ce 	ldrb.w	r3, [sp, #206]	@ 0xce
   1ec62:	041b      	lsls	r3, r3, #16
   1ec64:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1ec68:	f89d 20cc 	ldrb.w	r2, [sp, #204]	@ 0xcc
   1ec6c:	4313      	orrs	r3, r2
   1ec6e:	f89d 20cd 	ldrb.w	r2, [sp, #205]	@ 0xcd
   1ec72:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ec76:	f3c3 0315 	ubfx	r3, r3, #0, #22
   1ec7a:	66a3      	str	r3, [r4, #104]	@ 0x68
   1ec7c:	f89d 20dd 	ldrb.w	r2, [sp, #221]	@ 0xdd
   1ec80:	f89d 30dc 	ldrb.w	r3, [sp, #220]	@ 0xdc
   1ec84:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ec88:	f3c3 030e 	ubfx	r3, r3, #0, #15
   1ec8c:	f8a4 306c 	strh.w	r3, [r4, #108]	@ 0x6c
   1ec90:	f89d 20ed 	ldrb.w	r2, [sp, #237]	@ 0xed
   1ec94:	f89d 30ec 	ldrb.w	r3, [sp, #236]	@ 0xec
   1ec98:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ec9c:	f3c3 030b 	ubfx	r3, r3, #0, #12
   1eca0:	f8a4 306e 	strh.w	r3, [r4, #110]	@ 0x6e
   1eca4:	b03d      	add	sp, #244	@ 0xf4
   1eca6:	bd30      	pop	{r4, r5, pc}
   1eca8:	ab02      	add	r3, sp, #8
   1ecaa:	9300      	str	r3, [sp, #0]
   1ecac:	23e8      	movs	r3, #232	@ 0xe8
   1ecae:	2200      	movs	r2, #0
   1ecb0:	f44f 11c0 	mov.w	r1, #1572864	@ 0x180000
   1ecb4:	f7ff fde2 	bl	1e87c <dwt_readfromdevice>
   1ecb8:	e656      	b.n	1e968 <ull_readdiagnostics+0x6c>
   1ecba:	7e1b      	ldrb	r3, [r3, #24]
   1ecbc:	f013 0f01 	tst.w	r3, #1
   1ecc0:	f000 819f 	beq.w	1f002 <ull_readdiagnostics+0x706>
   1ecc4:	ab02      	add	r3, sp, #8
   1ecc6:	9300      	str	r3, [sp, #0]
   1ecc8:	236c      	movs	r3, #108	@ 0x6c
   1ecca:	2200      	movs	r2, #0
   1eccc:	f44f 2140 	mov.w	r1, #786432	@ 0xc0000
   1ecd0:	f7ff fdd4 	bl	1e87c <dwt_readfromdevice>
   1ecd4:	ab1d      	add	r3, sp, #116	@ 0x74
   1ecd6:	9300      	str	r3, [sp, #0]
   1ecd8:	236c      	movs	r3, #108	@ 0x6c
   1ecda:	2200      	movs	r2, #0
   1ecdc:	f44f 2150 	mov.w	r1, #851968	@ 0xd0000
   1ece0:	4628      	mov	r0, r5
   1ece2:	f7ff fdcb 	bl	1e87c <dwt_readfromdevice>
   1ece6:	aa02      	add	r2, sp, #8
   1ece8:	1e63      	subs	r3, r4, #1
   1ecea:	1d20      	adds	r0, r4, #4
   1ecec:	f812 1b01 	ldrb.w	r1, [r2], #1
   1ecf0:	f803 1f01 	strb.w	r1, [r3, #1]!
   1ecf4:	79d1      	ldrb	r1, [r2, #7]
   1ecf6:	7219      	strb	r1, [r3, #8]
   1ecf8:	7bd1      	ldrb	r1, [r2, #15]
   1ecfa:	7459      	strb	r1, [r3, #17]
   1ecfc:	7dd1      	ldrb	r1, [r2, #23]
   1ecfe:	7699      	strb	r1, [r3, #26]
   1ed00:	4283      	cmp	r3, r0
   1ed02:	d1f3      	bne.n	1ecec <ull_readdiagnostics+0x3f0>
   1ed04:	f89d 3025 	ldrb.w	r3, [sp, #37]	@ 0x25
   1ed08:	77e3      	strb	r3, [r4, #31]
   1ed0a:	f89d 300f 	ldrb.w	r3, [sp, #15]
   1ed0e:	7163      	strb	r3, [r4, #5]
   1ed10:	f89d 200e 	ldrb.w	r2, [sp, #14]
   1ed14:	f89d 300d 	ldrb.w	r3, [sp, #13]
   1ed18:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ed1c:	80e3      	strh	r3, [r4, #6]
   1ed1e:	f89d 3016 	ldrb.w	r3, [sp, #22]
   1ed22:	f89d 2017 	ldrb.w	r2, [sp, #23]
   1ed26:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
   1ed2a:	f3c2 12cf 	ubfx	r2, r2, #7, #16
   1ed2e:	f8a4 200d 	strh.w	r2, [r4, #13]
   1ed32:	f89d 2015 	ldrb.w	r2, [sp, #21]
   1ed36:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
   1ed3a:	f8a4 200f 	strh.w	r2, [r4, #15]
   1ed3e:	f89d 201f 	ldrb.w	r2, [sp, #31]
   1ed42:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ed46:	f3c3 13cf 	ubfx	r3, r3, #7, #16
   1ed4a:	82e3      	strh	r3, [r4, #22]
   1ed4c:	f89d 201e 	ldrb.w	r2, [sp, #30]
   1ed50:	f89d 301d 	ldrb.w	r3, [sp, #29]
   1ed54:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ed58:	8323      	strh	r3, [r4, #24]
   1ed5a:	f89d 2027 	ldrb.w	r2, [sp, #39]	@ 0x27
   1ed5e:	f89d 3026 	ldrb.w	r3, [sp, #38]	@ 0x26
   1ed62:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ed66:	f3c3 030d 	ubfx	r3, r3, #0, #14
   1ed6a:	f413 5f00 	tst.w	r3, #8192	@ 0x2000
   1ed6e:	bf1c      	itt	ne
   1ed70:	ea6f 4383 	mvnne.w	r3, r3, lsl #18
   1ed74:	ea6f 4393 	mvnne.w	r3, r3, lsr #18
   1ed78:	8423      	strh	r3, [r4, #32]
   1ed7a:	f89d 2029 	ldrb.w	r2, [sp, #41]	@ 0x29
   1ed7e:	f89d 3028 	ldrb.w	r3, [sp, #40]	@ 0x28
   1ed82:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ed86:	f3c3 030c 	ubfx	r3, r3, #0, #13
   1ed8a:	8463      	strh	r3, [r4, #34]	@ 0x22
   1ed8c:	f89d 202f 	ldrb.w	r2, [sp, #47]	@ 0x2f
   1ed90:	f89d 302e 	ldrb.w	r3, [sp, #46]	@ 0x2e
   1ed94:	041b      	lsls	r3, r3, #16
   1ed96:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1ed9a:	f89d 202c 	ldrb.w	r2, [sp, #44]	@ 0x2c
   1ed9e:	4313      	orrs	r3, r2
   1eda0:	f89d 202d 	ldrb.w	r2, [sp, #45]	@ 0x2d
   1eda4:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1eda8:	f023 4360 	bic.w	r3, r3, #3758096384	@ 0xe0000000
   1edac:	6263      	str	r3, [r4, #36]	@ 0x24
   1edae:	6d2b      	ldr	r3, [r5, #80]	@ 0x50
   1edb0:	7e1b      	ldrb	r3, [r3, #24]
   1edb2:	f013 0f01 	tst.w	r3, #1
   1edb6:	f43f af75 	beq.w	1eca4 <ull_readdiagnostics+0x3a8>
   1edba:	f89d 2033 	ldrb.w	r2, [sp, #51]	@ 0x33
   1edbe:	f89d 3032 	ldrb.w	r3, [sp, #50]	@ 0x32
   1edc2:	041b      	lsls	r3, r3, #16
   1edc4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1edc8:	f89d 2030 	ldrb.w	r2, [sp, #48]	@ 0x30
   1edcc:	4313      	orrs	r3, r2
   1edce:	f89d 2031 	ldrb.w	r2, [sp, #49]	@ 0x31
   1edd2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1edd6:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
   1edda:	62a3      	str	r3, [r4, #40]	@ 0x28
   1eddc:	f89d 2037 	ldrb.w	r2, [sp, #55]	@ 0x37
   1ede0:	f89d 3036 	ldrb.w	r3, [sp, #54]	@ 0x36
   1ede4:	041b      	lsls	r3, r3, #16
   1ede6:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1edea:	f89d 2034 	ldrb.w	r2, [sp, #52]	@ 0x34
   1edee:	4313      	orrs	r3, r2
   1edf0:	f89d 2035 	ldrb.w	r2, [sp, #53]	@ 0x35
   1edf4:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1edf8:	f3c3 0310 	ubfx	r3, r3, #0, #17
   1edfc:	62e3      	str	r3, [r4, #44]	@ 0x2c
   1edfe:	f89d 203b 	ldrb.w	r2, [sp, #59]	@ 0x3b
   1ee02:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
   1ee06:	041b      	lsls	r3, r3, #16
   1ee08:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1ee0c:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
   1ee10:	4313      	orrs	r3, r2
   1ee12:	f89d 2039 	ldrb.w	r2, [sp, #57]	@ 0x39
   1ee16:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ee1a:	f3c3 0315 	ubfx	r3, r3, #0, #22
   1ee1e:	6323      	str	r3, [r4, #48]	@ 0x30
   1ee20:	f89d 203f 	ldrb.w	r2, [sp, #63]	@ 0x3f
   1ee24:	f89d 303e 	ldrb.w	r3, [sp, #62]	@ 0x3e
   1ee28:	041b      	lsls	r3, r3, #16
   1ee2a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1ee2e:	f89d 203c 	ldrb.w	r2, [sp, #60]	@ 0x3c
   1ee32:	4313      	orrs	r3, r2
   1ee34:	f89d 203d 	ldrb.w	r2, [sp, #61]	@ 0x3d
   1ee38:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ee3c:	f3c3 0315 	ubfx	r3, r3, #0, #22
   1ee40:	6363      	str	r3, [r4, #52]	@ 0x34
   1ee42:	f89d 2043 	ldrb.w	r2, [sp, #67]	@ 0x43
   1ee46:	f89d 3042 	ldrb.w	r3, [sp, #66]	@ 0x42
   1ee4a:	041b      	lsls	r3, r3, #16
   1ee4c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1ee50:	f89d 2040 	ldrb.w	r2, [sp, #64]	@ 0x40
   1ee54:	4313      	orrs	r3, r2
   1ee56:	f89d 2041 	ldrb.w	r2, [sp, #65]	@ 0x41
   1ee5a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ee5e:	f3c3 0315 	ubfx	r3, r3, #0, #22
   1ee62:	63a3      	str	r3, [r4, #56]	@ 0x38
   1ee64:	f89d 2051 	ldrb.w	r2, [sp, #81]	@ 0x51
   1ee68:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
   1ee6c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ee70:	87a3      	strh	r3, [r4, #60]	@ 0x3c
   1ee72:	f89d 2061 	ldrb.w	r2, [sp, #97]	@ 0x61
   1ee76:	f89d 3060 	ldrb.w	r3, [sp, #96]	@ 0x60
   1ee7a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ee7e:	f3c3 030b 	ubfx	r3, r3, #0, #12
   1ee82:	87e3      	strh	r3, [r4, #62]	@ 0x3e
   1ee84:	f89d 2067 	ldrb.w	r2, [sp, #103]	@ 0x67
   1ee88:	f89d 3066 	ldrb.w	r3, [sp, #102]	@ 0x66
   1ee8c:	041b      	lsls	r3, r3, #16
   1ee8e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1ee92:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
   1ee96:	4313      	orrs	r3, r2
   1ee98:	f89d 2065 	ldrb.w	r2, [sp, #101]	@ 0x65
   1ee9c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1eea0:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
   1eea4:	6423      	str	r3, [r4, #64]	@ 0x40
   1eea6:	f89d 2069 	ldrb.w	r2, [sp, #105]	@ 0x69
   1eeaa:	f89d 3068 	ldrb.w	r3, [sp, #104]	@ 0x68
   1eeae:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1eeb2:	6463      	str	r3, [r4, #68]	@ 0x44
   1eeb4:	f89d 206f 	ldrb.w	r2, [sp, #111]	@ 0x6f
   1eeb8:	f89d 306e 	ldrb.w	r3, [sp, #110]	@ 0x6e
   1eebc:	041b      	lsls	r3, r3, #16
   1eebe:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1eec2:	f89d 206c 	ldrb.w	r2, [sp, #108]	@ 0x6c
   1eec6:	4313      	orrs	r3, r2
   1eec8:	f89d 206d 	ldrb.w	r2, [sp, #109]	@ 0x6d
   1eecc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1eed0:	f3c3 0315 	ubfx	r3, r3, #0, #22
   1eed4:	64a3      	str	r3, [r4, #72]	@ 0x48
   1eed6:	f89d 2073 	ldrb.w	r2, [sp, #115]	@ 0x73
   1eeda:	f89d 3072 	ldrb.w	r3, [sp, #114]	@ 0x72
   1eede:	041b      	lsls	r3, r3, #16
   1eee0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1eee4:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
   1eee8:	4313      	orrs	r3, r2
   1eeea:	f89d 2071 	ldrb.w	r2, [sp, #113]	@ 0x71
   1eeee:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1eef2:	f3c3 0315 	ubfx	r3, r3, #0, #22
   1eef6:	64e3      	str	r3, [r4, #76]	@ 0x4c
   1eef8:	f89d 2077 	ldrb.w	r2, [sp, #119]	@ 0x77
   1eefc:	f89d 3076 	ldrb.w	r3, [sp, #118]	@ 0x76
   1ef00:	041b      	lsls	r3, r3, #16
   1ef02:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1ef06:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
   1ef0a:	4313      	orrs	r3, r2
   1ef0c:	f89d 2075 	ldrb.w	r2, [sp, #117]	@ 0x75
   1ef10:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ef14:	f3c3 0315 	ubfx	r3, r3, #0, #22
   1ef18:	6523      	str	r3, [r4, #80]	@ 0x50
   1ef1a:	f89d 2085 	ldrb.w	r2, [sp, #133]	@ 0x85
   1ef1e:	f89d 3084 	ldrb.w	r3, [sp, #132]	@ 0x84
   1ef22:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ef26:	f3c3 030e 	ubfx	r3, r3, #0, #15
   1ef2a:	f8a4 3054 	strh.w	r3, [r4, #84]	@ 0x54
   1ef2e:	f89d 2095 	ldrb.w	r2, [sp, #149]	@ 0x95
   1ef32:	f89d 3094 	ldrb.w	r3, [sp, #148]	@ 0x94
   1ef36:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ef3a:	f3c3 030b 	ubfx	r3, r3, #0, #12
   1ef3e:	f8a4 3056 	strh.w	r3, [r4, #86]	@ 0x56
   1ef42:	f89d 20af 	ldrb.w	r2, [sp, #175]	@ 0xaf
   1ef46:	f89d 30ae 	ldrb.w	r3, [sp, #174]	@ 0xae
   1ef4a:	041b      	lsls	r3, r3, #16
   1ef4c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1ef50:	f89d 20ac 	ldrb.w	r2, [sp, #172]	@ 0xac
   1ef54:	4313      	orrs	r3, r2
   1ef56:	f89d 20ad 	ldrb.w	r2, [sp, #173]	@ 0xad
   1ef5a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ef5e:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
   1ef62:	65a3      	str	r3, [r4, #88]	@ 0x58
   1ef64:	f89d 20b1 	ldrb.w	r2, [sp, #177]	@ 0xb1
   1ef68:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
   1ef6c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ef70:	65e3      	str	r3, [r4, #92]	@ 0x5c
   1ef72:	f89d 20b7 	ldrb.w	r2, [sp, #183]	@ 0xb7
   1ef76:	f89d 30b6 	ldrb.w	r3, [sp, #182]	@ 0xb6
   1ef7a:	041b      	lsls	r3, r3, #16
   1ef7c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1ef80:	f89d 20b4 	ldrb.w	r2, [sp, #180]	@ 0xb4
   1ef84:	4313      	orrs	r3, r2
   1ef86:	f89d 20b5 	ldrb.w	r2, [sp, #181]	@ 0xb5
   1ef8a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1ef8e:	f3c3 0315 	ubfx	r3, r3, #0, #22
   1ef92:	6623      	str	r3, [r4, #96]	@ 0x60
   1ef94:	f89d 20bb 	ldrb.w	r2, [sp, #187]	@ 0xbb
   1ef98:	f89d 30ba 	ldrb.w	r3, [sp, #186]	@ 0xba
   1ef9c:	041b      	lsls	r3, r3, #16
   1ef9e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1efa2:	f89d 20b8 	ldrb.w	r2, [sp, #184]	@ 0xb8
   1efa6:	4313      	orrs	r3, r2
   1efa8:	f89d 20b9 	ldrb.w	r2, [sp, #185]	@ 0xb9
   1efac:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1efb0:	f3c3 0315 	ubfx	r3, r3, #0, #22
   1efb4:	6663      	str	r3, [r4, #100]	@ 0x64
   1efb6:	f89d 20bf 	ldrb.w	r2, [sp, #191]	@ 0xbf
   1efba:	f89d 30be 	ldrb.w	r3, [sp, #190]	@ 0xbe
   1efbe:	041b      	lsls	r3, r3, #16
   1efc0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   1efc4:	f89d 20bc 	ldrb.w	r2, [sp, #188]	@ 0xbc
   1efc8:	4313      	orrs	r3, r2
   1efca:	f89d 20bd 	ldrb.w	r2, [sp, #189]	@ 0xbd
   1efce:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1efd2:	f3c3 0315 	ubfx	r3, r3, #0, #22
   1efd6:	66a3      	str	r3, [r4, #104]	@ 0x68
   1efd8:	f89d 20cd 	ldrb.w	r2, [sp, #205]	@ 0xcd
   1efdc:	f89d 30cc 	ldrb.w	r3, [sp, #204]	@ 0xcc
   1efe0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1efe4:	f3c3 030e 	ubfx	r3, r3, #0, #15
   1efe8:	f8a4 306c 	strh.w	r3, [r4, #108]	@ 0x6c
   1efec:	f89d 20dd 	ldrb.w	r2, [sp, #221]	@ 0xdd
   1eff0:	f89d 30dc 	ldrb.w	r3, [sp, #220]	@ 0xdc
   1eff4:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   1eff8:	f3c3 030b 	ubfx	r3, r3, #0, #12
   1effc:	f8a4 306e 	strh.w	r3, [r4, #110]	@ 0x6e
   1f000:	e650      	b.n	1eca4 <ull_readdiagnostics+0x3a8>
   1f002:	ab02      	add	r3, sp, #8
   1f004:	9300      	str	r3, [sp, #0]
   1f006:	2328      	movs	r3, #40	@ 0x28
   1f008:	2200      	movs	r2, #0
   1f00a:	f44f 2140 	mov.w	r1, #786432	@ 0xc0000
   1f00e:	f7ff fc35 	bl	1e87c <dwt_readfromdevice>
   1f012:	e668      	b.n	1ece6 <ull_readdiagnostics+0x3ea>

0001f014 <ull_readrxtimestamp>:
   1f014:	b500      	push	{lr}
   1f016:	b083      	sub	sp, #12
   1f018:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   1f01a:	7bdb      	ldrb	r3, [r3, #15]
   1f01c:	2b01      	cmp	r3, #1
   1f01e:	d00b      	beq.n	1f038 <ull_readrxtimestamp+0x24>
   1f020:	2b03      	cmp	r3, #3
   1f022:	d110      	bne.n	1f046 <ull_readrxtimestamp+0x32>
   1f024:	9100      	str	r1, [sp, #0]
   1f026:	2305      	movs	r3, #5
   1f028:	2204      	movs	r2, #4
   1f02a:	f44f 11f0 	mov.w	r1, #1966080	@ 0x1e0000
   1f02e:	f7ff fc25 	bl	1e87c <dwt_readfromdevice>
   1f032:	b003      	add	sp, #12
   1f034:	f85d fb04 	ldr.w	pc, [sp], #4
   1f038:	9100      	str	r1, [sp, #0]
   1f03a:	2305      	movs	r3, #5
   1f03c:	2200      	movs	r2, #0
   1f03e:	4905      	ldr	r1, [pc, #20]	@ (1f054 <ull_readrxtimestamp+0x40>)
   1f040:	f7ff fc1c 	bl	1e87c <dwt_readfromdevice>
   1f044:	e7f5      	b.n	1f032 <ull_readrxtimestamp+0x1e>
   1f046:	9100      	str	r1, [sp, #0]
   1f048:	2305      	movs	r3, #5
   1f04a:	2200      	movs	r2, #0
   1f04c:	2164      	movs	r1, #100	@ 0x64
   1f04e:	f7ff fc15 	bl	1e87c <dwt_readfromdevice>
   1f052:	e7ee      	b.n	1f032 <ull_readrxtimestamp+0x1e>
   1f054:	00180004 	.word	0x00180004

0001f058 <dwt_writetodevice>:
   1f058:	b510      	push	{r4, lr}
   1f05a:	b082      	sub	sp, #8
   1f05c:	f44f 4400 	mov.w	r4, #32768	@ 0x8000
   1f060:	9401      	str	r4, [sp, #4]
   1f062:	9c04      	ldr	r4, [sp, #16]
   1f064:	9400      	str	r4, [sp, #0]
   1f066:	f7ff fb86 	bl	1e776 <dwt_xfer3xxx>
   1f06a:	b002      	add	sp, #8
   1f06c:	bd10      	pop	{r4, pc}

0001f06e <dwt_write8bitoffsetreg>:
   1f06e:	b510      	push	{r4, lr}
   1f070:	b084      	sub	sp, #16
   1f072:	ac04      	add	r4, sp, #16
   1f074:	f804 3d01 	strb.w	r3, [r4, #-1]!
   1f078:	9400      	str	r4, [sp, #0]
   1f07a:	2301      	movs	r3, #1
   1f07c:	b292      	uxth	r2, r2
   1f07e:	f7ff ffeb 	bl	1f058 <dwt_writetodevice>
   1f082:	b004      	add	sp, #16
   1f084:	bd10      	pop	{r4, pc}
	...

0001f088 <ull_getframelength>:
   1f088:	b510      	push	{r4, lr}
   1f08a:	4604      	mov	r4, r0
   1f08c:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   1f08e:	7bdb      	ldrb	r3, [r3, #15]
   1f090:	2b01      	cmp	r3, #1
   1f092:	d013      	beq.n	1f0bc <ull_getframelength+0x34>
   1f094:	2b03      	cmp	r3, #3
   1f096:	d11d      	bne.n	1f0d4 <ull_getframelength+0x4c>
   1f098:	23f0      	movs	r3, #240	@ 0xf0
   1f09a:	2200      	movs	r2, #0
   1f09c:	4912      	ldr	r1, [pc, #72]	@ (1f0e8 <ull_getframelength+0x60>)
   1f09e:	f7ff ffe6 	bl	1f06e <dwt_write8bitoffsetreg>
   1f0a2:	2200      	movs	r2, #0
   1f0a4:	f44f 11f0 	mov.w	r1, #1966080	@ 0x1e0000
   1f0a8:	4620      	mov	r0, r4
   1f0aa:	f7ff fc07 	bl	1e8bc <dwt_read16bitoffsetreg>
   1f0ae:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   1f0b0:	7b1a      	ldrb	r2, [r3, #12]
   1f0b2:	b1a2      	cbz	r2, 1f0de <ull_getframelength+0x56>
   1f0b4:	f3c0 0009 	ubfx	r0, r0, #0, #10
   1f0b8:	8458      	strh	r0, [r3, #34]	@ 0x22
   1f0ba:	bd10      	pop	{r4, pc}
   1f0bc:	230f      	movs	r3, #15
   1f0be:	2200      	movs	r2, #0
   1f0c0:	4909      	ldr	r1, [pc, #36]	@ (1f0e8 <ull_getframelength+0x60>)
   1f0c2:	f7ff ffd4 	bl	1f06e <dwt_write8bitoffsetreg>
   1f0c6:	2200      	movs	r2, #0
   1f0c8:	f44f 11c0 	mov.w	r1, #1572864	@ 0x180000
   1f0cc:	4620      	mov	r0, r4
   1f0ce:	f7ff fbf5 	bl	1e8bc <dwt_read16bitoffsetreg>
   1f0d2:	e7ec      	b.n	1f0ae <ull_getframelength+0x26>
   1f0d4:	2200      	movs	r2, #0
   1f0d6:	214c      	movs	r1, #76	@ 0x4c
   1f0d8:	f7ff fbf0 	bl	1e8bc <dwt_read16bitoffsetreg>
   1f0dc:	e7e7      	b.n	1f0ae <ull_getframelength+0x26>
   1f0de:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
   1f0e2:	8458      	strh	r0, [r3, #34]	@ 0x22
   1f0e4:	e7e9      	b.n	1f0ba <ull_getframelength+0x32>
   1f0e6:	bf00      	nop
   1f0e8:	00010024 	.word	0x00010024

0001f0ec <ull_configeventcounters>:
   1f0ec:	b538      	push	{r3, r4, r5, lr}
   1f0ee:	4605      	mov	r5, r0
   1f0f0:	460c      	mov	r4, r1
   1f0f2:	2302      	movs	r3, #2
   1f0f4:	2200      	movs	r2, #0
   1f0f6:	f44f 2170 	mov.w	r1, #983040	@ 0xf0000
   1f0fa:	f7ff ffb8 	bl	1f06e <dwt_write8bitoffsetreg>
   1f0fe:	b904      	cbnz	r4, 1f102 <ull_configeventcounters+0x16>
   1f100:	bd38      	pop	{r3, r4, r5, pc}
   1f102:	2301      	movs	r3, #1
   1f104:	2200      	movs	r2, #0
   1f106:	f44f 2170 	mov.w	r1, #983040	@ 0xf0000
   1f10a:	4628      	mov	r0, r5
   1f10c:	f7ff ffaf 	bl	1f06e <dwt_write8bitoffsetreg>
   1f110:	e7f6      	b.n	1f100 <ull_configeventcounters+0x14>

0001f112 <dwt_write16bitoffsetreg>:
   1f112:	b500      	push	{lr}
   1f114:	b085      	sub	sp, #20
   1f116:	f88d 300c 	strb.w	r3, [sp, #12]
   1f11a:	0a1b      	lsrs	r3, r3, #8
   1f11c:	f88d 300d 	strb.w	r3, [sp, #13]
   1f120:	ab03      	add	r3, sp, #12
   1f122:	9300      	str	r3, [sp, #0]
   1f124:	2302      	movs	r3, #2
   1f126:	b292      	uxth	r2, r2
   1f128:	f7ff ff96 	bl	1f058 <dwt_writetodevice>
   1f12c:	b005      	add	sp, #20
   1f12e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0001f134 <ull_clearaonconfig>:
   1f134:	b538      	push	{r3, r4, r5, lr}
   1f136:	4604      	mov	r4, r0
   1f138:	2300      	movs	r3, #0
   1f13a:	461a      	mov	r2, r3
   1f13c:	f44f 2120 	mov.w	r1, #655360	@ 0xa0000
   1f140:	f7ff ffe7 	bl	1f112 <dwt_write16bitoffsetreg>
   1f144:	2300      	movs	r3, #0
   1f146:	461a      	mov	r2, r3
   1f148:	4908      	ldr	r1, [pc, #32]	@ (1f16c <ull_clearaonconfig+0x38>)
   1f14a:	4620      	mov	r0, r4
   1f14c:	f7ff ff8f 	bl	1f06e <dwt_write8bitoffsetreg>
   1f150:	4d07      	ldr	r5, [pc, #28]	@ (1f170 <ull_clearaonconfig+0x3c>)
   1f152:	2300      	movs	r3, #0
   1f154:	461a      	mov	r2, r3
   1f156:	4629      	mov	r1, r5
   1f158:	4620      	mov	r0, r4
   1f15a:	f7ff ff88 	bl	1f06e <dwt_write8bitoffsetreg>
   1f15e:	2302      	movs	r3, #2
   1f160:	2200      	movs	r2, #0
   1f162:	4629      	mov	r1, r5
   1f164:	4620      	mov	r0, r4
   1f166:	f7ff ff82 	bl	1f06e <dwt_write8bitoffsetreg>
   1f16a:	bd38      	pop	{r3, r4, r5, pc}
   1f16c:	000a0014 	.word	0x000a0014
   1f170:	000a0004 	.word	0x000a0004

0001f174 <ull_force_clocks>:
   1f174:	b508      	push	{r3, lr}
   1f176:	2901      	cmp	r1, #1
   1f178:	d002      	beq.n	1f180 <ull_force_clocks+0xc>
   1f17a:	2905      	cmp	r1, #5
   1f17c:	d007      	beq.n	1f18e <ull_force_clocks+0x1a>
   1f17e:	bd08      	pop	{r3, pc}
   1f180:	f641 0322 	movw	r3, #6178	@ 0x1822
   1f184:	2200      	movs	r2, #0
   1f186:	4905      	ldr	r1, [pc, #20]	@ (1f19c <ull_force_clocks+0x28>)
   1f188:	f7ff ffc3 	bl	1f112 <dwt_write16bitoffsetreg>
   1f18c:	e7f7      	b.n	1f17e <ull_force_clocks+0xa>
   1f18e:	f44f 7300 	mov.w	r3, #512	@ 0x200
   1f192:	2200      	movs	r2, #0
   1f194:	4901      	ldr	r1, [pc, #4]	@ (1f19c <ull_force_clocks+0x28>)
   1f196:	f7ff ffbc 	bl	1f112 <dwt_write16bitoffsetreg>
   1f19a:	e7f0      	b.n	1f17e <ull_force_clocks+0xa>
   1f19c:	00110004 	.word	0x00110004

0001f1a0 <__dwt_otp_write_wdata_id_reg>:
   1f1a0:	b538      	push	{r3, r4, r5, lr}
   1f1a2:	4605      	mov	r5, r0
   1f1a4:	460c      	mov	r4, r1
   1f1a6:	f441 7300 	orr.w	r3, r1, #512	@ 0x200
   1f1aa:	b29b      	uxth	r3, r3
   1f1ac:	2200      	movs	r2, #0
   1f1ae:	f44f 2130 	mov.w	r1, #720896	@ 0xb0000
   1f1b2:	f7ff ffae 	bl	1f112 <dwt_write16bitoffsetreg>
   1f1b6:	b2a3      	uxth	r3, r4
   1f1b8:	2200      	movs	r2, #0
   1f1ba:	f44f 2130 	mov.w	r1, #720896	@ 0xb0000
   1f1be:	4628      	mov	r0, r5
   1f1c0:	f7ff ffa7 	bl	1f112 <dwt_write16bitoffsetreg>
   1f1c4:	bd38      	pop	{r3, r4, r5, pc}
	...

0001f1c8 <_dwt_otpread>:
   1f1c8:	b570      	push	{r4, r5, r6, lr}
   1f1ca:	4604      	mov	r4, r0
   1f1cc:	460e      	mov	r6, r1
   1f1ce:	4d0c      	ldr	r5, [pc, #48]	@ (1f200 <_dwt_otpread+0x38>)
   1f1d0:	2301      	movs	r3, #1
   1f1d2:	2200      	movs	r2, #0
   1f1d4:	4629      	mov	r1, r5
   1f1d6:	f7ff ff9c 	bl	1f112 <dwt_write16bitoffsetreg>
   1f1da:	4633      	mov	r3, r6
   1f1dc:	2200      	movs	r2, #0
   1f1de:	4909      	ldr	r1, [pc, #36]	@ (1f204 <_dwt_otpread+0x3c>)
   1f1e0:	4620      	mov	r0, r4
   1f1e2:	f7ff ff96 	bl	1f112 <dwt_write16bitoffsetreg>
   1f1e6:	2302      	movs	r3, #2
   1f1e8:	2200      	movs	r2, #0
   1f1ea:	4629      	mov	r1, r5
   1f1ec:	4620      	mov	r0, r4
   1f1ee:	f7ff ff90 	bl	1f112 <dwt_write16bitoffsetreg>
   1f1f2:	2200      	movs	r2, #0
   1f1f4:	4904      	ldr	r1, [pc, #16]	@ (1f208 <_dwt_otpread+0x40>)
   1f1f6:	4620      	mov	r0, r4
   1f1f8:	f7ff fb4a 	bl	1e890 <dwt_read32bitoffsetreg>
   1f1fc:	bd70      	pop	{r4, r5, r6, pc}
   1f1fe:	bf00      	nop
   1f200:	000b0008 	.word	0x000b0008
   1f204:	000b0004 	.word	0x000b0004
   1f208:	000b0010 	.word	0x000b0010

0001f20c <ull_aon_read>:
   1f20c:	b538      	push	{r3, r4, r5, lr}
   1f20e:	4604      	mov	r4, r0
   1f210:	460b      	mov	r3, r1
   1f212:	2200      	movs	r2, #0
   1f214:	490a      	ldr	r1, [pc, #40]	@ (1f240 <ull_aon_read+0x34>)
   1f216:	f7ff ff7c 	bl	1f112 <dwt_write16bitoffsetreg>
   1f21a:	4d0a      	ldr	r5, [pc, #40]	@ (1f244 <ull_aon_read+0x38>)
   1f21c:	2388      	movs	r3, #136	@ 0x88
   1f21e:	2200      	movs	r2, #0
   1f220:	4629      	mov	r1, r5
   1f222:	4620      	mov	r0, r4
   1f224:	f7ff ff23 	bl	1f06e <dwt_write8bitoffsetreg>
   1f228:	2300      	movs	r3, #0
   1f22a:	461a      	mov	r2, r3
   1f22c:	4629      	mov	r1, r5
   1f22e:	4620      	mov	r0, r4
   1f230:	f7ff ff1d 	bl	1f06e <dwt_write8bitoffsetreg>
   1f234:	2200      	movs	r2, #0
   1f236:	4904      	ldr	r1, [pc, #16]	@ (1f248 <ull_aon_read+0x3c>)
   1f238:	4620      	mov	r0, r4
   1f23a:	f7ff fb51 	bl	1e8e0 <dwt_read8bitoffsetreg>
   1f23e:	bd38      	pop	{r3, r4, r5, pc}
   1f240:	000a000c 	.word	0x000a000c
   1f244:	000a0004 	.word	0x000a0004
   1f248:	000a0008 	.word	0x000a0008

0001f24c <ull_aon_write>:
   1f24c:	b570      	push	{r4, r5, r6, lr}
   1f24e:	4604      	mov	r4, r0
   1f250:	460b      	mov	r3, r1
   1f252:	4615      	mov	r5, r2
   1f254:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
   1f258:	bf34      	ite	cc
   1f25a:	2600      	movcc	r6, #0
   1f25c:	2620      	movcs	r6, #32
   1f25e:	2200      	movs	r2, #0
   1f260:	490b      	ldr	r1, [pc, #44]	@ (1f290 <ull_aon_write+0x44>)
   1f262:	f7ff ff56 	bl	1f112 <dwt_write16bitoffsetreg>
   1f266:	462b      	mov	r3, r5
   1f268:	2200      	movs	r2, #0
   1f26a:	490a      	ldr	r1, [pc, #40]	@ (1f294 <ull_aon_write+0x48>)
   1f26c:	4620      	mov	r0, r4
   1f26e:	f7ff fefe 	bl	1f06e <dwt_write8bitoffsetreg>
   1f272:	4d09      	ldr	r5, [pc, #36]	@ (1f298 <ull_aon_write+0x4c>)
   1f274:	f046 0390 	orr.w	r3, r6, #144	@ 0x90
   1f278:	2200      	movs	r2, #0
   1f27a:	4629      	mov	r1, r5
   1f27c:	4620      	mov	r0, r4
   1f27e:	f7ff fef6 	bl	1f06e <dwt_write8bitoffsetreg>
   1f282:	2300      	movs	r3, #0
   1f284:	461a      	mov	r2, r3
   1f286:	4629      	mov	r1, r5
   1f288:	4620      	mov	r0, r4
   1f28a:	f7ff fef0 	bl	1f06e <dwt_write8bitoffsetreg>
   1f28e:	bd70      	pop	{r4, r5, r6, pc}
   1f290:	000a000c 	.word	0x000a000c
   1f294:	000a0010 	.word	0x000a0010
   1f298:	000a0004 	.word	0x000a0004

0001f29c <ull_configuresleep>:
   1f29c:	b570      	push	{r4, r5, r6, lr}
   1f29e:	4604      	mov	r4, r0
   1f2a0:	460d      	mov	r5, r1
   1f2a2:	4616      	mov	r6, r2
   1f2a4:	2200      	movs	r2, #0
   1f2a6:	f240 110b 	movw	r1, #267	@ 0x10b
   1f2aa:	f7ff ffcf 	bl	1f24c <ull_aon_write>
   1f2ae:	f44f 7182 	mov.w	r1, #260	@ 0x104
   1f2b2:	4620      	mov	r0, r4
   1f2b4:	f7ff ffaa 	bl	1f20c <ull_aon_read>
   1f2b8:	f000 021f 	and.w	r2, r0, #31
   1f2bc:	f44f 7182 	mov.w	r1, #260	@ 0x104
   1f2c0:	4620      	mov	r0, r4
   1f2c2:	f7ff ffc3 	bl	1f24c <ull_aon_write>
   1f2c6:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   1f2c8:	8a5a      	ldrh	r2, [r3, #18]
   1f2ca:	4315      	orrs	r5, r2
   1f2cc:	825d      	strh	r5, [r3, #18]
   1f2ce:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   1f2d0:	8a5b      	ldrh	r3, [r3, #18]
   1f2d2:	2200      	movs	r2, #0
   1f2d4:	f44f 2120 	mov.w	r1, #655360	@ 0xa0000
   1f2d8:	4620      	mov	r0, r4
   1f2da:	f7ff ff1a 	bl	1f112 <dwt_write16bitoffsetreg>
   1f2de:	4633      	mov	r3, r6
   1f2e0:	2200      	movs	r2, #0
   1f2e2:	4902      	ldr	r1, [pc, #8]	@ (1f2ec <ull_configuresleep+0x50>)
   1f2e4:	4620      	mov	r0, r4
   1f2e6:	f7ff fec2 	bl	1f06e <dwt_write8bitoffsetreg>
   1f2ea:	bd70      	pop	{r4, r5, r6, pc}
   1f2ec:	000a0014 	.word	0x000a0014

0001f2f0 <ull_signal_rx_buff_free>:
   1f2f0:	b510      	push	{r4, lr}
   1f2f2:	b082      	sub	sp, #8
   1f2f4:	4604      	mov	r4, r0
   1f2f6:	2200      	movs	r2, #0
   1f2f8:	9200      	str	r2, [sp, #0]
   1f2fa:	4613      	mov	r3, r2
   1f2fc:	2113      	movs	r1, #19
   1f2fe:	f7ff feab 	bl	1f058 <dwt_writetodevice>
   1f302:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   1f304:	7bda      	ldrb	r2, [r3, #15]
   1f306:	2a03      	cmp	r2, #3
   1f308:	bf0c      	ite	eq
   1f30a:	2201      	moveq	r2, #1
   1f30c:	2203      	movne	r2, #3
   1f30e:	73da      	strb	r2, [r3, #15]
   1f310:	b002      	add	sp, #8
   1f312:	bd10      	pop	{r4, pc}

0001f314 <dwt_write32bitoffsetreg>:
   1f314:	b510      	push	{r4, lr}
   1f316:	b084      	sub	sp, #16
   1f318:	f88d 300c 	strb.w	r3, [sp, #12]
   1f31c:	0a1c      	lsrs	r4, r3, #8
   1f31e:	f88d 400d 	strb.w	r4, [sp, #13]
   1f322:	0c1c      	lsrs	r4, r3, #16
   1f324:	f88d 400e 	strb.w	r4, [sp, #14]
   1f328:	0e1b      	lsrs	r3, r3, #24
   1f32a:	f88d 300f 	strb.w	r3, [sp, #15]
   1f32e:	ab03      	add	r3, sp, #12
   1f330:	9300      	str	r3, [sp, #0]
   1f332:	2304      	movs	r3, #4
   1f334:	b292      	uxth	r2, r2
   1f336:	f7ff fe8f 	bl	1f058 <dwt_writetodevice>
   1f33a:	b004      	add	sp, #16
   1f33c:	bd10      	pop	{r4, pc}
	...

0001f340 <ull_isr>:
   1f340:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1f342:	4604      	mov	r4, r0
   1f344:	2200      	movs	r2, #0
   1f346:	f44f 11f8 	mov.w	r1, #2031616	@ 0x1f0000
   1f34a:	f7ff fac9 	bl	1e8e0 <dwt_read8bitoffsetreg>
   1f34e:	4605      	mov	r5, r0
   1f350:	2200      	movs	r2, #0
   1f352:	2144      	movs	r1, #68	@ 0x44
   1f354:	4620      	mov	r0, r4
   1f356:	f7ff fa9b 	bl	1e890 <dwt_read32bitoffsetreg>
   1f35a:	4606      	mov	r6, r0
   1f35c:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   1f35e:	2200      	movs	r2, #0
   1f360:	845a      	strh	r2, [r3, #34]	@ 0x22
   1f362:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
   1f366:	61da      	str	r2, [r3, #28]
   1f368:	841a      	strh	r2, [r3, #32]
   1f36a:	629a      	str	r2, [r3, #40]	@ 0x28
   1f36c:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   1f36e:	629c      	str	r4, [r3, #40]	@ 0x28
   1f370:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   1f372:	61d8      	str	r0, [r3, #28]
   1f374:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   1f376:	7dd3      	ldrb	r3, [r2, #23]
   1f378:	f003 0303 	and.w	r3, r3, #3
   1f37c:	2b03      	cmp	r3, #3
   1f37e:	d079      	beq.n	1f474 <ull_isr+0x134>
   1f380:	f416 6f80 	tst.w	r6, #1024	@ 0x400
   1f384:	d005      	beq.n	1f392 <ull_isr+0x52>
   1f386:	f892 3024 	ldrb.w	r3, [r2, #36]	@ 0x24
   1f38a:	f043 0304 	orr.w	r3, r3, #4
   1f38e:	f882 3024 	strb.w	r3, [r2, #36]	@ 0x24
   1f392:	f015 0f80 	tst.w	r5, #128	@ 0x80
   1f396:	d174      	bne.n	1f482 <ull_isr+0x142>
   1f398:	f015 0f01 	tst.w	r5, #1
   1f39c:	f040 80a3 	bne.w	1f4e6 <ull_isr+0x1a6>
   1f3a0:	f015 0f40 	tst.w	r5, #64	@ 0x40
   1f3a4:	d00b      	beq.n	1f3be <ull_isr+0x7e>
   1f3a6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
   1f3a8:	b113      	cbz	r3, 1f3b0 <ull_isr+0x70>
   1f3aa:	6d20      	ldr	r0, [r4, #80]	@ 0x50
   1f3ac:	301c      	adds	r0, #28
   1f3ae:	4798      	blx	r3
   1f3b0:	f44f 73c0 	mov.w	r3, #384	@ 0x180
   1f3b4:	2202      	movs	r2, #2
   1f3b6:	2144      	movs	r1, #68	@ 0x44
   1f3b8:	4620      	mov	r0, r4
   1f3ba:	f7ff feaa 	bl	1f112 <dwt_write16bitoffsetreg>
   1f3be:	f015 0f08 	tst.w	r5, #8
   1f3c2:	f000 80ea 	beq.w	1f59a <ull_isr+0x25a>
   1f3c6:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   1f3c8:	2200      	movs	r2, #0
   1f3ca:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
   1f3ce:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   1f3d0:	7bdb      	ldrb	r3, [r3, #15]
   1f3d2:	2b00      	cmp	r3, #0
   1f3d4:	f040 8095 	bne.w	1f502 <ull_isr+0x1c2>
   1f3d8:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   1f3da:	61de      	str	r6, [r3, #28]
   1f3dc:	f416 2f80 	tst.w	r6, #262144	@ 0x40000
   1f3e0:	f000 80a9 	beq.w	1f536 <ull_isr+0x1f6>
   1f3e4:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   1f3e6:	f892 3024 	ldrb.w	r3, [r2, #36]	@ 0x24
   1f3ea:	f043 0308 	orr.w	r3, r3, #8
   1f3ee:	f882 3024 	strb.w	r3, [r2, #36]	@ 0x24
   1f3f2:	f44f 2780 	mov.w	r7, #262144	@ 0x40000
   1f3f6:	f016 5f80 	tst.w	r6, #268435456	@ 0x10000000
   1f3fa:	d008      	beq.n	1f40e <ull_isr+0xce>
   1f3fc:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   1f3fe:	f892 3024 	ldrb.w	r3, [r2, #36]	@ 0x24
   1f402:	f043 0310 	orr.w	r3, r3, #16
   1f406:	f882 3024 	strb.w	r3, [r2, #36]	@ 0x24
   1f40a:	f047 5780 	orr.w	r7, r7, #268435456	@ 0x10000000
   1f40e:	f416 5f00 	tst.w	r6, #8192	@ 0x2000
   1f412:	d006      	beq.n	1f422 <ull_isr+0xe2>
   1f414:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   1f416:	7dd3      	ldrb	r3, [r2, #23]
   1f418:	f003 0303 	and.w	r3, r3, #3
   1f41c:	2b03      	cmp	r3, #3
   1f41e:	f000 8096 	beq.w	1f54e <ull_isr+0x20e>
   1f422:	f416 4f80 	tst.w	r6, #16384	@ 0x4000
   1f426:	f040 809e 	bne.w	1f566 <ull_isr+0x226>
   1f42a:	f447 43de 	orr.w	r3, r7, #28416	@ 0x6f00
   1f42e:	2200      	movs	r2, #0
   1f430:	2144      	movs	r1, #68	@ 0x44
   1f432:	4620      	mov	r0, r4
   1f434:	f7ff ff6e 	bl	1f314 <dwt_write32bitoffsetreg>
   1f438:	6d20      	ldr	r0, [r4, #80]	@ 0x50
   1f43a:	8c43      	ldrh	r3, [r0, #34]	@ 0x22
   1f43c:	2b00      	cmp	r3, #0
   1f43e:	f040 80a1 	bne.w	1f584 <ull_isr+0x244>
   1f442:	7dc3      	ldrb	r3, [r0, #23]
   1f444:	f003 0303 	and.w	r3, r3, #3
   1f448:	2b03      	cmp	r3, #3
   1f44a:	f000 809b 	beq.w	1f584 <ull_isr+0x244>
   1f44e:	69c3      	ldr	r3, [r0, #28]
   1f450:	f423 4390 	bic.w	r3, r3, #18432	@ 0x4800
   1f454:	61c3      	str	r3, [r0, #28]
   1f456:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   1f458:	69d3      	ldr	r3, [r2, #28]
   1f45a:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
   1f45e:	61d3      	str	r3, [r2, #28]
   1f460:	69e3      	ldr	r3, [r4, #28]
   1f462:	b113      	cbz	r3, 1f46a <ull_isr+0x12a>
   1f464:	6d20      	ldr	r0, [r4, #80]	@ 0x50
   1f466:	301c      	adds	r0, #28
   1f468:	4798      	blx	r3
   1f46a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   1f46c:	2200      	movs	r2, #0
   1f46e:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
   1f472:	e08b      	b.n	1f58c <ull_isr+0x24c>
   1f474:	f410 5f00 	tst.w	r0, #8192	@ 0x2000
   1f478:	bf1c      	itt	ne
   1f47a:	f045 0508 	orrne.w	r5, r5, #8
   1f47e:	b2ed      	uxtbne	r5, r5
   1f480:	e77e      	b.n	1f380 <ull_isr+0x40>
   1f482:	6d27      	ldr	r7, [r4, #80]	@ 0x50
   1f484:	2200      	movs	r2, #0
   1f486:	2148      	movs	r1, #72	@ 0x48
   1f488:	4620      	mov	r0, r4
   1f48a:	f7ff fa17 	bl	1e8bc <dwt_read16bitoffsetreg>
   1f48e:	8438      	strh	r0, [r7, #32]
   1f490:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   1f492:	7d9a      	ldrb	r2, [r3, #22]
   1f494:	b11a      	cbz	r2, 1f49e <ull_isr+0x15e>
   1f496:	69da      	ldr	r2, [r3, #28]
   1f498:	f012 0f04 	tst.w	r2, #4
   1f49c:	d103      	bne.n	1f4a6 <ull_isr+0x166>
   1f49e:	8c1b      	ldrh	r3, [r3, #32]
   1f4a0:	f403 6360 	and.w	r3, r3, #3584	@ 0xe00
   1f4a4:	b18b      	cbz	r3, 1f4ca <ull_isr+0x18a>
   1f4a6:	2304      	movs	r3, #4
   1f4a8:	2200      	movs	r2, #0
   1f4aa:	2144      	movs	r1, #68	@ 0x44
   1f4ac:	4620      	mov	r0, r4
   1f4ae:	f7ff fdde 	bl	1f06e <dwt_write8bitoffsetreg>
   1f4b2:	f44f 6360 	mov.w	r3, #3584	@ 0xe00
   1f4b6:	2200      	movs	r2, #0
   1f4b8:	2148      	movs	r1, #72	@ 0x48
   1f4ba:	4620      	mov	r0, r4
   1f4bc:	f7ff fe29 	bl	1f112 <dwt_write16bitoffsetreg>
   1f4c0:	6a23      	ldr	r3, [r4, #32]
   1f4c2:	b113      	cbz	r3, 1f4ca <ull_isr+0x18a>
   1f4c4:	6d20      	ldr	r0, [r4, #80]	@ 0x50
   1f4c6:	301c      	adds	r0, #28
   1f4c8:	4798      	blx	r3
   1f4ca:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   1f4cc:	8c1b      	ldrh	r3, [r3, #32]
   1f4ce:	f413 7f80 	tst.w	r3, #256	@ 0x100
   1f4d2:	f43f af61 	beq.w	1f398 <ull_isr+0x58>
   1f4d6:	f44f 7380 	mov.w	r3, #256	@ 0x100
   1f4da:	2200      	movs	r2, #0
   1f4dc:	2148      	movs	r1, #72	@ 0x48
   1f4de:	4620      	mov	r0, r4
   1f4e0:	f7ff fe17 	bl	1f112 <dwt_write16bitoffsetreg>
   1f4e4:	e758      	b.n	1f398 <ull_isr+0x58>
   1f4e6:	23f8      	movs	r3, #248	@ 0xf8
   1f4e8:	2200      	movs	r2, #0
   1f4ea:	2144      	movs	r1, #68	@ 0x44
   1f4ec:	4620      	mov	r0, r4
   1f4ee:	f7ff fdbe 	bl	1f06e <dwt_write8bitoffsetreg>
   1f4f2:	6923      	ldr	r3, [r4, #16]
   1f4f4:	2b00      	cmp	r3, #0
   1f4f6:	f43f af53 	beq.w	1f3a0 <ull_isr+0x60>
   1f4fa:	6d20      	ldr	r0, [r4, #80]	@ 0x50
   1f4fc:	301c      	adds	r0, #28
   1f4fe:	4798      	blx	r3
   1f500:	e74e      	b.n	1f3a0 <ull_isr+0x60>
   1f502:	493b      	ldr	r1, [pc, #236]	@ (1f5f0 <ull_isr+0x2b0>)
   1f504:	4620      	mov	r0, r4
   1f506:	f7ff f9eb 	bl	1e8e0 <dwt_read8bitoffsetreg>
   1f50a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   1f50c:	7bdb      	ldrb	r3, [r3, #15]
   1f50e:	2b03      	cmp	r3, #3
   1f510:	bf08      	it	eq
   1f512:	f3c0 1007 	ubfxeq	r0, r0, #4, #8
   1f516:	f010 0f01 	tst.w	r0, #1
   1f51a:	bf18      	it	ne
   1f51c:	f446 4680 	orrne.w	r6, r6, #16384	@ 0x4000
   1f520:	f010 0f02 	tst.w	r0, #2
   1f524:	bf18      	it	ne
   1f526:	f446 5600 	orrne.w	r6, r6, #8192	@ 0x2000
   1f52a:	f010 0f04 	tst.w	r0, #4
   1f52e:	bf18      	it	ne
   1f530:	f446 6680 	orrne.w	r6, r6, #1024	@ 0x400
   1f534:	e750      	b.n	1f3d8 <ull_isr+0x98>
   1f536:	f416 6f80 	tst.w	r6, #1024	@ 0x400
   1f53a:	bf1f      	itttt	ne
   1f53c:	6d22      	ldrne	r2, [r4, #80]	@ 0x50
   1f53e:	f892 3024 	ldrbne.w	r3, [r2, #36]	@ 0x24
   1f542:	f043 0304 	orrne.w	r3, r3, #4
   1f546:	f882 3024 	strbne.w	r3, [r2, #36]	@ 0x24
   1f54a:	2700      	movs	r7, #0
   1f54c:	e753      	b.n	1f3f6 <ull_isr+0xb6>
   1f54e:	f892 3024 	ldrb.w	r3, [r2, #36]	@ 0x24
   1f552:	f043 0302 	orr.w	r3, r3, #2
   1f556:	f882 3024 	strb.w	r3, [r2, #36]	@ 0x24
   1f55a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   1f55c:	2200      	movs	r2, #0
   1f55e:	845a      	strh	r2, [r3, #34]	@ 0x22
   1f560:	f447 4700 	orr.w	r7, r7, #32768	@ 0x8000
   1f564:	e761      	b.n	1f42a <ull_isr+0xea>
   1f566:	4620      	mov	r0, r4
   1f568:	f7ff fd8e 	bl	1f088 <ull_getframelength>
   1f56c:	f410 4f00 	tst.w	r0, #32768	@ 0x8000
   1f570:	f43f af5b 	beq.w	1f42a <ull_isr+0xea>
   1f574:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   1f576:	f892 3024 	ldrb.w	r3, [r2, #36]	@ 0x24
   1f57a:	f043 0301 	orr.w	r3, r3, #1
   1f57e:	f882 3024 	strb.w	r3, [r2, #36]	@ 0x24
   1f582:	e752      	b.n	1f42a <ull_isr+0xea>
   1f584:	6963      	ldr	r3, [r4, #20]
   1f586:	b10b      	cbz	r3, 1f58c <ull_isr+0x24c>
   1f588:	301c      	adds	r0, #28
   1f58a:	4798      	blx	r3
   1f58c:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   1f58e:	7bdb      	ldrb	r3, [r3, #15]
   1f590:	b953      	cbnz	r3, 1f5a8 <ull_isr+0x268>
   1f592:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   1f594:	2200      	movs	r2, #0
   1f596:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
   1f59a:	f015 0f10 	tst.w	r5, #16
   1f59e:	d107      	bne.n	1f5b0 <ull_isr+0x270>
   1f5a0:	f015 0f20 	tst.w	r5, #32
   1f5a4:	d114      	bne.n	1f5d0 <ull_isr+0x290>
   1f5a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1f5a8:	4620      	mov	r0, r4
   1f5aa:	f7ff fea1 	bl	1f2f0 <ull_signal_rx_buff_free>
   1f5ae:	e7f0      	b.n	1f592 <ull_isr+0x252>
   1f5b0:	4b10      	ldr	r3, [pc, #64]	@ (1f5f4 <ull_isr+0x2b4>)
   1f5b2:	2200      	movs	r2, #0
   1f5b4:	2144      	movs	r1, #68	@ 0x44
   1f5b6:	4620      	mov	r0, r4
   1f5b8:	f7ff feac 	bl	1f314 <dwt_write32bitoffsetreg>
   1f5bc:	69e3      	ldr	r3, [r4, #28]
   1f5be:	b113      	cbz	r3, 1f5c6 <ull_isr+0x286>
   1f5c0:	6d20      	ldr	r0, [r4, #80]	@ 0x50
   1f5c2:	301c      	adds	r0, #28
   1f5c4:	4798      	blx	r3
   1f5c6:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   1f5c8:	2200      	movs	r2, #0
   1f5ca:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
   1f5ce:	e7e7      	b.n	1f5a0 <ull_isr+0x260>
   1f5d0:	4b09      	ldr	r3, [pc, #36]	@ (1f5f8 <ull_isr+0x2b8>)
   1f5d2:	2200      	movs	r2, #0
   1f5d4:	2144      	movs	r1, #68	@ 0x44
   1f5d6:	4620      	mov	r0, r4
   1f5d8:	f7ff fe9c 	bl	1f314 <dwt_write32bitoffsetreg>
   1f5dc:	69a3      	ldr	r3, [r4, #24]
   1f5de:	b113      	cbz	r3, 1f5e6 <ull_isr+0x2a6>
   1f5e0:	6d20      	ldr	r0, [r4, #80]	@ 0x50
   1f5e2:	301c      	adds	r0, #28
   1f5e4:	4798      	blx	r3
   1f5e6:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   1f5e8:	2200      	movs	r2, #0
   1f5ea:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
   1f5ee:	e7da      	b.n	1f5a6 <ull_isr+0x266>
   1f5f0:	00010024 	.word	0x00010024
   1f5f4:	34059400 	.word	0x34059400
   1f5f8:	10220400 	.word	0x10220400

0001f5fc <_dwt_adjust_delaytime>:
   1f5fc:	b538      	push	{r3, r4, r5, lr}
   1f5fe:	4604      	mov	r4, r0
   1f600:	b989      	cbnz	r1, 1f626 <_dwt_adjust_delaytime+0x2a>
   1f602:	2200      	movs	r2, #0
   1f604:	212c      	movs	r1, #44	@ 0x2c
   1f606:	f7ff f943 	bl	1e890 <dwt_read32bitoffsetreg>
   1f60a:	4605      	mov	r5, r0
   1f60c:	2201      	movs	r2, #1
   1f60e:	f44f 2160 	mov.w	r1, #917504	@ 0xe0000
   1f612:	4620      	mov	r0, r4
   1f614:	f7ff f964 	bl	1e8e0 <dwt_read8bitoffsetreg>
   1f618:	1a2b      	subs	r3, r5, r0
   1f61a:	2200      	movs	r2, #0
   1f61c:	212c      	movs	r1, #44	@ 0x2c
   1f61e:	4620      	mov	r0, r4
   1f620:	f7ff fe78 	bl	1f314 <dwt_write32bitoffsetreg>
   1f624:	bd38      	pop	{r3, r4, r5, pc}
   1f626:	2200      	movs	r2, #0
   1f628:	212c      	movs	r1, #44	@ 0x2c
   1f62a:	f7ff f931 	bl	1e890 <dwt_read32bitoffsetreg>
   1f62e:	4605      	mov	r5, r0
   1f630:	2201      	movs	r2, #1
   1f632:	4905      	ldr	r1, [pc, #20]	@ (1f648 <_dwt_adjust_delaytime+0x4c>)
   1f634:	4620      	mov	r0, r4
   1f636:	f7ff f953 	bl	1e8e0 <dwt_read8bitoffsetreg>
   1f63a:	1a2b      	subs	r3, r5, r0
   1f63c:	2200      	movs	r2, #0
   1f63e:	212c      	movs	r1, #44	@ 0x2c
   1f640:	4620      	mov	r0, r4
   1f642:	f7ff fe67 	bl	1f314 <dwt_write32bitoffsetreg>
   1f646:	e7ed      	b.n	1f624 <_dwt_adjust_delaytime+0x28>
   1f648:	00010004 	.word	0x00010004

0001f64c <ull_setrxaftertxdelay>:
   1f64c:	b570      	push	{r4, r5, r6, lr}
   1f64e:	4606      	mov	r6, r0
   1f650:	460c      	mov	r4, r1
   1f652:	4d08      	ldr	r5, [pc, #32]	@ (1f674 <ull_setrxaftertxdelay+0x28>)
   1f654:	2200      	movs	r2, #0
   1f656:	4629      	mov	r1, r5
   1f658:	f7ff f91a 	bl	1e890 <dwt_read32bitoffsetreg>
   1f65c:	0d00      	lsrs	r0, r0, #20
   1f65e:	0500      	lsls	r0, r0, #20
   1f660:	f3c4 0313 	ubfx	r3, r4, #0, #20
   1f664:	4303      	orrs	r3, r0
   1f666:	2200      	movs	r2, #0
   1f668:	4629      	mov	r1, r5
   1f66a:	4630      	mov	r0, r6
   1f66c:	f7ff fe52 	bl	1f314 <dwt_write32bitoffsetreg>
   1f670:	bd70      	pop	{r4, r5, r6, pc}
   1f672:	bf00      	nop
   1f674:	00010008 	.word	0x00010008

0001f678 <ull_setlnapamode>:
   1f678:	b538      	push	{r3, r4, r5, lr}
   1f67a:	4605      	mov	r5, r0
   1f67c:	460c      	mov	r4, r1
   1f67e:	2200      	movs	r2, #0
   1f680:	f44f 21a0 	mov.w	r1, #327680	@ 0x50000
   1f684:	f7ff f904 	bl	1e890 <dwt_read32bitoffsetreg>
   1f688:	4b0b      	ldr	r3, [pc, #44]	@ (1f6b8 <ull_setlnapamode+0x40>)
   1f68a:	4003      	ands	r3, r0
   1f68c:	f014 0f01 	tst.w	r4, #1
   1f690:	bf18      	it	ne
   1f692:	f443 2380 	orrne.w	r3, r3, #262144	@ 0x40000
   1f696:	f014 0f02 	tst.w	r4, #2
   1f69a:	bf18      	it	ne
   1f69c:	f443 4310 	orrne.w	r3, r3, #36864	@ 0x9000
   1f6a0:	f014 0f04 	tst.w	r4, #4
   1f6a4:	bf18      	it	ne
   1f6a6:	f043 0312 	orrne.w	r3, r3, #18
   1f6aa:	2200      	movs	r2, #0
   1f6ac:	f44f 21a0 	mov.w	r1, #327680	@ 0x50000
   1f6b0:	4628      	mov	r0, r5
   1f6b2:	f7ff fe2f 	bl	1f314 <dwt_write32bitoffsetreg>
   1f6b6:	bd38      	pop	{r3, r4, r5, pc}
   1f6b8:	ffe00fc0 	.word	0xffe00fc0

0001f6bc <ull_configurestskey>:
   1f6bc:	b538      	push	{r3, r4, r5, lr}
   1f6be:	4605      	mov	r5, r0
   1f6c0:	460c      	mov	r4, r1
   1f6c2:	680b      	ldr	r3, [r1, #0]
   1f6c4:	2200      	movs	r2, #0
   1f6c6:	490b      	ldr	r1, [pc, #44]	@ (1f6f4 <ull_configurestskey+0x38>)
   1f6c8:	f7ff fe24 	bl	1f314 <dwt_write32bitoffsetreg>
   1f6cc:	6863      	ldr	r3, [r4, #4]
   1f6ce:	2200      	movs	r2, #0
   1f6d0:	4909      	ldr	r1, [pc, #36]	@ (1f6f8 <ull_configurestskey+0x3c>)
   1f6d2:	4628      	mov	r0, r5
   1f6d4:	f7ff fe1e 	bl	1f314 <dwt_write32bitoffsetreg>
   1f6d8:	68a3      	ldr	r3, [r4, #8]
   1f6da:	2200      	movs	r2, #0
   1f6dc:	4907      	ldr	r1, [pc, #28]	@ (1f6fc <ull_configurestskey+0x40>)
   1f6de:	4628      	mov	r0, r5
   1f6e0:	f7ff fe18 	bl	1f314 <dwt_write32bitoffsetreg>
   1f6e4:	68e3      	ldr	r3, [r4, #12]
   1f6e6:	2200      	movs	r2, #0
   1f6e8:	4905      	ldr	r1, [pc, #20]	@ (1f700 <ull_configurestskey+0x44>)
   1f6ea:	4628      	mov	r0, r5
   1f6ec:	f7ff fe12 	bl	1f314 <dwt_write32bitoffsetreg>
   1f6f0:	bd38      	pop	{r3, r4, r5, pc}
   1f6f2:	bf00      	nop
   1f6f4:	0002000c 	.word	0x0002000c
   1f6f8:	00020010 	.word	0x00020010
   1f6fc:	00020014 	.word	0x00020014
   1f700:	00020018 	.word	0x00020018

0001f704 <ull_configurestsiv>:
   1f704:	b538      	push	{r3, r4, r5, lr}
   1f706:	4605      	mov	r5, r0
   1f708:	460c      	mov	r4, r1
   1f70a:	680b      	ldr	r3, [r1, #0]
   1f70c:	2200      	movs	r2, #0
   1f70e:	490b      	ldr	r1, [pc, #44]	@ (1f73c <ull_configurestsiv+0x38>)
   1f710:	f7ff fe00 	bl	1f314 <dwt_write32bitoffsetreg>
   1f714:	6863      	ldr	r3, [r4, #4]
   1f716:	2200      	movs	r2, #0
   1f718:	4909      	ldr	r1, [pc, #36]	@ (1f740 <ull_configurestsiv+0x3c>)
   1f71a:	4628      	mov	r0, r5
   1f71c:	f7ff fdfa 	bl	1f314 <dwt_write32bitoffsetreg>
   1f720:	68a3      	ldr	r3, [r4, #8]
   1f722:	2200      	movs	r2, #0
   1f724:	4907      	ldr	r1, [pc, #28]	@ (1f744 <ull_configurestsiv+0x40>)
   1f726:	4628      	mov	r0, r5
   1f728:	f7ff fdf4 	bl	1f314 <dwt_write32bitoffsetreg>
   1f72c:	68e3      	ldr	r3, [r4, #12]
   1f72e:	2200      	movs	r2, #0
   1f730:	4905      	ldr	r1, [pc, #20]	@ (1f748 <ull_configurestsiv+0x44>)
   1f732:	4628      	mov	r0, r5
   1f734:	f7ff fdee 	bl	1f314 <dwt_write32bitoffsetreg>
   1f738:	bd38      	pop	{r3, r4, r5, pc}
   1f73a:	bf00      	nop
   1f73c:	0002001c 	.word	0x0002001c
   1f740:	00020020 	.word	0x00020020
   1f744:	00020024 	.word	0x00020024
   1f748:	00020028 	.word	0x00020028

0001f74c <ull_configmrxlut>:
   1f74c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1f750:	4604      	mov	r4, r0
   1f752:	2905      	cmp	r1, #5
   1f754:	d040      	beq.n	1f7d8 <ull_configmrxlut+0x8c>
   1f756:	4d26      	ldr	r5, [pc, #152]	@ (1f7f0 <ull_configmrxlut+0xa4>)
   1f758:	462e      	mov	r6, r5
   1f75a:	4f26      	ldr	r7, [pc, #152]	@ (1f7f4 <ull_configmrxlut+0xa8>)
   1f75c:	f8df 80d8 	ldr.w	r8, [pc, #216]	@ 1f838 <ull_configmrxlut+0xec>
   1f760:	f8df 90d8 	ldr.w	r9, [pc, #216]	@ 1f83c <ull_configmrxlut+0xf0>
   1f764:	f8df a0d8 	ldr.w	sl, [pc, #216]	@ 1f840 <ull_configmrxlut+0xf4>
   1f768:	4b23      	ldr	r3, [pc, #140]	@ (1f7f8 <ull_configmrxlut+0xac>)
   1f76a:	2200      	movs	r2, #0
   1f76c:	4923      	ldr	r1, [pc, #140]	@ (1f7fc <ull_configmrxlut+0xb0>)
   1f76e:	4620      	mov	r0, r4
   1f770:	f7ff fdd0 	bl	1f314 <dwt_write32bitoffsetreg>
   1f774:	4653      	mov	r3, sl
   1f776:	2200      	movs	r2, #0
   1f778:	4921      	ldr	r1, [pc, #132]	@ (1f800 <ull_configmrxlut+0xb4>)
   1f77a:	4620      	mov	r0, r4
   1f77c:	f7ff fdca 	bl	1f314 <dwt_write32bitoffsetreg>
   1f780:	464b      	mov	r3, r9
   1f782:	2200      	movs	r2, #0
   1f784:	491f      	ldr	r1, [pc, #124]	@ (1f804 <ull_configmrxlut+0xb8>)
   1f786:	4620      	mov	r0, r4
   1f788:	f7ff fdc4 	bl	1f314 <dwt_write32bitoffsetreg>
   1f78c:	4643      	mov	r3, r8
   1f78e:	2200      	movs	r2, #0
   1f790:	491d      	ldr	r1, [pc, #116]	@ (1f808 <ull_configmrxlut+0xbc>)
   1f792:	4620      	mov	r0, r4
   1f794:	f7ff fdbe 	bl	1f314 <dwt_write32bitoffsetreg>
   1f798:	463b      	mov	r3, r7
   1f79a:	2200      	movs	r2, #0
   1f79c:	491b      	ldr	r1, [pc, #108]	@ (1f80c <ull_configmrxlut+0xc0>)
   1f79e:	4620      	mov	r0, r4
   1f7a0:	f7ff fdb8 	bl	1f314 <dwt_write32bitoffsetreg>
   1f7a4:	4633      	mov	r3, r6
   1f7a6:	2200      	movs	r2, #0
   1f7a8:	4919      	ldr	r1, [pc, #100]	@ (1f810 <ull_configmrxlut+0xc4>)
   1f7aa:	4620      	mov	r0, r4
   1f7ac:	f7ff fdb2 	bl	1f314 <dwt_write32bitoffsetreg>
   1f7b0:	462b      	mov	r3, r5
   1f7b2:	2200      	movs	r2, #0
   1f7b4:	4917      	ldr	r1, [pc, #92]	@ (1f814 <ull_configmrxlut+0xc8>)
   1f7b6:	4620      	mov	r0, r4
   1f7b8:	f7ff fdac 	bl	1f314 <dwt_write32bitoffsetreg>
   1f7bc:	4b16      	ldr	r3, [pc, #88]	@ (1f818 <ull_configmrxlut+0xcc>)
   1f7be:	2200      	movs	r2, #0
   1f7c0:	4916      	ldr	r1, [pc, #88]	@ (1f81c <ull_configmrxlut+0xd0>)
   1f7c2:	4620      	mov	r0, r4
   1f7c4:	f7ff fda6 	bl	1f314 <dwt_write32bitoffsetreg>
   1f7c8:	4b15      	ldr	r3, [pc, #84]	@ (1f820 <ull_configmrxlut+0xd4>)
   1f7ca:	2200      	movs	r2, #0
   1f7cc:	4915      	ldr	r1, [pc, #84]	@ (1f824 <ull_configmrxlut+0xd8>)
   1f7ce:	4620      	mov	r0, r4
   1f7d0:	f7ff fda0 	bl	1f314 <dwt_write32bitoffsetreg>
   1f7d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1f7d8:	4d13      	ldr	r5, [pc, #76]	@ (1f828 <ull_configmrxlut+0xdc>)
   1f7da:	4e14      	ldr	r6, [pc, #80]	@ (1f82c <ull_configmrxlut+0xe0>)
   1f7dc:	4f14      	ldr	r7, [pc, #80]	@ (1f830 <ull_configmrxlut+0xe4>)
   1f7de:	f8df 8064 	ldr.w	r8, [pc, #100]	@ 1f844 <ull_configmrxlut+0xf8>
   1f7e2:	f8df 9064 	ldr.w	r9, [pc, #100]	@ 1f848 <ull_configmrxlut+0xfc>
   1f7e6:	f8df a064 	ldr.w	sl, [pc, #100]	@ 1f84c <ull_configmrxlut+0x100>
   1f7ea:	4b12      	ldr	r3, [pc, #72]	@ (1f834 <ull_configmrxlut+0xe8>)
   1f7ec:	e7bd      	b.n	1f76a <ull_configmrxlut+0x1e>
   1f7ee:	bf00      	nop
   1f7f0:	0002afb5 	.word	0x0002afb5
   1f7f4:	0002af7d 	.word	0x0002af7d
   1f7f8:	0002a8fe 	.word	0x0002a8fe
   1f7fc:	00030038 	.word	0x00030038
   1f800:	0003003c 	.word	0x0003003c
   1f804:	00030040 	.word	0x00030040
   1f808:	00030044 	.word	0x00030044
   1f80c:	00030048 	.word	0x00030048
   1f810:	0003004c 	.word	0x0003004c
   1f814:	00030050 	.word	0x00030050
   1f818:	10000240 	.word	0x10000240
   1f81c:	0003001c 	.word	0x0003001c
   1f820:	1b6da489 	.word	0x1b6da489
   1f824:	00030020 	.word	0x00030020
   1f828:	0001cff5 	.word	0x0001cff5
   1f82c:	0001cfb5 	.word	0x0001cfb5
   1f830:	0001cf36 	.word	0x0001cf36
   1f834:	0001c0fd 	.word	0x0001c0fd
   1f838:	0002af3e 	.word	0x0002af3e
   1f83c:	0002a5fe 	.word	0x0002a5fe
   1f840:	0002ac36 	.word	0x0002ac36
   1f844:	0001c77e 	.word	0x0001c77e
   1f848:	0001c6be 	.word	0x0001c6be
   1f84c:	0001c43e 	.word	0x0001c43e

0001f850 <ull_disable_rftx_blocks>:
   1f850:	b508      	push	{r3, lr}
   1f852:	2300      	movs	r3, #0
   1f854:	461a      	mov	r2, r3
   1f856:	4902      	ldr	r1, [pc, #8]	@ (1f860 <ull_disable_rftx_blocks+0x10>)
   1f858:	f7ff fd5c 	bl	1f314 <dwt_write32bitoffsetreg>
   1f85c:	bd08      	pop	{r3, pc}
   1f85e:	bf00      	nop
   1f860:	00070004 	.word	0x00070004

0001f864 <ull_disable_rf_tx>:
   1f864:	b538      	push	{r3, r4, r5, lr}
   1f866:	4604      	mov	r4, r0
   1f868:	460d      	mov	r5, r1
   1f86a:	2300      	movs	r3, #0
   1f86c:	461a      	mov	r2, r3
   1f86e:	490a      	ldr	r1, [pc, #40]	@ (1f898 <ull_disable_rf_tx+0x34>)
   1f870:	f7ff fd50 	bl	1f314 <dwt_write32bitoffsetreg>
   1f874:	2300      	movs	r3, #0
   1f876:	461a      	mov	r2, r3
   1f878:	f44f 21e0 	mov.w	r1, #458752	@ 0x70000
   1f87c:	4620      	mov	r0, r4
   1f87e:	f7ff fd49 	bl	1f314 <dwt_write32bitoffsetreg>
   1f882:	b905      	cbnz	r5, 1f886 <ull_disable_rf_tx+0x22>
   1f884:	bd38      	pop	{r3, r4, r5, pc}
   1f886:	f04f 53e0 	mov.w	r3, #469762048	@ 0x1c000000
   1f88a:	2200      	movs	r2, #0
   1f88c:	4903      	ldr	r1, [pc, #12]	@ (1f89c <ull_disable_rf_tx+0x38>)
   1f88e:	4620      	mov	r0, r4
   1f890:	f7ff fd40 	bl	1f314 <dwt_write32bitoffsetreg>
   1f894:	e7f6      	b.n	1f884 <ull_disable_rf_tx+0x20>
   1f896:	bf00      	nop
   1f898:	00070048 	.word	0x00070048
   1f89c:	00070014 	.word	0x00070014

0001f8a0 <ull_readrxdata>:
   1f8a0:	b5f0      	push	{r4, r5, r6, r7, lr}
   1f8a2:	b083      	sub	sp, #12
   1f8a4:	6d04      	ldr	r4, [r0, #80]	@ 0x50
   1f8a6:	7be4      	ldrb	r4, [r4, #15]
   1f8a8:	2c03      	cmp	r4, #3
   1f8aa:	bf0c      	ite	eq
   1f8ac:	f44f 1c98 	moveq.w	ip, #1245184	@ 0x130000
   1f8b0:	f44f 1c90 	movne.w	ip, #1179648	@ 0x120000
   1f8b4:	189c      	adds	r4, r3, r2
   1f8b6:	f5b4 6f80 	cmp.w	r4, #1024	@ 0x400
   1f8ba:	da19      	bge.n	1f8f0 <ull_readrxdata+0x50>
   1f8bc:	461d      	mov	r5, r3
   1f8be:	4616      	mov	r6, r2
   1f8c0:	460f      	mov	r7, r1
   1f8c2:	4604      	mov	r4, r0
   1f8c4:	2b7f      	cmp	r3, #127	@ 0x7f
   1f8c6:	d915      	bls.n	1f8f4 <ull_readrxdata+0x54>
   1f8c8:	ea4f 431c 	mov.w	r3, ip, lsr #16
   1f8cc:	2200      	movs	r2, #0
   1f8ce:	490d      	ldr	r1, [pc, #52]	@ (1f904 <ull_readrxdata+0x64>)
   1f8d0:	f7ff fd20 	bl	1f314 <dwt_write32bitoffsetreg>
   1f8d4:	462b      	mov	r3, r5
   1f8d6:	2200      	movs	r2, #0
   1f8d8:	490b      	ldr	r1, [pc, #44]	@ (1f908 <ull_readrxdata+0x68>)
   1f8da:	4620      	mov	r0, r4
   1f8dc:	f7ff fd1a 	bl	1f314 <dwt_write32bitoffsetreg>
   1f8e0:	9700      	str	r7, [sp, #0]
   1f8e2:	4633      	mov	r3, r6
   1f8e4:	2200      	movs	r2, #0
   1f8e6:	f44f 11e8 	mov.w	r1, #1900544	@ 0x1d0000
   1f8ea:	4620      	mov	r0, r4
   1f8ec:	f7fe ffc6 	bl	1e87c <dwt_readfromdevice>
   1f8f0:	b003      	add	sp, #12
   1f8f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1f8f4:	9100      	str	r1, [sp, #0]
   1f8f6:	4613      	mov	r3, r2
   1f8f8:	462a      	mov	r2, r5
   1f8fa:	4661      	mov	r1, ip
   1f8fc:	f7fe ffbe 	bl	1e87c <dwt_readfromdevice>
   1f900:	e7f6      	b.n	1f8f0 <ull_readrxdata+0x50>
   1f902:	bf00      	nop
   1f904:	001f0004 	.word	0x001f0004
   1f908:	001f0008 	.word	0x001f0008

0001f90c <ull_rxenable>:
   1f90c:	b530      	push	{r4, r5, lr}
   1f90e:	b083      	sub	sp, #12
   1f910:	4605      	mov	r5, r0
   1f912:	460c      	mov	r4, r1
   1f914:	b171      	cbz	r1, 1f934 <ull_rxenable+0x28>
   1f916:	f021 0302 	bic.w	r3, r1, #2
   1f91a:	3b01      	subs	r3, #1
   1f91c:	2b0f      	cmp	r3, #15
   1f91e:	d856      	bhi.n	1f9ce <ull_rxenable+0xc2>
   1f920:	e8df f003 	tbb	[pc, r3]
   1f924:	21555510 	.word	0x21555510
   1f928:	28555555 	.word	0x28555555
   1f92c:	55555555 	.word	0x55555555
   1f930:	33555555 	.word	0x33555555
   1f934:	2200      	movs	r2, #0
   1f936:	9200      	str	r2, [sp, #0]
   1f938:	4613      	mov	r3, r2
   1f93a:	2102      	movs	r1, #2
   1f93c:	f7ff fb8c 	bl	1f058 <dwt_writetodevice>
   1f940:	4620      	mov	r0, r4
   1f942:	e00e      	b.n	1f962 <ull_rxenable+0x56>
   1f944:	2200      	movs	r2, #0
   1f946:	9200      	str	r2, [sp, #0]
   1f948:	4613      	mov	r3, r2
   1f94a:	2104      	movs	r1, #4
   1f94c:	f7ff fb84 	bl	1f058 <dwt_writetodevice>
   1f950:	2203      	movs	r2, #3
   1f952:	2144      	movs	r1, #68	@ 0x44
   1f954:	4628      	mov	r0, r5
   1f956:	f7fe ffc3 	bl	1e8e0 <dwt_read8bitoffsetreg>
   1f95a:	f010 0f08 	tst.w	r0, #8
   1f95e:	d11f      	bne.n	1f9a0 <ull_rxenable+0x94>
   1f960:	2000      	movs	r0, #0
   1f962:	b003      	add	sp, #12
   1f964:	bd30      	pop	{r4, r5, pc}
   1f966:	2200      	movs	r2, #0
   1f968:	9200      	str	r2, [sp, #0]
   1f96a:	4613      	mov	r3, r2
   1f96c:	210a      	movs	r1, #10
   1f96e:	f7ff fb73 	bl	1f058 <dwt_writetodevice>
   1f972:	e7ed      	b.n	1f950 <ull_rxenable+0x44>
   1f974:	2100      	movs	r1, #0
   1f976:	f7ff fe41 	bl	1f5fc <_dwt_adjust_delaytime>
   1f97a:	2200      	movs	r2, #0
   1f97c:	9200      	str	r2, [sp, #0]
   1f97e:	4613      	mov	r3, r2
   1f980:	2108      	movs	r1, #8
   1f982:	4628      	mov	r0, r5
   1f984:	f7ff fb68 	bl	1f058 <dwt_writetodevice>
   1f988:	e7e2      	b.n	1f950 <ull_rxenable+0x44>
   1f98a:	2101      	movs	r1, #1
   1f98c:	f7ff fe36 	bl	1f5fc <_dwt_adjust_delaytime>
   1f990:	2200      	movs	r2, #0
   1f992:	9200      	str	r2, [sp, #0]
   1f994:	4613      	mov	r3, r2
   1f996:	2106      	movs	r1, #6
   1f998:	4628      	mov	r0, r5
   1f99a:	f7ff fb5d 	bl	1f058 <dwt_writetodevice>
   1f99e:	e7d7      	b.n	1f950 <ull_rxenable+0x44>
   1f9a0:	2100      	movs	r1, #0
   1f9a2:	9100      	str	r1, [sp, #0]
   1f9a4:	460b      	mov	r3, r1
   1f9a6:	460a      	mov	r2, r1
   1f9a8:	4628      	mov	r0, r5
   1f9aa:	f7ff fb55 	bl	1f058 <dwt_writetodevice>
   1f9ae:	f014 0f02 	tst.w	r4, #2
   1f9b2:	d002      	beq.n	1f9ba <ull_rxenable+0xae>
   1f9b4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
   1f9b8:	e7d3      	b.n	1f962 <ull_rxenable+0x56>
   1f9ba:	2200      	movs	r2, #0
   1f9bc:	9200      	str	r2, [sp, #0]
   1f9be:	4613      	mov	r3, r2
   1f9c0:	2102      	movs	r1, #2
   1f9c2:	4628      	mov	r0, r5
   1f9c4:	f7ff fb48 	bl	1f058 <dwt_writetodevice>
   1f9c8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
   1f9cc:	e7c9      	b.n	1f962 <ull_rxenable+0x56>
   1f9ce:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
   1f9d2:	e7c6      	b.n	1f962 <ull_rxenable+0x56>

0001f9d4 <ull_writetxdata>:
   1f9d4:	b5f0      	push	{r4, r5, r6, r7, lr}
   1f9d6:	b083      	sub	sp, #12
   1f9d8:	185c      	adds	r4, r3, r1
   1f9da:	f5b4 6f80 	cmp.w	r4, #1024	@ 0x400
   1f9de:	da24      	bge.n	1fa2a <ull_writetxdata+0x56>
   1f9e0:	461c      	mov	r4, r3
   1f9e2:	4617      	mov	r7, r2
   1f9e4:	460e      	mov	r6, r1
   1f9e6:	4605      	mov	r5, r0
   1f9e8:	2b7f      	cmp	r3, #127	@ 0x7f
   1f9ea:	d915      	bls.n	1fa18 <ull_writetxdata+0x44>
   1f9ec:	2314      	movs	r3, #20
   1f9ee:	2200      	movs	r2, #0
   1f9f0:	490f      	ldr	r1, [pc, #60]	@ (1fa30 <ull_writetxdata+0x5c>)
   1f9f2:	f7ff fc8f 	bl	1f314 <dwt_write32bitoffsetreg>
   1f9f6:	4623      	mov	r3, r4
   1f9f8:	2200      	movs	r2, #0
   1f9fa:	490e      	ldr	r1, [pc, #56]	@ (1fa34 <ull_writetxdata+0x60>)
   1f9fc:	4628      	mov	r0, r5
   1f9fe:	f7ff fc89 	bl	1f314 <dwt_write32bitoffsetreg>
   1fa02:	9700      	str	r7, [sp, #0]
   1fa04:	4633      	mov	r3, r6
   1fa06:	2200      	movs	r2, #0
   1fa08:	f44f 11e8 	mov.w	r1, #1900544	@ 0x1d0000
   1fa0c:	4628      	mov	r0, r5
   1fa0e:	f7ff fb23 	bl	1f058 <dwt_writetodevice>
   1fa12:	2000      	movs	r0, #0
   1fa14:	b003      	add	sp, #12
   1fa16:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1fa18:	9200      	str	r2, [sp, #0]
   1fa1a:	460b      	mov	r3, r1
   1fa1c:	4622      	mov	r2, r4
   1fa1e:	f44f 11a0 	mov.w	r1, #1310720	@ 0x140000
   1fa22:	f7ff fb19 	bl	1f058 <dwt_writetodevice>
   1fa26:	2000      	movs	r0, #0
   1fa28:	e7f4      	b.n	1fa14 <ull_writetxdata+0x40>
   1fa2a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
   1fa2e:	e7f1      	b.n	1fa14 <ull_writetxdata+0x40>
   1fa30:	001f0004 	.word	0x001f0004
   1fa34:	001f0008 	.word	0x001f0008

0001fa38 <dwt_modify32bitoffsetreg>:
   1fa38:	b530      	push	{r4, r5, lr}
   1fa3a:	b085      	sub	sp, #20
   1fa3c:	9c08      	ldr	r4, [sp, #32]
   1fa3e:	f88d 3008 	strb.w	r3, [sp, #8]
   1fa42:	0a1d      	lsrs	r5, r3, #8
   1fa44:	f88d 5009 	strb.w	r5, [sp, #9]
   1fa48:	0c1d      	lsrs	r5, r3, #16
   1fa4a:	f88d 500a 	strb.w	r5, [sp, #10]
   1fa4e:	0e1b      	lsrs	r3, r3, #24
   1fa50:	f88d 300b 	strb.w	r3, [sp, #11]
   1fa54:	f88d 400c 	strb.w	r4, [sp, #12]
   1fa58:	0a23      	lsrs	r3, r4, #8
   1fa5a:	f88d 300d 	strb.w	r3, [sp, #13]
   1fa5e:	0c23      	lsrs	r3, r4, #16
   1fa60:	f88d 300e 	strb.w	r3, [sp, #14]
   1fa64:	0e24      	lsrs	r4, r4, #24
   1fa66:	f88d 400f 	strb.w	r4, [sp, #15]
   1fa6a:	f248 0303 	movw	r3, #32771	@ 0x8003
   1fa6e:	9301      	str	r3, [sp, #4]
   1fa70:	ab02      	add	r3, sp, #8
   1fa72:	9300      	str	r3, [sp, #0]
   1fa74:	2308      	movs	r3, #8
   1fa76:	b292      	uxth	r2, r2
   1fa78:	f7fe fe7d 	bl	1e776 <dwt_xfer3xxx>
   1fa7c:	b005      	add	sp, #20
   1fa7e:	bd30      	pop	{r4, r5, pc}

0001fa80 <_dwt_kick_dgc_on_wakeup>:
   1fa80:	b500      	push	{lr}
   1fa82:	b083      	sub	sp, #12
   1fa84:	2905      	cmp	r1, #5
   1fa86:	d004      	beq.n	1fa92 <_dwt_kick_dgc_on_wakeup+0x12>
   1fa88:	2909      	cmp	r1, #9
   1fa8a:	d00b      	beq.n	1faa4 <_dwt_kick_dgc_on_wakeup+0x24>
   1fa8c:	b003      	add	sp, #12
   1fa8e:	f85d fb04 	ldr.w	pc, [sp], #4
   1fa92:	2340      	movs	r3, #64	@ 0x40
   1fa94:	9300      	str	r3, [sp, #0]
   1fa96:	f46f 5300 	mvn.w	r3, #8192	@ 0x2000
   1fa9a:	2200      	movs	r2, #0
   1fa9c:	4906      	ldr	r1, [pc, #24]	@ (1fab8 <_dwt_kick_dgc_on_wakeup+0x38>)
   1fa9e:	f7ff ffcb 	bl	1fa38 <dwt_modify32bitoffsetreg>
   1faa2:	e7f3      	b.n	1fa8c <_dwt_kick_dgc_on_wakeup+0xc>
   1faa4:	f44f 5301 	mov.w	r3, #8256	@ 0x2040
   1faa8:	9300      	str	r3, [sp, #0]
   1faaa:	f46f 5300 	mvn.w	r3, #8192	@ 0x2000
   1faae:	2200      	movs	r2, #0
   1fab0:	4901      	ldr	r1, [pc, #4]	@ (1fab8 <_dwt_kick_dgc_on_wakeup+0x38>)
   1fab2:	f7ff ffc1 	bl	1fa38 <dwt_modify32bitoffsetreg>
   1fab6:	e7e9      	b.n	1fa8c <_dwt_kick_dgc_on_wakeup+0xc>
   1fab8:	000b0008 	.word	0x000b0008

0001fabc <ull_enable_rf_tx>:
   1fabc:	b570      	push	{r4, r5, r6, lr}
   1fabe:	b082      	sub	sp, #8
   1fac0:	4604      	mov	r4, r0
   1fac2:	460e      	mov	r6, r1
   1fac4:	4d13      	ldr	r5, [pc, #76]	@ (1fb14 <ull_enable_rf_tx+0x58>)
   1fac6:	f04f 2308 	mov.w	r3, #134219776	@ 0x8000800
   1faca:	9300      	str	r3, [sp, #0]
   1facc:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   1fad0:	2200      	movs	r2, #0
   1fad2:	4629      	mov	r1, r5
   1fad4:	f7ff ffb0 	bl	1fa38 <dwt_modify32bitoffsetreg>
   1fad8:	f04f 1360 	mov.w	r3, #6291552	@ 0x600060
   1fadc:	9300      	str	r3, [sp, #0]
   1fade:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   1fae2:	2200      	movs	r2, #0
   1fae4:	4629      	mov	r1, r5
   1fae6:	4620      	mov	r0, r4
   1fae8:	f7ff ffa6 	bl	1fa38 <dwt_modify32bitoffsetreg>
   1faec:	4b0a      	ldr	r3, [pc, #40]	@ (1fb18 <ull_enable_rf_tx+0x5c>)
   1faee:	9300      	str	r3, [sp, #0]
   1faf0:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   1faf4:	2200      	movs	r2, #0
   1faf6:	f44f 21e0 	mov.w	r1, #458752	@ 0x70000
   1fafa:	4620      	mov	r0, r4
   1fafc:	f7ff ff9c 	bl	1fa38 <dwt_modify32bitoffsetreg>
   1fb00:	b90e      	cbnz	r6, 1fb06 <ull_enable_rf_tx+0x4a>
   1fb02:	b002      	add	sp, #8
   1fb04:	bd70      	pop	{r4, r5, r6, pc}
   1fb06:	4b05      	ldr	r3, [pc, #20]	@ (1fb1c <ull_enable_rf_tx+0x60>)
   1fb08:	2200      	movs	r2, #0
   1fb0a:	4905      	ldr	r1, [pc, #20]	@ (1fb20 <ull_enable_rf_tx+0x64>)
   1fb0c:	4620      	mov	r0, r4
   1fb0e:	f7ff fc01 	bl	1f314 <dwt_write32bitoffsetreg>
   1fb12:	e7f6      	b.n	1fb02 <ull_enable_rf_tx+0x46>
   1fb14:	00070048 	.word	0x00070048
   1fb18:	02003c00 	.word	0x02003c00
   1fb1c:	01011100 	.word	0x01011100
   1fb20:	00070014 	.word	0x00070014

0001fb24 <ull_enable_rftx_blocks>:
   1fb24:	b500      	push	{lr}
   1fb26:	b083      	sub	sp, #12
   1fb28:	4b05      	ldr	r3, [pc, #20]	@ (1fb40 <ull_enable_rftx_blocks+0x1c>)
   1fb2a:	9300      	str	r3, [sp, #0]
   1fb2c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   1fb30:	2200      	movs	r2, #0
   1fb32:	4904      	ldr	r1, [pc, #16]	@ (1fb44 <ull_enable_rftx_blocks+0x20>)
   1fb34:	f7ff ff80 	bl	1fa38 <dwt_modify32bitoffsetreg>
   1fb38:	b003      	add	sp, #12
   1fb3a:	f85d fb04 	ldr.w	pc, [sp], #4
   1fb3e:	bf00      	nop
   1fb40:	02003c00 	.word	0x02003c00
   1fb44:	00070004 	.word	0x00070004

0001fb48 <_dwt_otpprogword32>:
   1fb48:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1fb4c:	b083      	sub	sp, #12
   1fb4e:	4604      	mov	r4, r0
   1fb50:	460d      	mov	r5, r1
   1fb52:	4617      	mov	r7, r2
   1fb54:	4e56      	ldr	r6, [pc, #344]	@ (1fcb0 <_dwt_otpprogword32+0x168>)
   1fb56:	2200      	movs	r2, #0
   1fb58:	4631      	mov	r1, r6
   1fb5a:	f7fe fe99 	bl	1e890 <dwt_read32bitoffsetreg>
   1fb5e:	4681      	mov	r9, r0
   1fb60:	f44f 4370 	mov.w	r3, #61440	@ 0xf000
   1fb64:	9300      	str	r3, [sp, #0]
   1fb66:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   1fb6a:	2200      	movs	r2, #0
   1fb6c:	4631      	mov	r1, r6
   1fb6e:	4620      	mov	r0, r4
   1fb70:	f7ff ff62 	bl	1fa38 <dwt_modify32bitoffsetreg>
   1fb74:	f8df 813c 	ldr.w	r8, [pc, #316]	@ 1fcb4 <_dwt_otpprogword32+0x16c>
   1fb78:	2318      	movs	r3, #24
   1fb7a:	2200      	movs	r2, #0
   1fb7c:	4641      	mov	r1, r8
   1fb7e:	4620      	mov	r0, r4
   1fb80:	f7ff fac7 	bl	1f112 <dwt_write16bitoffsetreg>
   1fb84:	2125      	movs	r1, #37	@ 0x25
   1fb86:	4620      	mov	r0, r4
   1fb88:	f7ff fb0a 	bl	1f1a0 <__dwt_otp_write_wdata_id_reg>
   1fb8c:	2102      	movs	r1, #2
   1fb8e:	4620      	mov	r0, r4
   1fb90:	f7ff fb06 	bl	1f1a0 <__dwt_otp_write_wdata_id_reg>
   1fb94:	f44f 71fe 	mov.w	r1, #508	@ 0x1fc
   1fb98:	4620      	mov	r0, r4
   1fb9a:	f7ff fb01 	bl	1f1a0 <__dwt_otp_write_wdata_id_reg>
   1fb9e:	b2f9      	uxtb	r1, r7
   1fba0:	f441 7180 	orr.w	r1, r1, #256	@ 0x100
   1fba4:	4620      	mov	r0, r4
   1fba6:	f7ff fafb 	bl	1f1a0 <__dwt_otp_write_wdata_id_reg>
   1fbaa:	f44f 7180 	mov.w	r1, #256	@ 0x100
   1fbae:	4620      	mov	r0, r4
   1fbb0:	f7ff faf6 	bl	1f1a0 <__dwt_otp_write_wdata_id_reg>
   1fbb4:	2100      	movs	r1, #0
   1fbb6:	4620      	mov	r0, r4
   1fbb8:	f7ff faf2 	bl	1f1a0 <__dwt_otp_write_wdata_id_reg>
   1fbbc:	2102      	movs	r1, #2
   1fbbe:	4620      	mov	r0, r4
   1fbc0:	f7ff faee 	bl	1f1a0 <__dwt_otp_write_wdata_id_reg>
   1fbc4:	f44f 71e0 	mov.w	r1, #448	@ 0x1c0
   1fbc8:	4620      	mov	r0, r4
   1fbca:	f7ff fae9 	bl	1f1a0 <__dwt_otp_write_wdata_id_reg>
   1fbce:	b2e9      	uxtb	r1, r5
   1fbd0:	f441 7180 	orr.w	r1, r1, #256	@ 0x100
   1fbd4:	4620      	mov	r0, r4
   1fbd6:	f7ff fae3 	bl	1f1a0 <__dwt_otp_write_wdata_id_reg>
   1fbda:	f3c5 2107 	ubfx	r1, r5, #8, #8
   1fbde:	f441 7180 	orr.w	r1, r1, #256	@ 0x100
   1fbe2:	4620      	mov	r0, r4
   1fbe4:	f7ff fadc 	bl	1f1a0 <__dwt_otp_write_wdata_id_reg>
   1fbe8:	f3c5 4107 	ubfx	r1, r5, #16, #8
   1fbec:	f441 7180 	orr.w	r1, r1, #256	@ 0x100
   1fbf0:	4620      	mov	r0, r4
   1fbf2:	f7ff fad5 	bl	1f1a0 <__dwt_otp_write_wdata_id_reg>
   1fbf6:	0e29      	lsrs	r1, r5, #24
   1fbf8:	f441 7180 	orr.w	r1, r1, #256	@ 0x100
   1fbfc:	4620      	mov	r0, r4
   1fbfe:	f7ff facf 	bl	1f1a0 <__dwt_otp_write_wdata_id_reg>
   1fc02:	2100      	movs	r1, #0
   1fc04:	4620      	mov	r0, r4
   1fc06:	f7ff facb 	bl	1f1a0 <__dwt_otp_write_wdata_id_reg>
   1fc0a:	213a      	movs	r1, #58	@ 0x3a
   1fc0c:	4620      	mov	r0, r4
   1fc0e:	f7ff fac7 	bl	1f1a0 <__dwt_otp_write_wdata_id_reg>
   1fc12:	f240 11ff 	movw	r1, #511	@ 0x1ff
   1fc16:	4620      	mov	r0, r4
   1fc18:	f7ff fac2 	bl	1f1a0 <__dwt_otp_write_wdata_id_reg>
   1fc1c:	f44f 7185 	mov.w	r1, #266	@ 0x10a
   1fc20:	4620      	mov	r0, r4
   1fc22:	f7ff fabd 	bl	1f1a0 <__dwt_otp_write_wdata_id_reg>
   1fc26:	2100      	movs	r1, #0
   1fc28:	4620      	mov	r0, r4
   1fc2a:	f7ff fab9 	bl	1f1a0 <__dwt_otp_write_wdata_id_reg>
   1fc2e:	213a      	movs	r1, #58	@ 0x3a
   1fc30:	4620      	mov	r0, r4
   1fc32:	f7ff fab5 	bl	1f1a0 <__dwt_otp_write_wdata_id_reg>
   1fc36:	f240 1101 	movw	r1, #257	@ 0x101
   1fc3a:	4620      	mov	r0, r4
   1fc3c:	f7ff fab0 	bl	1f1a0 <__dwt_otp_write_wdata_id_reg>
   1fc40:	2302      	movs	r3, #2
   1fc42:	2200      	movs	r2, #0
   1fc44:	f44f 2130 	mov.w	r1, #720896	@ 0xb0000
   1fc48:	4620      	mov	r0, r4
   1fc4a:	f7ff fa62 	bl	1f112 <dwt_write16bitoffsetreg>
   1fc4e:	2300      	movs	r3, #0
   1fc50:	461a      	mov	r2, r3
   1fc52:	f44f 2130 	mov.w	r1, #720896	@ 0xb0000
   1fc56:	4620      	mov	r0, r4
   1fc58:	f7ff fa5b 	bl	1f112 <dwt_write16bitoffsetreg>
   1fc5c:	2002      	movs	r0, #2
   1fc5e:	f7fb f8da 	bl	1ae16 <deca_sleep>
   1fc62:	213a      	movs	r1, #58	@ 0x3a
   1fc64:	4620      	mov	r0, r4
   1fc66:	f7ff fa9b 	bl	1f1a0 <__dwt_otp_write_wdata_id_reg>
   1fc6a:	f44f 7181 	mov.w	r1, #258	@ 0x102
   1fc6e:	4620      	mov	r0, r4
   1fc70:	f7ff fa96 	bl	1f1a0 <__dwt_otp_write_wdata_id_reg>
   1fc74:	2302      	movs	r3, #2
   1fc76:	2200      	movs	r2, #0
   1fc78:	f44f 2130 	mov.w	r1, #720896	@ 0xb0000
   1fc7c:	4620      	mov	r0, r4
   1fc7e:	f7ff fa48 	bl	1f112 <dwt_write16bitoffsetreg>
   1fc82:	2300      	movs	r3, #0
   1fc84:	461a      	mov	r2, r3
   1fc86:	f44f 2130 	mov.w	r1, #720896	@ 0xb0000
   1fc8a:	4620      	mov	r0, r4
   1fc8c:	f7ff fa41 	bl	1f112 <dwt_write16bitoffsetreg>
   1fc90:	2300      	movs	r3, #0
   1fc92:	461a      	mov	r2, r3
   1fc94:	4641      	mov	r1, r8
   1fc96:	4620      	mov	r0, r4
   1fc98:	f7ff fa3b 	bl	1f112 <dwt_write16bitoffsetreg>
   1fc9c:	464b      	mov	r3, r9
   1fc9e:	2200      	movs	r2, #0
   1fca0:	4631      	mov	r1, r6
   1fca2:	4620      	mov	r0, r4
   1fca4:	f7ff fb36 	bl	1f314 <dwt_write32bitoffsetreg>
   1fca8:	b003      	add	sp, #12
   1fcaa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1fcae:	bf00      	nop
   1fcb0:	00070044 	.word	0x00070044
   1fcb4:	000b0008 	.word	0x000b0008

0001fcb8 <ull_setgpiomode>:
   1fcb8:	b5f0      	push	{r4, r5, r6, r7, lr}
   1fcba:	b083      	sub	sp, #12
   1fcbc:	2400      	movs	r4, #0
   1fcbe:	4623      	mov	r3, r4
   1fcc0:	2601      	movs	r6, #1
   1fcc2:	2707      	movs	r7, #7
   1fcc4:	e002      	b.n	1fccc <ull_setgpiomode+0x14>
   1fcc6:	3401      	adds	r4, #1
   1fcc8:	2c09      	cmp	r4, #9
   1fcca:	d009      	beq.n	1fce0 <ull_setgpiomode+0x28>
   1fccc:	fa06 f504 	lsl.w	r5, r6, r4
   1fcd0:	420d      	tst	r5, r1
   1fcd2:	d0f8      	beq.n	1fcc6 <ull_setgpiomode+0xe>
   1fcd4:	eb04 0544 	add.w	r5, r4, r4, lsl #1
   1fcd8:	fa07 f505 	lsl.w	r5, r7, r5
   1fcdc:	432b      	orrs	r3, r5
   1fcde:	e7f2      	b.n	1fcc6 <ull_setgpiomode+0xe>
   1fce0:	401a      	ands	r2, r3
   1fce2:	9200      	str	r2, [sp, #0]
   1fce4:	43db      	mvns	r3, r3
   1fce6:	2200      	movs	r2, #0
   1fce8:	f44f 21a0 	mov.w	r1, #327680	@ 0x50000
   1fcec:	f7ff fea4 	bl	1fa38 <dwt_modify32bitoffsetreg>
   1fcf0:	b003      	add	sp, #12
   1fcf2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0001fcf4 <ull_setinterrupt>:
   1fcf4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1fcf8:	b082      	sub	sp, #8
   1fcfa:	4604      	mov	r4, r0
   1fcfc:	4688      	mov	r8, r1
   1fcfe:	4617      	mov	r7, r2
   1fd00:	461d      	mov	r5, r3
   1fd02:	f7fb f875 	bl	1adf0 <decamutexon>
   1fd06:	4606      	mov	r6, r0
   1fd08:	2d02      	cmp	r5, #2
   1fd0a:	d02d      	beq.n	1fd68 <ull_setinterrupt+0x74>
   1fd0c:	2d01      	cmp	r5, #1
   1fd0e:	d038      	beq.n	1fd82 <ull_setinterrupt+0x8e>
   1fd10:	2500      	movs	r5, #0
   1fd12:	9500      	str	r5, [sp, #0]
   1fd14:	ea6f 0308 	mvn.w	r3, r8
   1fd18:	462a      	mov	r2, r5
   1fd1a:	213c      	movs	r1, #60	@ 0x3c
   1fd1c:	4620      	mov	r0, r4
   1fd1e:	f7ff fe8b 	bl	1fa38 <dwt_modify32bitoffsetreg>
   1fd22:	9500      	str	r5, [sp, #0]
   1fd24:	43fb      	mvns	r3, r7
   1fd26:	462a      	mov	r2, r5
   1fd28:	2140      	movs	r1, #64	@ 0x40
   1fd2a:	4620      	mov	r0, r4
   1fd2c:	f7ff fe84 	bl	1fa38 <dwt_modify32bitoffsetreg>
   1fd30:	2200      	movs	r2, #0
   1fd32:	213c      	movs	r1, #60	@ 0x3c
   1fd34:	4620      	mov	r0, r4
   1fd36:	f7fe fdab 	bl	1e890 <dwt_read32bitoffsetreg>
   1fd3a:	4603      	mov	r3, r0
   1fd3c:	2200      	movs	r2, #0
   1fd3e:	2144      	movs	r1, #68	@ 0x44
   1fd40:	4620      	mov	r0, r4
   1fd42:	f7ff fae7 	bl	1f314 <dwt_write32bitoffsetreg>
   1fd46:	2200      	movs	r2, #0
   1fd48:	2140      	movs	r1, #64	@ 0x40
   1fd4a:	4620      	mov	r0, r4
   1fd4c:	f7fe fda0 	bl	1e890 <dwt_read32bitoffsetreg>
   1fd50:	4603      	mov	r3, r0
   1fd52:	2200      	movs	r2, #0
   1fd54:	2148      	movs	r1, #72	@ 0x48
   1fd56:	4620      	mov	r0, r4
   1fd58:	f7ff fadc 	bl	1f314 <dwt_write32bitoffsetreg>
   1fd5c:	4630      	mov	r0, r6
   1fd5e:	f7fb f84e 	bl	1adfe <decamutexoff>
   1fd62:	b002      	add	sp, #8
   1fd64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1fd68:	4643      	mov	r3, r8
   1fd6a:	2200      	movs	r2, #0
   1fd6c:	213c      	movs	r1, #60	@ 0x3c
   1fd6e:	4620      	mov	r0, r4
   1fd70:	f7ff fad0 	bl	1f314 <dwt_write32bitoffsetreg>
   1fd74:	463b      	mov	r3, r7
   1fd76:	2200      	movs	r2, #0
   1fd78:	2140      	movs	r1, #64	@ 0x40
   1fd7a:	4620      	mov	r0, r4
   1fd7c:	f7ff faca 	bl	1f314 <dwt_write32bitoffsetreg>
   1fd80:	e7d6      	b.n	1fd30 <ull_setinterrupt+0x3c>
   1fd82:	f8cd 8000 	str.w	r8, [sp]
   1fd86:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   1fd8a:	2200      	movs	r2, #0
   1fd8c:	213c      	movs	r1, #60	@ 0x3c
   1fd8e:	4620      	mov	r0, r4
   1fd90:	f7ff fe52 	bl	1fa38 <dwt_modify32bitoffsetreg>
   1fd94:	9700      	str	r7, [sp, #0]
   1fd96:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   1fd9a:	2200      	movs	r2, #0
   1fd9c:	2140      	movs	r1, #64	@ 0x40
   1fd9e:	4620      	mov	r0, r4
   1fda0:	f7ff fe4a 	bl	1fa38 <dwt_modify32bitoffsetreg>
   1fda4:	e7c4      	b.n	1fd30 <ull_setinterrupt+0x3c>
	...

0001fda8 <ull_writetxfctrl>:
   1fda8:	b510      	push	{r4, lr}
   1fdaa:	b082      	sub	sp, #8
   1fdac:	4604      	mov	r4, r0
   1fdae:	2a7f      	cmp	r2, #127	@ 0x7f
   1fdb0:	d912      	bls.n	1fdd8 <ull_writetxfctrl+0x30>
   1fdb2:	3280      	adds	r2, #128	@ 0x80
   1fdb4:	ea41 21c3 	orr.w	r1, r1, r3, lsl #11
   1fdb8:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
   1fdbc:	9100      	str	r1, [sp, #0]
   1fdbe:	4b0c      	ldr	r3, [pc, #48]	@ (1fdf0 <ull_writetxfctrl+0x48>)
   1fdc0:	2200      	movs	r2, #0
   1fdc2:	2124      	movs	r1, #36	@ 0x24
   1fdc4:	f7ff fe38 	bl	1fa38 <dwt_modify32bitoffsetreg>
   1fdc8:	2200      	movs	r2, #0
   1fdca:	f44f 2100 	mov.w	r1, #524288	@ 0x80000
   1fdce:	4620      	mov	r0, r4
   1fdd0:	f7fe fd86 	bl	1e8e0 <dwt_read8bitoffsetreg>
   1fdd4:	b002      	add	sp, #8
   1fdd6:	bd10      	pop	{r4, pc}
   1fdd8:	ea41 21c3 	orr.w	r1, r1, r3, lsl #11
   1fddc:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
   1fde0:	9100      	str	r1, [sp, #0]
   1fde2:	4b03      	ldr	r3, [pc, #12]	@ (1fdf0 <ull_writetxfctrl+0x48>)
   1fde4:	2200      	movs	r2, #0
   1fde6:	2124      	movs	r1, #36	@ 0x24
   1fde8:	f7ff fe26 	bl	1fa38 <dwt_modify32bitoffsetreg>
   1fdec:	e7f2      	b.n	1fdd4 <ull_writetxfctrl+0x2c>
   1fdee:	bf00      	nop
   1fdf0:	fc00f400 	.word	0xfc00f400

0001fdf4 <prs_sys_status_and_or>:
   1fdf4:	b500      	push	{lr}
   1fdf6:	b083      	sub	sp, #12
   1fdf8:	9200      	str	r2, [sp, #0]
   1fdfa:	460b      	mov	r3, r1
   1fdfc:	2200      	movs	r2, #0
   1fdfe:	2144      	movs	r1, #68	@ 0x44
   1fe00:	f7ff fe1a 	bl	1fa38 <dwt_modify32bitoffsetreg>
   1fe04:	2000      	movs	r0, #0
   1fe06:	b003      	add	sp, #12
   1fe08:	f85d fb04 	ldr.w	pc, [sp], #4

0001fe0c <dwt_modify8bitoffsetreg>:
   1fe0c:	b500      	push	{lr}
   1fe0e:	b085      	sub	sp, #20
   1fe10:	f88d 300c 	strb.w	r3, [sp, #12]
   1fe14:	f89d 3018 	ldrb.w	r3, [sp, #24]
   1fe18:	f88d 300d 	strb.w	r3, [sp, #13]
   1fe1c:	f248 0301 	movw	r3, #32769	@ 0x8001
   1fe20:	9301      	str	r3, [sp, #4]
   1fe22:	ab03      	add	r3, sp, #12
   1fe24:	9300      	str	r3, [sp, #0]
   1fe26:	2302      	movs	r3, #2
   1fe28:	b292      	uxth	r2, r2
   1fe2a:	f7fe fca4 	bl	1e776 <dwt_xfer3xxx>
   1fe2e:	b005      	add	sp, #20
   1fe30:	f85d fb04 	ldr.w	pc, [sp], #4

0001fe34 <ull_configciadiag>:
   1fe34:	b530      	push	{r4, r5, lr}
   1fe36:	b083      	sub	sp, #12
   1fe38:	4604      	mov	r4, r0
   1fe3a:	460d      	mov	r5, r1
   1fe3c:	f011 0f01 	tst.w	r1, #1
   1fe40:	d015      	beq.n	1fe6e <ull_configciadiag+0x3a>
   1fe42:	2300      	movs	r3, #0
   1fe44:	9300      	str	r3, [sp, #0]
   1fe46:	23ef      	movs	r3, #239	@ 0xef
   1fe48:	2202      	movs	r2, #2
   1fe4a:	f44f 2160 	mov.w	r1, #917504	@ 0xe0000
   1fe4e:	f7ff ffdd 	bl	1fe0c <dwt_modify8bitoffsetreg>
   1fe52:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   1fe54:	761d      	strb	r5, [r3, #24]
   1fe56:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   1fe58:	7e1b      	ldrb	r3, [r3, #24]
   1fe5a:	085b      	lsrs	r3, r3, #1
   1fe5c:	d010      	beq.n	1fe80 <ull_configciadiag+0x4c>
   1fe5e:	086b      	lsrs	r3, r5, #1
   1fe60:	2200      	movs	r2, #0
   1fe62:	490e      	ldr	r1, [pc, #56]	@ (1fe9c <ull_configciadiag+0x68>)
   1fe64:	4620      	mov	r0, r4
   1fe66:	f7ff f902 	bl	1f06e <dwt_write8bitoffsetreg>
   1fe6a:	b003      	add	sp, #12
   1fe6c:	bd30      	pop	{r4, r5, pc}
   1fe6e:	2310      	movs	r3, #16
   1fe70:	9300      	str	r3, [sp, #0]
   1fe72:	23ff      	movs	r3, #255	@ 0xff
   1fe74:	2202      	movs	r2, #2
   1fe76:	f44f 2160 	mov.w	r1, #917504	@ 0xe0000
   1fe7a:	f7ff ffc7 	bl	1fe0c <dwt_modify8bitoffsetreg>
   1fe7e:	e7e8      	b.n	1fe52 <ull_configciadiag+0x1e>
   1fe80:	2301      	movs	r3, #1
   1fe82:	9300      	str	r3, [sp, #0]
   1fe84:	23ff      	movs	r3, #255	@ 0xff
   1fe86:	2200      	movs	r2, #0
   1fe88:	4904      	ldr	r1, [pc, #16]	@ (1fe9c <ull_configciadiag+0x68>)
   1fe8a:	4620      	mov	r0, r4
   1fe8c:	f7ff ffbe 	bl	1fe0c <dwt_modify8bitoffsetreg>
   1fe90:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   1fe92:	7e13      	ldrb	r3, [r2, #24]
   1fe94:	f043 0302 	orr.w	r3, r3, #2
   1fe98:	7613      	strb	r3, [r2, #24]
   1fe9a:	e7e6      	b.n	1fe6a <ull_configciadiag+0x36>
   1fe9c:	00010028 	.word	0x00010028

0001fea0 <ull_calcbandwidthadj>:
   1fea0:	b570      	push	{r4, r5, r6, lr}
   1fea2:	b082      	sub	sp, #8
   1fea4:	4604      	mov	r4, r0
   1fea6:	460d      	mov	r5, r1
   1fea8:	2101      	movs	r1, #1
   1feaa:	f7ff f963 	bl	1f174 <ull_force_clocks>
   1feae:	2100      	movs	r1, #0
   1feb0:	4620      	mov	r0, r4
   1feb2:	f7ff fe03 	bl	1fabc <ull_enable_rf_tx>
   1feb6:	4620      	mov	r0, r4
   1feb8:	f7ff fe34 	bl	1fb24 <ull_enable_rftx_blocks>
   1febc:	f3c5 030b 	ubfx	r3, r5, #0, #12
   1fec0:	2200      	movs	r2, #0
   1fec2:	4915      	ldr	r1, [pc, #84]	@ (1ff18 <ull_calcbandwidthadj+0x78>)
   1fec4:	4620      	mov	r0, r4
   1fec6:	f7ff f924 	bl	1f112 <dwt_write16bitoffsetreg>
   1feca:	2303      	movs	r3, #3
   1fecc:	9300      	str	r3, [sp, #0]
   1fece:	23ff      	movs	r3, #255	@ 0xff
   1fed0:	2200      	movs	r2, #0
   1fed2:	4912      	ldr	r1, [pc, #72]	@ (1ff1c <ull_calcbandwidthadj+0x7c>)
   1fed4:	4620      	mov	r0, r4
   1fed6:	f7ff ff99 	bl	1fe0c <dwt_modify8bitoffsetreg>
   1feda:	4e10      	ldr	r6, [pc, #64]	@ (1ff1c <ull_calcbandwidthadj+0x7c>)
   1fedc:	2500      	movs	r5, #0
   1fede:	462a      	mov	r2, r5
   1fee0:	4631      	mov	r1, r6
   1fee2:	4620      	mov	r0, r4
   1fee4:	f7fe fcfc 	bl	1e8e0 <dwt_read8bitoffsetreg>
   1fee8:	f010 0f01 	tst.w	r0, #1
   1feec:	d1f7      	bne.n	1fede <ull_calcbandwidthadj+0x3e>
   1feee:	4620      	mov	r0, r4
   1fef0:	f7ff fcae 	bl	1f850 <ull_disable_rftx_blocks>
   1fef4:	2100      	movs	r1, #0
   1fef6:	4620      	mov	r0, r4
   1fef8:	f7ff fcb4 	bl	1f864 <ull_disable_rf_tx>
   1fefc:	2105      	movs	r1, #5
   1fefe:	4620      	mov	r0, r4
   1ff00:	f7ff f938 	bl	1f174 <ull_force_clocks>
   1ff04:	2200      	movs	r2, #0
   1ff06:	4906      	ldr	r1, [pc, #24]	@ (1ff20 <ull_calcbandwidthadj+0x80>)
   1ff08:	4620      	mov	r0, r4
   1ff0a:	f7fe fce9 	bl	1e8e0 <dwt_read8bitoffsetreg>
   1ff0e:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
   1ff12:	b002      	add	sp, #8
   1ff14:	bd70      	pop	{r4, r5, r6, pc}
   1ff16:	bf00      	nop
   1ff18:	0008001c 	.word	0x0008001c
   1ff1c:	00080010 	.word	0x00080010
   1ff20:	0007001c 	.word	0x0007001c

0001ff24 <ull_configuretxrf>:
   1ff24:	b538      	push	{r3, r4, r5, lr}
   1ff26:	4605      	mov	r5, r0
   1ff28:	460c      	mov	r4, r1
   1ff2a:	f8b1 1005 	ldrh.w	r1, [r1, #5]
   1ff2e:	b149      	cbz	r1, 1ff44 <ull_configuretxrf+0x20>
   1ff30:	f7ff ffb6 	bl	1fea0 <ull_calcbandwidthadj>
   1ff34:	f8d4 3001 	ldr.w	r3, [r4, #1]
   1ff38:	2200      	movs	r2, #0
   1ff3a:	4905      	ldr	r1, [pc, #20]	@ (1ff50 <ull_configuretxrf+0x2c>)
   1ff3c:	4628      	mov	r0, r5
   1ff3e:	f7ff f9e9 	bl	1f314 <dwt_write32bitoffsetreg>
   1ff42:	bd38      	pop	{r3, r4, r5, pc}
   1ff44:	7823      	ldrb	r3, [r4, #0]
   1ff46:	2200      	movs	r2, #0
   1ff48:	4902      	ldr	r1, [pc, #8]	@ (1ff54 <ull_configuretxrf+0x30>)
   1ff4a:	f7ff f890 	bl	1f06e <dwt_write8bitoffsetreg>
   1ff4e:	e7f1      	b.n	1ff34 <ull_configuretxrf+0x10>
   1ff50:	0001000c 	.word	0x0001000c
   1ff54:	0007001c 	.word	0x0007001c

0001ff58 <ull_repeated_frames>:
   1ff58:	b530      	push	{r4, r5, lr}
   1ff5a:	b083      	sub	sp, #12
   1ff5c:	4604      	mov	r4, r0
   1ff5e:	460d      	mov	r5, r1
   1ff60:	2310      	movs	r3, #16
   1ff62:	9300      	str	r3, [sp, #0]
   1ff64:	23ff      	movs	r3, #255	@ 0xff
   1ff66:	2200      	movs	r2, #0
   1ff68:	4906      	ldr	r1, [pc, #24]	@ (1ff84 <ull_repeated_frames+0x2c>)
   1ff6a:	f7ff ff4f 	bl	1fe0c <dwt_modify8bitoffsetreg>
   1ff6e:	462b      	mov	r3, r5
   1ff70:	2d02      	cmp	r5, #2
   1ff72:	bf38      	it	cc
   1ff74:	2302      	movcc	r3, #2
   1ff76:	2200      	movs	r2, #0
   1ff78:	212c      	movs	r1, #44	@ 0x2c
   1ff7a:	4620      	mov	r0, r4
   1ff7c:	f7ff f9ca 	bl	1f314 <dwt_write32bitoffsetreg>
   1ff80:	b003      	add	sp, #12
   1ff82:	bd30      	pop	{r4, r5, pc}
   1ff84:	000f0024 	.word	0x000f0024

0001ff88 <ull_setdwstate>:
   1ff88:	b530      	push	{r4, r5, lr}
   1ff8a:	b083      	sub	sp, #12
   1ff8c:	4604      	mov	r4, r0
   1ff8e:	2901      	cmp	r1, #1
   1ff90:	d01d      	beq.n	1ffce <ull_setdwstate+0x46>
   1ff92:	2902      	cmp	r1, #2
   1ff94:	d030      	beq.n	1fff8 <ull_setdwstate+0x70>
   1ff96:	2301      	movs	r3, #1
   1ff98:	9300      	str	r3, [sp, #0]
   1ff9a:	23ff      	movs	r3, #255	@ 0xff
   1ff9c:	2200      	movs	r2, #0
   1ff9e:	4926      	ldr	r1, [pc, #152]	@ (20038 <ull_setdwstate+0xb0>)
   1ffa0:	f7ff ff34 	bl	1fe0c <dwt_modify8bitoffsetreg>
   1ffa4:	4d25      	ldr	r5, [pc, #148]	@ (2003c <ull_setdwstate+0xb4>)
   1ffa6:	f44f 0300 	mov.w	r3, #8388608	@ 0x800000
   1ffaa:	9300      	str	r3, [sp, #0]
   1ffac:	f46f 7380 	mvn.w	r3, #256	@ 0x100
   1ffb0:	2200      	movs	r2, #0
   1ffb2:	4629      	mov	r1, r5
   1ffb4:	4620      	mov	r0, r4
   1ffb6:	f7ff fd3f 	bl	1fa38 <dwt_modify32bitoffsetreg>
   1ffba:	2300      	movs	r3, #0
   1ffbc:	9300      	str	r3, [sp, #0]
   1ffbe:	237f      	movs	r3, #127	@ 0x7f
   1ffc0:	2202      	movs	r2, #2
   1ffc2:	4629      	mov	r1, r5
   1ffc4:	4620      	mov	r0, r4
   1ffc6:	f7ff ff21 	bl	1fe0c <dwt_modify8bitoffsetreg>
   1ffca:	b003      	add	sp, #12
   1ffcc:	bd30      	pop	{r4, r5, pc}
   1ffce:	2105      	movs	r1, #5
   1ffd0:	f7ff f8d0 	bl	1f174 <ull_force_clocks>
   1ffd4:	f44f 7381 	mov.w	r3, #258	@ 0x102
   1ffd8:	9300      	str	r3, [sp, #0]
   1ffda:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   1ffde:	2200      	movs	r2, #0
   1ffe0:	4917      	ldr	r1, [pc, #92]	@ (20040 <ull_setdwstate+0xb8>)
   1ffe2:	4620      	mov	r0, r4
   1ffe4:	f7ff fd28 	bl	1fa38 <dwt_modify32bitoffsetreg>
   1ffe8:	2201      	movs	r2, #1
   1ffea:	9200      	str	r2, [sp, #0]
   1ffec:	23ff      	movs	r3, #255	@ 0xff
   1ffee:	4913      	ldr	r1, [pc, #76]	@ (2003c <ull_setdwstate+0xb4>)
   1fff0:	4620      	mov	r0, r4
   1fff2:	f7ff ff0b 	bl	1fe0c <dwt_modify8bitoffsetreg>
   1fff6:	e7e8      	b.n	1ffca <ull_setdwstate+0x42>
   1fff8:	2303      	movs	r3, #3
   1fffa:	9300      	str	r3, [sp, #0]
   1fffc:	23ff      	movs	r3, #255	@ 0xff
   1fffe:	2200      	movs	r2, #0
   20000:	490d      	ldr	r1, [pc, #52]	@ (20038 <ull_setdwstate+0xb0>)
   20002:	f7ff ff03 	bl	1fe0c <dwt_modify8bitoffsetreg>
   20006:	4d0d      	ldr	r5, [pc, #52]	@ (2003c <ull_setdwstate+0xb4>)
   20008:	f44f 0300 	mov.w	r3, #8388608	@ 0x800000
   2000c:	9300      	str	r3, [sp, #0]
   2000e:	f46f 7380 	mvn.w	r3, #256	@ 0x100
   20012:	2200      	movs	r2, #0
   20014:	4629      	mov	r1, r5
   20016:	4620      	mov	r0, r4
   20018:	f7ff fd0e 	bl	1fa38 <dwt_modify32bitoffsetreg>
   2001c:	2300      	movs	r3, #0
   2001e:	9300      	str	r3, [sp, #0]
   20020:	237f      	movs	r3, #127	@ 0x7f
   20022:	2202      	movs	r2, #2
   20024:	4629      	mov	r1, r5
   20026:	4620      	mov	r0, r4
   20028:	f7ff fef0 	bl	1fe0c <dwt_modify8bitoffsetreg>
   2002c:	2105      	movs	r1, #5
   2002e:	4620      	mov	r0, r4
   20030:	f7ff f8a0 	bl	1f174 <ull_force_clocks>
   20034:	e7c9      	b.n	1ffca <ull_setdwstate+0x42>
   20036:	bf00      	nop
   20038:	00110004 	.word	0x00110004
   2003c:	00110008 	.word	0x00110008
   20040:	00090008 	.word	0x00090008

00020044 <ull_configureframefilter>:
   20044:	b530      	push	{r4, r5, lr}
   20046:	b083      	sub	sp, #12
   20048:	4605      	mov	r5, r0
   2004a:	2902      	cmp	r1, #2
   2004c:	d00e      	beq.n	2006c <ull_configureframefilter+0x28>
   2004e:	2400      	movs	r4, #0
   20050:	9400      	str	r4, [sp, #0]
   20052:	23fe      	movs	r3, #254	@ 0xfe
   20054:	4622      	mov	r2, r4
   20056:	2110      	movs	r1, #16
   20058:	f7ff fed8 	bl	1fe0c <dwt_modify8bitoffsetreg>
   2005c:	4623      	mov	r3, r4
   2005e:	4622      	mov	r2, r4
   20060:	2114      	movs	r1, #20
   20062:	4628      	mov	r0, r5
   20064:	f7ff f855 	bl	1f112 <dwt_write16bitoffsetreg>
   20068:	b003      	add	sp, #12
   2006a:	bd30      	pop	{r4, r5, pc}
   2006c:	4614      	mov	r4, r2
   2006e:	2301      	movs	r3, #1
   20070:	9300      	str	r3, [sp, #0]
   20072:	23ff      	movs	r3, #255	@ 0xff
   20074:	2200      	movs	r2, #0
   20076:	2110      	movs	r1, #16
   20078:	f7ff fec8 	bl	1fe0c <dwt_modify8bitoffsetreg>
   2007c:	4623      	mov	r3, r4
   2007e:	2200      	movs	r2, #0
   20080:	2114      	movs	r1, #20
   20082:	4628      	mov	r0, r5
   20084:	f7ff f845 	bl	1f112 <dwt_write16bitoffsetreg>
   20088:	e7ee      	b.n	20068 <ull_configureframefilter+0x24>
	...

0002008c <ull_run_pgfcal>:
   2008c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   20090:	b082      	sub	sp, #8
   20092:	4605      	mov	r5, r0
   20094:	4c29      	ldr	r4, [pc, #164]	@ (2013c <ull_run_pgfcal+0xb0>)
   20096:	4b2a      	ldr	r3, [pc, #168]	@ (20140 <ull_run_pgfcal+0xb4>)
   20098:	2200      	movs	r2, #0
   2009a:	4621      	mov	r1, r4
   2009c:	f7ff f93a 	bl	1f314 <dwt_write32bitoffsetreg>
   200a0:	2310      	movs	r3, #16
   200a2:	9300      	str	r3, [sp, #0]
   200a4:	23ff      	movs	r3, #255	@ 0xff
   200a6:	2200      	movs	r2, #0
   200a8:	4621      	mov	r1, r4
   200aa:	4628      	mov	r0, r5
   200ac:	f7ff feae 	bl	1fe0c <dwt_modify8bitoffsetreg>
   200b0:	2403      	movs	r4, #3
   200b2:	f04f 0814 	mov.w	r8, #20
   200b6:	4f23      	ldr	r7, [pc, #140]	@ (20144 <ull_run_pgfcal+0xb8>)
   200b8:	2600      	movs	r6, #0
   200ba:	4640      	mov	r0, r8
   200bc:	f7fa febb 	bl	1ae36 <deca_usleep>
   200c0:	4632      	mov	r2, r6
   200c2:	4639      	mov	r1, r7
   200c4:	4628      	mov	r0, r5
   200c6:	f7fe fc0b 	bl	1e8e0 <dwt_read8bitoffsetreg>
   200ca:	2801      	cmp	r0, #1
   200cc:	d034      	beq.n	20138 <ull_run_pgfcal+0xac>
   200ce:	1e63      	subs	r3, r4, #1
   200d0:	f013 04ff 	ands.w	r4, r3, #255	@ 0xff
   200d4:	d1f1      	bne.n	200ba <ull_run_pgfcal+0x2e>
   200d6:	f06f 0402 	mvn.w	r4, #2
   200da:	4e18      	ldr	r6, [pc, #96]	@ (2013c <ull_run_pgfcal+0xb0>)
   200dc:	2300      	movs	r3, #0
   200de:	461a      	mov	r2, r3
   200e0:	4631      	mov	r1, r6
   200e2:	4628      	mov	r0, r5
   200e4:	f7fe ffc3 	bl	1f06e <dwt_write8bitoffsetreg>
   200e8:	2301      	movs	r3, #1
   200ea:	2200      	movs	r2, #0
   200ec:	4915      	ldr	r1, [pc, #84]	@ (20144 <ull_run_pgfcal+0xb8>)
   200ee:	4628      	mov	r0, r5
   200f0:	f7fe ffbd 	bl	1f06e <dwt_write8bitoffsetreg>
   200f4:	2301      	movs	r3, #1
   200f6:	9300      	str	r3, [sp, #0]
   200f8:	23ff      	movs	r3, #255	@ 0xff
   200fa:	2202      	movs	r2, #2
   200fc:	4631      	mov	r1, r6
   200fe:	4628      	mov	r0, r5
   20100:	f7ff fe84 	bl	1fe0c <dwt_modify8bitoffsetreg>
   20104:	2200      	movs	r2, #0
   20106:	4910      	ldr	r1, [pc, #64]	@ (20148 <ull_run_pgfcal+0xbc>)
   20108:	4628      	mov	r0, r5
   2010a:	f7fe fbc1 	bl	1e890 <dwt_read32bitoffsetreg>
   2010e:	f06f 4360 	mvn.w	r3, #3758096384	@ 0xe0000000
   20112:	4298      	cmp	r0, r3
   20114:	bf08      	it	eq
   20116:	f06f 0403 	mvneq.w	r4, #3
   2011a:	2200      	movs	r2, #0
   2011c:	490b      	ldr	r1, [pc, #44]	@ (2014c <ull_run_pgfcal+0xc0>)
   2011e:	4628      	mov	r0, r5
   20120:	f7fe fbb6 	bl	1e890 <dwt_read32bitoffsetreg>
   20124:	f06f 4360 	mvn.w	r3, #3758096384	@ 0xe0000000
   20128:	4298      	cmp	r0, r3
   2012a:	bf14      	ite	ne
   2012c:	4620      	movne	r0, r4
   2012e:	f06f 0004 	mvneq.w	r0, #4
   20132:	b002      	add	sp, #8
   20134:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   20138:	2400      	movs	r4, #0
   2013a:	e7ce      	b.n	200da <ull_run_pgfcal+0x4e>
   2013c:	0004000c 	.word	0x0004000c
   20140:	00020001 	.word	0x00020001
   20144:	00040020 	.word	0x00040020
   20148:	00040014 	.word	0x00040014
   2014c:	0004001c 	.word	0x0004001c

00020150 <prs_ack_enable>:
   20150:	b500      	push	{lr}
   20152:	b083      	sub	sp, #12
   20154:	2900      	cmp	r1, #0
   20156:	bf0b      	itete	eq
   20158:	23ff      	moveq	r3, #255	@ 0xff
   2015a:	23f7      	movne	r3, #247	@ 0xf7
   2015c:	2200      	moveq	r2, #0
   2015e:	2208      	movne	r2, #8
   20160:	9200      	str	r2, [sp, #0]
   20162:	2201      	movs	r2, #1
   20164:	2110      	movs	r1, #16
   20166:	f7ff fe51 	bl	1fe0c <dwt_modify8bitoffsetreg>
   2016a:	b003      	add	sp, #12
   2016c:	f85d fb04 	ldr.w	pc, [sp], #4

00020170 <dwt_modify16bitoffsetreg>:
   20170:	b510      	push	{r4, lr}
   20172:	b084      	sub	sp, #16
   20174:	f8bd 4018 	ldrh.w	r4, [sp, #24]
   20178:	f88d 300c 	strb.w	r3, [sp, #12]
   2017c:	0a1b      	lsrs	r3, r3, #8
   2017e:	f88d 300d 	strb.w	r3, [sp, #13]
   20182:	f88d 400e 	strb.w	r4, [sp, #14]
   20186:	0a24      	lsrs	r4, r4, #8
   20188:	f88d 400f 	strb.w	r4, [sp, #15]
   2018c:	f248 0302 	movw	r3, #32770	@ 0x8002
   20190:	9301      	str	r3, [sp, #4]
   20192:	ab03      	add	r3, sp, #12
   20194:	9300      	str	r3, [sp, #0]
   20196:	2304      	movs	r3, #4
   20198:	b292      	uxth	r2, r2
   2019a:	f7fe faec 	bl	1e776 <dwt_xfer3xxx>
   2019e:	b004      	add	sp, #16
   201a0:	bd10      	pop	{r4, pc}
	...

000201a4 <_dwt_prog_ldo_and_bias_tune>:
   201a4:	b510      	push	{r4, lr}
   201a6:	b082      	sub	sp, #8
   201a8:	4604      	mov	r4, r0
   201aa:	f44f 73c0 	mov.w	r3, #384	@ 0x180
   201ae:	9300      	str	r3, [sp, #0]
   201b0:	f64f 73ff 	movw	r3, #65535	@ 0xffff
   201b4:	2200      	movs	r2, #0
   201b6:	4907      	ldr	r1, [pc, #28]	@ (201d4 <_dwt_prog_ldo_and_bias_tune+0x30>)
   201b8:	f7ff ffda 	bl	20170 <dwt_modify16bitoffsetreg>
   201bc:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   201be:	7a1b      	ldrb	r3, [r3, #8]
   201c0:	9300      	str	r3, [sp, #0]
   201c2:	f64f 73e0 	movw	r3, #65504	@ 0xffe0
   201c6:	2200      	movs	r2, #0
   201c8:	4903      	ldr	r1, [pc, #12]	@ (201d8 <_dwt_prog_ldo_and_bias_tune+0x34>)
   201ca:	4620      	mov	r0, r4
   201cc:	f7ff ffd0 	bl	20170 <dwt_modify16bitoffsetreg>
   201d0:	b002      	add	sp, #8
   201d2:	bd10      	pop	{r4, pc}
   201d4:	000b0008 	.word	0x000b0008
   201d8:	0011001f 	.word	0x0011001f

000201dc <ull_setleds>:
   201dc:	b530      	push	{r4, r5, lr}
   201de:	b083      	sub	sp, #12
   201e0:	4604      	mov	r4, r0
   201e2:	f011 0f01 	tst.w	r1, #1
   201e6:	d01f      	beq.n	20228 <ull_setleds+0x4c>
   201e8:	460d      	mov	r5, r1
   201ea:	f44f 7310 	mov.w	r3, #576	@ 0x240
   201ee:	9300      	str	r3, [sp, #0]
   201f0:	f46f 637c 	mvn.w	r3, #4032	@ 0xfc0
   201f4:	2200      	movs	r2, #0
   201f6:	f44f 21a0 	mov.w	r1, #327680	@ 0x50000
   201fa:	f7ff fc1d 	bl	1fa38 <dwt_modify32bitoffsetreg>
   201fe:	f44f 0304 	mov.w	r3, #8650752	@ 0x840000
   20202:	9300      	str	r3, [sp, #0]
   20204:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   20208:	2200      	movs	r2, #0
   2020a:	4918      	ldr	r1, [pc, #96]	@ (2026c <ull_setleds+0x90>)
   2020c:	4620      	mov	r0, r4
   2020e:	f7ff fc13 	bl	1fa38 <dwt_modify32bitoffsetreg>
   20212:	f015 0f02 	tst.w	r5, #2
   20216:	d11a      	bne.n	2024e <ull_setleds+0x72>
   20218:	f44f 7388 	mov.w	r3, #272	@ 0x110
   2021c:	2200      	movs	r2, #0
   2021e:	4914      	ldr	r1, [pc, #80]	@ (20270 <ull_setleds+0x94>)
   20220:	4620      	mov	r0, r4
   20222:	f7ff f877 	bl	1f314 <dwt_write32bitoffsetreg>
   20226:	e010      	b.n	2024a <ull_setleds+0x6e>
   20228:	2500      	movs	r5, #0
   2022a:	9500      	str	r5, [sp, #0]
   2022c:	f46f 637c 	mvn.w	r3, #4032	@ 0xfc0
   20230:	462a      	mov	r2, r5
   20232:	f44f 21a0 	mov.w	r1, #327680	@ 0x50000
   20236:	f7ff fbff 	bl	1fa38 <dwt_modify32bitoffsetreg>
   2023a:	9500      	str	r5, [sp, #0]
   2023c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
   20240:	462a      	mov	r2, r5
   20242:	490b      	ldr	r1, [pc, #44]	@ (20270 <ull_setleds+0x94>)
   20244:	4620      	mov	r0, r4
   20246:	f7ff ff93 	bl	20170 <dwt_modify16bitoffsetreg>
   2024a:	b003      	add	sp, #12
   2024c:	bd30      	pop	{r4, r5, pc}
   2024e:	4d08      	ldr	r5, [pc, #32]	@ (20270 <ull_setleds+0x94>)
   20250:	4b08      	ldr	r3, [pc, #32]	@ (20274 <ull_setleds+0x98>)
   20252:	2200      	movs	r2, #0
   20254:	4629      	mov	r1, r5
   20256:	4620      	mov	r0, r4
   20258:	f7ff f85c 	bl	1f314 <dwt_write32bitoffsetreg>
   2025c:	f44f 7388 	mov.w	r3, #272	@ 0x110
   20260:	2200      	movs	r2, #0
   20262:	4629      	mov	r1, r5
   20264:	4620      	mov	r0, r4
   20266:	f7ff f855 	bl	1f314 <dwt_write32bitoffsetreg>
   2026a:	e7ee      	b.n	2024a <ull_setleds+0x6e>
   2026c:	00110004 	.word	0x00110004
   20270:	00110016 	.word	0x00110016
   20274:	000f0110 	.word	0x000f0110

00020278 <ull_pgf_cal>:
   20278:	b5f0      	push	{r4, r5, r6, r7, lr}
   2027a:	b083      	sub	sp, #12
   2027c:	4604      	mov	r4, r0
   2027e:	2901      	cmp	r1, #1
   20280:	d009      	beq.n	20296 <ull_pgf_cal+0x1e>
   20282:	2014      	movs	r0, #20
   20284:	f7fa fdd7 	bl	1ae36 <deca_usleep>
   20288:	4620      	mov	r0, r4
   2028a:	f7ff feff 	bl	2008c <ull_run_pgfcal>
   2028e:	4605      	mov	r5, r0
   20290:	4628      	mov	r0, r5
   20292:	b003      	add	sp, #12
   20294:	bdf0      	pop	{r4, r5, r6, r7, pc}
   20296:	4e0f      	ldr	r6, [pc, #60]	@ (202d4 <ull_pgf_cal+0x5c>)
   20298:	2200      	movs	r2, #0
   2029a:	4631      	mov	r1, r6
   2029c:	f7fe fb0e 	bl	1e8bc <dwt_read16bitoffsetreg>
   202a0:	4607      	mov	r7, r0
   202a2:	f240 1305 	movw	r3, #261	@ 0x105
   202a6:	9300      	str	r3, [sp, #0]
   202a8:	f64f 73ff 	movw	r3, #65535	@ 0xffff
   202ac:	2200      	movs	r2, #0
   202ae:	4631      	mov	r1, r6
   202b0:	4620      	mov	r0, r4
   202b2:	f7ff ff5d 	bl	20170 <dwt_modify16bitoffsetreg>
   202b6:	2014      	movs	r0, #20
   202b8:	f7fa fdbd 	bl	1ae36 <deca_usleep>
   202bc:	4620      	mov	r0, r4
   202be:	f7ff fee5 	bl	2008c <ull_run_pgfcal>
   202c2:	4605      	mov	r5, r0
   202c4:	2200      	movs	r2, #0
   202c6:	9200      	str	r2, [sp, #0]
   202c8:	463b      	mov	r3, r7
   202ca:	4631      	mov	r1, r6
   202cc:	4620      	mov	r0, r4
   202ce:	f7ff ff4f 	bl	20170 <dwt_modify16bitoffsetreg>
   202d2:	e7dd      	b.n	20290 <ull_pgf_cal+0x18>
   202d4:	00070048 	.word	0x00070048

000202d8 <ull_setgpiovalue>:
   202d8:	b500      	push	{lr}
   202da:	b083      	sub	sp, #12
   202dc:	2a01      	cmp	r2, #1
   202de:	d009      	beq.n	202f4 <ull_setgpiovalue+0x1c>
   202e0:	43cb      	mvns	r3, r1
   202e2:	2200      	movs	r2, #0
   202e4:	9200      	str	r2, [sp, #0]
   202e6:	b29b      	uxth	r3, r3
   202e8:	4906      	ldr	r1, [pc, #24]	@ (20304 <ull_setgpiovalue+0x2c>)
   202ea:	f7ff ff41 	bl	20170 <dwt_modify16bitoffsetreg>
   202ee:	b003      	add	sp, #12
   202f0:	f85d fb04 	ldr.w	pc, [sp], #4
   202f4:	9100      	str	r1, [sp, #0]
   202f6:	f64f 73ff 	movw	r3, #65535	@ 0xffff
   202fa:	2200      	movs	r2, #0
   202fc:	4901      	ldr	r1, [pc, #4]	@ (20304 <ull_setgpiovalue+0x2c>)
   202fe:	f7ff ff37 	bl	20170 <dwt_modify16bitoffsetreg>
   20302:	e7f4      	b.n	202ee <ull_setgpiovalue+0x16>
   20304:	0005000c 	.word	0x0005000c

00020308 <ull_readaccdata>:
   20308:	b5f0      	push	{r4, r5, r6, r7, lr}
   2030a:	b083      	sub	sp, #12
   2030c:	4604      	mov	r4, r0
   2030e:	460f      	mov	r7, r1
   20310:	4616      	mov	r6, r2
   20312:	461d      	mov	r5, r3
   20314:	f248 0340 	movw	r3, #32832	@ 0x8040
   20318:	9300      	str	r3, [sp, #0]
   2031a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
   2031e:	2200      	movs	r2, #0
   20320:	4918      	ldr	r1, [pc, #96]	@ (20384 <ull_readaccdata+0x7c>)
   20322:	f7ff ff25 	bl	20170 <dwt_modify16bitoffsetreg>
   20326:	19aa      	adds	r2, r5, r6
   20328:	f243 0301 	movw	r3, #12289	@ 0x3001
   2032c:	429a      	cmp	r2, r3
   2032e:	dc15      	bgt.n	2035c <ull_readaccdata+0x54>
   20330:	2d7f      	cmp	r5, #127	@ 0x7f
   20332:	d91d      	bls.n	20370 <ull_readaccdata+0x68>
   20334:	2315      	movs	r3, #21
   20336:	2200      	movs	r2, #0
   20338:	4913      	ldr	r1, [pc, #76]	@ (20388 <ull_readaccdata+0x80>)
   2033a:	4620      	mov	r0, r4
   2033c:	f7fe ffea 	bl	1f314 <dwt_write32bitoffsetreg>
   20340:	462b      	mov	r3, r5
   20342:	2200      	movs	r2, #0
   20344:	4911      	ldr	r1, [pc, #68]	@ (2038c <ull_readaccdata+0x84>)
   20346:	4620      	mov	r0, r4
   20348:	f7fe ffe4 	bl	1f314 <dwt_write32bitoffsetreg>
   2034c:	9700      	str	r7, [sp, #0]
   2034e:	4633      	mov	r3, r6
   20350:	2200      	movs	r2, #0
   20352:	f44f 11e8 	mov.w	r1, #1900544	@ 0x1d0000
   20356:	4620      	mov	r0, r4
   20358:	f7fe fa90 	bl	1e87c <dwt_readfromdevice>
   2035c:	2200      	movs	r2, #0
   2035e:	9200      	str	r2, [sp, #0]
   20360:	f647 73bf 	movw	r3, #32703	@ 0x7fbf
   20364:	4907      	ldr	r1, [pc, #28]	@ (20384 <ull_readaccdata+0x7c>)
   20366:	4620      	mov	r0, r4
   20368:	f7ff ff02 	bl	20170 <dwt_modify16bitoffsetreg>
   2036c:	b003      	add	sp, #12
   2036e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   20370:	9700      	str	r7, [sp, #0]
   20372:	4633      	mov	r3, r6
   20374:	462a      	mov	r2, r5
   20376:	f44f 11a8 	mov.w	r1, #1376256	@ 0x150000
   2037a:	4620      	mov	r0, r4
   2037c:	f7fe fa7e 	bl	1e87c <dwt_readfromdevice>
   20380:	e7ec      	b.n	2035c <ull_readaccdata+0x54>
   20382:	bf00      	nop
   20384:	00110004 	.word	0x00110004
   20388:	001f0004 	.word	0x001f0004
   2038c:	001f0008 	.word	0x001f0008

00020390 <ull_repeated_cw>:
   20390:	b570      	push	{r4, r5, r6, lr}
   20392:	4606      	mov	r6, r0
   20394:	460c      	mov	r4, r1
   20396:	4615      	mov	r5, r2
   20398:	4b0e      	ldr	r3, [pc, #56]	@ (203d4 <ull_repeated_cw+0x44>)
   2039a:	2202      	movs	r2, #2
   2039c:	490e      	ldr	r1, [pc, #56]	@ (203d8 <ull_repeated_cw+0x48>)
   2039e:	f7fe ffb9 	bl	1f314 <dwt_write32bitoffsetreg>
   203a2:	2d0f      	cmp	r5, #15
   203a4:	bfa8      	it	ge
   203a6:	250f      	movge	r5, #15
   203a8:	1e63      	subs	r3, r4, #1
   203aa:	2b03      	cmp	r3, #3
   203ac:	bf28      	it	cs
   203ae:	2404      	movcs	r4, #4
   203b0:	2310      	movs	r3, #16
   203b2:	4123      	asrs	r3, r4
   203b4:	2200      	movs	r2, #0
   203b6:	4909      	ldr	r1, [pc, #36]	@ (203dc <ull_repeated_cw+0x4c>)
   203b8:	4630      	mov	r0, r6
   203ba:	f7fe ffab 	bl	1f314 <dwt_write32bitoffsetreg>
   203be:	1e63      	subs	r3, r4, #1
   203c0:	009b      	lsls	r3, r3, #2
   203c2:	fa05 f303 	lsl.w	r3, r5, r3
   203c6:	2200      	movs	r2, #0
   203c8:	4905      	ldr	r1, [pc, #20]	@ (203e0 <ull_repeated_cw+0x50>)
   203ca:	4630      	mov	r0, r6
   203cc:	f7fe ffa2 	bl	1f314 <dwt_write32bitoffsetreg>
   203d0:	bd70      	pop	{r4, r5, r6, pc}
   203d2:	bf00      	nop
   203d4:	00d20874 	.word	0x00d20874
   203d8:	00110010 	.word	0x00110010
   203dc:	00070028 	.word	0x00070028
   203e0:	00080018 	.word	0x00080018

000203e4 <ull_configure>:
   203e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   203e8:	b083      	sub	sp, #12
   203ea:	4604      	mov	r4, r0
   203ec:	460d      	mov	r5, r1
   203ee:	f891 9000 	ldrb.w	r9, [r1]
   203f2:	790b      	ldrb	r3, [r1, #4]
   203f4:	2b18      	cmp	r3, #24
   203f6:	d814      	bhi.n	20422 <ull_configure+0x3e>
   203f8:	78cf      	ldrb	r7, [r1, #3]
   203fa:	2f18      	cmp	r7, #24
   203fc:	bf94      	ite	ls
   203fe:	2700      	movls	r7, #0
   20400:	2701      	movhi	r7, #1
   20402:	b2ff      	uxtb	r7, r7
   20404:	79eb      	ldrb	r3, [r5, #7]
   20406:	2b01      	cmp	r3, #1
   20408:	bf0c      	ite	eq
   2040a:	2110      	moveq	r1, #16
   2040c:	2100      	movne	r1, #0
   2040e:	786b      	ldrb	r3, [r5, #1]
   20410:	3b01      	subs	r3, #1
   20412:	2b06      	cmp	r3, #6
   20414:	d810      	bhi.n	20438 <ull_configure+0x54>
   20416:	e8df f003 	tbb	[pc, r3]
   2041a:	0f06      	.short	0x0f06
   2041c:	0f0c120f 	.word	0x0f0c120f
   20420:	09          	.byte	0x09
   20421:	00          	.byte	0x00
   20422:	2701      	movs	r7, #1
   20424:	e7ed      	b.n	20402 <ull_configure+0x1e>
   20426:	f04f 0a40 	mov.w	sl, #64	@ 0x40
   2042a:	e00a      	b.n	20442 <ull_configure+0x5e>
   2042c:	f04f 0a48 	mov.w	sl, #72	@ 0x48
   20430:	e007      	b.n	20442 <ull_configure+0x5e>
   20432:	f04f 0a80 	mov.w	sl, #128	@ 0x80
   20436:	e004      	b.n	20442 <ull_configure+0x5e>
   20438:	f44f 7a80 	mov.w	sl, #256	@ 0x100
   2043c:	e001      	b.n	20442 <ull_configure+0x5e>
   2043e:	f04f 0a20 	mov.w	sl, #32
   20442:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   20444:	8a53      	ldrh	r3, [r2, #18]
   20446:	f023 03e0 	bic.w	r3, r3, #224	@ 0xe0
   2044a:	8253      	strh	r3, [r2, #18]
   2044c:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   2044e:	79ea      	ldrb	r2, [r5, #7]
   20450:	731a      	strb	r2, [r3, #12]
   20452:	7b2e      	ldrb	r6, [r5, #12]
   20454:	1cb3      	adds	r3, r6, #2
   20456:	2601      	movs	r6, #1
   20458:	409e      	lsls	r6, r3
   2045a:	fa1f f886 	uxth.w	r8, r6
   2045e:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   20460:	4bc7      	ldr	r3, [pc, #796]	@ (20780 <ull_configure+0x39c>)
   20462:	fb03 f308 	mul.w	r3, r3, r8
   20466:	0bdb      	lsrs	r3, r3, #15
   20468:	8293      	strh	r3, [r2, #20]
   2046a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   2046c:	7aea      	ldrb	r2, [r5, #11]
   2046e:	75da      	strb	r2, [r3, #23]
   20470:	7a2b      	ldrb	r3, [r5, #8]
   20472:	015b      	lsls	r3, r3, #5
   20474:	f003 0320 	and.w	r3, r3, #32
   20478:	7b6a      	ldrb	r2, [r5, #13]
   2047a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   2047e:	7aea      	ldrb	r2, [r5, #11]
   20480:	0312      	lsls	r2, r2, #12
   20482:	f402 4230 	and.w	r2, r2, #45056	@ 0xb000
   20486:	4313      	orrs	r3, r2
   20488:	430b      	orrs	r3, r1
   2048a:	9300      	str	r3, [sp, #0]
   2048c:	4bbd      	ldr	r3, [pc, #756]	@ (20784 <ull_configure+0x3a0>)
   2048e:	2200      	movs	r2, #0
   20490:	2110      	movs	r1, #16
   20492:	4620      	mov	r0, r4
   20494:	f7ff fad0 	bl	1fa38 <dwt_modify32bitoffsetreg>
   20498:	2f00      	cmp	r7, #0
   2049a:	f040 80f6 	bne.w	2068a <ull_configure+0x2a6>
   2049e:	7aeb      	ldrb	r3, [r5, #11]
   204a0:	b1f3      	cbz	r3, 204e0 <ull_configure+0xfc>
   204a2:	7b6b      	ldrb	r3, [r5, #13]
   204a4:	2b01      	cmp	r3, #1
   204a6:	f240 811c 	bls.w	206e2 <ull_configure+0x2fe>
   204aa:	7b2a      	ldrb	r2, [r5, #12]
   204ac:	4bb6      	ldr	r3, [pc, #728]	@ (20788 <ull_configure+0x3a4>)
   204ae:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
   204b2:	0112      	lsls	r2, r2, #4
   204b4:	0ad3      	lsrs	r3, r2, #11
   204b6:	f3c2 020a 	ubfx	r2, r2, #0, #11
   204ba:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
   204be:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
   204c2:	bf28      	it	cs
   204c4:	3301      	addcs	r3, #1
   204c6:	b29b      	uxth	r3, r3
   204c8:	eb0a 0ac8 	add.w	sl, sl, r8, lsl #3
   204cc:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
   204d0:	9300      	str	r3, [sp, #0]
   204d2:	f64f 7380 	movw	r3, #65408	@ 0xff80
   204d6:	2202      	movs	r2, #2
   204d8:	49ac      	ldr	r1, [pc, #688]	@ (2078c <ull_configure+0x3a8>)
   204da:	4620      	mov	r0, r4
   204dc:	f7ff fe48 	bl	20170 <dwt_modify16bitoffsetreg>
   204e0:	2394      	movs	r3, #148	@ 0x94
   204e2:	9300      	str	r3, [sp, #0]
   204e4:	4baa      	ldr	r3, [pc, #680]	@ (20790 <ull_configure+0x3ac>)
   204e6:	2200      	movs	r2, #0
   204e8:	49aa      	ldr	r1, [pc, #680]	@ (20794 <ull_configure+0x3b0>)
   204ea:	4620      	mov	r0, r4
   204ec:	f7ff faa4 	bl	1fa38 <dwt_modify32bitoffsetreg>
   204f0:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
   204f4:	f340 8108 	ble.w	20708 <ull_configure+0x324>
   204f8:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   204fa:	8a53      	ldrh	r3, [r2, #18]
   204fc:	f043 0320 	orr.w	r3, r3, #32
   20500:	8253      	strh	r3, [r2, #18]
   20502:	f44f 6380 	mov.w	r3, #1024	@ 0x400
   20506:	9300      	str	r3, [sp, #0]
   20508:	f24e 73ff 	movw	r3, #59391	@ 0xe7ff
   2050c:	2200      	movs	r2, #0
   2050e:	49a2      	ldr	r1, [pc, #648]	@ (20798 <ull_configure+0x3b4>)
   20510:	4620      	mov	r0, r4
   20512:	f7ff fe2d 	bl	20170 <dwt_modify16bitoffsetreg>
   20516:	7b6b      	ldrb	r3, [r5, #13]
   20518:	2b01      	cmp	r3, #1
   2051a:	f000 8100 	beq.w	2071e <ull_configure+0x33a>
   2051e:	78ab      	ldrb	r3, [r5, #2]
   20520:	f043 0310 	orr.w	r3, r3, #16
   20524:	9300      	str	r3, [sp, #0]
   20526:	23fc      	movs	r3, #252	@ 0xfc
   20528:	2200      	movs	r2, #0
   2052a:	f44f 21c0 	mov.w	r1, #393216	@ 0x60000
   2052e:	4620      	mov	r0, r4
   20530:	f7ff fc6c 	bl	1fe0c <dwt_modify8bitoffsetreg>
   20534:	1e73      	subs	r3, r6, #1
   20536:	b2db      	uxtb	r3, r3
   20538:	2200      	movs	r2, #0
   2053a:	f44f 3100 	mov.w	r1, #131072	@ 0x20000
   2053e:	4620      	mov	r0, r4
   20540:	f7fe fd95 	bl	1f06e <dwt_write8bitoffsetreg>
   20544:	786b      	ldrb	r3, [r5, #1]
   20546:	2b07      	cmp	r3, #7
   20548:	bf0c      	ite	eq
   2054a:	2308      	moveq	r3, #8
   2054c:	2300      	movne	r3, #0
   2054e:	2201      	movs	r2, #1
   20550:	2128      	movs	r1, #40	@ 0x28
   20552:	4620      	mov	r0, r4
   20554:	f7fe fd8b 	bl	1f06e <dwt_write8bitoffsetreg>
   20558:	4b90      	ldr	r3, [pc, #576]	@ (2079c <ull_configure+0x3b8>)
   2055a:	2200      	movs	r2, #0
   2055c:	4990      	ldr	r1, [pc, #576]	@ (207a0 <ull_configure+0x3bc>)
   2055e:	4620      	mov	r0, r4
   20560:	f7fe fed8 	bl	1f314 <dwt_write32bitoffsetreg>
   20564:	2200      	movs	r2, #0
   20566:	498f      	ldr	r1, [pc, #572]	@ (207a4 <ull_configure+0x3c0>)
   20568:	4620      	mov	r0, r4
   2056a:	f7fe f991 	bl	1e890 <dwt_read32bitoffsetreg>
   2056e:	f420 50ff 	bic.w	r0, r0, #8160	@ 0x1fe0
   20572:	f020 001f 	bic.w	r0, r0, #31
   20576:	f1b9 0f09 	cmp.w	r9, #9
   2057a:	bf08      	it	eq
   2057c:	f040 0001 	orreq.w	r0, r0, #1
   20580:	792a      	ldrb	r2, [r5, #4]
   20582:	0212      	lsls	r2, r2, #8
   20584:	f402 52f8 	and.w	r2, r2, #7936	@ 0x1f00
   20588:	78eb      	ldrb	r3, [r5, #3]
   2058a:	00db      	lsls	r3, r3, #3
   2058c:	b2db      	uxtb	r3, r3
   2058e:	431a      	orrs	r2, r3
   20590:	796b      	ldrb	r3, [r5, #5]
   20592:	005b      	lsls	r3, r3, #1
   20594:	f003 0306 	and.w	r3, r3, #6
   20598:	4313      	orrs	r3, r2
   2059a:	4303      	orrs	r3, r0
   2059c:	2200      	movs	r2, #0
   2059e:	4981      	ldr	r1, [pc, #516]	@ (207a4 <ull_configure+0x3c0>)
   205a0:	4620      	mov	r0, r4
   205a2:	f7fe feb7 	bl	1f314 <dwt_write32bitoffsetreg>
   205a6:	79aa      	ldrb	r2, [r5, #6]
   205a8:	786b      	ldrb	r3, [r5, #1]
   205aa:	031b      	lsls	r3, r3, #12
   205ac:	ea43 2382 	orr.w	r3, r3, r2, lsl #10
   205b0:	9300      	str	r3, [sp, #0]
   205b2:	f46f 4374 	mvn.w	r3, #62464	@ 0xf400
   205b6:	2200      	movs	r2, #0
   205b8:	2124      	movs	r1, #36	@ 0x24
   205ba:	4620      	mov	r0, r4
   205bc:	f7ff fa3c 	bl	1fa38 <dwt_modify32bitoffsetreg>
   205c0:	f8b5 3009 	ldrh.w	r3, [r5, #9]
   205c4:	b923      	cbnz	r3, 205d0 <ull_configure+0x1ec>
   205c6:	f06f 037e 	mvn.w	r3, #126	@ 0x7e
   205ca:	726b      	strb	r3, [r5, #9]
   205cc:	2300      	movs	r3, #0
   205ce:	72ab      	strb	r3, [r5, #10]
   205d0:	f8b5 3009 	ldrh.w	r3, [r5, #9]
   205d4:	2202      	movs	r2, #2
   205d6:	f44f 21c0 	mov.w	r1, #393216	@ 0x60000
   205da:	4620      	mov	r0, r4
   205dc:	f7fe fd99 	bl	1f112 <dwt_write16bitoffsetreg>
   205e0:	2202      	movs	r2, #2
   205e2:	4971      	ldr	r1, [pc, #452]	@ (207a8 <ull_configure+0x3c4>)
   205e4:	4620      	mov	r0, r4
   205e6:	f7fe f97b 	bl	1e8e0 <dwt_read8bitoffsetreg>
   205ea:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   205ec:	7c1b      	ldrb	r3, [r3, #16]
   205ee:	454b      	cmp	r3, r9
   205f0:	f000 809f 	beq.w	20732 <ull_configure+0x34e>
   205f4:	2803      	cmp	r0, #3
   205f6:	f000 80a0 	beq.w	2073a <ull_configure+0x356>
   205fa:	f1b9 0f09 	cmp.w	r9, #9
   205fe:	f000 80a1 	beq.w	20744 <ull_configure+0x360>
   20602:	4b6a      	ldr	r3, [pc, #424]	@ (207ac <ull_configure+0x3c8>)
   20604:	2200      	movs	r2, #0
   20606:	496a      	ldr	r1, [pc, #424]	@ (207b0 <ull_configure+0x3cc>)
   20608:	4620      	mov	r0, r4
   2060a:	f7fe fe83 	bl	1f314 <dwt_write32bitoffsetreg>
   2060e:	f641 733c 	movw	r3, #7996	@ 0x1f3c
   20612:	2200      	movs	r2, #0
   20614:	f44f 2110 	mov.w	r1, #589824	@ 0x90000
   20618:	4620      	mov	r0, r4
   2061a:	f7fe fd7a 	bl	1f112 <dwt_write16bitoffsetreg>
   2061e:	2314      	movs	r3, #20
   20620:	2201      	movs	r2, #1
   20622:	4964      	ldr	r1, [pc, #400]	@ (207b4 <ull_configure+0x3d0>)
   20624:	4620      	mov	r0, r4
   20626:	f7fe fd22 	bl	1f06e <dwt_write8bitoffsetreg>
   2062a:	230e      	movs	r3, #14
   2062c:	2202      	movs	r2, #2
   2062e:	4962      	ldr	r1, [pc, #392]	@ (207b8 <ull_configure+0x3d4>)
   20630:	4620      	mov	r0, r4
   20632:	f7fe fd1c 	bl	1f06e <dwt_write8bitoffsetreg>
   20636:	2381      	movs	r3, #129	@ 0x81
   20638:	2200      	movs	r2, #0
   2063a:	4960      	ldr	r1, [pc, #384]	@ (207bc <ull_configure+0x3d8>)
   2063c:	4620      	mov	r0, r4
   2063e:	f7fe fd16 	bl	1f06e <dwt_write8bitoffsetreg>
   20642:	2302      	movs	r3, #2
   20644:	2200      	movs	r2, #0
   20646:	2144      	movs	r1, #68	@ 0x44
   20648:	4620      	mov	r0, r4
   2064a:	f7fe fd10 	bl	1f06e <dwt_write8bitoffsetreg>
   2064e:	2101      	movs	r1, #1
   20650:	4620      	mov	r0, r4
   20652:	f7ff fc99 	bl	1ff88 <ull_setdwstate>
   20656:	f04f 0b32 	mov.w	fp, #50	@ 0x32
   2065a:	f04f 0814 	mov.w	r8, #20
   2065e:	2700      	movs	r7, #0
   20660:	2644      	movs	r6, #68	@ 0x44
   20662:	4640      	mov	r0, r8
   20664:	f7fa fbe7 	bl	1ae36 <deca_usleep>
   20668:	463a      	mov	r2, r7
   2066a:	4631      	mov	r1, r6
   2066c:	4620      	mov	r0, r4
   2066e:	f7fe f937 	bl	1e8e0 <dwt_read8bitoffsetreg>
   20672:	f010 0f02 	tst.w	r0, #2
   20676:	f040 80ab 	bne.w	207d0 <ull_configure+0x3ec>
   2067a:	f10b 33ff 	add.w	r3, fp, #4294967295	@ 0xffffffff
   2067e:	f013 0bff 	ands.w	fp, r3, #255	@ 0xff
   20682:	d1ee      	bne.n	20662 <ull_configure+0x27e>
   20684:	f06f 0001 	mvn.w	r0, #1
   20688:	e0cf      	b.n	2082a <ull_configure+0x446>
   2068a:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   2068c:	8a53      	ldrh	r3, [r2, #18]
   2068e:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
   20692:	8253      	strh	r3, [r2, #18]
   20694:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
   20698:	9300      	str	r3, [sp, #0]
   2069a:	f46f 53c0 	mvn.w	r3, #6144	@ 0x1800
   2069e:	2200      	movs	r2, #0
   206a0:	493d      	ldr	r1, [pc, #244]	@ (20798 <ull_configure+0x3b4>)
   206a2:	4620      	mov	r0, r4
   206a4:	f7ff f9c8 	bl	1fa38 <dwt_modify32bitoffsetreg>
   206a8:	f240 3306 	movw	r3, #774	@ 0x306
   206ac:	2200      	movs	r2, #0
   206ae:	4944      	ldr	r1, [pc, #272]	@ (207c0 <ull_configure+0x3dc>)
   206b0:	4620      	mov	r0, r4
   206b2:	f7fe fe2f 	bl	1f314 <dwt_write32bitoffsetreg>
   206b6:	2300      	movs	r3, #0
   206b8:	461a      	mov	r2, r3
   206ba:	f04f 110e 	mov.w	r1, #917518	@ 0xe000e
   206be:	4620      	mov	r0, r4
   206c0:	f7fe fe28 	bl	1f314 <dwt_write32bitoffsetreg>
   206c4:	4b3f      	ldr	r3, [pc, #252]	@ (207c4 <ull_configure+0x3e0>)
   206c6:	2200      	movs	r2, #0
   206c8:	4930      	ldr	r1, [pc, #192]	@ (2078c <ull_configure+0x3a8>)
   206ca:	4620      	mov	r0, r4
   206cc:	f7fe fe22 	bl	1f314 <dwt_write32bitoffsetreg>
   206d0:	239d      	movs	r3, #157	@ 0x9d
   206d2:	9300      	str	r3, [sp, #0]
   206d4:	4b2e      	ldr	r3, [pc, #184]	@ (20790 <ull_configure+0x3ac>)
   206d6:	2200      	movs	r2, #0
   206d8:	492e      	ldr	r1, [pc, #184]	@ (20794 <ull_configure+0x3b0>)
   206da:	4620      	mov	r0, r4
   206dc:	f7ff f9ac 	bl	1fa38 <dwt_modify32bitoffsetreg>
   206e0:	e719      	b.n	20516 <ull_configure+0x132>
   206e2:	7b2a      	ldrb	r2, [r5, #12]
   206e4:	4b28      	ldr	r3, [pc, #160]	@ (20788 <ull_configure+0x3a4>)
   206e6:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
   206ea:	f44f 6235 	mov.w	r2, #2896	@ 0xb50
   206ee:	fb02 f203 	mul.w	r2, r2, r3
   206f2:	0c93      	lsrs	r3, r2, #18
   206f4:	f3c2 12ca 	ubfx	r2, r2, #7, #11
   206f8:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
   206fc:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
   20700:	bf28      	it	cs
   20702:	3301      	addcs	r3, #1
   20704:	b29b      	uxth	r3, r3
   20706:	e6df      	b.n	204c8 <ull_configure+0xe4>
   20708:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
   2070c:	9300      	str	r3, [sp, #0]
   2070e:	f24e 73ff 	movw	r3, #59391	@ 0xe7ff
   20712:	2200      	movs	r2, #0
   20714:	4920      	ldr	r1, [pc, #128]	@ (20798 <ull_configure+0x3b4>)
   20716:	4620      	mov	r0, r4
   20718:	f7ff fd2a 	bl	20170 <dwt_modify16bitoffsetreg>
   2071c:	e6fb      	b.n	20516 <ull_configure+0x132>
   2071e:	78ab      	ldrb	r3, [r5, #2]
   20720:	9300      	str	r3, [sp, #0]
   20722:	23ec      	movs	r3, #236	@ 0xec
   20724:	2200      	movs	r2, #0
   20726:	f44f 21c0 	mov.w	r1, #393216	@ 0x60000
   2072a:	4620      	mov	r0, r4
   2072c:	f7ff fb6e 	bl	1fe0c <dwt_modify8bitoffsetreg>
   20730:	e700      	b.n	20534 <ull_configure+0x150>
   20732:	2803      	cmp	r0, #3
   20734:	f47f af61 	bne.w	205fa <ull_configure+0x216>
   20738:	e04d      	b.n	207d6 <ull_configure+0x3f2>
   2073a:	2102      	movs	r1, #2
   2073c:	4620      	mov	r0, r4
   2073e:	f7ff fc23 	bl	1ff88 <ull_setdwstate>
   20742:	e75a      	b.n	205fa <ull_configure+0x216>
   20744:	4b20      	ldr	r3, [pc, #128]	@ (207c8 <ull_configure+0x3e4>)
   20746:	2200      	movs	r2, #0
   20748:	4919      	ldr	r1, [pc, #100]	@ (207b0 <ull_configure+0x3cc>)
   2074a:	4620      	mov	r0, r4
   2074c:	f7fe fde2 	bl	1f314 <dwt_write32bitoffsetreg>
   20750:	f640 733c 	movw	r3, #3900	@ 0xf3c
   20754:	2200      	movs	r2, #0
   20756:	f44f 2110 	mov.w	r1, #589824	@ 0x90000
   2075a:	4620      	mov	r0, r4
   2075c:	f7fe fcd9 	bl	1f112 <dwt_write16bitoffsetreg>
   20760:	e75d      	b.n	2061e <ull_configure+0x23a>
   20762:	fa4f f189 	sxtb.w	r1, r9
   20766:	4620      	mov	r0, r4
   20768:	f7ff f98a 	bl	1fa80 <_dwt_kick_dgc_on_wakeup>
   2076c:	e040      	b.n	207f0 <ull_configure+0x40c>
   2076e:	2200      	movs	r2, #0
   20770:	9200      	str	r2, [sp, #0]
   20772:	23fe      	movs	r3, #254	@ 0xfe
   20774:	4915      	ldr	r1, [pc, #84]	@ (207cc <ull_configure+0x3e8>)
   20776:	4620      	mov	r0, r4
   20778:	f7ff fb48 	bl	1fe0c <dwt_modify8bitoffsetreg>
   2077c:	e042      	b.n	20804 <ull_configure+0x420>
   2077e:	bf00      	nop
   20780:	00026668 	.word	0x00026668
   20784:	fffc4fcf 	.word	0xfffc4fcf
   20788:	0002c35c 	.word	0x0002c35c
   2078c:	000e0012 	.word	0x000e0012
   20790:	bfffff00 	.word	0xbfffff00
   20794:	000e0016 	.word	0x000e0016
   20798:	000b0008 	.word	0x000b0008
   2079c:	af5f35cc 	.word	0xaf5f35cc
   207a0:	0006000c 	.word	0x0006000c
   207a4:	00010014 	.word	0x00010014
   207a8:	000f0030 	.word	0x000f0030
   207ac:	1c071134 	.word	0x1c071134
   207b0:	0007001c 	.word	0x0007001c
   207b4:	00070050 	.word	0x00070050
   207b8:	00070018 	.word	0x00070018
   207bc:	00090008 	.word	0x00090008
   207c0:	000e000c 	.word	0x000e000c
   207c4:	000c5a0a 	.word	0x000c5a0a
   207c8:	1c010034 	.word	0x1c010034
   207cc:	00030018 	.word	0x00030018
   207d0:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   207d2:	f883 9010 	strb.w	r9, [r3, #16]
   207d6:	792b      	ldrb	r3, [r5, #4]
   207d8:	3b09      	subs	r3, #9
   207da:	b2db      	uxtb	r3, r3
   207dc:	2b0f      	cmp	r3, #15
   207de:	d8c6      	bhi.n	2076e <ull_configure+0x38a>
   207e0:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   207e2:	7a5b      	ldrb	r3, [r3, #9]
   207e4:	2b01      	cmp	r3, #1
   207e6:	d0bc      	beq.n	20762 <ull_configure+0x37e>
   207e8:	4649      	mov	r1, r9
   207ea:	4620      	mov	r0, r4
   207ec:	f7fe ffae 	bl	1f74c <ull_configmrxlut>
   207f0:	f44f 43c8 	mov.w	r3, #25600	@ 0x6400
   207f4:	9300      	str	r3, [sp, #0]
   207f6:	f248 13ff 	movw	r3, #33279	@ 0x81ff
   207fa:	2200      	movs	r2, #0
   207fc:	490c      	ldr	r1, [pc, #48]	@ (20830 <ull_configure+0x44c>)
   207fe:	4620      	mov	r0, r4
   20800:	f7ff fcb6 	bl	20170 <dwt_modify16bitoffsetreg>
   20804:	f1ba 0f40 	cmp.w	sl, #64	@ 0x40
   20808:	bfcc      	ite	gt
   2080a:	f04f 5300 	movgt.w	r3, #536870912	@ 0x20000000
   2080e:	f04f 53a0 	movle.w	r3, #335544320	@ 0x14000000
   20812:	9300      	str	r3, [sp, #0]
   20814:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
   20818:	2200      	movs	r2, #0
   2081a:	4906      	ldr	r1, [pc, #24]	@ (20834 <ull_configure+0x450>)
   2081c:	4620      	mov	r0, r4
   2081e:	f7ff f90b 	bl	1fa38 <dwt_modify32bitoffsetreg>
   20822:	2101      	movs	r1, #1
   20824:	4620      	mov	r0, r4
   20826:	f7ff fd27 	bl	20278 <ull_pgf_cal>
   2082a:	b003      	add	sp, #12
   2082c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20830:	00030018 	.word	0x00030018
   20834:	00060010 	.word	0x00060010

00020838 <dwt_ioctl>:
   20838:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2083c:	b091      	sub	sp, #68	@ 0x44
   2083e:	4606      	mov	r6, r0
   20840:	4615      	mov	r5, r2
   20842:	461c      	mov	r4, r3
   20844:	299c      	cmp	r1, #156	@ 0x9c
   20846:	f200 809f 	bhi.w	20988 <dwt_ioctl+0x150>
   2084a:	e8df f011 	tbh	[pc, r1, lsl #1]
   2084e:	0a6d      	.short	0x0a6d
   20850:	00a30a78 	.word	0x00a30a78
   20854:	00be00a7 	.word	0x00be00a7
   20858:	018e0148 	.word	0x018e0148
   2085c:	0152016b 	.word	0x0152016b
   20860:	01a9019e 	.word	0x01a9019e
   20864:	01b901b1 	.word	0x01b901b1
   20868:	01c901c1 	.word	0x01c901c1
   2086c:	01d501d1 	.word	0x01d501d1
   20870:	026e01dd 	.word	0x026e01dd
   20874:	0281027c 	.word	0x0281027c
   20878:	0290028b 	.word	0x0290028b
   2087c:	029e0295 	.word	0x029e0295
   20880:	030902a3 	.word	0x030902a3
   20884:	0326031b 	.word	0x0326031b
   20888:	033b0331 	.word	0x033b0331
   2088c:	03690373 	.word	0x03690373
   20890:	0345035f 	.word	0x0345035f
   20894:	03c10352 	.word	0x03c10352
   20898:	022b01f8 	.word	0x022b01f8
   2089c:	02410239 	.word	0x02410239
   208a0:	09960255 	.word	0x09960255
   208a4:	0382099b 	.word	0x0382099b
   208a8:	03e303df 	.word	0x03e303df
   208ac:	03f103ec 	.word	0x03f103ec
   208b0:	040503fb 	.word	0x040503fb
   208b4:	0437040d 	.word	0x0437040d
   208b8:	044e0443 	.word	0x044e0443
   208bc:	04590378 	.word	0x04590378
   208c0:	04740462 	.word	0x04740462
   208c4:	049e048d 	.word	0x049e048d
   208c8:	04ea04e0 	.word	0x04ea04e0
   208cc:	051a050b 	.word	0x051a050b
   208d0:	05230535 	.word	0x05230535
   208d4:	05970551 	.word	0x05970551
   208d8:	05cf05af 	.word	0x05cf05af
   208dc:	05f805e4 	.word	0x05f805e4
   208e0:	061d0601 	.word	0x061d0601
   208e4:	0773060a 	.word	0x0773060a
   208e8:	07ed079f 	.word	0x07ed079f
   208ec:	07fe07f3 	.word	0x07fe07f3
   208f0:	08370817 	.word	0x08370817
   208f4:	084b0841 	.word	0x084b0841
   208f8:	08820879 	.word	0x08820879
   208fc:	08910888 	.word	0x08910888
   20900:	08ab089e 	.word	0x08ab089e
   20904:	08be08b5 	.word	0x08be08b5
   20908:	08d208c7 	.word	0x08d208c7
   2090c:	08e308dd 	.word	0x08e308dd
   20910:	09110906 	.word	0x09110906
   20914:	0945091c 	.word	0x0945091c
   20918:	09720967 	.word	0x09720967
   2091c:	09a1098b 	.word	0x09a1098b
   20920:	0a200a16 	.word	0x0a200a16
   20924:	0a800a2b 	.word	0x0a800a2b
   20928:	0a620a35 	.word	0x0a620a35
   2092c:	09df0791 	.word	0x09df0791
   20930:	0aee0a00 	.word	0x0aee0a00
   20934:	0a8d0ae3 	.word	0x0a8d0ae3
   20938:	0aa30a98 	.word	0x0aa30a98
   2093c:	0ab90aae 	.word	0x0ab90aae
   20940:	0acf0ac4 	.word	0x0acf0ac4
   20944:	0bd80ad8 	.word	0x0bd80ad8
   20948:	0c4d0c12 	.word	0x0c4d0c12
   2094c:	0d290c70 	.word	0x0d290c70
   20950:	0b190d3e 	.word	0x0b190d3e
   20954:	009d009d 	.word	0x009d009d
   20958:	009d009d 	.word	0x009d009d
   2095c:	009d009d 	.word	0x009d009d
   20960:	009d009d 	.word	0x009d009d
   20964:	009d009d 	.word	0x009d009d
   20968:	009d009d 	.word	0x009d009d
   2096c:	009d009d 	.word	0x009d009d
   20970:	009d009d 	.word	0x009d009d
   20974:	009d009d 	.word	0x009d009d
   20978:	0c87009d 	.word	0x0c87009d
   2097c:	0dce0ca5 	.word	0x0dce0ca5
   20980:	0ce40cef 	.word	0x0ce40cef
   20984:	0cfa0d03 	.word	0x0cfa0d03
   20988:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
   2098c:	4628      	mov	r0, r5
   2098e:	b011      	add	sp, #68	@ 0x44
   20990:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20994:	6843      	ldr	r3, [r0, #4]
   20996:	4798      	blx	r3
   20998:	2500      	movs	r5, #0
   2099a:	e7f7      	b.n	2098c <dwt_ioctl+0x154>
   2099c:	2202      	movs	r2, #2
   2099e:	49b7      	ldr	r1, [pc, #732]	@ (20c7c <dwt_ioctl+0x444>)
   209a0:	f7fd ff9e 	bl	1e8e0 <dwt_read8bitoffsetreg>
   209a4:	2803      	cmp	r0, #3
   209a6:	d801      	bhi.n	209ac <dwt_ioctl+0x174>
   209a8:	2500      	movs	r5, #0
   209aa:	e7ef      	b.n	2098c <dwt_ioctl+0x154>
   209ac:	f7fa fa20 	bl	1adf0 <decamutexon>
   209b0:	4604      	mov	r4, r0
   209b2:	2500      	movs	r5, #0
   209b4:	9500      	str	r5, [sp, #0]
   209b6:	462b      	mov	r3, r5
   209b8:	462a      	mov	r2, r5
   209ba:	4629      	mov	r1, r5
   209bc:	4630      	mov	r0, r6
   209be:	f7fe fb4b 	bl	1f058 <dwt_writetodevice>
   209c2:	4620      	mov	r0, r4
   209c4:	f7fa fa1b 	bl	1adfe <decamutexoff>
   209c8:	e7e0      	b.n	2098c <dwt_ioctl+0x154>
   209ca:	2c00      	cmp	r4, #0
   209cc:	f001 8510 	beq.w	223f0 <dwt_ioctl+0x1bb8>
   209d0:	7824      	ldrb	r4, [r4, #0]
   209d2:	f014 0f1d 	tst.w	r4, #29
   209d6:	d065      	beq.n	20aa4 <dwt_ioctl+0x26c>
   209d8:	f014 0f01 	tst.w	r4, #1
   209dc:	d026      	beq.n	20a2c <dwt_ioctl+0x1f4>
   209de:	f014 0f02 	tst.w	r4, #2
   209e2:	f04f 0200 	mov.w	r2, #0
   209e6:	9200      	str	r2, [sp, #0]
   209e8:	4613      	mov	r3, r2
   209ea:	bf14      	ite	ne
   209ec:	210d      	movne	r1, #13
   209ee:	2103      	moveq	r1, #3
   209f0:	f7fe fb32 	bl	1f058 <dwt_writetodevice>
   209f4:	2203      	movs	r2, #3
   209f6:	2144      	movs	r1, #68	@ 0x44
   209f8:	4630      	mov	r0, r6
   209fa:	f7fd ff71 	bl	1e8e0 <dwt_read8bitoffsetreg>
   209fe:	f010 0f08 	tst.w	r0, #8
   20a02:	d145      	bne.n	20a90 <dwt_ioctl+0x258>
   20a04:	2200      	movs	r2, #0
   20a06:	499d      	ldr	r1, [pc, #628]	@ (20c7c <dwt_ioctl+0x444>)
   20a08:	4630      	mov	r0, r6
   20a0a:	f7fd ff41 	bl	1e890 <dwt_read32bitoffsetreg>
   20a0e:	f5b0 2f50 	cmp.w	r0, #851968	@ 0xd0000
   20a12:	bf18      	it	ne
   20a14:	2500      	movne	r5, #0
   20a16:	d1b9      	bne.n	2098c <dwt_ioctl+0x154>
   20a18:	2100      	movs	r1, #0
   20a1a:	9100      	str	r1, [sp, #0]
   20a1c:	460b      	mov	r3, r1
   20a1e:	460a      	mov	r2, r1
   20a20:	4630      	mov	r0, r6
   20a22:	f7fe fb19 	bl	1f058 <dwt_writetodevice>
   20a26:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
   20a2a:	e7af      	b.n	2098c <dwt_ioctl+0x154>
   20a2c:	f014 0f08 	tst.w	r4, #8
   20a30:	d10e      	bne.n	20a50 <dwt_ioctl+0x218>
   20a32:	f014 0f10 	tst.w	r4, #16
   20a36:	d11b      	bne.n	20a70 <dwt_ioctl+0x238>
   20a38:	f014 0f02 	tst.w	r4, #2
   20a3c:	f04f 0200 	mov.w	r2, #0
   20a40:	9200      	str	r2, [sp, #0]
   20a42:	4613      	mov	r3, r2
   20a44:	bf14      	ite	ne
   20a46:	2110      	movne	r1, #16
   20a48:	2109      	moveq	r1, #9
   20a4a:	f7fe fb05 	bl	1f058 <dwt_writetodevice>
   20a4e:	e7d1      	b.n	209f4 <dwt_ioctl+0x1bc>
   20a50:	2100      	movs	r1, #0
   20a52:	f7fe fdd3 	bl	1f5fc <_dwt_adjust_delaytime>
   20a56:	f014 0f02 	tst.w	r4, #2
   20a5a:	f04f 0200 	mov.w	r2, #0
   20a5e:	9200      	str	r2, [sp, #0]
   20a60:	4613      	mov	r3, r2
   20a62:	bf14      	ite	ne
   20a64:	210f      	movne	r1, #15
   20a66:	2107      	moveq	r1, #7
   20a68:	4630      	mov	r0, r6
   20a6a:	f7fe faf5 	bl	1f058 <dwt_writetodevice>
   20a6e:	e7c1      	b.n	209f4 <dwt_ioctl+0x1bc>
   20a70:	2101      	movs	r1, #1
   20a72:	f7fe fdc3 	bl	1f5fc <_dwt_adjust_delaytime>
   20a76:	f014 0f02 	tst.w	r4, #2
   20a7a:	f04f 0200 	mov.w	r2, #0
   20a7e:	9200      	str	r2, [sp, #0]
   20a80:	4613      	mov	r3, r2
   20a82:	bf14      	ite	ne
   20a84:	210e      	movne	r1, #14
   20a86:	2105      	moveq	r1, #5
   20a88:	4630      	mov	r0, r6
   20a8a:	f7fe fae5 	bl	1f058 <dwt_writetodevice>
   20a8e:	e7b1      	b.n	209f4 <dwt_ioctl+0x1bc>
   20a90:	2100      	movs	r1, #0
   20a92:	9100      	str	r1, [sp, #0]
   20a94:	460b      	mov	r3, r1
   20a96:	460a      	mov	r2, r1
   20a98:	4630      	mov	r0, r6
   20a9a:	f7fe fadd 	bl	1f058 <dwt_writetodevice>
   20a9e:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
   20aa2:	e773      	b.n	2098c <dwt_ioctl+0x154>
   20aa4:	f014 0f20 	tst.w	r4, #32
   20aa8:	d00c      	beq.n	20ac4 <dwt_ioctl+0x28c>
   20aaa:	f014 0f02 	tst.w	r4, #2
   20aae:	f04f 0500 	mov.w	r5, #0
   20ab2:	9500      	str	r5, [sp, #0]
   20ab4:	462b      	mov	r3, r5
   20ab6:	462a      	mov	r2, r5
   20ab8:	bf14      	ite	ne
   20aba:	2111      	movne	r1, #17
   20abc:	210b      	moveq	r1, #11
   20abe:	f7fe facb 	bl	1f058 <dwt_writetodevice>
   20ac2:	e763      	b.n	2098c <dwt_ioctl+0x154>
   20ac4:	f014 0f02 	tst.w	r4, #2
   20ac8:	f04f 0500 	mov.w	r5, #0
   20acc:	9500      	str	r5, [sp, #0]
   20ace:	462b      	mov	r3, r5
   20ad0:	462a      	mov	r2, r5
   20ad2:	bf14      	ite	ne
   20ad4:	210c      	movne	r1, #12
   20ad6:	2101      	moveq	r1, #1
   20ad8:	f7fe fabe 	bl	1f058 <dwt_writetodevice>
   20adc:	e756      	b.n	2098c <dwt_ioctl+0x154>
   20ade:	2c00      	cmp	r4, #0
   20ae0:	f001 8489 	beq.w	223f6 <dwt_ioctl+0x1bbe>
   20ae4:	6823      	ldr	r3, [r4, #0]
   20ae6:	2200      	movs	r2, #0
   20ae8:	212c      	movs	r1, #44	@ 0x2c
   20aea:	f7fe fc13 	bl	1f314 <dwt_write32bitoffsetreg>
   20aee:	2500      	movs	r5, #0
   20af0:	e74c      	b.n	2098c <dwt_ioctl+0x154>
   20af2:	6823      	ldr	r3, [r4, #0]
   20af4:	2200      	movs	r2, #0
   20af6:	4962      	ldr	r1, [pc, #392]	@ (20c80 <dwt_ioctl+0x448>)
   20af8:	f7fe fc0c 	bl	1f314 <dwt_write32bitoffsetreg>
   20afc:	6863      	ldr	r3, [r4, #4]
   20afe:	2200      	movs	r2, #0
   20b00:	4960      	ldr	r1, [pc, #384]	@ (20c84 <dwt_ioctl+0x44c>)
   20b02:	4630      	mov	r0, r6
   20b04:	f7fe fc06 	bl	1f314 <dwt_write32bitoffsetreg>
   20b08:	68a3      	ldr	r3, [r4, #8]
   20b0a:	2200      	movs	r2, #0
   20b0c:	495e      	ldr	r1, [pc, #376]	@ (20c88 <dwt_ioctl+0x450>)
   20b0e:	4630      	mov	r0, r6
   20b10:	f7fe fc00 	bl	1f314 <dwt_write32bitoffsetreg>
   20b14:	68e3      	ldr	r3, [r4, #12]
   20b16:	2200      	movs	r2, #0
   20b18:	495c      	ldr	r1, [pc, #368]	@ (20c8c <dwt_ioctl+0x454>)
   20b1a:	4630      	mov	r0, r6
   20b1c:	f7fe fbfa 	bl	1f314 <dwt_write32bitoffsetreg>
   20b20:	2500      	movs	r5, #0
   20b22:	e733      	b.n	2098c <dwt_ioctl+0x154>
   20b24:	2c00      	cmp	r4, #0
   20b26:	f001 8469 	beq.w	223fc <dwt_ioctl+0x1bc4>
   20b2a:	8823      	ldrh	r3, [r4, #0]
   20b2c:	6865      	ldr	r5, [r4, #4]
   20b2e:	2d03      	cmp	r5, #3
   20b30:	f201 8467 	bhi.w	22402 <dwt_ioctl+0x1bca>
   20b34:	e8df f005 	tbb	[pc, r5]
   20b38:	130d0702 	.word	0x130d0702
   20b3c:	2200      	movs	r2, #0
   20b3e:	4954      	ldr	r1, [pc, #336]	@ (20c90 <dwt_ioctl+0x458>)
   20b40:	f7fe fae7 	bl	1f112 <dwt_write16bitoffsetreg>
   20b44:	e722      	b.n	2098c <dwt_ioctl+0x154>
   20b46:	2202      	movs	r2, #2
   20b48:	4951      	ldr	r1, [pc, #324]	@ (20c90 <dwt_ioctl+0x458>)
   20b4a:	f7fe fae2 	bl	1f112 <dwt_write16bitoffsetreg>
   20b4e:	2500      	movs	r5, #0
   20b50:	e71c      	b.n	2098c <dwt_ioctl+0x154>
   20b52:	2200      	movs	r2, #0
   20b54:	494f      	ldr	r1, [pc, #316]	@ (20c94 <dwt_ioctl+0x45c>)
   20b56:	f7fe fadc 	bl	1f112 <dwt_write16bitoffsetreg>
   20b5a:	2500      	movs	r5, #0
   20b5c:	e716      	b.n	2098c <dwt_ioctl+0x154>
   20b5e:	2202      	movs	r2, #2
   20b60:	494c      	ldr	r1, [pc, #304]	@ (20c94 <dwt_ioctl+0x45c>)
   20b62:	f7fe fad6 	bl	1f112 <dwt_write16bitoffsetreg>
   20b66:	2500      	movs	r5, #0
   20b68:	e710      	b.n	2098c <dwt_ioctl+0x154>
   20b6a:	2c00      	cmp	r4, #0
   20b6c:	f001 844c 	beq.w	22408 <dwt_ioctl+0x1bd0>
   20b70:	7823      	ldrb	r3, [r4, #0]
   20b72:	005b      	lsls	r3, r3, #1
   20b74:	f003 0306 	and.w	r3, r3, #6
   20b78:	9300      	str	r3, [sp, #0]
   20b7a:	f06f 0306 	mvn.w	r3, #6
   20b7e:	2200      	movs	r2, #0
   20b80:	4945      	ldr	r1, [pc, #276]	@ (20c98 <dwt_ioctl+0x460>)
   20b82:	f7fe ff59 	bl	1fa38 <dwt_modify32bitoffsetreg>
   20b86:	2500      	movs	r5, #0
   20b88:	e700      	b.n	2098c <dwt_ioctl+0x154>
   20b8a:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
   20b8e:	9300      	str	r3, [sp, #0]
   20b90:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   20b94:	2200      	movs	r2, #0
   20b96:	4941      	ldr	r1, [pc, #260]	@ (20c9c <dwt_ioctl+0x464>)
   20b98:	f7fe ff4e 	bl	1fa38 <dwt_modify32bitoffsetreg>
   20b9c:	2500      	movs	r5, #0
   20b9e:	e6f5      	b.n	2098c <dwt_ioctl+0x154>
   20ba0:	2c00      	cmp	r4, #0
   20ba2:	f001 8434 	beq.w	2240e <dwt_ioctl+0x1bd6>
   20ba6:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   20ba8:	7b5b      	ldrb	r3, [r3, #13]
   20baa:	7023      	strb	r3, [r4, #0]
   20bac:	2500      	movs	r5, #0
   20bae:	e6ed      	b.n	2098c <dwt_ioctl+0x154>
   20bb0:	2c00      	cmp	r4, #0
   20bb2:	f001 842f 	beq.w	22414 <dwt_ioctl+0x1bdc>
   20bb6:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   20bb8:	7a9b      	ldrb	r3, [r3, #10]
   20bba:	7023      	strb	r3, [r4, #0]
   20bbc:	2500      	movs	r5, #0
   20bbe:	e6e5      	b.n	2098c <dwt_ioctl+0x154>
   20bc0:	2c00      	cmp	r4, #0
   20bc2:	f001 842a 	beq.w	2241a <dwt_ioctl+0x1be2>
   20bc6:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   20bc8:	7adb      	ldrb	r3, [r3, #11]
   20bca:	7023      	strb	r3, [r4, #0]
   20bcc:	2500      	movs	r5, #0
   20bce:	e6dd      	b.n	2098c <dwt_ioctl+0x154>
   20bd0:	2c00      	cmp	r4, #0
   20bd2:	f001 8425 	beq.w	22420 <dwt_ioctl+0x1be8>
   20bd6:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   20bd8:	681b      	ldr	r3, [r3, #0]
   20bda:	6023      	str	r3, [r4, #0]
   20bdc:	2500      	movs	r5, #0
   20bde:	e6d5      	b.n	2098c <dwt_ioctl+0x154>
   20be0:	2c00      	cmp	r4, #0
   20be2:	f001 8420 	beq.w	22426 <dwt_ioctl+0x1bee>
   20be6:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   20be8:	685b      	ldr	r3, [r3, #4]
   20bea:	6023      	str	r3, [r4, #0]
   20bec:	2500      	movs	r5, #0
   20bee:	e6cd      	b.n	2098c <dwt_ioctl+0x154>
   20bf0:	f7fe fb7e 	bl	1f2f0 <ull_signal_rx_buff_free>
   20bf4:	2500      	movs	r5, #0
   20bf6:	e6c9      	b.n	2098c <dwt_ioctl+0x154>
   20bf8:	2c00      	cmp	r4, #0
   20bfa:	f001 8417 	beq.w	2242c <dwt_ioctl+0x1bf4>
   20bfe:	6821      	ldr	r1, [r4, #0]
   20c00:	f7fe fd24 	bl	1f64c <ull_setrxaftertxdelay>
   20c04:	2500      	movs	r5, #0
   20c06:	e6c1      	b.n	2098c <dwt_ioctl+0x154>
   20c08:	2c00      	cmp	r4, #0
   20c0a:	f001 8412 	beq.w	22432 <dwt_ioctl+0x1bfa>
   20c0e:	7825      	ldrb	r5, [r4, #0]
   20c10:	b15d      	cbz	r5, 20c2a <dwt_ioctl+0x3f2>
   20c12:	6864      	ldr	r4, [r4, #4]
   20c14:	2340      	movs	r3, #64	@ 0x40
   20c16:	9300      	str	r3, [sp, #0]
   20c18:	23ff      	movs	r3, #255	@ 0xff
   20c1a:	2200      	movs	r2, #0
   20c1c:	2110      	movs	r1, #16
   20c1e:	f7ff f8f5 	bl	1fe0c <dwt_modify8bitoffsetreg>
   20c22:	2d02      	cmp	r5, #2
   20c24:	d107      	bne.n	20c36 <dwt_ioctl+0x3fe>
   20c26:	60f4      	str	r4, [r6, #12]
   20c28:	e005      	b.n	20c36 <dwt_ioctl+0x3fe>
   20c2a:	2200      	movs	r2, #0
   20c2c:	9200      	str	r2, [sp, #0]
   20c2e:	23bf      	movs	r3, #191	@ 0xbf
   20c30:	2110      	movs	r1, #16
   20c32:	f7ff f8eb 	bl	1fe0c <dwt_modify8bitoffsetreg>
   20c36:	6d33      	ldr	r3, [r6, #80]	@ 0x50
   20c38:	759d      	strb	r5, [r3, #22]
   20c3a:	2500      	movs	r5, #0
   20c3c:	e6a6      	b.n	2098c <dwt_ioctl+0x154>
   20c3e:	2c00      	cmp	r4, #0
   20c40:	f001 83fa 	beq.w	22438 <dwt_ioctl+0x1c00>
   20c44:	6865      	ldr	r5, [r4, #4]
   20c46:	7823      	ldrb	r3, [r4, #0]
   20c48:	2203      	movs	r2, #3
   20c4a:	4915      	ldr	r1, [pc, #84]	@ (20ca0 <dwt_ioctl+0x468>)
   20c4c:	f7fe fa0f 	bl	1f06e <dwt_write8bitoffsetreg>
   20c50:	b945      	cbnz	r5, 20c64 <dwt_ioctl+0x42c>
   20c52:	2200      	movs	r2, #0
   20c54:	9200      	str	r2, [sp, #0]
   20c56:	f24f 73ff 	movw	r3, #63487	@ 0xf7ff
   20c5a:	2110      	movs	r1, #16
   20c5c:	4630      	mov	r0, r6
   20c5e:	f7ff fa87 	bl	20170 <dwt_modify16bitoffsetreg>
   20c62:	e693      	b.n	2098c <dwt_ioctl+0x154>
   20c64:	f44f 2381 	mov.w	r3, #264192	@ 0x40800
   20c68:	9300      	str	r3, [sp, #0]
   20c6a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   20c6e:	2200      	movs	r2, #0
   20c70:	2110      	movs	r1, #16
   20c72:	4630      	mov	r0, r6
   20c74:	f7fe fee0 	bl	1fa38 <dwt_modify32bitoffsetreg>
   20c78:	2500      	movs	r5, #0
   20c7a:	e687      	b.n	2098c <dwt_ioctl+0x154>
   20c7c:	000f0030 	.word	0x000f0030
   20c80:	00010054 	.word	0x00010054
   20c84:	00010058 	.word	0x00010058
   20c88:	0001005c 	.word	0x0001005c
   20c8c:	00010060 	.word	0x00010060
   20c90:	00010018 	.word	0x00010018
   20c94:	0001001c 	.word	0x0001001c
   20c98:	00010014 	.word	0x00010014
   20c9c:	00110004 	.word	0x00110004
   20ca0:	00010008 	.word	0x00010008
   20ca4:	2200      	movs	r2, #0
   20ca6:	4611      	mov	r1, r2
   20ca8:	f7fd fdf2 	bl	1e890 <dwt_read32bitoffsetreg>
   20cac:	68b2      	ldr	r2, [r6, #8]
   20cae:	6813      	ldr	r3, [r2, #0]
   20cb0:	4043      	eors	r3, r0
   20cb2:	6852      	ldr	r2, [r2, #4]
   20cb4:	4213      	tst	r3, r2
   20cb6:	bf14      	ite	ne
   20cb8:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
   20cbc:	2500      	moveq	r5, #0
   20cbe:	e665      	b.n	2098c <dwt_ioctl+0x154>
   20cc0:	2c00      	cmp	r4, #0
   20cc2:	f001 83bc 	beq.w	2243e <dwt_ioctl+0x1c06>
   20cc6:	7821      	ldrb	r1, [r4, #0]
   20cc8:	f7ff f8b4 	bl	1fe34 <ull_configciadiag>
   20ccc:	2500      	movs	r5, #0
   20cce:	e65d      	b.n	2098c <dwt_ioctl+0x154>
   20cd0:	b93a      	cbnz	r2, 20ce2 <dwt_ioctl+0x4aa>
   20cd2:	2200      	movs	r2, #0
   20cd4:	9200      	str	r2, [sp, #0]
   20cd6:	f24f 73ff 	movw	r3, #63487	@ 0xf7ff
   20cda:	49ae      	ldr	r1, [pc, #696]	@ (20f94 <dwt_ioctl+0x75c>)
   20cdc:	f7ff fa48 	bl	20170 <dwt_modify16bitoffsetreg>
   20ce0:	e654      	b.n	2098c <dwt_ioctl+0x154>
   20ce2:	f44f 6300 	mov.w	r3, #2048	@ 0x800
   20ce6:	9300      	str	r3, [sp, #0]
   20ce8:	f64f 73ff 	movw	r3, #65535	@ 0xffff
   20cec:	2200      	movs	r2, #0
   20cee:	49a9      	ldr	r1, [pc, #676]	@ (20f94 <dwt_ioctl+0x75c>)
   20cf0:	f7ff fa3e 	bl	20170 <dwt_modify16bitoffsetreg>
   20cf4:	2500      	movs	r5, #0
   20cf6:	e649      	b.n	2098c <dwt_ioctl+0x154>
   20cf8:	f002 0201 	and.w	r2, r2, #1
   20cfc:	f64f 73ff 	movw	r3, #65535	@ 0xffff
   20d00:	f24f 71ff 	movw	r1, #63487	@ 0xf7ff
   20d04:	2a00      	cmp	r2, #0
   20d06:	bf08      	it	eq
   20d08:	460b      	moveq	r3, r1
   20d0a:	02d2      	lsls	r2, r2, #11
   20d0c:	f015 0f02 	tst.w	r5, #2
   20d10:	bf12      	itee	ne
   20d12:	f442 5280 	orrne.w	r2, r2, #4096	@ 0x1000
   20d16:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
   20d1a:	b29b      	uxtheq	r3, r3
   20d1c:	9200      	str	r2, [sp, #0]
   20d1e:	2200      	movs	r2, #0
   20d20:	499c      	ldr	r1, [pc, #624]	@ (20f94 <dwt_ioctl+0x75c>)
   20d22:	f7ff fa25 	bl	20170 <dwt_modify16bitoffsetreg>
   20d26:	2500      	movs	r5, #0
   20d28:	e630      	b.n	2098c <dwt_ioctl+0x154>
   20d2a:	b92a      	cbnz	r2, 20d38 <dwt_ioctl+0x500>
   20d2c:	4b9a      	ldr	r3, [pc, #616]	@ (20f98 <dwt_ioctl+0x760>)
   20d2e:	2202      	movs	r2, #2
   20d30:	499a      	ldr	r1, [pc, #616]	@ (20f9c <dwt_ioctl+0x764>)
   20d32:	f7fe faef 	bl	1f314 <dwt_write32bitoffsetreg>
   20d36:	e629      	b.n	2098c <dwt_ioctl+0x154>
   20d38:	4b99      	ldr	r3, [pc, #612]	@ (20fa0 <dwt_ioctl+0x768>)
   20d3a:	2202      	movs	r2, #2
   20d3c:	4997      	ldr	r1, [pc, #604]	@ (20f9c <dwt_ioctl+0x764>)
   20d3e:	f7fe fae9 	bl	1f314 <dwt_write32bitoffsetreg>
   20d42:	2500      	movs	r5, #0
   20d44:	e622      	b.n	2098c <dwt_ioctl+0x154>
   20d46:	4611      	mov	r1, r2
   20d48:	f7fe fc96 	bl	1f678 <ull_setlnapamode>
   20d4c:	2500      	movs	r5, #0
   20d4e:	e61d      	b.n	2098c <dwt_ioctl+0x154>
   20d50:	2c00      	cmp	r4, #0
   20d52:	f001 8377 	beq.w	22444 <dwt_ioctl+0x1c0c>
   20d56:	2200      	movs	r2, #0
   20d58:	4992      	ldr	r1, [pc, #584]	@ (20fa4 <dwt_ioctl+0x76c>)
   20d5a:	f7fd fdc1 	bl	1e8e0 <dwt_read8bitoffsetreg>
   20d5e:	7020      	strb	r0, [r4, #0]
   20d60:	2500      	movs	r5, #0
   20d62:	e613      	b.n	2098c <dwt_ioctl+0x154>
   20d64:	4621      	mov	r1, r4
   20d66:	f7fe fca9 	bl	1f6bc <ull_configurestskey>
   20d6a:	2500      	movs	r5, #0
   20d6c:	e60e      	b.n	2098c <dwt_ioctl+0x154>
   20d6e:	4621      	mov	r1, r4
   20d70:	f7fe fcc8 	bl	1f704 <ull_configurestsiv>
   20d74:	2500      	movs	r5, #0
   20d76:	e609      	b.n	2098c <dwt_ioctl+0x154>
   20d78:	2301      	movs	r3, #1
   20d7a:	9300      	str	r3, [sp, #0]
   20d7c:	23ff      	movs	r3, #255	@ 0xff
   20d7e:	2200      	movs	r2, #0
   20d80:	4989      	ldr	r1, [pc, #548]	@ (20fa8 <dwt_ioctl+0x770>)
   20d82:	f7ff f843 	bl	1fe0c <dwt_modify8bitoffsetreg>
   20d86:	2500      	movs	r5, #0
   20d88:	e600      	b.n	2098c <dwt_ioctl+0x154>
   20d8a:	4611      	mov	r1, r2
   20d8c:	f7fe fcde 	bl	1f74c <ull_configmrxlut>
   20d90:	2500      	movs	r5, #0
   20d92:	e5fb      	b.n	2098c <dwt_ioctl+0x154>
   20d94:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   20d96:	7a1b      	ldrb	r3, [r3, #8]
   20d98:	2b00      	cmp	r3, #0
   20d9a:	d137      	bne.n	20e0c <dwt_ioctl+0x5d4>
   20d9c:	2314      	movs	r3, #20
   20d9e:	2201      	movs	r2, #1
   20da0:	4982      	ldr	r1, [pc, #520]	@ (20fac <dwt_ioctl+0x774>)
   20da2:	4630      	mov	r0, r6
   20da4:	f7fe f963 	bl	1f06e <dwt_write8bitoffsetreg>
   20da8:	2318      	movs	r3, #24
   20daa:	2200      	movs	r2, #0
   20dac:	4980      	ldr	r1, [pc, #512]	@ (20fb0 <dwt_ioctl+0x778>)
   20dae:	4630      	mov	r0, r6
   20db0:	f7fe fab0 	bl	1f314 <dwt_write32bitoffsetreg>
   20db4:	23e8      	movs	r3, #232	@ 0xe8
   20db6:	2200      	movs	r2, #0
   20db8:	497e      	ldr	r1, [pc, #504]	@ (20fb4 <dwt_ioctl+0x77c>)
   20dba:	4630      	mov	r0, r6
   20dbc:	f7fe faaa 	bl	1f314 <dwt_write32bitoffsetreg>
   20dc0:	6d33      	ldr	r3, [r6, #80]	@ 0x50
   20dc2:	8a5b      	ldrh	r3, [r3, #18]
   20dc4:	f003 03e0 	and.w	r3, r3, #224	@ 0xe0
   20dc8:	2b20      	cmp	r3, #32
   20dca:	d022      	beq.n	20e12 <dwt_ioctl+0x5da>
   20dcc:	2b60      	cmp	r3, #96	@ 0x60
   20dce:	d02b      	beq.n	20e28 <dwt_ioctl+0x5f0>
   20dd0:	6d33      	ldr	r3, [r6, #80]	@ 0x50
   20dd2:	7e1b      	ldrb	r3, [r3, #24]
   20dd4:	085b      	lsrs	r3, r3, #1
   20dd6:	d032      	beq.n	20e3e <dwt_ioctl+0x606>
   20dd8:	2200      	movs	r2, #0
   20dda:	4977      	ldr	r1, [pc, #476]	@ (20fb8 <dwt_ioctl+0x780>)
   20ddc:	4630      	mov	r0, r6
   20dde:	f7fd fd6d 	bl	1e8bc <dwt_read16bitoffsetreg>
   20de2:	f3c0 03c4 	ubfx	r3, r0, #3, #5
   20de6:	3b09      	subs	r3, #9
   20de8:	2b0f      	cmp	r3, #15
   20dea:	f201 832e 	bhi.w	2244a <dwt_ioctl+0x1c12>
   20dee:	f000 0001 	and.w	r0, r0, #1
   20df2:	2800      	cmp	r0, #0
   20df4:	bf0c      	ite	eq
   20df6:	2105      	moveq	r1, #5
   20df8:	2109      	movne	r1, #9
   20dfa:	6d33      	ldr	r3, [r6, #80]	@ 0x50
   20dfc:	7a5b      	ldrb	r3, [r3, #9]
   20dfe:	2b01      	cmp	r3, #1
   20e00:	d029      	beq.n	20e56 <dwt_ioctl+0x61e>
   20e02:	4630      	mov	r0, r6
   20e04:	f7fe fca2 	bl	1f74c <ull_configmrxlut>
   20e08:	2500      	movs	r5, #0
   20e0a:	e5bf      	b.n	2098c <dwt_ioctl+0x154>
   20e0c:	f7ff f9ca 	bl	201a4 <_dwt_prog_ldo_and_bias_tune>
   20e10:	e7c4      	b.n	20d9c <dwt_ioctl+0x564>
   20e12:	f44f 6380 	mov.w	r3, #1024	@ 0x400
   20e16:	9300      	str	r3, [sp, #0]
   20e18:	f46f 53c0 	mvn.w	r3, #6144	@ 0x1800
   20e1c:	2200      	movs	r2, #0
   20e1e:	4967      	ldr	r1, [pc, #412]	@ (20fbc <dwt_ioctl+0x784>)
   20e20:	4630      	mov	r0, r6
   20e22:	f7fe fe09 	bl	1fa38 <dwt_modify32bitoffsetreg>
   20e26:	e7d3      	b.n	20dd0 <dwt_ioctl+0x598>
   20e28:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
   20e2c:	9300      	str	r3, [sp, #0]
   20e2e:	f46f 53c0 	mvn.w	r3, #6144	@ 0x1800
   20e32:	2200      	movs	r2, #0
   20e34:	4961      	ldr	r1, [pc, #388]	@ (20fbc <dwt_ioctl+0x784>)
   20e36:	4630      	mov	r0, r6
   20e38:	f7fe fdfe 	bl	1fa38 <dwt_modify32bitoffsetreg>
   20e3c:	e7c8      	b.n	20dd0 <dwt_ioctl+0x598>
   20e3e:	2301      	movs	r3, #1
   20e40:	2200      	movs	r2, #0
   20e42:	495f      	ldr	r1, [pc, #380]	@ (20fc0 <dwt_ioctl+0x788>)
   20e44:	4630      	mov	r0, r6
   20e46:	f7fe f912 	bl	1f06e <dwt_write8bitoffsetreg>
   20e4a:	6d32      	ldr	r2, [r6, #80]	@ 0x50
   20e4c:	7e13      	ldrb	r3, [r2, #24]
   20e4e:	f043 0302 	orr.w	r3, r3, #2
   20e52:	7613      	strb	r3, [r2, #24]
   20e54:	e7c0      	b.n	20dd8 <dwt_ioctl+0x5a0>
   20e56:	4630      	mov	r0, r6
   20e58:	f7fe fe12 	bl	1fa80 <_dwt_kick_dgc_on_wakeup>
   20e5c:	2500      	movs	r5, #0
   20e5e:	e595      	b.n	2098c <dwt_ioctl+0x154>
   20e60:	2c00      	cmp	r4, #0
   20e62:	f001 82f5 	beq.w	22450 <dwt_ioctl+0x1c18>
   20e66:	7823      	ldrb	r3, [r4, #0]
   20e68:	6d02      	ldr	r2, [r0, #80]	@ 0x50
   20e6a:	75d3      	strb	r3, [r2, #23]
   20e6c:	031b      	lsls	r3, r3, #12
   20e6e:	f403 4330 	and.w	r3, r3, #45056	@ 0xb000
   20e72:	9300      	str	r3, [sp, #0]
   20e74:	f644 73ff 	movw	r3, #20479	@ 0x4fff
   20e78:	2200      	movs	r2, #0
   20e7a:	2110      	movs	r1, #16
   20e7c:	f7ff f978 	bl	20170 <dwt_modify16bitoffsetreg>
   20e80:	2500      	movs	r5, #0
   20e82:	e583      	b.n	2098c <dwt_ioctl+0x154>
   20e84:	2c00      	cmp	r4, #0
   20e86:	f001 82e6 	beq.w	22456 <dwt_ioctl+0x1c1e>
   20e8a:	8823      	ldrh	r3, [r4, #0]
   20e8c:	2200      	movs	r2, #0
   20e8e:	f44f 2160 	mov.w	r1, #917504	@ 0xe0000
   20e92:	f7fe f93e 	bl	1f112 <dwt_write16bitoffsetreg>
   20e96:	2500      	movs	r5, #0
   20e98:	e578      	b.n	2098c <dwt_ioctl+0x154>
   20e9a:	2c00      	cmp	r4, #0
   20e9c:	f001 82de 	beq.w	2245c <dwt_ioctl+0x1c24>
   20ea0:	2200      	movs	r2, #0
   20ea2:	f44f 2160 	mov.w	r1, #917504	@ 0xe0000
   20ea6:	f7fd fd09 	bl	1e8bc <dwt_read16bitoffsetreg>
   20eaa:	8020      	strh	r0, [r4, #0]
   20eac:	2500      	movs	r5, #0
   20eae:	e56d      	b.n	2098c <dwt_ioctl+0x154>
   20eb0:	2c00      	cmp	r4, #0
   20eb2:	f001 82d6 	beq.w	22462 <dwt_ioctl+0x1c2a>
   20eb6:	8823      	ldrh	r3, [r4, #0]
   20eb8:	2200      	movs	r2, #0
   20eba:	4942      	ldr	r1, [pc, #264]	@ (20fc4 <dwt_ioctl+0x78c>)
   20ebc:	f7fe f929 	bl	1f112 <dwt_write16bitoffsetreg>
   20ec0:	2500      	movs	r5, #0
   20ec2:	e563      	b.n	2098c <dwt_ioctl+0x154>
   20ec4:	2c00      	cmp	r4, #0
   20ec6:	f001 82cf 	beq.w	22468 <dwt_ioctl+0x1c30>
   20eca:	2200      	movs	r2, #0
   20ecc:	493d      	ldr	r1, [pc, #244]	@ (20fc4 <dwt_ioctl+0x78c>)
   20ece:	f7fd fcf5 	bl	1e8bc <dwt_read16bitoffsetreg>
   20ed2:	8020      	strh	r0, [r4, #0]
   20ed4:	2500      	movs	r5, #0
   20ed6:	e559      	b.n	2098c <dwt_ioctl+0x154>
   20ed8:	2c00      	cmp	r4, #0
   20eda:	f001 82c8 	beq.w	2246e <dwt_ioctl+0x1c36>
   20ede:	88a3      	ldrh	r3, [r4, #4]
   20ee0:	88e2      	ldrh	r2, [r4, #6]
   20ee2:	6821      	ldr	r1, [r4, #0]
   20ee4:	9100      	str	r1, [sp, #0]
   20ee6:	f44f 11b0 	mov.w	r1, #1441792	@ 0x160000
   20eea:	f7fe f8b5 	bl	1f058 <dwt_writetodevice>
   20eee:	2500      	movs	r5, #0
   20ef0:	e54c      	b.n	2098c <dwt_ioctl+0x154>
   20ef2:	2c00      	cmp	r4, #0
   20ef4:	f001 82be 	beq.w	22474 <dwt_ioctl+0x1c3c>
   20ef8:	88a3      	ldrh	r3, [r4, #4]
   20efa:	88e2      	ldrh	r2, [r4, #6]
   20efc:	6821      	ldr	r1, [r4, #0]
   20efe:	9100      	str	r1, [sp, #0]
   20f00:	f44f 11b0 	mov.w	r1, #1441792	@ 0x160000
   20f04:	f7fd fcba 	bl	1e87c <dwt_readfromdevice>
   20f08:	2500      	movs	r5, #0
   20f0a:	e53f      	b.n	2098c <dwt_ioctl+0x154>
   20f0c:	2c00      	cmp	r4, #0
   20f0e:	f001 82b4 	beq.w	2247a <dwt_ioctl+0x1c42>
   20f12:	88e3      	ldrh	r3, [r4, #6]
   20f14:	88a2      	ldrh	r2, [r4, #4]
   20f16:	6821      	ldr	r1, [r4, #0]
   20f18:	f7fe fcc2 	bl	1f8a0 <ull_readrxdata>
   20f1c:	2500      	movs	r5, #0
   20f1e:	e535      	b.n	2098c <dwt_ioctl+0x154>
   20f20:	2c00      	cmp	r4, #0
   20f22:	f001 82ad 	beq.w	22480 <dwt_ioctl+0x1c48>
   20f26:	88e3      	ldrh	r3, [r4, #6]
   20f28:	6822      	ldr	r2, [r4, #0]
   20f2a:	88a1      	ldrh	r1, [r4, #4]
   20f2c:	f7fe fd52 	bl	1f9d4 <ull_writetxdata>
   20f30:	2500      	movs	r5, #0
   20f32:	e52b      	b.n	2098c <dwt_ioctl+0x154>
   20f34:	4611      	mov	r1, r2
   20f36:	f7fe fce9 	bl	1f90c <ull_rxenable>
   20f3a:	2500      	movs	r5, #0
   20f3c:	e526      	b.n	2098c <dwt_ioctl+0x154>
   20f3e:	2c00      	cmp	r4, #0
   20f40:	f001 82a1 	beq.w	22486 <dwt_ioctl+0x1c4e>
   20f44:	7923      	ldrb	r3, [r4, #4]
   20f46:	8862      	ldrh	r2, [r4, #2]
   20f48:	8821      	ldrh	r1, [r4, #0]
   20f4a:	f7fe ff2d 	bl	1fda8 <ull_writetxfctrl>
   20f4e:	2500      	movs	r5, #0
   20f50:	e51c      	b.n	2098c <dwt_ioctl+0x154>
   20f52:	2c00      	cmp	r4, #0
   20f54:	f001 829a 	beq.w	2248c <dwt_ioctl+0x1c54>
   20f58:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   20f5a:	7bdb      	ldrb	r3, [r3, #15]
   20f5c:	2b01      	cmp	r3, #1
   20f5e:	d00c      	beq.n	20f7a <dwt_ioctl+0x742>
   20f60:	2b03      	cmp	r3, #3
   20f62:	d110      	bne.n	20f86 <dwt_ioctl+0x74e>
   20f64:	220c      	movs	r2, #12
   20f66:	f44f 11f0 	mov.w	r1, #1966080	@ 0x1e0000
   20f6a:	f7fd fca7 	bl	1e8bc <dwt_read16bitoffsetreg>
   20f6e:	b200      	sxth	r0, r0
   20f70:	f340 030c 	sbfx	r3, r0, #0, #13
   20f74:	8023      	strh	r3, [r4, #0]
   20f76:	2500      	movs	r5, #0
   20f78:	e508      	b.n	2098c <dwt_ioctl+0x154>
   20f7a:	2200      	movs	r2, #0
   20f7c:	4912      	ldr	r1, [pc, #72]	@ (20fc8 <dwt_ioctl+0x790>)
   20f7e:	f7fd fc9d 	bl	1e8bc <dwt_read16bitoffsetreg>
   20f82:	b200      	sxth	r0, r0
   20f84:	e7f4      	b.n	20f70 <dwt_ioctl+0x738>
   20f86:	2200      	movs	r2, #0
   20f88:	4910      	ldr	r1, [pc, #64]	@ (20fcc <dwt_ioctl+0x794>)
   20f8a:	f7fd fc97 	bl	1e8bc <dwt_read16bitoffsetreg>
   20f8e:	b200      	sxth	r0, r0
   20f90:	e7ee      	b.n	20f70 <dwt_ioctl+0x738>
   20f92:	bf00      	nop
   20f94:	00110008 	.word	0x00110008
   20f98:	00d20874 	.word	0x00d20874
   20f9c:	00110010 	.word	0x00110010
   20fa0:	04d28874 	.word	0x04d28874
   20fa4:	0007001c 	.word	0x0007001c
   20fa8:	00020004 	.word	0x00020004
   20fac:	00070050 	.word	0x00070050
   20fb0:	001f000c 	.word	0x001f000c
   20fb4:	001f0010 	.word	0x001f0010
   20fb8:	00010014 	.word	0x00010014
   20fbc:	000b0008 	.word	0x000b0008
   20fc0:	00010028 	.word	0x00010028
   20fc4:	00010004 	.word	0x00010004
   20fc8:	0018000c 	.word	0x0018000c
   20fcc:	000c0020 	.word	0x000c0020
   20fd0:	2c00      	cmp	r4, #0
   20fd2:	f001 825e 	beq.w	22492 <dwt_ioctl+0x1c5a>
   20fd6:	ab0c      	add	r3, sp, #48	@ 0x30
   20fd8:	9300      	str	r3, [sp, #0]
   20fda:	2303      	movs	r3, #3
   20fdc:	2200      	movs	r2, #0
   20fde:	49bb      	ldr	r1, [pc, #748]	@ (212cc <dwt_ioctl+0xa94>)
   20fe0:	f7fd fc4c 	bl	1e87c <dwt_readfromdevice>
   20fe4:	f89d 2032 	ldrb.w	r2, [sp, #50]	@ 0x32
   20fe8:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
   20fec:	eb03 2202 	add.w	r2, r3, r2, lsl #8
   20ff0:	f89d 3030 	ldrb.w	r3, [sp, #48]	@ 0x30
   20ff4:	eb03 2302 	add.w	r3, r3, r2, lsl #8
   20ff8:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
   20ffc:	bf1c      	itt	ne
   20ffe:	ea6f 3303 	mvnne.w	r3, r3, lsl #12
   21002:	ea6f 3313 	mvnne.w	r3, r3, lsr #12
   21006:	6023      	str	r3, [r4, #0]
   21008:	2500      	movs	r5, #0
   2100a:	e4bf      	b.n	2098c <dwt_ioctl+0x154>
   2100c:	f7fe f892 	bl	1f134 <ull_clearaonconfig>
   21010:	2500      	movs	r5, #0
   21012:	e4bb      	b.n	2098c <dwt_ioctl+0x154>
   21014:	2c00      	cmp	r4, #0
   21016:	f001 823f 	beq.w	22498 <dwt_ioctl+0x1c60>
   2101a:	8861      	ldrh	r1, [r4, #2]
   2101c:	f7fe ff40 	bl	1fea0 <ull_calcbandwidthadj>
   21020:	7020      	strb	r0, [r4, #0]
   21022:	2500      	movs	r5, #0
   21024:	e4b2      	b.n	2098c <dwt_ioctl+0x154>
   21026:	4621      	mov	r1, r4
   21028:	f7fd fc68 	bl	1e8fc <ull_readdiagnostics>
   2102c:	2500      	movs	r5, #0
   2102e:	e4ad      	b.n	2098c <dwt_ioctl+0x154>
   21030:	2c00      	cmp	r4, #0
   21032:	f001 8234 	beq.w	2249e <dwt_ioctl+0x1c66>
   21036:	2201      	movs	r2, #1
   21038:	2174      	movs	r1, #116	@ 0x74
   2103a:	f7fd fc29 	bl	1e890 <dwt_read32bitoffsetreg>
   2103e:	6020      	str	r0, [r4, #0]
   21040:	2500      	movs	r5, #0
   21042:	e4a3      	b.n	2098c <dwt_ioctl+0x154>
   21044:	2c00      	cmp	r4, #0
   21046:	f001 822d 	beq.w	224a4 <dwt_ioctl+0x1c6c>
   2104a:	2200      	movs	r2, #0
   2104c:	2174      	movs	r1, #116	@ 0x74
   2104e:	f7fd fc1f 	bl	1e890 <dwt_read32bitoffsetreg>
   21052:	6020      	str	r0, [r4, #0]
   21054:	2500      	movs	r5, #0
   21056:	e499      	b.n	2098c <dwt_ioctl+0x154>
   21058:	9400      	str	r4, [sp, #0]
   2105a:	2305      	movs	r3, #5
   2105c:	2200      	movs	r2, #0
   2105e:	2174      	movs	r1, #116	@ 0x74
   21060:	f7fd fc0c 	bl	1e87c <dwt_readfromdevice>
   21064:	2500      	movs	r5, #0
   21066:	e491      	b.n	2098c <dwt_ioctl+0x154>
   21068:	2c00      	cmp	r4, #0
   2106a:	f001 821e 	beq.w	224aa <dwt_ioctl+0x1c72>
   2106e:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   21070:	7bdb      	ldrb	r3, [r3, #15]
   21072:	2b01      	cmp	r3, #1
   21074:	d014      	beq.n	210a0 <dwt_ioctl+0x868>
   21076:	2b03      	cmp	r3, #3
   21078:	d119      	bne.n	210ae <dwt_ioctl+0x876>
   2107a:	2216      	movs	r2, #22
   2107c:	f44f 11f0 	mov.w	r1, #1966080	@ 0x1e0000
   21080:	f7fd fc1c 	bl	1e8bc <dwt_read16bitoffsetreg>
   21084:	f3c0 000d 	ubfx	r0, r0, #0, #14
   21088:	b283      	uxth	r3, r0
   2108a:	f413 5f00 	tst.w	r3, #8192	@ 0x2000
   2108e:	d004      	beq.n	2109a <dwt_ioctl+0x862>
   21090:	ea6f 4383 	mvn.w	r3, r3, lsl #18
   21094:	ea6f 4393 	mvn.w	r3, r3, lsr #18
   21098:	b218      	sxth	r0, r3
   2109a:	8020      	strh	r0, [r4, #0]
   2109c:	2500      	movs	r5, #0
   2109e:	e475      	b.n	2098c <dwt_ioctl+0x154>
   210a0:	2202      	movs	r2, #2
   210a2:	498b      	ldr	r1, [pc, #556]	@ (212d0 <dwt_ioctl+0xa98>)
   210a4:	f7fd fc0a 	bl	1e8bc <dwt_read16bitoffsetreg>
   210a8:	f3c0 000d 	ubfx	r0, r0, #0, #14
   210ac:	e7ec      	b.n	21088 <dwt_ioctl+0x850>
   210ae:	2202      	movs	r2, #2
   210b0:	4988      	ldr	r1, [pc, #544]	@ (212d4 <dwt_ioctl+0xa9c>)
   210b2:	f7fd fc03 	bl	1e8bc <dwt_read16bitoffsetreg>
   210b6:	f3c0 000d 	ubfx	r0, r0, #0, #14
   210ba:	e7e5      	b.n	21088 <dwt_ioctl+0x850>
   210bc:	9400      	str	r4, [sp, #0]
   210be:	2306      	movs	r3, #6
   210c0:	2200      	movs	r2, #0
   210c2:	4985      	ldr	r1, [pc, #532]	@ (212d8 <dwt_ioctl+0xaa0>)
   210c4:	f7fd fbda 	bl	1e87c <dwt_readfromdevice>
   210c8:	7963      	ldrb	r3, [r4, #5]
   210ca:	f003 0301 	and.w	r3, r3, #1
   210ce:	7163      	strb	r3, [r4, #5]
   210d0:	2500      	movs	r5, #0
   210d2:	e45b      	b.n	2098c <dwt_ioctl+0x154>
   210d4:	2c00      	cmp	r4, #0
   210d6:	f001 81eb 	beq.w	224b0 <dwt_ioctl+0x1c78>
   210da:	2201      	movs	r2, #1
   210dc:	f04f 1108 	mov.w	r1, #524296	@ 0x80008
   210e0:	f7fd fbfe 	bl	1e8e0 <dwt_read8bitoffsetreg>
   210e4:	7020      	strb	r0, [r4, #0]
   210e6:	2500      	movs	r5, #0
   210e8:	e450      	b.n	2098c <dwt_ioctl+0x154>
   210ea:	2c00      	cmp	r4, #0
   210ec:	f001 81e3 	beq.w	224b6 <dwt_ioctl+0x1c7e>
   210f0:	2200      	movs	r2, #0
   210f2:	f04f 1108 	mov.w	r1, #524296	@ 0x80008
   210f6:	f7fd fbf3 	bl	1e8e0 <dwt_read8bitoffsetreg>
   210fa:	7020      	strb	r0, [r4, #0]
   210fc:	2500      	movs	r5, #0
   210fe:	e445      	b.n	2098c <dwt_ioctl+0x154>
   21100:	2c00      	cmp	r4, #0
   21102:	f001 81db 	beq.w	224bc <dwt_ioctl+0x1c84>
   21106:	88a2      	ldrh	r2, [r4, #4]
   21108:	6821      	ldr	r1, [r4, #0]
   2110a:	f7fe fd1d 	bl	1fb48 <_dwt_otpprogword32>
   2110e:	2500      	movs	r5, #0
   21110:	e43c      	b.n	2098c <dwt_ioctl+0x154>
   21112:	2c00      	cmp	r4, #0
   21114:	f001 81d5 	beq.w	224c2 <dwt_ioctl+0x1c8a>
   21118:	6825      	ldr	r5, [r4, #0]
   2111a:	88a4      	ldrh	r4, [r4, #4]
   2111c:	4622      	mov	r2, r4
   2111e:	4629      	mov	r1, r5
   21120:	f7fe fd12 	bl	1fb48 <_dwt_otpprogword32>
   21124:	4621      	mov	r1, r4
   21126:	4630      	mov	r0, r6
   21128:	f7fe f84e 	bl	1f1c8 <_dwt_otpread>
   2112c:	1a2d      	subs	r5, r5, r0
   2112e:	bf18      	it	ne
   21130:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
   21134:	e42a      	b.n	2098c <dwt_ioctl+0x154>
   21136:	2a02      	cmp	r2, #2
   21138:	d00e      	beq.n	21158 <dwt_ioctl+0x920>
   2113a:	4c68      	ldr	r4, [pc, #416]	@ (212dc <dwt_ioctl+0xaa4>)
   2113c:	2300      	movs	r3, #0
   2113e:	461a      	mov	r2, r3
   21140:	4621      	mov	r1, r4
   21142:	4630      	mov	r0, r6
   21144:	f7fd ff93 	bl	1f06e <dwt_write8bitoffsetreg>
   21148:	2302      	movs	r3, #2
   2114a:	2200      	movs	r2, #0
   2114c:	4621      	mov	r1, r4
   2114e:	4630      	mov	r0, r6
   21150:	f7fd ff8d 	bl	1f06e <dwt_write8bitoffsetreg>
   21154:	2500      	movs	r5, #0
   21156:	e419      	b.n	2098c <dwt_ioctl+0x154>
   21158:	2300      	movs	r3, #0
   2115a:	9300      	str	r3, [sp, #0]
   2115c:	23fe      	movs	r3, #254	@ 0xfe
   2115e:	2201      	movs	r2, #1
   21160:	495f      	ldr	r1, [pc, #380]	@ (212e0 <dwt_ioctl+0xaa8>)
   21162:	f7fe fe53 	bl	1fe0c <dwt_modify8bitoffsetreg>
   21166:	e7e8      	b.n	2113a <dwt_ioctl+0x902>
   21168:	2c00      	cmp	r4, #0
   2116a:	f001 81ad 	beq.w	224c8 <dwt_ioctl+0x1c90>
   2116e:	8824      	ldrh	r4, [r4, #0]
   21170:	b2e2      	uxtb	r2, r4
   21172:	f44f 7181 	mov.w	r1, #258	@ 0x102
   21176:	f7fe f869 	bl	1f24c <ull_aon_write>
   2117a:	0a22      	lsrs	r2, r4, #8
   2117c:	f240 1103 	movw	r1, #259	@ 0x103
   21180:	4630      	mov	r0, r6
   21182:	f7fe f863 	bl	1f24c <ull_aon_write>
   21186:	2500      	movs	r5, #0
   21188:	e400      	b.n	2098c <dwt_ioctl+0x154>
   2118a:	2c00      	cmp	r4, #0
   2118c:	f001 819f 	beq.w	224ce <dwt_ioctl+0x1c96>
   21190:	f8df 8158 	ldr.w	r8, [pc, #344]	@ 212ec <dwt_ioctl+0xab4>
   21194:	2310      	movs	r3, #16
   21196:	9300      	str	r3, [sp, #0]
   21198:	23ff      	movs	r3, #255	@ 0xff
   2119a:	2200      	movs	r2, #0
   2119c:	4641      	mov	r1, r8
   2119e:	f7fe fe35 	bl	1fe0c <dwt_modify8bitoffsetreg>
   211a2:	f44f 7182 	mov.w	r1, #260	@ 0x104
   211a6:	4630      	mov	r0, r6
   211a8:	f7fe f830 	bl	1f20c <ull_aon_read>
   211ac:	f000 05e0 	and.w	r5, r0, #224	@ 0xe0
   211b0:	462a      	mov	r2, r5
   211b2:	f44f 7182 	mov.w	r1, #260	@ 0x104
   211b6:	4630      	mov	r0, r6
   211b8:	f7fe f848 	bl	1f24c <ull_aon_write>
   211bc:	f045 0204 	orr.w	r2, r5, #4
   211c0:	f44f 7182 	mov.w	r1, #260	@ 0x104
   211c4:	4630      	mov	r0, r6
   211c6:	f7fe f841 	bl	1f24c <ull_aon_write>
   211ca:	2002      	movs	r0, #2
   211cc:	f7f9 fe23 	bl	1ae16 <deca_sleep>
   211d0:	f44f 7187 	mov.w	r1, #270	@ 0x10e
   211d4:	4630      	mov	r0, r6
   211d6:	f7fe f819 	bl	1f20c <ull_aon_read>
   211da:	4607      	mov	r7, r0
   211dc:	f240 110f 	movw	r1, #271	@ 0x10f
   211e0:	4630      	mov	r0, r6
   211e2:	f7fe f813 	bl	1f20c <ull_aon_read>
   211e6:	4681      	mov	r9, r0
   211e8:	462a      	mov	r2, r5
   211ea:	f44f 7182 	mov.w	r1, #260	@ 0x104
   211ee:	4630      	mov	r0, r6
   211f0:	f7fe f82c 	bl	1f24c <ull_aon_write>
   211f4:	2500      	movs	r5, #0
   211f6:	9500      	str	r5, [sp, #0]
   211f8:	23ef      	movs	r3, #239	@ 0xef
   211fa:	462a      	mov	r2, r5
   211fc:	4641      	mov	r1, r8
   211fe:	4630      	mov	r0, r6
   21200:	f7fe fe04 	bl	1fe0c <dwt_modify8bitoffsetreg>
   21204:	ea47 2709 	orr.w	r7, r7, r9, lsl #8
   21208:	8027      	strh	r7, [r4, #0]
   2120a:	f7ff bbbf 	b.w	2098c <dwt_ioctl+0x154>
   2120e:	2c00      	cmp	r4, #0
   21210:	f001 8160 	beq.w	224d4 <dwt_ioctl+0x1c9c>
   21214:	78a2      	ldrb	r2, [r4, #2]
   21216:	8821      	ldrh	r1, [r4, #0]
   21218:	f7fe f840 	bl	1f29c <ull_configuresleep>
   2121c:	2500      	movs	r5, #0
   2121e:	f7ff bbb5 	b.w	2098c <dwt_ioctl+0x154>
   21222:	f7fd ff87 	bl	1f134 <ull_clearaonconfig>
   21226:	2001      	movs	r0, #1
   21228:	f7f9 fdf5 	bl	1ae16 <deca_sleep>
   2122c:	2303      	movs	r3, #3
   2122e:	9300      	str	r3, [sp, #0]
   21230:	23ff      	movs	r3, #255	@ 0xff
   21232:	2200      	movs	r2, #0
   21234:	492b      	ldr	r1, [pc, #172]	@ (212e4 <dwt_ioctl+0xaac>)
   21236:	4630      	mov	r0, r6
   21238:	f7fe fde8 	bl	1fe0c <dwt_modify8bitoffsetreg>
   2123c:	2300      	movs	r3, #0
   2123e:	461a      	mov	r2, r3
   21240:	f44f 1188 	mov.w	r1, #1114112	@ 0x110000
   21244:	4630      	mov	r0, r6
   21246:	f7fd ff12 	bl	1f06e <dwt_write8bitoffsetreg>
   2124a:	2001      	movs	r0, #1
   2124c:	f7f9 fde3 	bl	1ae16 <deca_sleep>
   21250:	6d33      	ldr	r3, [r6, #80]	@ 0x50
   21252:	2500      	movs	r5, #0
   21254:	73dd      	strb	r5, [r3, #15]
   21256:	2202      	movs	r2, #2
   21258:	825a      	strh	r2, [r3, #18]
   2125a:	759d      	strb	r5, [r3, #22]
   2125c:	75dd      	strb	r5, [r3, #23]
   2125e:	741d      	strb	r5, [r3, #16]
   21260:	f7ff bb94 	b.w	2098c <dwt_ioctl+0x154>
   21264:	2c00      	cmp	r4, #0
   21266:	f001 8138 	beq.w	224da <dwt_ioctl+0x1ca2>
   2126a:	7823      	ldrb	r3, [r4, #0]
   2126c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
   21270:	6d02      	ldr	r2, [r0, #80]	@ 0x50
   21272:	7393      	strb	r3, [r2, #14]
   21274:	2200      	movs	r2, #0
   21276:	491c      	ldr	r1, [pc, #112]	@ (212e8 <dwt_ioctl+0xab0>)
   21278:	f7fd fef9 	bl	1f06e <dwt_write8bitoffsetreg>
   2127c:	2500      	movs	r5, #0
   2127e:	f7ff bb85 	b.w	2098c <dwt_ioctl+0x154>
   21282:	2c00      	cmp	r4, #0
   21284:	f001 812c 	beq.w	224e0 <dwt_ioctl+0x1ca8>
   21288:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   2128a:	7b9b      	ldrb	r3, [r3, #14]
   2128c:	7023      	strb	r3, [r4, #0]
   2128e:	2500      	movs	r5, #0
   21290:	f7ff bb7c 	b.w	2098c <dwt_ioctl+0x154>
   21294:	2101      	movs	r1, #1
   21296:	f7fe fc11 	bl	1fabc <ull_enable_rf_tx>
   2129a:	4630      	mov	r0, r6
   2129c:	f7fe fc42 	bl	1fb24 <ull_enable_rftx_blocks>
   212a0:	2101      	movs	r1, #1
   212a2:	4630      	mov	r0, r6
   212a4:	f7fd ff66 	bl	1f174 <ull_force_clocks>
   212a8:	220f      	movs	r2, #15
   212aa:	2101      	movs	r1, #1
   212ac:	4630      	mov	r0, r6
   212ae:	f7ff f86f 	bl	20390 <ull_repeated_cw>
   212b2:	2500      	movs	r5, #0
   212b4:	f7ff bb6a 	b.w	2098c <dwt_ioctl+0x154>
   212b8:	2c00      	cmp	r4, #0
   212ba:	f001 8114 	beq.w	224e6 <dwt_ioctl+0x1cae>
   212be:	6862      	ldr	r2, [r4, #4]
   212c0:	6821      	ldr	r1, [r4, #0]
   212c2:	f7ff f865 	bl	20390 <ull_repeated_cw>
   212c6:	2500      	movs	r5, #0
   212c8:	f7ff bb60 	b.w	2098c <dwt_ioctl+0x154>
   212cc:	00060029 	.word	0x00060029
   212d0:	00180014 	.word	0x00180014
   212d4:	000c001c 	.word	0x000c001c
   212d8:	000c0018 	.word	0x000c0018
   212dc:	000a0004 	.word	0x000a0004
   212e0:	00110008 	.word	0x00110008
   212e4:	00110004 	.word	0x00110004
   212e8:	00090014 	.word	0x00090014
   212ec:	00070048 	.word	0x00070048
   212f0:	2c00      	cmp	r4, #0
   212f2:	f001 80fb 	beq.w	224ec <dwt_ioctl+0x1cb4>
   212f6:	4dd6      	ldr	r5, [pc, #856]	@ (21650 <dwt_ioctl+0xe18>)
   212f8:	2200      	movs	r2, #0
   212fa:	4629      	mov	r1, r5
   212fc:	f7fd faf0 	bl	1e8e0 <dwt_read8bitoffsetreg>
   21300:	4680      	mov	r8, r0
   21302:	2302      	movs	r3, #2
   21304:	9300      	str	r3, [sp, #0]
   21306:	23ff      	movs	r3, #255	@ 0xff
   21308:	2200      	movs	r2, #0
   2130a:	4629      	mov	r1, r5
   2130c:	4630      	mov	r0, r6
   2130e:	f7fe fd7d 	bl	1fe0c <dwt_modify8bitoffsetreg>
   21312:	2304      	movs	r3, #4
   21314:	2200      	movs	r2, #0
   21316:	49cf      	ldr	r1, [pc, #828]	@ (21654 <dwt_ioctl+0xe1c>)
   21318:	4630      	mov	r0, r6
   2131a:	f7fd fea8 	bl	1f06e <dwt_write8bitoffsetreg>
   2131e:	2301      	movs	r3, #1
   21320:	2200      	movs	r2, #0
   21322:	f44f 2100 	mov.w	r1, #524288	@ 0x80000
   21326:	4630      	mov	r0, r6
   21328:	f7fd fea1 	bl	1f06e <dwt_write8bitoffsetreg>
   2132c:	4fca      	ldr	r7, [pc, #808]	@ (21658 <dwt_ioctl+0xe20>)
   2132e:	2500      	movs	r5, #0
   21330:	462a      	mov	r2, r5
   21332:	4639      	mov	r1, r7
   21334:	4630      	mov	r0, r6
   21336:	f7fd fad3 	bl	1e8e0 <dwt_read8bitoffsetreg>
   2133a:	f010 0f01 	tst.w	r0, #1
   2133e:	d0f7      	beq.n	21330 <dwt_ioctl+0xaf8>
   21340:	2200      	movs	r2, #0
   21342:	f04f 1108 	mov.w	r1, #524296	@ 0x80008
   21346:	4630      	mov	r0, r6
   21348:	f7fd fab8 	bl	1e8bc <dwt_read16bitoffsetreg>
   2134c:	4605      	mov	r5, r0
   2134e:	2300      	movs	r3, #0
   21350:	461a      	mov	r2, r3
   21352:	f44f 2100 	mov.w	r1, #524288	@ 0x80000
   21356:	4630      	mov	r0, r6
   21358:	f7fd fe89 	bl	1f06e <dwt_write8bitoffsetreg>
   2135c:	2300      	movs	r3, #0
   2135e:	461a      	mov	r2, r3
   21360:	49bc      	ldr	r1, [pc, #752]	@ (21654 <dwt_ioctl+0xe1c>)
   21362:	4630      	mov	r0, r6
   21364:	f7fd fe83 	bl	1f06e <dwt_write8bitoffsetreg>
   21368:	4643      	mov	r3, r8
   2136a:	2200      	movs	r2, #0
   2136c:	49b8      	ldr	r1, [pc, #736]	@ (21650 <dwt_ioctl+0xe18>)
   2136e:	4630      	mov	r0, r6
   21370:	f7fd fe7d 	bl	1f06e <dwt_write8bitoffsetreg>
   21374:	8025      	strh	r5, [r4, #0]
   21376:	2500      	movs	r5, #0
   21378:	f7ff bb08 	b.w	2098c <dwt_ioctl+0x154>
   2137c:	2c00      	cmp	r4, #0
   2137e:	f001 80b8 	beq.w	224f2 <dwt_ioctl+0x1cba>
   21382:	7923      	ldrb	r3, [r4, #4]
   21384:	6d02      	ldr	r2, [r0, #80]	@ 0x50
   21386:	7ad2      	ldrb	r2, [r2, #11]
   21388:	1a9b      	subs	r3, r3, r2
   2138a:	ee07 3a90 	vmov	s15, r3
   2138e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
   21392:	ed9f 7ab2 	vldr	s14, [pc, #712]	@ 2165c <dwt_ioctl+0xe24>
   21396:	ee67 7a87 	vmul.f32	s15, s15, s14
   2139a:	eeb3 7a06 	vmov.f32	s14, #54	@ 0x41b00000  22.0
   2139e:	ee77 7a87 	vadd.f32	s15, s15, s14
   213a2:	edc4 7a00 	vstr	s15, [r4]
   213a6:	2500      	movs	r5, #0
   213a8:	f7ff baf0 	b.w	2098c <dwt_ioctl+0x154>
   213ac:	2c00      	cmp	r4, #0
   213ae:	f001 80a3 	beq.w	224f8 <dwt_ioctl+0x1cc0>
   213b2:	7923      	ldrb	r3, [r4, #4]
   213b4:	6d02      	ldr	r2, [r0, #80]	@ 0x50
   213b6:	7a92      	ldrb	r2, [r2, #10]
   213b8:	1a9b      	subs	r3, r3, r2
   213ba:	ee07 3a90 	vmov	s15, r3
   213be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
   213c2:	ed9f 7aa7 	vldr	s14, [pc, #668]	@ 21660 <dwt_ioctl+0xe28>
   213c6:	ee67 7a87 	vmul.f32	s15, s15, s14
   213ca:	eeb3 7a00 	vmov.f32	s14, #48	@ 0x41800000  16.0
   213ce:	ee67 7a87 	vmul.f32	s15, s15, s14
   213d2:	eddf 6aa4 	vldr	s13, [pc, #656]	@ 21664 <dwt_ioctl+0xe2c>
   213d6:	ee87 7aa6 	vdiv.f32	s14, s15, s13
   213da:	eef0 7a08 	vmov.f32	s15, #8	@ 0x40400000  3.0
   213de:	ee77 7a27 	vadd.f32	s15, s14, s15
   213e2:	edc4 7a00 	vstr	s15, [r4]
   213e6:	2500      	movs	r5, #0
   213e8:	f7ff bad0 	b.w	2098c <dwt_ioctl+0x154>
   213ec:	2c00      	cmp	r4, #0
   213ee:	f001 8086 	beq.w	224fe <dwt_ioctl+0x1cc6>
   213f2:	6824      	ldr	r4, [r4, #0]
   213f4:	2101      	movs	r1, #1
   213f6:	f7fe fb61 	bl	1fabc <ull_enable_rf_tx>
   213fa:	4630      	mov	r0, r6
   213fc:	f7fe fb92 	bl	1fb24 <ull_enable_rftx_blocks>
   21400:	2101      	movs	r1, #1
   21402:	4630      	mov	r0, r6
   21404:	f7fd feb6 	bl	1f174 <ull_force_clocks>
   21408:	4621      	mov	r1, r4
   2140a:	4630      	mov	r0, r6
   2140c:	f7fe fda4 	bl	1ff58 <ull_repeated_frames>
   21410:	2500      	movs	r5, #0
   21412:	f7ff babb 	b.w	2098c <dwt_ioctl+0x154>
   21416:	2500      	movs	r5, #0
   21418:	9500      	str	r5, [sp, #0]
   2141a:	23ef      	movs	r3, #239	@ 0xef
   2141c:	462a      	mov	r2, r5
   2141e:	4992      	ldr	r1, [pc, #584]	@ (21668 <dwt_ioctl+0xe30>)
   21420:	f7fe fcf4 	bl	1fe0c <dwt_modify8bitoffsetreg>
   21424:	2105      	movs	r1, #5
   21426:	4630      	mov	r0, r6
   21428:	f7fd fea4 	bl	1f174 <ull_force_clocks>
   2142c:	2101      	movs	r1, #1
   2142e:	4630      	mov	r0, r6
   21430:	f7fe fa18 	bl	1f864 <ull_disable_rf_tx>
   21434:	4630      	mov	r0, r6
   21436:	f7fe fa0b 	bl	1f850 <ull_disable_rftx_blocks>
   2143a:	f7ff baa7 	b.w	2098c <dwt_ioctl+0x154>
   2143e:	2500      	movs	r5, #0
   21440:	9500      	str	r5, [sp, #0]
   21442:	23ef      	movs	r3, #239	@ 0xef
   21444:	462a      	mov	r2, r5
   21446:	4988      	ldr	r1, [pc, #544]	@ (21668 <dwt_ioctl+0xe30>)
   21448:	f7fe fce0 	bl	1fe0c <dwt_modify8bitoffsetreg>
   2144c:	f7ff ba9e 	b.w	2098c <dwt_ioctl+0x154>
   21450:	2c00      	cmp	r4, #0
   21452:	f001 8057 	beq.w	22504 <dwt_ioctl+0x1ccc>
   21456:	6821      	ldr	r1, [r4, #0]
   21458:	f7fe fd7e 	bl	1ff58 <ull_repeated_frames>
   2145c:	2500      	movs	r5, #0
   2145e:	f7ff ba95 	b.w	2098c <dwt_ioctl+0x154>
   21462:	2200      	movs	r2, #0
   21464:	4981      	ldr	r1, [pc, #516]	@ (2166c <dwt_ioctl+0xe34>)
   21466:	f7fd fa29 	bl	1e8bc <dwt_read16bitoffsetreg>
   2146a:	f3c0 050b 	ubfx	r5, r0, #0, #12
   2146e:	f410 6f00 	tst.w	r0, #2048	@ 0x800
   21472:	bf18      	it	ne
   21474:	f445 4570 	orrne.w	r5, r5, #61440	@ 0xf000
   21478:	b22d      	sxth	r5, r5
   2147a:	8025      	strh	r5, [r4, #0]
   2147c:	6d33      	ldr	r3, [r6, #80]	@ 0x50
   2147e:	f9b3 3014 	ldrsh.w	r3, [r3, #20]
   21482:	1aed      	subs	r5, r5, r3
   21484:	f7ff ba82 	b.w	2098c <dwt_ioctl+0x154>
   21488:	2c00      	cmp	r4, #0
   2148a:	f001 806d 	beq.w	22568 <dwt_ioctl+0x1d30>
   2148e:	f8d4 9004 	ldr.w	r9, [r4, #4]
   21492:	7a23      	ldrb	r3, [r4, #8]
   21494:	f899 2013 	ldrb.w	r2, [r9, #19]
   21498:	2aff      	cmp	r2, #255	@ 0xff
   2149a:	f000 813f 	beq.w	2171c <dwt_ioctl+0xee4>
   2149e:	2b00      	cmp	r3, #0
   214a0:	d136      	bne.n	21510 <dwt_ioctl+0xcd8>
   214a2:	f8d9 3000 	ldr.w	r3, [r9]
   214a6:	9300      	str	r3, [sp, #0]
   214a8:	230c      	movs	r3, #12
   214aa:	2200      	movs	r2, #0
   214ac:	4970      	ldr	r1, [pc, #448]	@ (21670 <dwt_ioctl+0xe38>)
   214ae:	f7fd fdd3 	bl	1f058 <dwt_writetodevice>
   214b2:	f899 300c 	ldrb.w	r3, [r9, #12]
   214b6:	f8b9 200e 	ldrh.w	r2, [r9, #14]
   214ba:	18d1      	adds	r1, r2, r3
   214bc:	f899 2012 	ldrb.w	r2, [r9, #18]
   214c0:	2a00      	cmp	r2, #0
   214c2:	d15f      	bne.n	21584 <dwt_ioctl+0xd4c>
   214c4:	f899 0010 	ldrb.w	r0, [r9, #16]
   214c8:	2800      	cmp	r0, #0
   214ca:	bf0b      	itete	eq
   214cc:	227f      	moveq	r2, #127	@ 0x7f
   214ce:	f44f 6280 	movne.w	r2, #1024	@ 0x400
   214d2:	f44f 15b0 	moveq.w	r5, #1441792	@ 0x160000
   214d6:	f44f 15a0 	movne.w	r5, #1310720	@ 0x140000
   214da:	f899 0013 	ldrb.w	r0, [r9, #19]
   214de:	1a12      	subs	r2, r2, r0
   214e0:	3a02      	subs	r2, #2
   214e2:	4291      	cmp	r1, r2
   214e4:	f200 8120 	bhi.w	21728 <dwt_ioctl+0xef0>
   214e8:	f8d9 2004 	ldr.w	r2, [r9, #4]
   214ec:	9200      	str	r2, [sp, #0]
   214ee:	2200      	movs	r2, #0
   214f0:	4629      	mov	r1, r5
   214f2:	4630      	mov	r0, r6
   214f4:	f7fd fdb0 	bl	1f058 <dwt_writetodevice>
   214f8:	f8b9 300e 	ldrh.w	r3, [r9, #14]
   214fc:	f899 200c 	ldrb.w	r2, [r9, #12]
   21500:	f8d9 1008 	ldr.w	r1, [r9, #8]
   21504:	9100      	str	r1, [sp, #0]
   21506:	4629      	mov	r1, r5
   21508:	4630      	mov	r0, r6
   2150a:	f7fd fda5 	bl	1f058 <dwt_writetodevice>
   2150e:	e04a      	b.n	215a6 <dwt_ioctl+0xd6e>
   21510:	f8d9 3000 	ldr.w	r3, [r9]
   21514:	f8b9 100e 	ldrh.w	r1, [r9, #14]
   21518:	7a9a      	ldrb	r2, [r3, #10]
   2151a:	f88d 2030 	strb.w	r2, [sp, #48]	@ 0x30
   2151e:	7a5a      	ldrb	r2, [r3, #9]
   21520:	f88d 2031 	strb.w	r2, [sp, #49]	@ 0x31
   21524:	7a1a      	ldrb	r2, [r3, #8]
   21526:	f88d 2032 	strb.w	r2, [sp, #50]	@ 0x32
   2152a:	79da      	ldrb	r2, [r3, #7]
   2152c:	f88d 2033 	strb.w	r2, [sp, #51]	@ 0x33
   21530:	799a      	ldrb	r2, [r3, #6]
   21532:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
   21536:	795a      	ldrb	r2, [r3, #5]
   21538:	f88d 2035 	strb.w	r2, [sp, #53]	@ 0x35
   2153c:	791a      	ldrb	r2, [r3, #4]
   2153e:	f88d 2036 	strb.w	r2, [sp, #54]	@ 0x36
   21542:	78da      	ldrb	r2, [r3, #3]
   21544:	f88d 2037 	strb.w	r2, [sp, #55]	@ 0x37
   21548:	789a      	ldrb	r2, [r3, #2]
   2154a:	f88d 2038 	strb.w	r2, [sp, #56]	@ 0x38
   2154e:	785a      	ldrb	r2, [r3, #1]
   21550:	f88d 2039 	strb.w	r2, [sp, #57]	@ 0x39
   21554:	781a      	ldrb	r2, [r3, #0]
   21556:	f88d 203a 	strb.w	r2, [sp, #58]	@ 0x3a
   2155a:	2200      	movs	r2, #0
   2155c:	f88d 203b 	strb.w	r2, [sp, #59]	@ 0x3b
   21560:	f88d 103c 	strb.w	r1, [sp, #60]	@ 0x3c
   21564:	0a09      	lsrs	r1, r1, #8
   21566:	f88d 103d 	strb.w	r1, [sp, #61]	@ 0x3d
   2156a:	7b19      	ldrb	r1, [r3, #12]
   2156c:	f88d 103e 	strb.w	r1, [sp, #62]	@ 0x3e
   21570:	7adb      	ldrb	r3, [r3, #11]
   21572:	f88d 303f 	strb.w	r3, [sp, #63]	@ 0x3f
   21576:	ab0c      	add	r3, sp, #48	@ 0x30
   21578:	9300      	str	r3, [sp, #0]
   2157a:	2310      	movs	r3, #16
   2157c:	493c      	ldr	r1, [pc, #240]	@ (21670 <dwt_ioctl+0xe38>)
   2157e:	f7fd fd6b 	bl	1f058 <dwt_writetodevice>
   21582:	e796      	b.n	214b2 <dwt_ioctl+0xc7a>
   21584:	2a01      	cmp	r2, #1
   21586:	f040 80cc 	bne.w	21722 <dwt_ioctl+0xeea>
   2158a:	f899 3011 	ldrb.w	r3, [r9, #17]
   2158e:	2b00      	cmp	r3, #0
   21590:	f240 33ff 	movw	r3, #1023	@ 0x3ff
   21594:	bf08      	it	eq
   21596:	237f      	moveq	r3, #127	@ 0x7f
   21598:	f899 2013 	ldrb.w	r2, [r9, #19]
   2159c:	1a9b      	subs	r3, r3, r2
   2159e:	3b02      	subs	r3, #2
   215a0:	4299      	cmp	r1, r3
   215a2:	f200 80c4 	bhi.w	2172e <dwt_ioctl+0xef6>
   215a6:	f899 2010 	ldrb.w	r2, [r9, #16]
   215aa:	1e53      	subs	r3, r2, #1
   215ac:	b2db      	uxtb	r3, r3
   215ae:	2b01      	cmp	r3, #1
   215b0:	d940      	bls.n	21634 <dwt_ioctl+0xdfc>
   215b2:	f899 3011 	ldrb.w	r3, [r9, #17]
   215b6:	1e59      	subs	r1, r3, #1
   215b8:	b2c9      	uxtb	r1, r1
   215ba:	2901      	cmp	r1, #1
   215bc:	d964      	bls.n	21688 <dwt_ioctl+0xe50>
   215be:	2b04      	cmp	r3, #4
   215c0:	d069      	beq.n	21696 <dwt_ioctl+0xe5e>
   215c2:	ea42 3343 	orr.w	r3, r2, r3, lsl #13
   215c6:	2200      	movs	r2, #0
   215c8:	492a      	ldr	r1, [pc, #168]	@ (21674 <dwt_ioctl+0xe3c>)
   215ca:	4630      	mov	r0, r6
   215cc:	f7fd fea2 	bl	1f314 <dwt_write32bitoffsetreg>
   215d0:	f8b9 300e 	ldrh.w	r3, [r9, #14]
   215d4:	4a28      	ldr	r2, [pc, #160]	@ (21678 <dwt_ioctl+0xe40>)
   215d6:	ea02 12c3 	and.w	r2, r2, r3, lsl #7
   215da:	f899 300c 	ldrb.w	r3, [r9, #12]
   215de:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
   215e2:	4313      	orrs	r3, r2
   215e4:	2200      	movs	r2, #0
   215e6:	4925      	ldr	r1, [pc, #148]	@ (2167c <dwt_ioctl+0xe44>)
   215e8:	4630      	mov	r0, r6
   215ea:	f7fd fe93 	bl	1f314 <dwt_write32bitoffsetreg>
   215ee:	2301      	movs	r3, #1
   215f0:	2200      	movs	r2, #0
   215f2:	4923      	ldr	r1, [pc, #140]	@ (21680 <dwt_ioctl+0xe48>)
   215f4:	4630      	mov	r0, r6
   215f6:	f7fd fd3a 	bl	1f06e <dwt_write8bitoffsetreg>
   215fa:	f8df 8088 	ldr.w	r8, [pc, #136]	@ 21684 <dwt_ioctl+0xe4c>
   215fe:	2700      	movs	r7, #0
   21600:	463a      	mov	r2, r7
   21602:	4641      	mov	r1, r8
   21604:	4630      	mov	r0, r6
   21606:	f7fd f96b 	bl	1e8e0 <dwt_read8bitoffsetreg>
   2160a:	f010 0f05 	tst.w	r0, #5
   2160e:	d0f7      	beq.n	21600 <dwt_ioctl+0xdc8>
   21610:	4605      	mov	r5, r0
   21612:	4603      	mov	r3, r0
   21614:	2200      	movs	r2, #0
   21616:	491b      	ldr	r1, [pc, #108]	@ (21684 <dwt_ioctl+0xe4c>)
   21618:	4630      	mov	r0, r6
   2161a:	f7fd fd28 	bl	1f06e <dwt_write8bitoffsetreg>
   2161e:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
   21622:	f025 0330 	bic.w	r3, r5, #48	@ 0x30
   21626:	2b01      	cmp	r3, #1
   21628:	d042      	beq.n	216b0 <dwt_ioctl+0xe78>
   2162a:	b26b      	sxtb	r3, r5
   2162c:	7023      	strb	r3, [r4, #0]
   2162e:	2500      	movs	r5, #0
   21630:	f7ff b9ac 	b.w	2098c <dwt_ioctl+0x154>
   21634:	6d33      	ldr	r3, [r6, #80]	@ 0x50
   21636:	7bdb      	ldrb	r3, [r3, #15]
   21638:	2b03      	cmp	r3, #3
   2163a:	f001 802e 	beq.w	2269a <dwt_ioctl+0x1e62>
   2163e:	f899 3011 	ldrb.w	r3, [r9, #17]
   21642:	1e5a      	subs	r2, r3, #1
   21644:	b2d2      	uxtb	r2, r2
   21646:	2a01      	cmp	r2, #1
   21648:	d92c      	bls.n	216a4 <dwt_ioctl+0xe6c>
   2164a:	2201      	movs	r2, #1
   2164c:	e7b7      	b.n	215be <dwt_ioctl+0xd86>
   2164e:	bf00      	nop
   21650:	00070048 	.word	0x00070048
   21654:	00070034 	.word	0x00070034
   21658:	00080004 	.word	0x00080004
   2165c:	3f866666 	.word	0x3f866666
   21660:	3ecccccd 	.word	0x3ecccccd
   21664:	437f0000 	.word	0x437f0000
   21668:	000f0024 	.word	0x000f0024
   2166c:	00020008 	.word	0x00020008
   21670:	00010034 	.word	0x00010034
   21674:	00010044 	.word	0x00010044
   21678:	0001ff80 	.word	0x0001ff80
   2167c:	00010048 	.word	0x00010048
   21680:	0001004c 	.word	0x0001004c
   21684:	00010050 	.word	0x00010050
   21688:	6d33      	ldr	r3, [r6, #80]	@ 0x50
   2168a:	7bdb      	ldrb	r3, [r3, #15]
   2168c:	2b03      	cmp	r3, #3
   2168e:	bf0c      	ite	eq
   21690:	2302      	moveq	r3, #2
   21692:	2301      	movne	r3, #1
   21694:	e795      	b.n	215c2 <dwt_ioctl+0xd8a>
   21696:	f8b9 100e 	ldrh.w	r1, [r9, #14]
   2169a:	2910      	cmp	r1, #16
   2169c:	d991      	bls.n	215c2 <dwt_ioctl+0xd8a>
   2169e:	f06f 0303 	mvn.w	r3, #3
   216a2:	e7c3      	b.n	2162c <dwt_ioctl+0xdf4>
   216a4:	2201      	movs	r2, #1
   216a6:	4613      	mov	r3, r2
   216a8:	e78b      	b.n	215c2 <dwt_ioctl+0xd8a>
   216aa:	2202      	movs	r2, #2
   216ac:	4613      	mov	r3, r2
   216ae:	e788      	b.n	215c2 <dwt_ioctl+0xd8a>
   216b0:	f899 3012 	ldrb.w	r3, [r9, #18]
   216b4:	2b01      	cmp	r3, #1
   216b6:	d1b8      	bne.n	2162a <dwt_ioctl+0xdf2>
   216b8:	f899 2011 	ldrb.w	r2, [r9, #17]
   216bc:	1e53      	subs	r3, r2, #1
   216be:	b2db      	uxtb	r3, r3
   216c0:	2b01      	cmp	r3, #1
   216c2:	d91b      	bls.n	216fc <dwt_ioctl+0xec4>
   216c4:	2a03      	cmp	r2, #3
   216c6:	bf0c      	ite	eq
   216c8:	f44f 17a0 	moveq.w	r7, #1310720	@ 0x140000
   216cc:	f44f 17b0 	movne.w	r7, #1441792	@ 0x160000
   216d0:	f8d9 2004 	ldr.w	r2, [r9, #4]
   216d4:	b112      	cbz	r2, 216dc <dwt_ioctl+0xea4>
   216d6:	f899 300c 	ldrb.w	r3, [r9, #12]
   216da:	b9c3      	cbnz	r3, 2170e <dwt_ioctl+0xed6>
   216dc:	f8d9 1008 	ldr.w	r1, [r9, #8]
   216e0:	2900      	cmp	r1, #0
   216e2:	d0a2      	beq.n	2162a <dwt_ioctl+0xdf2>
   216e4:	f8b9 300e 	ldrh.w	r3, [r9, #14]
   216e8:	2b00      	cmp	r3, #0
   216ea:	d09e      	beq.n	2162a <dwt_ioctl+0xdf2>
   216ec:	f899 200c 	ldrb.w	r2, [r9, #12]
   216f0:	9100      	str	r1, [sp, #0]
   216f2:	4639      	mov	r1, r7
   216f4:	4630      	mov	r0, r6
   216f6:	f7fd f8c1 	bl	1e87c <dwt_readfromdevice>
   216fa:	e796      	b.n	2162a <dwt_ioctl+0xdf2>
   216fc:	6d33      	ldr	r3, [r6, #80]	@ 0x50
   216fe:	7bdb      	ldrb	r3, [r3, #15]
   21700:	2b03      	cmp	r3, #3
   21702:	bf0c      	ite	eq
   21704:	f44f 1798 	moveq.w	r7, #1245184	@ 0x130000
   21708:	f44f 1790 	movne.w	r7, #1179648	@ 0x120000
   2170c:	e7e0      	b.n	216d0 <dwt_ioctl+0xe98>
   2170e:	9200      	str	r2, [sp, #0]
   21710:	2200      	movs	r2, #0
   21712:	4639      	mov	r1, r7
   21714:	4630      	mov	r0, r6
   21716:	f7fd f8b1 	bl	1e87c <dwt_readfromdevice>
   2171a:	e7df      	b.n	216dc <dwt_ioctl+0xea4>
   2171c:	f06f 0302 	mvn.w	r3, #2
   21720:	e784      	b.n	2162c <dwt_ioctl+0xdf4>
   21722:	f06f 0301 	mvn.w	r3, #1
   21726:	e781      	b.n	2162c <dwt_ioctl+0xdf4>
   21728:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   2172c:	e77e      	b.n	2162c <dwt_ioctl+0xdf4>
   2172e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   21732:	e77b      	b.n	2162c <dwt_ioctl+0xdf4>
   21734:	7a23      	ldrb	r3, [r4, #8]
   21736:	79e1      	ldrb	r1, [r4, #7]
   21738:	79a2      	ldrb	r2, [r4, #6]
   2173a:	00d2      	lsls	r2, r2, #3
   2173c:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
   21740:	4313      	orrs	r3, r2
   21742:	7962      	ldrb	r2, [r4, #5]
   21744:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
   21748:	7922      	ldrb	r2, [r4, #4]
   2174a:	ea43 13c2 	orr.w	r3, r3, r2, lsl #7
   2174e:	78e2      	ldrb	r2, [r4, #3]
   21750:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   21754:	78a2      	ldrb	r2, [r4, #2]
   21756:	ea43 23c2 	orr.w	r3, r3, r2, lsl #11
   2175a:	7862      	ldrb	r2, [r4, #1]
   2175c:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
   21760:	b29b      	uxth	r3, r3
   21762:	2200      	movs	r2, #0
   21764:	49cd      	ldr	r1, [pc, #820]	@ (21a9c <dwt_ioctl+0x1264>)
   21766:	f7fd fcd4 	bl	1f112 <dwt_write16bitoffsetreg>
   2176a:	2500      	movs	r5, #0
   2176c:	f7ff b90e 	b.w	2098c <dwt_ioctl+0x154>
   21770:	2c00      	cmp	r4, #0
   21772:	f000 86fc 	beq.w	2256e <dwt_ioctl+0x1d36>
   21776:	7863      	ldrb	r3, [r4, #1]
   21778:	b133      	cbz	r3, 21788 <dwt_ioctl+0xf50>
   2177a:	085b      	lsrs	r3, r3, #1
   2177c:	3b01      	subs	r3, #1
   2177e:	b2db      	uxtb	r3, r3
   21780:	7023      	strb	r3, [r4, #0]
   21782:	2500      	movs	r5, #0
   21784:	f7ff b902 	b.w	2098c <dwt_ioctl+0x154>
   21788:	2300      	movs	r3, #0
   2178a:	e7f9      	b.n	21780 <dwt_ioctl+0xf48>
   2178c:	2200      	movs	r2, #0
   2178e:	49c4      	ldr	r1, [pc, #784]	@ (21aa0 <dwt_ioctl+0x1268>)
   21790:	f7fd f87e 	bl	1e890 <dwt_read32bitoffsetreg>
   21794:	f3c0 030b 	ubfx	r3, r0, #0, #12
   21798:	8023      	strh	r3, [r4, #0]
   2179a:	f3c0 400b 	ubfx	r0, r0, #16, #12
   2179e:	8060      	strh	r0, [r4, #2]
   217a0:	2200      	movs	r2, #0
   217a2:	49c0      	ldr	r1, [pc, #768]	@ (21aa4 <dwt_ioctl+0x126c>)
   217a4:	4630      	mov	r0, r6
   217a6:	f7fd f873 	bl	1e890 <dwt_read32bitoffsetreg>
   217aa:	f3c0 030b 	ubfx	r3, r0, #0, #12
   217ae:	80a3      	strh	r3, [r4, #4]
   217b0:	f3c0 400b 	ubfx	r0, r0, #16, #12
   217b4:	80e0      	strh	r0, [r4, #6]
   217b6:	2200      	movs	r2, #0
   217b8:	49bb      	ldr	r1, [pc, #748]	@ (21aa8 <dwt_ioctl+0x1270>)
   217ba:	4630      	mov	r0, r6
   217bc:	f7fd f868 	bl	1e890 <dwt_read32bitoffsetreg>
   217c0:	7220      	strb	r0, [r4, #8]
   217c2:	0c00      	lsrs	r0, r0, #16
   217c4:	7260      	strb	r0, [r4, #9]
   217c6:	2200      	movs	r2, #0
   217c8:	49b8      	ldr	r1, [pc, #736]	@ (21aac <dwt_ioctl+0x1274>)
   217ca:	4630      	mov	r0, r6
   217cc:	f7fd f860 	bl	1e890 <dwt_read32bitoffsetreg>
   217d0:	f3c0 430b 	ubfx	r3, r0, #16, #12
   217d4:	81a3      	strh	r3, [r4, #12]
   217d6:	f3c0 000b 	ubfx	r0, r0, #0, #12
   217da:	8160      	strh	r0, [r4, #10]
   217dc:	2200      	movs	r2, #0
   217de:	49b4      	ldr	r1, [pc, #720]	@ (21ab0 <dwt_ioctl+0x1278>)
   217e0:	4630      	mov	r0, r6
   217e2:	f7fd f855 	bl	1e890 <dwt_read32bitoffsetreg>
   217e6:	f3c0 430b 	ubfx	r3, r0, #16, #12
   217ea:	f8a4 300f 	strh.w	r3, [r4, #15]
   217ee:	73a0      	strb	r0, [r4, #14]
   217f0:	2200      	movs	r2, #0
   217f2:	49b0      	ldr	r1, [pc, #704]	@ (21ab4 <dwt_ioctl+0x127c>)
   217f4:	4630      	mov	r0, r6
   217f6:	f7fd f84b 	bl	1e890 <dwt_read32bitoffsetreg>
   217fa:	7460      	strb	r0, [r4, #17]
   217fc:	0c00      	lsrs	r0, r0, #16
   217fe:	74a0      	strb	r0, [r4, #18]
   21800:	2200      	movs	r2, #0
   21802:	49ad      	ldr	r1, [pc, #692]	@ (21ab8 <dwt_ioctl+0x1280>)
   21804:	4630      	mov	r0, r6
   21806:	f7fd f843 	bl	1e890 <dwt_read32bitoffsetreg>
   2180a:	f3c0 000b 	ubfx	r0, r0, #0, #12
   2180e:	f8a4 0013 	strh.w	r0, [r4, #19]
   21812:	2500      	movs	r5, #0
   21814:	7565      	strb	r5, [r4, #21]
   21816:	75a5      	strb	r5, [r4, #22]
   21818:	462a      	mov	r2, r5
   2181a:	49a8      	ldr	r1, [pc, #672]	@ (21abc <dwt_ioctl+0x1284>)
   2181c:	4630      	mov	r0, r6
   2181e:	f7fd f85f 	bl	1e8e0 <dwt_read8bitoffsetreg>
   21822:	75e0      	strb	r0, [r4, #23]
   21824:	f7ff b8b2 	b.w	2098c <dwt_ioctl+0x154>
   21828:	4611      	mov	r1, r2
   2182a:	f7fd fc5f 	bl	1f0ec <ull_configeventcounters>
   2182e:	2500      	movs	r5, #0
   21830:	f7ff b8ac 	b.w	2098c <dwt_ioctl+0x154>
   21834:	2c00      	cmp	r4, #0
   21836:	f000 869d 	beq.w	22574 <dwt_ioctl+0x1d3c>
   2183a:	8823      	ldrh	r3, [r4, #0]
   2183c:	2200      	movs	r2, #0
   2183e:	49a0      	ldr	r1, [pc, #640]	@ (21ac0 <dwt_ioctl+0x1288>)
   21840:	f7fd fc67 	bl	1f112 <dwt_write16bitoffsetreg>
   21844:	2500      	movs	r5, #0
   21846:	f7ff b8a1 	b.w	2098c <dwt_ioctl+0x154>
   2184a:	2c00      	cmp	r4, #0
   2184c:	f000 8695 	beq.w	2257a <dwt_ioctl+0x1d42>
   21850:	6825      	ldr	r5, [r4, #0]
   21852:	b935      	cbnz	r5, 21862 <dwt_ioctl+0x102a>
   21854:	2300      	movs	r3, #0
   21856:	461a      	mov	r2, r3
   21858:	499a      	ldr	r1, [pc, #616]	@ (21ac4 <dwt_ioctl+0x128c>)
   2185a:	f7fd fc5a 	bl	1f112 <dwt_write16bitoffsetreg>
   2185e:	f7ff b895 	b.w	2098c <dwt_ioctl+0x154>
   21862:	7962      	ldrb	r2, [r4, #5]
   21864:	7923      	ldrb	r3, [r4, #4]
   21866:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   2186a:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
   2186e:	2200      	movs	r2, #0
   21870:	4994      	ldr	r1, [pc, #592]	@ (21ac4 <dwt_ioctl+0x128c>)
   21872:	f7fd fc4e 	bl	1f112 <dwt_write16bitoffsetreg>
   21876:	2500      	movs	r5, #0
   21878:	f7ff b888 	b.w	2098c <dwt_ioctl+0x154>
   2187c:	2c00      	cmp	r4, #0
   2187e:	f000 867f 	beq.w	22580 <dwt_ioctl+0x1d48>
   21882:	6823      	ldr	r3, [r4, #0]
   21884:	b94b      	cbnz	r3, 2189a <dwt_ioctl+0x1062>
   21886:	2500      	movs	r5, #0
   21888:	9500      	str	r5, [sp, #0]
   2188a:	f64f 53ff 	movw	r3, #65023	@ 0xfdff
   2188e:	462a      	mov	r2, r5
   21890:	2110      	movs	r1, #16
   21892:	f7fe fc6d 	bl	20170 <dwt_modify16bitoffsetreg>
   21896:	f7ff b879 	b.w	2098c <dwt_ioctl+0x154>
   2189a:	2200      	movs	r2, #0
   2189c:	2134      	movs	r1, #52	@ 0x34
   2189e:	f7fd fd39 	bl	1f314 <dwt_write32bitoffsetreg>
   218a2:	f44f 7300 	mov.w	r3, #512	@ 0x200
   218a6:	9300      	str	r3, [sp, #0]
   218a8:	f64f 73ff 	movw	r3, #65535	@ 0xffff
   218ac:	2200      	movs	r2, #0
   218ae:	2110      	movs	r1, #16
   218b0:	4630      	mov	r0, r6
   218b2:	f7fe fc5d 	bl	20170 <dwt_modify16bitoffsetreg>
   218b6:	2500      	movs	r5, #0
   218b8:	f7ff b868 	b.w	2098c <dwt_ioctl+0x154>
   218bc:	2c00      	cmp	r4, #0
   218be:	f000 8662 	beq.w	22586 <dwt_ioctl+0x1d4e>
   218c2:	8861      	ldrh	r1, [r4, #2]
   218c4:	f7fd fca2 	bl	1f20c <ull_aon_read>
   218c8:	7020      	strb	r0, [r4, #0]
   218ca:	2500      	movs	r5, #0
   218cc:	f7ff b85e 	b.w	2098c <dwt_ioctl+0x154>
   218d0:	2c00      	cmp	r4, #0
   218d2:	f000 865b 	beq.w	2258c <dwt_ioctl+0x1d54>
   218d6:	78a2      	ldrb	r2, [r4, #2]
   218d8:	8821      	ldrh	r1, [r4, #0]
   218da:	f7fd fcb7 	bl	1f24c <ull_aon_write>
   218de:	2500      	movs	r5, #0
   218e0:	f7ff b854 	b.w	2098c <dwt_ioctl+0x154>
   218e4:	4b78      	ldr	r3, [pc, #480]	@ (21ac8 <dwt_ioctl+0x1290>)
   218e6:	4a79      	ldr	r2, [pc, #484]	@ (21acc <dwt_ioctl+0x1294>)
   218e8:	2d01      	cmp	r5, #1
   218ea:	bf18      	it	ne
   218ec:	4613      	movne	r3, r2
   218ee:	2d01      	cmp	r5, #1
   218f0:	4977      	ldr	r1, [pc, #476]	@ (21ad0 <dwt_ioctl+0x1298>)
   218f2:	bf18      	it	ne
   218f4:	f04f 110c 	movne.w	r1, #786444	@ 0xc000c
   218f8:	6d02      	ldr	r2, [r0, #80]	@ 0x50
   218fa:	7bd2      	ldrb	r2, [r2, #15]
   218fc:	2a01      	cmp	r2, #1
   218fe:	d012      	beq.n	21926 <dwt_ioctl+0x10ee>
   21900:	2a03      	cmp	r2, #3
   21902:	d117      	bne.n	21934 <dwt_ioctl+0x10fc>
   21904:	f5a2 12c0 	sub.w	r2, r2, #1572864	@ 0x180000
   21908:	3a01      	subs	r2, #1
   2190a:	441a      	add	r2, r3
   2190c:	f44f 11f0 	mov.w	r1, #1966080	@ 0x1e0000
   21910:	f7fc ffd4 	bl	1e8bc <dwt_read16bitoffsetreg>
   21914:	09c0      	lsrs	r0, r0, #7
   21916:	8020      	strh	r0, [r4, #0]
   21918:	8825      	ldrh	r5, [r4, #0]
   2191a:	3500      	adds	r5, #0
   2191c:	bf18      	it	ne
   2191e:	2501      	movne	r5, #1
   21920:	426d      	negs	r5, r5
   21922:	f7ff b833 	b.w	2098c <dwt_ioctl+0x154>
   21926:	2202      	movs	r2, #2
   21928:	4619      	mov	r1, r3
   2192a:	f7fc ffc7 	bl	1e8bc <dwt_read16bitoffsetreg>
   2192e:	09c0      	lsrs	r0, r0, #7
   21930:	8020      	strh	r0, [r4, #0]
   21932:	e7f1      	b.n	21918 <dwt_ioctl+0x10e0>
   21934:	2202      	movs	r2, #2
   21936:	f7fc ffc1 	bl	1e8bc <dwt_read16bitoffsetreg>
   2193a:	09c0      	lsrs	r0, r0, #7
   2193c:	8020      	strh	r0, [r4, #0]
   2193e:	e7eb      	b.n	21918 <dwt_ioctl+0x10e0>
   21940:	2c00      	cmp	r4, #0
   21942:	f000 8626 	beq.w	22592 <dwt_ioctl+0x1d5a>
   21946:	7821      	ldrb	r1, [r4, #0]
   21948:	f7fe fc48 	bl	201dc <ull_setleds>
   2194c:	2500      	movs	r5, #0
   2194e:	f7ff b81d 	b.w	2098c <dwt_ioctl+0x154>
   21952:	4611      	mov	r1, r2
   21954:	f7fe fb18 	bl	1ff88 <ull_setdwstate>
   21958:	2500      	movs	r5, #0
   2195a:	f7ff b817 	b.w	2098c <dwt_ioctl+0x154>
   2195e:	9400      	str	r4, [sp, #0]
   21960:	2304      	movs	r3, #4
   21962:	2200      	movs	r2, #0
   21964:	211c      	movs	r1, #28
   21966:	f7fc ff89 	bl	1e87c <dwt_readfromdevice>
   2196a:	2500      	movs	r5, #0
   2196c:	f7ff b80e 	b.w	2098c <dwt_ioctl+0x154>
   21970:	2c00      	cmp	r4, #0
   21972:	f000 8611 	beq.w	22598 <dwt_ioctl+0x1d60>
   21976:	2202      	movs	r2, #2
   21978:	2144      	movs	r1, #68	@ 0x44
   2197a:	f7fc ff9f 	bl	1e8bc <dwt_read16bitoffsetreg>
   2197e:	f3c0 2000 	ubfx	r0, r0, #8, #1
   21982:	7020      	strb	r0, [r4, #0]
   21984:	2500      	movs	r5, #0
   21986:	f7ff b801 	b.w	2098c <dwt_ioctl+0x154>
   2198a:	2c00      	cmp	r4, #0
   2198c:	f000 8607 	beq.w	2259e <dwt_ioctl+0x1d66>
   21990:	2200      	movs	r2, #0
   21992:	2144      	movs	r1, #68	@ 0x44
   21994:	f7fc ffa4 	bl	1e8e0 <dwt_read8bitoffsetreg>
   21998:	f000 0001 	and.w	r0, r0, #1
   2199c:	7020      	strb	r0, [r4, #0]
   2199e:	2500      	movs	r5, #0
   219a0:	f7fe bff4 	b.w	2098c <dwt_ioctl+0x154>
   219a4:	2c00      	cmp	r4, #0
   219a6:	f000 85fd 	beq.w	225a4 <dwt_ioctl+0x1d6c>
   219aa:	8862      	ldrh	r2, [r4, #2]
   219ac:	8821      	ldrh	r1, [r4, #0]
   219ae:	f7fe fb49 	bl	20044 <ull_configureframefilter>
   219b2:	2500      	movs	r5, #0
   219b4:	f7fe bfea 	b.w	2098c <dwt_ioctl+0x154>
   219b8:	9400      	str	r4, [sp, #0]
   219ba:	2308      	movs	r3, #8
   219bc:	2200      	movs	r2, #0
   219be:	2104      	movs	r1, #4
   219c0:	f7fd fb4a 	bl	1f058 <dwt_writetodevice>
   219c4:	2500      	movs	r5, #0
   219c6:	f7fe bfe1 	b.w	2098c <dwt_ioctl+0x154>
   219ca:	9400      	str	r4, [sp, #0]
   219cc:	2308      	movs	r3, #8
   219ce:	2200      	movs	r2, #0
   219d0:	2104      	movs	r1, #4
   219d2:	f7fc ff53 	bl	1e87c <dwt_readfromdevice>
   219d6:	2500      	movs	r5, #0
   219d8:	f7fe bfd8 	b.w	2098c <dwt_ioctl+0x154>
   219dc:	2c00      	cmp	r4, #0
   219de:	f000 85e4 	beq.w	225aa <dwt_ioctl+0x1d72>
   219e2:	8823      	ldrh	r3, [r4, #0]
   219e4:	2202      	movs	r2, #2
   219e6:	210c      	movs	r1, #12
   219e8:	f7fd fb93 	bl	1f112 <dwt_write16bitoffsetreg>
   219ec:	2500      	movs	r5, #0
   219ee:	f7fe bfcd 	b.w	2098c <dwt_ioctl+0x154>
   219f2:	2c00      	cmp	r4, #0
   219f4:	f000 85dc 	beq.w	225b0 <dwt_ioctl+0x1d78>
   219f8:	8823      	ldrh	r3, [r4, #0]
   219fa:	2200      	movs	r2, #0
   219fc:	210c      	movs	r1, #12
   219fe:	f7fd fb88 	bl	1f112 <dwt_write16bitoffsetreg>
   21a02:	2500      	movs	r5, #0
   21a04:	f7fe bfc2 	b.w	2098c <dwt_ioctl+0x154>
   21a08:	4621      	mov	r1, r4
   21a0a:	f7fd fb03 	bl	1f014 <ull_readrxtimestamp>
   21a0e:	2500      	movs	r5, #0
   21a10:	f7fe bfbc 	b.w	2098c <dwt_ioctl+0x154>
   21a14:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   21a16:	7bdb      	ldrb	r3, [r3, #15]
   21a18:	2b01      	cmp	r3, #1
   21a1a:	d00b      	beq.n	21a34 <dwt_ioctl+0x11fc>
   21a1c:	2b03      	cmp	r3, #3
   21a1e:	d112      	bne.n	21a46 <dwt_ioctl+0x120e>
   21a20:	9400      	str	r4, [sp, #0]
   21a22:	2305      	movs	r3, #5
   21a24:	2220      	movs	r2, #32
   21a26:	f44f 11f0 	mov.w	r1, #1966080	@ 0x1e0000
   21a2a:	f7fc ff27 	bl	1e87c <dwt_readfromdevice>
   21a2e:	2500      	movs	r5, #0
   21a30:	f7fe bfac 	b.w	2098c <dwt_ioctl+0x154>
   21a34:	9400      	str	r4, [sp, #0]
   21a36:	2305      	movs	r3, #5
   21a38:	2200      	movs	r2, #0
   21a3a:	4926      	ldr	r1, [pc, #152]	@ (21ad4 <dwt_ioctl+0x129c>)
   21a3c:	f7fc ff1e 	bl	1e87c <dwt_readfromdevice>
   21a40:	2500      	movs	r5, #0
   21a42:	f7fe bfa3 	b.w	2098c <dwt_ioctl+0x154>
   21a46:	9400      	str	r4, [sp, #0]
   21a48:	2305      	movs	r3, #5
   21a4a:	2200      	movs	r2, #0
   21a4c:	f44f 2140 	mov.w	r1, #786432	@ 0xc0000
   21a50:	f7fc ff14 	bl	1e87c <dwt_readfromdevice>
   21a54:	2500      	movs	r5, #0
   21a56:	f7fe bf99 	b.w	2098c <dwt_ioctl+0x154>
   21a5a:	2500      	movs	r5, #0
   21a5c:	f804 5b01 	strb.w	r5, [r4], #1
   21a60:	9400      	str	r4, [sp, #0]
   21a62:	2304      	movs	r3, #4
   21a64:	462a      	mov	r2, r5
   21a66:	2170      	movs	r1, #112	@ 0x70
   21a68:	f7fc ff08 	bl	1e87c <dwt_readfromdevice>
   21a6c:	f7fe bf8e 	b.w	2098c <dwt_ioctl+0x154>
   21a70:	2c00      	cmp	r4, #0
   21a72:	f000 85a0 	beq.w	225b6 <dwt_ioctl+0x1d7e>
   21a76:	2201      	movs	r2, #1
   21a78:	2164      	movs	r1, #100	@ 0x64
   21a7a:	f7fc ff09 	bl	1e890 <dwt_read32bitoffsetreg>
   21a7e:	6020      	str	r0, [r4, #0]
   21a80:	2500      	movs	r5, #0
   21a82:	f7fe bf83 	b.w	2098c <dwt_ioctl+0x154>
   21a86:	2c00      	cmp	r4, #0
   21a88:	f000 8598 	beq.w	225bc <dwt_ioctl+0x1d84>
   21a8c:	2200      	movs	r2, #0
   21a8e:	2164      	movs	r1, #100	@ 0x64
   21a90:	f7fc fefe 	bl	1e890 <dwt_read32bitoffsetreg>
   21a94:	6020      	str	r0, [r4, #0]
   21a96:	2500      	movs	r5, #0
   21a98:	f7fe bf78 	b.w	2098c <dwt_ioctl+0x154>
   21a9c:	00010030 	.word	0x00010030
   21aa0:	000f0004 	.word	0x000f0004
   21aa4:	000f0008 	.word	0x000f0008
   21aa8:	000f000c 	.word	0x000f000c
   21aac:	000f0010 	.word	0x000f0010
   21ab0:	000f0014 	.word	0x000f0014
   21ab4:	000f0018 	.word	0x000f0018
   21ab8:	000f001c 	.word	0x000f001c
   21abc:	000f0028 	.word	0x000f0028
   21ac0:	00060004 	.word	0x00060004
   21ac4:	0011001a 	.word	0x0011001a
   21ac8:	00180034 	.word	0x00180034
   21acc:	0018002c 	.word	0x0018002c
   21ad0:	000c0014 	.word	0x000c0014
   21ad4:	00180020 	.word	0x00180020
   21ad8:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   21ada:	7bdb      	ldrb	r3, [r3, #15]
   21adc:	2b01      	cmp	r3, #1
   21ade:	d00b      	beq.n	21af8 <dwt_ioctl+0x12c0>
   21ae0:	2b03      	cmp	r3, #3
   21ae2:	d112      	bne.n	21b0a <dwt_ioctl+0x12d2>
   21ae4:	9400      	str	r4, [sp, #0]
   21ae6:	2305      	movs	r3, #5
   21ae8:	2228      	movs	r2, #40	@ 0x28
   21aea:	f44f 11f0 	mov.w	r1, #1966080	@ 0x1e0000
   21aee:	f7fc fec5 	bl	1e87c <dwt_readfromdevice>
   21af2:	2500      	movs	r5, #0
   21af4:	f7fe bf4a 	b.w	2098c <dwt_ioctl+0x154>
   21af8:	9400      	str	r4, [sp, #0]
   21afa:	2305      	movs	r3, #5
   21afc:	2200      	movs	r2, #0
   21afe:	49d3      	ldr	r1, [pc, #844]	@ (21e4c <dwt_ioctl+0x1614>)
   21b00:	f7fc febc 	bl	1e87c <dwt_readfromdevice>
   21b04:	2500      	movs	r5, #0
   21b06:	f7fe bf41 	b.w	2098c <dwt_ioctl+0x154>
   21b0a:	9400      	str	r4, [sp, #0]
   21b0c:	2305      	movs	r3, #5
   21b0e:	2200      	movs	r2, #0
   21b10:	49cf      	ldr	r1, [pc, #828]	@ (21e50 <dwt_ioctl+0x1618>)
   21b12:	f7fc feb3 	bl	1e87c <dwt_readfromdevice>
   21b16:	2500      	movs	r5, #0
   21b18:	f7fe bf38 	b.w	2098c <dwt_ioctl+0x154>
   21b1c:	2c00      	cmp	r4, #0
   21b1e:	f000 8550 	beq.w	225c2 <dwt_ioctl+0x1d8a>
   21b22:	2200      	movs	r2, #0
   21b24:	211c      	movs	r1, #28
   21b26:	f7fc feb3 	bl	1e890 <dwt_read32bitoffsetreg>
   21b2a:	6020      	str	r0, [r4, #0]
   21b2c:	2500      	movs	r5, #0
   21b2e:	f7fe bf2d 	b.w	2098c <dwt_ioctl+0x154>
   21b32:	2c00      	cmp	r4, #0
   21b34:	f000 8548 	beq.w	225c8 <dwt_ioctl+0x1d90>
   21b38:	8825      	ldrh	r5, [r4, #0]
   21b3a:	6867      	ldr	r7, [r4, #4]
   21b3c:	7a23      	ldrb	r3, [r4, #8]
   21b3e:	2b00      	cmp	r3, #0
   21b40:	f000 8545 	beq.w	225ce <dwt_ioctl+0x1d96>
   21b44:	463c      	mov	r4, r7
   21b46:	eb07 0783 	add.w	r7, r7, r3, lsl #2
   21b4a:	4629      	mov	r1, r5
   21b4c:	4630      	mov	r0, r6
   21b4e:	f7fd fb3b 	bl	1f1c8 <_dwt_otpread>
   21b52:	f844 0b04 	str.w	r0, [r4], #4
   21b56:	3501      	adds	r5, #1
   21b58:	b2ad      	uxth	r5, r5
   21b5a:	42bc      	cmp	r4, r7
   21b5c:	d1f5      	bne.n	21b4a <dwt_ioctl+0x1312>
   21b5e:	2500      	movs	r5, #0
   21b60:	f7fe bf14 	b.w	2098c <dwt_ioctl+0x154>
   21b64:	2c00      	cmp	r4, #0
   21b66:	f000 8535 	beq.w	225d4 <dwt_ioctl+0x1d9c>
   21b6a:	7823      	ldrb	r3, [r4, #0]
   21b6c:	2201      	movs	r2, #1
   21b6e:	2128      	movs	r1, #40	@ 0x28
   21b70:	f7fd fa7d 	bl	1f06e <dwt_write8bitoffsetreg>
   21b74:	2500      	movs	r5, #0
   21b76:	f7fe bf09 	b.w	2098c <dwt_ioctl+0x154>
   21b7a:	f7fe fa87 	bl	2008c <ull_run_pgfcal>
   21b7e:	4605      	mov	r5, r0
   21b80:	f7fe bf04 	b.w	2098c <dwt_ioctl+0x154>
   21b84:	4611      	mov	r1, r2
   21b86:	f7fe fb77 	bl	20278 <ull_pgf_cal>
   21b8a:	4605      	mov	r5, r0
   21b8c:	f7fe befe 	b.w	2098c <dwt_ioctl+0x154>
   21b90:	2c00      	cmp	r4, #0
   21b92:	f000 8522 	beq.w	225da <dwt_ioctl+0x1da2>
   21b96:	78a5      	ldrb	r5, [r4, #2]
   21b98:	2101      	movs	r1, #1
   21b9a:	f7fd faeb 	bl	1f174 <ull_force_clocks>
   21b9e:	2100      	movs	r1, #0
   21ba0:	4630      	mov	r0, r6
   21ba2:	f7fd ff8b 	bl	1fabc <ull_enable_rf_tx>
   21ba6:	4630      	mov	r0, r6
   21ba8:	f7fd ffbc 	bl	1fb24 <ull_enable_rftx_blocks>
   21bac:	f005 033f 	and.w	r3, r5, #63	@ 0x3f
   21bb0:	2200      	movs	r2, #0
   21bb2:	49a8      	ldr	r1, [pc, #672]	@ (21e54 <dwt_ioctl+0x161c>)
   21bb4:	4630      	mov	r0, r6
   21bb6:	f7fd fa5a 	bl	1f06e <dwt_write8bitoffsetreg>
   21bba:	2301      	movs	r3, #1
   21bbc:	9300      	str	r3, [sp, #0]
   21bbe:	23ff      	movs	r3, #255	@ 0xff
   21bc0:	2200      	movs	r2, #0
   21bc2:	49a5      	ldr	r1, [pc, #660]	@ (21e58 <dwt_ioctl+0x1620>)
   21bc4:	4630      	mov	r0, r6
   21bc6:	f7fe f921 	bl	1fe0c <dwt_modify8bitoffsetreg>
   21bca:	4fa3      	ldr	r7, [pc, #652]	@ (21e58 <dwt_ioctl+0x1620>)
   21bcc:	2500      	movs	r5, #0
   21bce:	462a      	mov	r2, r5
   21bd0:	4639      	mov	r1, r7
   21bd2:	4630      	mov	r0, r6
   21bd4:	f7fc fe84 	bl	1e8e0 <dwt_read8bitoffsetreg>
   21bd8:	f010 0f01 	tst.w	r0, #1
   21bdc:	d1f7      	bne.n	21bce <dwt_ioctl+0x1396>
   21bde:	2200      	movs	r2, #0
   21be0:	499e      	ldr	r1, [pc, #632]	@ (21e5c <dwt_ioctl+0x1624>)
   21be2:	4630      	mov	r0, r6
   21be4:	f7fc fe6a 	bl	1e8bc <dwt_read16bitoffsetreg>
   21be8:	4605      	mov	r5, r0
   21bea:	4630      	mov	r0, r6
   21bec:	f7fd fe30 	bl	1f850 <ull_disable_rftx_blocks>
   21bf0:	2100      	movs	r1, #0
   21bf2:	4630      	mov	r0, r6
   21bf4:	f7fd fe36 	bl	1f864 <ull_disable_rf_tx>
   21bf8:	2105      	movs	r1, #5
   21bfa:	4630      	mov	r0, r6
   21bfc:	f7fd faba 	bl	1f174 <ull_force_clocks>
   21c00:	f3c5 050b 	ubfx	r5, r5, #0, #12
   21c04:	8025      	strh	r5, [r4, #0]
   21c06:	2500      	movs	r5, #0
   21c08:	f7fe bec0 	b.w	2098c <dwt_ioctl+0x154>
   21c0c:	2102      	movs	r1, #2
   21c0e:	f7fe f9bb 	bl	1ff88 <ull_setdwstate>
   21c12:	2101      	movs	r1, #1
   21c14:	4630      	mov	r0, r6
   21c16:	f7fe f9b7 	bl	1ff88 <ull_setdwstate>
   21c1a:	2432      	movs	r4, #50	@ 0x32
   21c1c:	f04f 0814 	mov.w	r8, #20
   21c20:	2700      	movs	r7, #0
   21c22:	2544      	movs	r5, #68	@ 0x44
   21c24:	4640      	mov	r0, r8
   21c26:	f7f9 f906 	bl	1ae36 <deca_usleep>
   21c2a:	463a      	mov	r2, r7
   21c2c:	4629      	mov	r1, r5
   21c2e:	4630      	mov	r0, r6
   21c30:	f7fc fe56 	bl	1e8e0 <dwt_read8bitoffsetreg>
   21c34:	f010 0f02 	tst.w	r0, #2
   21c38:	d105      	bne.n	21c46 <dwt_ioctl+0x140e>
   21c3a:	1e63      	subs	r3, r4, #1
   21c3c:	f013 04ff 	ands.w	r4, r3, #255	@ 0xff
   21c40:	d1f0      	bne.n	21c24 <dwt_ioctl+0x13ec>
   21c42:	2501      	movs	r5, #1
   21c44:	e000      	b.n	21c48 <dwt_ioctl+0x1410>
   21c46:	2500      	movs	r5, #0
   21c48:	426d      	negs	r5, r5
   21c4a:	f7fe be9f 	b.w	2098c <dwt_ioctl+0x154>
   21c4e:	2c00      	cmp	r4, #0
   21c50:	f000 84c6 	beq.w	225e0 <dwt_ioctl+0x1da8>
   21c54:	7823      	ldrb	r3, [r4, #0]
   21c56:	031b      	lsls	r3, r3, #12
   21c58:	f403 43e0 	and.w	r3, r3, #28672	@ 0x7000
   21c5c:	7862      	ldrb	r2, [r4, #1]
   21c5e:	2a01      	cmp	r2, #1
   21c60:	bf08      	it	eq
   21c62:	f443 7380 	orreq.w	r3, r3, #256	@ 0x100
   21c66:	9300      	str	r3, [sp, #0]
   21c68:	f46f 43e2 	mvn.w	r3, #28928	@ 0x7100
   21c6c:	2200      	movs	r2, #0
   21c6e:	497c      	ldr	r1, [pc, #496]	@ (21e60 <dwt_ioctl+0x1628>)
   21c70:	f7fd fee2 	bl	1fa38 <dwt_modify32bitoffsetreg>
   21c74:	2500      	movs	r5, #0
   21c76:	f7fe be89 	b.w	2098c <dwt_ioctl+0x154>
   21c7a:	2c00      	cmp	r4, #0
   21c7c:	f000 84b3 	beq.w	225e6 <dwt_ioctl+0x1dae>
   21c80:	6862      	ldr	r2, [r4, #4]
   21c82:	6821      	ldr	r1, [r4, #0]
   21c84:	f7fe f818 	bl	1fcb8 <ull_setgpiomode>
   21c88:	2500      	movs	r5, #0
   21c8a:	f7fe be7f 	b.w	2098c <dwt_ioctl+0x154>
   21c8e:	2c00      	cmp	r4, #0
   21c90:	f000 84ac 	beq.w	225ec <dwt_ioctl+0x1db4>
   21c94:	8823      	ldrh	r3, [r4, #0]
   21c96:	2200      	movs	r2, #0
   21c98:	4972      	ldr	r1, [pc, #456]	@ (21e64 <dwt_ioctl+0x162c>)
   21c9a:	f7fd fa3a 	bl	1f112 <dwt_write16bitoffsetreg>
   21c9e:	2500      	movs	r5, #0
   21ca0:	f7fe be74 	b.w	2098c <dwt_ioctl+0x154>
   21ca4:	2c00      	cmp	r4, #0
   21ca6:	f000 84a4 	beq.w	225f2 <dwt_ioctl+0x1dba>
   21caa:	6862      	ldr	r2, [r4, #4]
   21cac:	8821      	ldrh	r1, [r4, #0]
   21cae:	f7fe fb13 	bl	202d8 <ull_setgpiovalue>
   21cb2:	2500      	movs	r5, #0
   21cb4:	f7fe be6a 	b.w	2098c <dwt_ioctl+0x154>
   21cb8:	2c00      	cmp	r4, #0
   21cba:	f000 849d 	beq.w	225f8 <dwt_ioctl+0x1dc0>
   21cbe:	7865      	ldrb	r5, [r4, #1]
   21cc0:	7823      	ldrb	r3, [r4, #0]
   21cc2:	b18b      	cbz	r3, 21ce8 <dwt_ioctl+0x14b0>
   21cc4:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   21cc6:	2200      	movs	r2, #0
   21cc8:	73da      	strb	r2, [r3, #15]
   21cca:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   21cce:	2208      	movs	r2, #8
   21cd0:	b1e5      	cbz	r5, 21d0c <dwt_ioctl+0x14d4>
   21cd2:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
   21cd6:	9200      	str	r2, [sp, #0]
   21cd8:	2200      	movs	r2, #0
   21cda:	2110      	movs	r1, #16
   21cdc:	4630      	mov	r0, r6
   21cde:	f7fd feab 	bl	1fa38 <dwt_modify32bitoffsetreg>
   21ce2:	2500      	movs	r5, #0
   21ce4:	f7fe be52 	b.w	2098c <dwt_ioctl+0x154>
   21ce8:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   21cea:	2201      	movs	r2, #1
   21cec:	73da      	strb	r2, [r3, #15]
   21cee:	2318      	movs	r3, #24
   21cf0:	2200      	movs	r2, #0
   21cf2:	495d      	ldr	r1, [pc, #372]	@ (21e68 <dwt_ioctl+0x1630>)
   21cf4:	f7fd fb0e 	bl	1f314 <dwt_write32bitoffsetreg>
   21cf8:	23e8      	movs	r3, #232	@ 0xe8
   21cfa:	2200      	movs	r2, #0
   21cfc:	495b      	ldr	r1, [pc, #364]	@ (21e6c <dwt_ioctl+0x1634>)
   21cfe:	4630      	mov	r0, r6
   21d00:	f7fd fb08 	bl	1f314 <dwt_write32bitoffsetreg>
   21d04:	f06f 0308 	mvn.w	r3, #8
   21d08:	2200      	movs	r2, #0
   21d0a:	e7e1      	b.n	21cd0 <dwt_ioctl+0x1498>
   21d0c:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
   21d10:	e7e1      	b.n	21cd6 <dwt_ioctl+0x149e>
   21d12:	2c00      	cmp	r4, #0
   21d14:	f000 8473 	beq.w	225fe <dwt_ioctl+0x1dc6>
   21d18:	6823      	ldr	r3, [r4, #0]
   21d1a:	2200      	movs	r2, #0
   21d1c:	2130      	movs	r1, #48	@ 0x30
   21d1e:	f7fd faf9 	bl	1f314 <dwt_write32bitoffsetreg>
   21d22:	2500      	movs	r5, #0
   21d24:	f7fe be32 	b.w	2098c <dwt_ioctl+0x154>
   21d28:	2c00      	cmp	r4, #0
   21d2a:	f000 846b 	beq.w	22604 <dwt_ioctl+0x1dcc>
   21d2e:	2200      	movs	r2, #0
   21d30:	4629      	mov	r1, r5
   21d32:	f7fc fdad 	bl	1e890 <dwt_read32bitoffsetreg>
   21d36:	6020      	str	r0, [r4, #0]
   21d38:	2500      	movs	r5, #0
   21d3a:	f7fe be27 	b.w	2098c <dwt_ioctl+0x154>
   21d3e:	4623      	mov	r3, r4
   21d40:	2200      	movs	r2, #0
   21d42:	4629      	mov	r1, r5
   21d44:	f7fd fae6 	bl	1f314 <dwt_write32bitoffsetreg>
   21d48:	2500      	movs	r5, #0
   21d4a:	f7fe be1f 	b.w	2098c <dwt_ioctl+0x154>
   21d4e:	2c00      	cmp	r4, #0
   21d50:	f000 845b 	beq.w	2260a <dwt_ioctl+0x1dd2>
   21d54:	2203      	movs	r2, #3
   21d56:	4946      	ldr	r1, [pc, #280]	@ (21e70 <dwt_ioctl+0x1638>)
   21d58:	f7fc fdc2 	bl	1e8e0 <dwt_read8bitoffsetreg>
   21d5c:	f3c0 1002 	ubfx	r0, r0, #4, #3
   21d60:	7020      	strb	r0, [r4, #0]
   21d62:	2500      	movs	r5, #0
   21d64:	f7fe be12 	b.w	2098c <dwt_ioctl+0x154>
   21d68:	2c00      	cmp	r4, #0
   21d6a:	f000 8451 	beq.w	22610 <dwt_ioctl+0x1dd8>
   21d6e:	6823      	ldr	r3, [r4, #0]
   21d70:	2200      	movs	r2, #0
   21d72:	2144      	movs	r1, #68	@ 0x44
   21d74:	f7fd face 	bl	1f314 <dwt_write32bitoffsetreg>
   21d78:	2500      	movs	r5, #0
   21d7a:	f7fe be07 	b.w	2098c <dwt_ioctl+0x154>
   21d7e:	2c00      	cmp	r4, #0
   21d80:	f000 8449 	beq.w	22616 <dwt_ioctl+0x1dde>
   21d84:	8823      	ldrh	r3, [r4, #0]
   21d86:	2200      	movs	r2, #0
   21d88:	2148      	movs	r1, #72	@ 0x48
   21d8a:	f7fd f9c2 	bl	1f112 <dwt_write16bitoffsetreg>
   21d8e:	2500      	movs	r5, #0
   21d90:	f7fe bdfc 	b.w	2098c <dwt_ioctl+0x154>
   21d94:	2c00      	cmp	r4, #0
   21d96:	f000 8441 	beq.w	2261c <dwt_ioctl+0x1de4>
   21d9a:	2200      	movs	r2, #0
   21d9c:	2144      	movs	r1, #68	@ 0x44
   21d9e:	f7fc fd77 	bl	1e890 <dwt_read32bitoffsetreg>
   21da2:	6020      	str	r0, [r4, #0]
   21da4:	2500      	movs	r5, #0
   21da6:	f7fe bdf1 	b.w	2098c <dwt_ioctl+0x154>
   21daa:	2c00      	cmp	r4, #0
   21dac:	f000 8439 	beq.w	22622 <dwt_ioctl+0x1dea>
   21db0:	2200      	movs	r2, #0
   21db2:	2148      	movs	r1, #72	@ 0x48
   21db4:	f7fc fd82 	bl	1e8bc <dwt_read16bitoffsetreg>
   21db8:	6020      	str	r0, [r4, #0]
   21dba:	2500      	movs	r5, #0
   21dbc:	f7fe bde6 	b.w	2098c <dwt_ioctl+0x154>
   21dc0:	2c00      	cmp	r4, #0
   21dc2:	f000 8431 	beq.w	22628 <dwt_ioctl+0x1df0>
   21dc6:	7823      	ldrb	r3, [r4, #0]
   21dc8:	2200      	movs	r2, #0
   21dca:	492a      	ldr	r1, [pc, #168]	@ (21e74 <dwt_ioctl+0x163c>)
   21dcc:	f7fd f94f 	bl	1f06e <dwt_write8bitoffsetreg>
   21dd0:	2500      	movs	r5, #0
   21dd2:	f7fe bddb 	b.w	2098c <dwt_ioctl+0x154>
   21dd6:	2c00      	cmp	r4, #0
   21dd8:	f000 8429 	beq.w	2262e <dwt_ioctl+0x1df6>
   21ddc:	2200      	movs	r2, #0
   21dde:	2144      	movs	r1, #68	@ 0x44
   21de0:	f7fc fd7e 	bl	1e8e0 <dwt_read8bitoffsetreg>
   21de4:	7020      	strb	r0, [r4, #0]
   21de6:	2500      	movs	r5, #0
   21de8:	f7fe bdd0 	b.w	2098c <dwt_ioctl+0x154>
   21dec:	2c00      	cmp	r4, #0
   21dee:	f000 8421 	beq.w	22634 <dwt_ioctl+0x1dfc>
   21df2:	f7fd f949 	bl	1f088 <ull_getframelength>
   21df6:	6020      	str	r0, [r4, #0]
   21df8:	2500      	movs	r5, #0
   21dfa:	f7fe bdc7 	b.w	2098c <dwt_ioctl+0x154>
   21dfe:	2c00      	cmp	r4, #0
   21e00:	f000 841b 	beq.w	2263a <dwt_ioctl+0x1e02>
   21e04:	2200      	movs	r2, #0
   21e06:	491c      	ldr	r1, [pc, #112]	@ (21e78 <dwt_ioctl+0x1640>)
   21e08:	f7fc fd58 	bl	1e8bc <dwt_read16bitoffsetreg>
   21e0c:	8020      	strh	r0, [r4, #0]
   21e0e:	2500      	movs	r5, #0
   21e10:	f7fe bdbc 	b.w	2098c <dwt_ioctl+0x154>
   21e14:	2c00      	cmp	r4, #0
   21e16:	f000 8413 	beq.w	22640 <dwt_ioctl+0x1e08>
   21e1a:	2200      	movs	r2, #0
   21e1c:	4917      	ldr	r1, [pc, #92]	@ (21e7c <dwt_ioctl+0x1644>)
   21e1e:	f7fc fd37 	bl	1e890 <dwt_read32bitoffsetreg>
   21e22:	6020      	str	r0, [r4, #0]
   21e24:	2500      	movs	r5, #0
   21e26:	f7fe bdb1 	b.w	2098c <dwt_ioctl+0x154>
   21e2a:	2c00      	cmp	r4, #0
   21e2c:	f000 840b 	beq.w	22646 <dwt_ioctl+0x1e0e>
   21e30:	8823      	ldrh	r3, [r4, #0]
   21e32:	f3c3 030d 	ubfx	r3, r3, #0, #14
   21e36:	9300      	str	r3, [sp, #0]
   21e38:	f44f 4340 	mov.w	r3, #49152	@ 0xc000
   21e3c:	2200      	movs	r2, #0
   21e3e:	490f      	ldr	r1, [pc, #60]	@ (21e7c <dwt_ioctl+0x1644>)
   21e40:	f7fe f996 	bl	20170 <dwt_modify16bitoffsetreg>
   21e44:	2500      	movs	r5, #0
   21e46:	f7fe bda1 	b.w	2098c <dwt_ioctl+0x154>
   21e4a:	bf00      	nop
   21e4c:	00180028 	.word	0x00180028
   21e50:	000c0008 	.word	0x000c0008
   21e54:	0007001c 	.word	0x0007001c
   21e58:	00080010 	.word	0x00080010
   21e5c:	00080014 	.word	0x00080014
   21e60:	00070014 	.word	0x00070014
   21e64:	00050008 	.word	0x00050008
   21e68:	001f000c 	.word	0x001f000c
   21e6c:	001f0010 	.word	0x001f0010
   21e70:	00030060 	.word	0x00030060
   21e74:	00010024 	.word	0x00010024
   21e78:	0005002c 	.word	0x0005002c
   21e7c:	000e001a 	.word	0x000e001a
   21e80:	2c00      	cmp	r4, #0
   21e82:	f000 83e3 	beq.w	2264c <dwt_ioctl+0x1e14>
   21e86:	88a7      	ldrh	r7, [r4, #4]
   21e88:	68a3      	ldr	r3, [r4, #8]
   21e8a:	9309      	str	r3, [sp, #36]	@ 0x24
   21e8c:	7b21      	ldrb	r1, [r4, #12]
   21e8e:	9106      	str	r1, [sp, #24]
   21e90:	6922      	ldr	r2, [r4, #16]
   21e92:	9204      	str	r2, [sp, #16]
   21e94:	6962      	ldr	r2, [r4, #20]
   21e96:	9205      	str	r2, [sp, #20]
   21e98:	f003 0203 	and.w	r2, r3, #3
   21e9c:	f3c3 0085 	ubfx	r0, r3, #2, #6
   21ea0:	2905      	cmp	r1, #5
   21ea2:	d142      	bne.n	21f2a <dwt_ioctl+0x16f2>
   21ea4:	f5b7 7fb1 	cmp.w	r7, #354	@ 0x162
   21ea8:	bf28      	it	cs
   21eaa:	f44f 77b1 	movcs.w	r7, #354	@ 0x162
   21eae:	f8df 92e0 	ldr.w	r9, [pc, #736]	@ 22190 <dwt_ioctl+0x1958>
   21eb2:	2f04      	cmp	r7, #4
   21eb4:	d805      	bhi.n	21ec2 <dwt_ioctl+0x168a>
   21eb6:	eb09 0300 	add.w	r3, r9, r0
   21eba:	785b      	ldrb	r3, [r3, #1]
   21ebc:	3b05      	subs	r3, #5
   21ebe:	429f      	cmp	r7, r3
   21ec0:	db3b      	blt.n	21f3a <dwt_ioctl+0x1702>
   21ec2:	2a01      	cmp	r2, #1
   21ec4:	d877      	bhi.n	21fb6 <dwt_ioctl+0x177e>
   21ec6:	4bae      	ldr	r3, [pc, #696]	@ (22180 <dwt_ioctl+0x1948>)
   21ec8:	5c99      	ldrb	r1, [r3, r2]
   21eca:	463e      	mov	r6, r7
   21ecc:	42b9      	cmp	r1, r7
   21ece:	da74      	bge.n	21fba <dwt_ioctl+0x1782>
   21ed0:	1c55      	adds	r5, r2, #1
   21ed2:	fa53 f585 	uxtab	r5, r3, r5
   21ed6:	2300      	movs	r3, #0
   21ed8:	440b      	add	r3, r1
   21eda:	b29b      	uxth	r3, r3
   21edc:	3201      	adds	r2, #1
   21ede:	b2d2      	uxtb	r2, r2
   21ee0:	2a02      	cmp	r2, #2
   21ee2:	d005      	beq.n	21ef0 <dwt_ioctl+0x16b8>
   21ee4:	f815 1b01 	ldrb.w	r1, [r5], #1
   21ee8:	eba6 0c03 	sub.w	ip, r6, r3
   21eec:	4561      	cmp	r1, ip
   21eee:	dbf3      	blt.n	21ed8 <dwt_ioctl+0x16a0>
   21ef0:	429f      	cmp	r7, r3
   21ef2:	bf08      	it	eq
   21ef4:	9003      	streq	r0, [sp, #12]
   21ef6:	d064      	beq.n	21fc2 <dwt_ioctl+0x178a>
   21ef8:	f107 0805 	add.w	r8, r7, #5
   21efc:	fa1f f888 	uxth.w	r8, r8
   21f00:	2580      	movs	r5, #128	@ 0x80
   21f02:	2100      	movs	r1, #0
   21f04:	9107      	str	r1, [sp, #28]
   21f06:	9103      	str	r1, [sp, #12]
   21f08:	9108      	str	r1, [sp, #32]
   21f0a:	460e      	mov	r6, r1
   21f0c:	f04f 0b05 	mov.w	fp, #5
   21f10:	46be      	mov	lr, r7
   21f12:	455f      	cmp	r7, fp
   21f14:	bf38      	it	cc
   21f16:	46de      	movcc	lr, fp
   21f18:	f1ae 0e05 	sub.w	lr, lr, #5
   21f1c:	fa1f fe8e 	uxth.w	lr, lr
   21f20:	f8df a25c 	ldr.w	sl, [pc, #604]	@ 22180 <dwt_ioctl+0x1948>
   21f24:	46bc      	mov	ip, r7
   21f26:	460f      	mov	r7, r1
   21f28:	e3dd      	b.n	226e6 <dwt_ioctl+0x1eae>
   21f2a:	f240 1331 	movw	r3, #305	@ 0x131
   21f2e:	429f      	cmp	r7, r3
   21f30:	bf28      	it	cs
   21f32:	461f      	movcs	r7, r3
   21f34:	f8df 925c 	ldr.w	r9, [pc, #604]	@ 22194 <dwt_ioctl+0x195c>
   21f38:	e7bb      	b.n	21eb2 <dwt_ioctl+0x167a>
   21f3a:	2300      	movs	r3, #0
   21f3c:	9a05      	ldr	r2, [sp, #20]
   21f3e:	8013      	strh	r3, [r2, #0]
   21f40:	9a04      	ldr	r2, [sp, #16]
   21f42:	4611      	mov	r1, r2
   21f44:	9a09      	ldr	r2, [sp, #36]	@ 0x24
   21f46:	600a      	str	r2, [r1, #0]
   21f48:	e04a      	b.n	21fe0 <dwt_ioctl+0x17a8>
   21f4a:	2300      	movs	r3, #0
   21f4c:	9a05      	ldr	r2, [sp, #20]
   21f4e:	8013      	strh	r3, [r2, #0]
   21f50:	9b04      	ldr	r3, [sp, #16]
   21f52:	461a      	mov	r2, r3
   21f54:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   21f56:	6013      	str	r3, [r2, #0]
   21f58:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   21f5c:	e040      	b.n	21fe0 <dwt_ioctl+0x17a8>
   21f5e:	fa1f fb81 	uxth.w	fp, r1
   21f62:	9207      	str	r2, [sp, #28]
   21f64:	9003      	str	r0, [sp, #12]
   21f66:	9308      	str	r3, [sp, #32]
   21f68:	2701      	movs	r7, #1
   21f6a:	e3cd      	b.n	22708 <dwt_ioctl+0x1ed0>
   21f6c:	2f00      	cmp	r7, #0
   21f6e:	f040 83a1 	bne.w	226b4 <dwt_ioctl+0x1e7c>
   21f72:	4598      	cmp	r8, r3
   21f74:	f200 83a3 	bhi.w	226be <dwt_ioctl+0x1e86>
   21f78:	2e00      	cmp	r6, #0
   21f7a:	d038      	beq.n	21fee <dwt_ioctl+0x17b6>
   21f7c:	283f      	cmp	r0, #63	@ 0x3f
   21f7e:	f000 83c8 	beq.w	22712 <dwt_ioctl+0x1eda>
   21f82:	2700      	movs	r7, #0
   21f84:	f819 1000 	ldrb.w	r1, [r9, r0]
   21f88:	1a5b      	subs	r3, r3, r1
   21f8a:	b29b      	uxth	r3, r3
   21f8c:	1e46      	subs	r6, r0, #1
   21f8e:	f006 003f 	and.w	r0, r6, #63	@ 0x3f
   21f92:	f016 063f 	ands.w	r6, r6, #63	@ 0x3f
   21f96:	bf18      	it	ne
   21f98:	2601      	movne	r6, #1
   21f9a:	e39c      	b.n	226d6 <dwt_ioctl+0x1e9e>
   21f9c:	9906      	ldr	r1, [sp, #24]
   21f9e:	2909      	cmp	r1, #9
   21fa0:	f040 83bd 	bne.w	2271e <dwt_ioctl+0x1ee6>
   21fa4:	213f      	movs	r1, #63	@ 0x3f
   21fa6:	9103      	str	r1, [sp, #12]
   21fa8:	e00b      	b.n	21fc2 <dwt_ioctl+0x178a>
   21faa:	b2b3      	uxth	r3, r6
   21fac:	3201      	adds	r2, #1
   21fae:	b2d2      	uxtb	r2, r2
   21fb0:	213f      	movs	r1, #63	@ 0x3f
   21fb2:	9103      	str	r1, [sp, #12]
   21fb4:	e005      	b.n	21fc2 <dwt_ioctl+0x178a>
   21fb6:	2300      	movs	r3, #0
   21fb8:	e79a      	b.n	21ef0 <dwt_ioctl+0x16b8>
   21fba:	2300      	movs	r3, #0
   21fbc:	e798      	b.n	21ef0 <dwt_ioctl+0x16b8>
   21fbe:	9003      	str	r0, [sp, #12]
   21fc0:	4663      	mov	r3, ip
   21fc2:	9905      	ldr	r1, [sp, #20]
   21fc4:	800b      	strh	r3, [r1, #0]
   21fc6:	9b03      	ldr	r3, [sp, #12]
   21fc8:	ea42 0283 	orr.w	r2, r2, r3, lsl #2
   21fcc:	b2d2      	uxtb	r2, r2
   21fce:	0413      	lsls	r3, r2, #16
   21fd0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   21fd4:	4313      	orrs	r3, r2
   21fd6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   21fda:	9a04      	ldr	r2, [sp, #16]
   21fdc:	6013      	str	r3, [r2, #0]
   21fde:	2300      	movs	r3, #0
   21fe0:	6023      	str	r3, [r4, #0]
   21fe2:	2500      	movs	r5, #0
   21fe4:	f7fe bcd2 	b.w	2098c <dwt_ioctl+0x154>
   21fe8:	9a07      	ldr	r2, [sp, #28]
   21fea:	9b08      	ldr	r3, [sp, #32]
   21fec:	e7e9      	b.n	21fc2 <dwt_ioctl+0x178a>
   21fee:	9003      	str	r0, [sp, #12]
   21ff0:	e7e7      	b.n	21fc2 <dwt_ioctl+0x178a>
   21ff2:	9a07      	ldr	r2, [sp, #28]
   21ff4:	9b08      	ldr	r3, [sp, #32]
   21ff6:	e7e4      	b.n	21fc2 <dwt_ioctl+0x178a>
   21ff8:	213f      	movs	r1, #63	@ 0x3f
   21ffa:	9103      	str	r1, [sp, #12]
   21ffc:	e7e1      	b.n	21fc2 <dwt_ioctl+0x178a>
   21ffe:	2c00      	cmp	r4, #0
   22000:	f000 8327 	beq.w	22652 <dwt_ioctl+0x1e1a>
   22004:	7825      	ldrb	r5, [r4, #0]
   22006:	6862      	ldr	r2, [r4, #4]
   22008:	2a01      	cmp	r2, #1
   2200a:	bf15      	itete	ne
   2200c:	f46f 3360 	mvnne.w	r3, #229376	@ 0x38000
   22010:	f46f 43e0 	mvneq.w	r3, #28672	@ 0x7000
   22014:	27df      	movne	r7, #223	@ 0xdf
   22016:	27ef      	moveq	r7, #239	@ 0xef
   22018:	bf14      	ite	ne
   2201a:	f04f 0820 	movne.w	r8, #32
   2201e:	f04f 0810 	moveq.w	r8, #16
   22022:	2400      	movs	r4, #0
   22024:	9400      	str	r4, [sp, #0]
   22026:	4622      	mov	r2, r4
   22028:	f44f 21a0 	mov.w	r1, #327680	@ 0x50000
   2202c:	f7fd fd04 	bl	1fa38 <dwt_modify32bitoffsetreg>
   22030:	9400      	str	r4, [sp, #0]
   22032:	463b      	mov	r3, r7
   22034:	4622      	mov	r2, r4
   22036:	4953      	ldr	r1, [pc, #332]	@ (22184 <dwt_ioctl+0x194c>)
   22038:	4630      	mov	r0, r6
   2203a:	f7fd fee7 	bl	1fe0c <dwt_modify8bitoffsetreg>
   2203e:	2d01      	cmp	r5, #1
   22040:	d003      	beq.n	2204a <dwt_ioctl+0x1812>
   22042:	b165      	cbz	r5, 2205e <dwt_ioctl+0x1826>
   22044:	2500      	movs	r5, #0
   22046:	f7fe bca1 	b.w	2098c <dwt_ioctl+0x154>
   2204a:	4625      	mov	r5, r4
   2204c:	9400      	str	r4, [sp, #0]
   2204e:	463b      	mov	r3, r7
   22050:	4622      	mov	r2, r4
   22052:	494d      	ldr	r1, [pc, #308]	@ (22188 <dwt_ioctl+0x1950>)
   22054:	4630      	mov	r0, r6
   22056:	f7fd fed9 	bl	1fe0c <dwt_modify8bitoffsetreg>
   2205a:	f7fe bc97 	b.w	2098c <dwt_ioctl+0x154>
   2205e:	f8cd 8000 	str.w	r8, [sp]
   22062:	23ff      	movs	r3, #255	@ 0xff
   22064:	2200      	movs	r2, #0
   22066:	4948      	ldr	r1, [pc, #288]	@ (22188 <dwt_ioctl+0x1950>)
   22068:	4630      	mov	r0, r6
   2206a:	f7fd fecf 	bl	1fe0c <dwt_modify8bitoffsetreg>
   2206e:	f7fe bc8d 	b.w	2098c <dwt_ioctl+0x154>
   22072:	2c00      	cmp	r4, #0
   22074:	f000 82f0 	beq.w	22658 <dwt_ioctl+0x1e20>
   22078:	7822      	ldrb	r2, [r4, #0]
   2207a:	f012 0f01 	tst.w	r2, #1
   2207e:	d02d      	beq.n	220dc <dwt_ioctl+0x18a4>
   22080:	0157      	lsls	r7, r2, #5
   22082:	f007 0740 	and.w	r7, r7, #64	@ 0x40
   22086:	2440      	movs	r4, #64	@ 0x40
   22088:	f44f 13e0 	mov.w	r3, #1835008	@ 0x1c0000
   2208c:	f012 0f04 	tst.w	r2, #4
   22090:	d028      	beq.n	220e4 <dwt_ioctl+0x18ac>
   22092:	f443 0360 	orr.w	r3, r3, #14680064	@ 0xe00000
   22096:	f044 0480 	orr.w	r4, r4, #128	@ 0x80
   2209a:	0112      	lsls	r2, r2, #4
   2209c:	f002 0280 	and.w	r2, r2, #128	@ 0x80
   220a0:	4317      	orrs	r7, r2
   220a2:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
   220a6:	9200      	str	r2, [sp, #0]
   220a8:	43db      	mvns	r3, r3
   220aa:	2200      	movs	r2, #0
   220ac:	f44f 21a0 	mov.w	r1, #327680	@ 0x50000
   220b0:	4630      	mov	r0, r6
   220b2:	f7fd fcc1 	bl	1fa38 <dwt_modify32bitoffsetreg>
   220b6:	43e4      	mvns	r4, r4
   220b8:	b2a4      	uxth	r4, r4
   220ba:	2500      	movs	r5, #0
   220bc:	9500      	str	r5, [sp, #0]
   220be:	4623      	mov	r3, r4
   220c0:	462a      	mov	r2, r5
   220c2:	4930      	ldr	r1, [pc, #192]	@ (22184 <dwt_ioctl+0x194c>)
   220c4:	4630      	mov	r0, r6
   220c6:	f7fe f853 	bl	20170 <dwt_modify16bitoffsetreg>
   220ca:	9700      	str	r7, [sp, #0]
   220cc:	4623      	mov	r3, r4
   220ce:	462a      	mov	r2, r5
   220d0:	492d      	ldr	r1, [pc, #180]	@ (22188 <dwt_ioctl+0x1950>)
   220d2:	4630      	mov	r0, r6
   220d4:	f7fe f84c 	bl	20170 <dwt_modify16bitoffsetreg>
   220d8:	f7fe bc58 	b.w	2098c <dwt_ioctl+0x154>
   220dc:	2700      	movs	r7, #0
   220de:	463c      	mov	r4, r7
   220e0:	463b      	mov	r3, r7
   220e2:	e7d3      	b.n	2208c <dwt_ioctl+0x1854>
   220e4:	2200      	movs	r2, #0
   220e6:	e7de      	b.n	220a6 <dwt_ioctl+0x186e>
   220e8:	2308      	movs	r3, #8
   220ea:	9300      	str	r3, [sp, #0]
   220ec:	23ff      	movs	r3, #255	@ 0xff
   220ee:	2201      	movs	r2, #1
   220f0:	f44f 2180 	mov.w	r1, #262144	@ 0x40000
   220f4:	f7fd fe8a 	bl	1fe0c <dwt_modify8bitoffsetreg>
   220f8:	4c24      	ldr	r4, [pc, #144]	@ (2218c <dwt_ioctl+0x1954>)
   220fa:	2302      	movs	r3, #2
   220fc:	9300      	str	r3, [sp, #0]
   220fe:	23ff      	movs	r3, #255	@ 0xff
   22100:	2203      	movs	r2, #3
   22102:	4621      	mov	r1, r4
   22104:	4630      	mov	r0, r6
   22106:	f7fd fe81 	bl	1fe0c <dwt_modify8bitoffsetreg>
   2210a:	2500      	movs	r5, #0
   2210c:	9500      	str	r5, [sp, #0]
   2210e:	23f7      	movs	r3, #247	@ 0xf7
   22110:	2201      	movs	r2, #1
   22112:	f44f 2180 	mov.w	r1, #262144	@ 0x40000
   22116:	4630      	mov	r0, r6
   22118:	f7fd fe78 	bl	1fe0c <dwt_modify8bitoffsetreg>
   2211c:	9500      	str	r5, [sp, #0]
   2211e:	23fd      	movs	r3, #253	@ 0xfd
   22120:	2203      	movs	r2, #3
   22122:	4621      	mov	r1, r4
   22124:	4630      	mov	r0, r6
   22126:	f7fd fe71 	bl	1fe0c <dwt_modify8bitoffsetreg>
   2212a:	f7fe bc2f 	b.w	2098c <dwt_ioctl+0x154>
   2212e:	2c00      	cmp	r4, #0
   22130:	f000 8295 	beq.w	2265e <dwt_ioctl+0x1e26>
   22134:	8863      	ldrh	r3, [r4, #2]
   22136:	00db      	lsls	r3, r3, #3
   22138:	f403 63ff 	and.w	r3, r3, #2040	@ 0x7f8
   2213c:	7822      	ldrb	r2, [r4, #0]
   2213e:	b10a      	cbz	r2, 22144 <dwt_ioctl+0x190c>
   22140:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
   22144:	9300      	str	r3, [sp, #0]
   22146:	f24f 0307 	movw	r3, #61447	@ 0xf007
   2214a:	2200      	movs	r2, #0
   2214c:	f44f 2180 	mov.w	r1, #262144	@ 0x40000
   22150:	4630      	mov	r0, r6
   22152:	f7fe f80d 	bl	20170 <dwt_modify16bitoffsetreg>
   22156:	2500      	movs	r5, #0
   22158:	f7fe bc18 	b.w	2098c <dwt_ioctl+0x154>
   2215c:	2c00      	cmp	r4, #0
   2215e:	f000 8281 	beq.w	22664 <dwt_ioctl+0x1e2c>
   22162:	b2e3      	uxtb	r3, r4
   22164:	1c9a      	adds	r2, r3, #2
   22166:	2301      	movs	r3, #1
   22168:	4093      	lsls	r3, r2
   2216a:	3b01      	subs	r3, #1
   2216c:	b2db      	uxtb	r3, r3
   2216e:	2200      	movs	r2, #0
   22170:	f44f 3100 	mov.w	r1, #131072	@ 0x20000
   22174:	f7fc ff7b 	bl	1f06e <dwt_write8bitoffsetreg>
   22178:	2500      	movs	r5, #0
   2217a:	f7fe bc07 	b.w	2098c <dwt_ioctl+0x154>
   2217e:	bf00      	nop
   22180:	0002c320 	.word	0x0002c320
   22184:	00050008 	.word	0x00050008
   22188:	0005000c 	.word	0x0005000c
   2218c:	00110008 	.word	0x00110008
   22190:	0002c2a0 	.word	0x0002c2a0
   22194:	0002c2e0 	.word	0x0002c2e0
   22198:	2c00      	cmp	r4, #0
   2219a:	f000 8266 	beq.w	2266a <dwt_ioctl+0x1e32>
   2219e:	7ae3      	ldrb	r3, [r4, #11]
   221a0:	2b00      	cmp	r3, #0
   221a2:	f000 8265 	beq.w	22670 <dwt_ioctl+0x1e38>
   221a6:	7b63      	ldrb	r3, [r4, #13]
   221a8:	2b01      	cmp	r3, #1
   221aa:	d921      	bls.n	221f0 <dwt_ioctl+0x19b8>
   221ac:	7b22      	ldrb	r2, [r4, #12]
   221ae:	4bd7      	ldr	r3, [pc, #860]	@ (2250c <dwt_ioctl+0x1cd4>)
   221b0:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
   221b4:	0112      	lsls	r2, r2, #4
   221b6:	0ad3      	lsrs	r3, r2, #11
   221b8:	f3c2 020a 	ubfx	r2, r2, #0, #11
   221bc:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
   221c0:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
   221c4:	bf28      	it	cs
   221c6:	3301      	addcs	r3, #1
   221c8:	b29b      	uxth	r3, r3
   221ca:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
   221ce:	9300      	str	r3, [sp, #0]
   221d0:	f64f 7380 	movw	r3, #65408	@ 0xff80
   221d4:	2202      	movs	r2, #2
   221d6:	49ce      	ldr	r1, [pc, #824]	@ (22510 <dwt_ioctl+0x1cd8>)
   221d8:	4630      	mov	r0, r6
   221da:	f7fd ffc9 	bl	20170 <dwt_modify16bitoffsetreg>
   221de:	2394      	movs	r3, #148	@ 0x94
   221e0:	2200      	movs	r2, #0
   221e2:	49cc      	ldr	r1, [pc, #816]	@ (22514 <dwt_ioctl+0x1cdc>)
   221e4:	4630      	mov	r0, r6
   221e6:	f7fc ff42 	bl	1f06e <dwt_write8bitoffsetreg>
   221ea:	2500      	movs	r5, #0
   221ec:	f7fe bbce 	b.w	2098c <dwt_ioctl+0x154>
   221f0:	7b22      	ldrb	r2, [r4, #12]
   221f2:	4bc6      	ldr	r3, [pc, #792]	@ (2250c <dwt_ioctl+0x1cd4>)
   221f4:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
   221f8:	f44f 6235 	mov.w	r2, #2896	@ 0xb50
   221fc:	fb02 f203 	mul.w	r2, r2, r3
   22200:	0c93      	lsrs	r3, r2, #18
   22202:	f3c2 12ca 	ubfx	r2, r2, #7, #11
   22206:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
   2220a:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
   2220e:	bf28      	it	cs
   22210:	3301      	addcs	r3, #1
   22212:	b29b      	uxth	r3, r3
   22214:	e7d9      	b.n	221ca <dwt_ioctl+0x1992>
   22216:	2c00      	cmp	r4, #0
   22218:	f000 822d 	beq.w	22676 <dwt_ioctl+0x1e3e>
   2221c:	2200      	movs	r2, #0
   2221e:	49be      	ldr	r1, [pc, #760]	@ (22518 <dwt_ioctl+0x1ce0>)
   22220:	f7fc fb36 	bl	1e890 <dwt_read32bitoffsetreg>
   22224:	6020      	str	r0, [r4, #0]
   22226:	2500      	movs	r5, #0
   22228:	f7fe bbb0 	b.w	2098c <dwt_ioctl+0x154>
   2222c:	2c00      	cmp	r4, #0
   2222e:	f000 8225 	beq.w	2267c <dwt_ioctl+0x1e44>
   22232:	2200      	movs	r2, #0
   22234:	49b9      	ldr	r1, [pc, #740]	@ (2251c <dwt_ioctl+0x1ce4>)
   22236:	f7fc fb2b 	bl	1e890 <dwt_read32bitoffsetreg>
   2223a:	6020      	str	r0, [r4, #0]
   2223c:	2500      	movs	r5, #0
   2223e:	f7fe bba5 	b.w	2098c <dwt_ioctl+0x154>
   22242:	2c00      	cmp	r4, #0
   22244:	f000 821d 	beq.w	22682 <dwt_ioctl+0x1e4a>
   22248:	f44f 13a8 	mov.w	r3, #1376256	@ 0x150000
   2224c:	6023      	str	r3, [r4, #0]
   2224e:	2500      	movs	r5, #0
   22250:	f7fe bb9c 	b.w	2098c <dwt_ioctl+0x154>
   22254:	2c00      	cmp	r4, #0
   22256:	f000 8217 	beq.w	22688 <dwt_ioctl+0x1e50>
   2225a:	2500      	movs	r5, #0
   2225c:	950b      	str	r5, [sp, #44]	@ 0x2c
   2225e:	af10      	add	r7, sp, #64	@ 0x40
   22260:	2319      	movs	r3, #25
   22262:	f847 3d10 	str.w	r3, [r7, #-16]!
   22266:	9700      	str	r7, [sp, #0]
   22268:	2304      	movs	r3, #4
   2226a:	462a      	mov	r2, r5
   2226c:	49ac      	ldr	r1, [pc, #688]	@ (22520 <dwt_ioctl+0x1ce8>)
   2226e:	f7fc fef3 	bl	1f058 <dwt_writetodevice>
   22272:	f641 7348 	movw	r3, #8008	@ 0x1f48
   22276:	930c      	str	r3, [sp, #48]	@ 0x30
   22278:	9700      	str	r7, [sp, #0]
   2227a:	2304      	movs	r3, #4
   2227c:	462a      	mov	r2, r5
   2227e:	49a9      	ldr	r1, [pc, #676]	@ (22524 <dwt_ioctl+0x1cec>)
   22280:	4630      	mov	r0, r6
   22282:	f7fc fee9 	bl	1f058 <dwt_writetodevice>
   22286:	ab0b      	add	r3, sp, #44	@ 0x2c
   22288:	9300      	str	r3, [sp, #0]
   2228a:	2304      	movs	r3, #4
   2228c:	462a      	mov	r2, r5
   2228e:	f44f 11e8 	mov.w	r1, #1900544	@ 0x1d0000
   22292:	4630      	mov	r0, r6
   22294:	f7fc faf2 	bl	1e87c <dwt_readfromdevice>
   22298:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   2229a:	6023      	str	r3, [r4, #0]
   2229c:	f7fe bb76 	b.w	2098c <dwt_ioctl+0x154>
   222a0:	2c00      	cmp	r4, #0
   222a2:	f000 81f4 	beq.w	2268e <dwt_ioctl+0x1e56>
   222a6:	2200      	movs	r2, #0
   222a8:	499f      	ldr	r1, [pc, #636]	@ (22528 <dwt_ioctl+0x1cf0>)
   222aa:	f7fc faf1 	bl	1e890 <dwt_read32bitoffsetreg>
   222ae:	b280      	uxth	r0, r0
   222b0:	6020      	str	r0, [r4, #0]
   222b2:	2200      	movs	r2, #0
   222b4:	499d      	ldr	r1, [pc, #628]	@ (2252c <dwt_ioctl+0x1cf4>)
   222b6:	4630      	mov	r0, r6
   222b8:	f7fc faea 	bl	1e890 <dwt_read32bitoffsetreg>
   222bc:	0d43      	lsrs	r3, r0, #21
   222be:	019b      	lsls	r3, r3, #6
   222c0:	b29b      	uxth	r3, r3
   222c2:	6063      	str	r3, [r4, #4]
   222c4:	2500      	movs	r5, #0
   222c6:	f7fe bb61 	b.w	2098c <dwt_ioctl+0x154>
   222ca:	2c00      	cmp	r4, #0
   222cc:	f000 81e2 	beq.w	22694 <dwt_ioctl+0x1e5c>
   222d0:	7d63      	ldrb	r3, [r4, #21]
   222d2:	b12b      	cbz	r3, 222e0 <dwt_ioctl+0x1aa8>
   222d4:	2b01      	cmp	r3, #1
   222d6:	d037      	beq.n	22348 <dwt_ioctl+0x1b10>
   222d8:	2b02      	cmp	r3, #2
   222da:	d05e      	beq.n	2239a <dwt_ioctl+0x1b62>
   222dc:	23ff      	movs	r3, #255	@ 0xff
   222de:	e02f      	b.n	22340 <dwt_ioctl+0x1b08>
   222e0:	2200      	movs	r2, #0
   222e2:	4993      	ldr	r1, [pc, #588]	@ (22530 <dwt_ioctl+0x1cf8>)
   222e4:	f7fc fad4 	bl	1e890 <dwt_read32bitoffsetreg>
   222e8:	f3c0 000b 	ubfx	r0, r0, #0, #12
   222ec:	6020      	str	r0, [r4, #0]
   222ee:	2200      	movs	r2, #0
   222f0:	4990      	ldr	r1, [pc, #576]	@ (22534 <dwt_ioctl+0x1cfc>)
   222f2:	4630      	mov	r0, r6
   222f4:	f7fc facc 	bl	1e890 <dwt_read32bitoffsetreg>
   222f8:	f3c0 0015 	ubfx	r0, r0, #0, #22
   222fc:	6060      	str	r0, [r4, #4]
   222fe:	2200      	movs	r2, #0
   22300:	498d      	ldr	r1, [pc, #564]	@ (22538 <dwt_ioctl+0x1d00>)
   22302:	4630      	mov	r0, r6
   22304:	f7fc fac4 	bl	1e890 <dwt_read32bitoffsetreg>
   22308:	f3c0 0015 	ubfx	r0, r0, #0, #22
   2230c:	60a0      	str	r0, [r4, #8]
   2230e:	2200      	movs	r2, #0
   22310:	498a      	ldr	r1, [pc, #552]	@ (2253c <dwt_ioctl+0x1d04>)
   22312:	4630      	mov	r0, r6
   22314:	f7fc fabc 	bl	1e890 <dwt_read32bitoffsetreg>
   22318:	f3c0 0015 	ubfx	r0, r0, #0, #22
   2231c:	60e0      	str	r0, [r4, #12]
   2231e:	2200      	movs	r2, #0
   22320:	4987      	ldr	r1, [pc, #540]	@ (22540 <dwt_ioctl+0x1d08>)
   22322:	4630      	mov	r0, r6
   22324:	f7fc fab4 	bl	1e890 <dwt_read32bitoffsetreg>
   22328:	f3c0 0010 	ubfx	r0, r0, #0, #17
   2232c:	6120      	str	r0, [r4, #16]
   2232e:	2203      	movs	r2, #3
   22330:	4979      	ldr	r1, [pc, #484]	@ (22518 <dwt_ioctl+0x1ce0>)
   22332:	4630      	mov	r0, r6
   22334:	f7fc fad4 	bl	1e8e0 <dwt_read8bitoffsetreg>
   22338:	f3c0 1002 	ubfx	r0, r0, #4, #3
   2233c:	7520      	strb	r0, [r4, #20]
   2233e:	2300      	movs	r3, #0
   22340:	75a3      	strb	r3, [r4, #22]
   22342:	2500      	movs	r5, #0
   22344:	f7fe bb22 	b.w	2098c <dwt_ioctl+0x154>
   22348:	2200      	movs	r2, #0
   2234a:	497e      	ldr	r1, [pc, #504]	@ (22544 <dwt_ioctl+0x1d0c>)
   2234c:	f7fc faa0 	bl	1e890 <dwt_read32bitoffsetreg>
   22350:	f3c0 000b 	ubfx	r0, r0, #0, #12
   22354:	6020      	str	r0, [r4, #0]
   22356:	2200      	movs	r2, #0
   22358:	497b      	ldr	r1, [pc, #492]	@ (22548 <dwt_ioctl+0x1d10>)
   2235a:	4630      	mov	r0, r6
   2235c:	f7fc fa98 	bl	1e890 <dwt_read32bitoffsetreg>
   22360:	f3c0 0015 	ubfx	r0, r0, #0, #22
   22364:	6060      	str	r0, [r4, #4]
   22366:	2200      	movs	r2, #0
   22368:	4978      	ldr	r1, [pc, #480]	@ (2254c <dwt_ioctl+0x1d14>)
   2236a:	4630      	mov	r0, r6
   2236c:	f7fc fa90 	bl	1e890 <dwt_read32bitoffsetreg>
   22370:	f3c0 0015 	ubfx	r0, r0, #0, #22
   22374:	60a0      	str	r0, [r4, #8]
   22376:	2200      	movs	r2, #0
   22378:	f44f 2150 	mov.w	r1, #851968	@ 0xd0000
   2237c:	4630      	mov	r0, r6
   2237e:	f7fc fa87 	bl	1e890 <dwt_read32bitoffsetreg>
   22382:	f3c0 0015 	ubfx	r0, r0, #0, #22
   22386:	60e0      	str	r0, [r4, #12]
   22388:	2200      	movs	r2, #0
   2238a:	4971      	ldr	r1, [pc, #452]	@ (22550 <dwt_ioctl+0x1d18>)
   2238c:	4630      	mov	r0, r6
   2238e:	f7fc fa7f 	bl	1e890 <dwt_read32bitoffsetreg>
   22392:	f3c0 0013 	ubfx	r0, r0, #0, #20
   22396:	6120      	str	r0, [r4, #16]
   22398:	e7c9      	b.n	2232e <dwt_ioctl+0x1af6>
   2239a:	2200      	movs	r2, #0
   2239c:	496d      	ldr	r1, [pc, #436]	@ (22554 <dwt_ioctl+0x1d1c>)
   2239e:	f7fc fa77 	bl	1e890 <dwt_read32bitoffsetreg>
   223a2:	f3c0 000b 	ubfx	r0, r0, #0, #12
   223a6:	6020      	str	r0, [r4, #0]
   223a8:	2200      	movs	r2, #0
   223aa:	496b      	ldr	r1, [pc, #428]	@ (22558 <dwt_ioctl+0x1d20>)
   223ac:	4630      	mov	r0, r6
   223ae:	f7fc fa6f 	bl	1e890 <dwt_read32bitoffsetreg>
   223b2:	f3c0 0015 	ubfx	r0, r0, #0, #22
   223b6:	6060      	str	r0, [r4, #4]
   223b8:	2200      	movs	r2, #0
   223ba:	4968      	ldr	r1, [pc, #416]	@ (2255c <dwt_ioctl+0x1d24>)
   223bc:	4630      	mov	r0, r6
   223be:	f7fc fa67 	bl	1e890 <dwt_read32bitoffsetreg>
   223c2:	f3c0 0015 	ubfx	r0, r0, #0, #22
   223c6:	60a0      	str	r0, [r4, #8]
   223c8:	2200      	movs	r2, #0
   223ca:	4965      	ldr	r1, [pc, #404]	@ (22560 <dwt_ioctl+0x1d28>)
   223cc:	4630      	mov	r0, r6
   223ce:	f7fc fa5f 	bl	1e890 <dwt_read32bitoffsetreg>
   223d2:	f3c0 0015 	ubfx	r0, r0, #0, #22
   223d6:	60e0      	str	r0, [r4, #12]
   223d8:	2200      	movs	r2, #0
   223da:	4962      	ldr	r1, [pc, #392]	@ (22564 <dwt_ioctl+0x1d2c>)
   223dc:	4630      	mov	r0, r6
   223de:	f7fc fa57 	bl	1e890 <dwt_read32bitoffsetreg>
   223e2:	f3c0 0013 	ubfx	r0, r0, #0, #20
   223e6:	6120      	str	r0, [r4, #16]
   223e8:	e7a1      	b.n	2232e <dwt_ioctl+0x1af6>
   223ea:	2500      	movs	r5, #0
   223ec:	f7fe bace 	b.w	2098c <dwt_ioctl+0x154>
   223f0:	2500      	movs	r5, #0
   223f2:	f7fe bacb 	b.w	2098c <dwt_ioctl+0x154>
   223f6:	2500      	movs	r5, #0
   223f8:	f7fe bac8 	b.w	2098c <dwt_ioctl+0x154>
   223fc:	2500      	movs	r5, #0
   223fe:	f7fe bac5 	b.w	2098c <dwt_ioctl+0x154>
   22402:	2500      	movs	r5, #0
   22404:	f7fe bac2 	b.w	2098c <dwt_ioctl+0x154>
   22408:	2500      	movs	r5, #0
   2240a:	f7fe babf 	b.w	2098c <dwt_ioctl+0x154>
   2240e:	2500      	movs	r5, #0
   22410:	f7fe babc 	b.w	2098c <dwt_ioctl+0x154>
   22414:	2500      	movs	r5, #0
   22416:	f7fe bab9 	b.w	2098c <dwt_ioctl+0x154>
   2241a:	2500      	movs	r5, #0
   2241c:	f7fe bab6 	b.w	2098c <dwt_ioctl+0x154>
   22420:	2500      	movs	r5, #0
   22422:	f7fe bab3 	b.w	2098c <dwt_ioctl+0x154>
   22426:	2500      	movs	r5, #0
   22428:	f7fe bab0 	b.w	2098c <dwt_ioctl+0x154>
   2242c:	2500      	movs	r5, #0
   2242e:	f7fe baad 	b.w	2098c <dwt_ioctl+0x154>
   22432:	2500      	movs	r5, #0
   22434:	f7fe baaa 	b.w	2098c <dwt_ioctl+0x154>
   22438:	2500      	movs	r5, #0
   2243a:	f7fe baa7 	b.w	2098c <dwt_ioctl+0x154>
   2243e:	2500      	movs	r5, #0
   22440:	f7fe baa4 	b.w	2098c <dwt_ioctl+0x154>
   22444:	2500      	movs	r5, #0
   22446:	f7fe baa1 	b.w	2098c <dwt_ioctl+0x154>
   2244a:	2500      	movs	r5, #0
   2244c:	f7fe ba9e 	b.w	2098c <dwt_ioctl+0x154>
   22450:	2500      	movs	r5, #0
   22452:	f7fe ba9b 	b.w	2098c <dwt_ioctl+0x154>
   22456:	2500      	movs	r5, #0
   22458:	f7fe ba98 	b.w	2098c <dwt_ioctl+0x154>
   2245c:	2500      	movs	r5, #0
   2245e:	f7fe ba95 	b.w	2098c <dwt_ioctl+0x154>
   22462:	2500      	movs	r5, #0
   22464:	f7fe ba92 	b.w	2098c <dwt_ioctl+0x154>
   22468:	2500      	movs	r5, #0
   2246a:	f7fe ba8f 	b.w	2098c <dwt_ioctl+0x154>
   2246e:	2500      	movs	r5, #0
   22470:	f7fe ba8c 	b.w	2098c <dwt_ioctl+0x154>
   22474:	2500      	movs	r5, #0
   22476:	f7fe ba89 	b.w	2098c <dwt_ioctl+0x154>
   2247a:	2500      	movs	r5, #0
   2247c:	f7fe ba86 	b.w	2098c <dwt_ioctl+0x154>
   22480:	2500      	movs	r5, #0
   22482:	f7fe ba83 	b.w	2098c <dwt_ioctl+0x154>
   22486:	2500      	movs	r5, #0
   22488:	f7fe ba80 	b.w	2098c <dwt_ioctl+0x154>
   2248c:	2500      	movs	r5, #0
   2248e:	f7fe ba7d 	b.w	2098c <dwt_ioctl+0x154>
   22492:	2500      	movs	r5, #0
   22494:	f7fe ba7a 	b.w	2098c <dwt_ioctl+0x154>
   22498:	2500      	movs	r5, #0
   2249a:	f7fe ba77 	b.w	2098c <dwt_ioctl+0x154>
   2249e:	2500      	movs	r5, #0
   224a0:	f7fe ba74 	b.w	2098c <dwt_ioctl+0x154>
   224a4:	2500      	movs	r5, #0
   224a6:	f7fe ba71 	b.w	2098c <dwt_ioctl+0x154>
   224aa:	2500      	movs	r5, #0
   224ac:	f7fe ba6e 	b.w	2098c <dwt_ioctl+0x154>
   224b0:	2500      	movs	r5, #0
   224b2:	f7fe ba6b 	b.w	2098c <dwt_ioctl+0x154>
   224b6:	2500      	movs	r5, #0
   224b8:	f7fe ba68 	b.w	2098c <dwt_ioctl+0x154>
   224bc:	2500      	movs	r5, #0
   224be:	f7fe ba65 	b.w	2098c <dwt_ioctl+0x154>
   224c2:	2500      	movs	r5, #0
   224c4:	f7fe ba62 	b.w	2098c <dwt_ioctl+0x154>
   224c8:	2500      	movs	r5, #0
   224ca:	f7fe ba5f 	b.w	2098c <dwt_ioctl+0x154>
   224ce:	2500      	movs	r5, #0
   224d0:	f7fe ba5c 	b.w	2098c <dwt_ioctl+0x154>
   224d4:	2500      	movs	r5, #0
   224d6:	f7fe ba59 	b.w	2098c <dwt_ioctl+0x154>
   224da:	2500      	movs	r5, #0
   224dc:	f7fe ba56 	b.w	2098c <dwt_ioctl+0x154>
   224e0:	2500      	movs	r5, #0
   224e2:	f7fe ba53 	b.w	2098c <dwt_ioctl+0x154>
   224e6:	2500      	movs	r5, #0
   224e8:	f7fe ba50 	b.w	2098c <dwt_ioctl+0x154>
   224ec:	2500      	movs	r5, #0
   224ee:	f7fe ba4d 	b.w	2098c <dwt_ioctl+0x154>
   224f2:	2500      	movs	r5, #0
   224f4:	f7fe ba4a 	b.w	2098c <dwt_ioctl+0x154>
   224f8:	2500      	movs	r5, #0
   224fa:	f7fe ba47 	b.w	2098c <dwt_ioctl+0x154>
   224fe:	2500      	movs	r5, #0
   22500:	f7fe ba44 	b.w	2098c <dwt_ioctl+0x154>
   22504:	2500      	movs	r5, #0
   22506:	f7fe ba41 	b.w	2098c <dwt_ioctl+0x154>
   2250a:	bf00      	nop
   2250c:	0002c35c 	.word	0x0002c35c
   22510:	000e0012 	.word	0x000e0012
   22514:	000e0016 	.word	0x000e0016
   22518:	00030060 	.word	0x00030060
   2251c:	000f0048 	.word	0x000f0048
   22520:	001f0004 	.word	0x001f0004
   22524:	001f0008 	.word	0x001f0008
   22528:	000c0048 	.word	0x000c0048
   2252c:	000c0028 	.word	0x000c0028
   22530:	000c0058 	.word	0x000c0058
   22534:	000c0030 	.word	0x000c0030
   22538:	000c0034 	.word	0x000c0034
   2253c:	000c0038 	.word	0x000c0038
   22540:	000c002c 	.word	0x000c002c
   22544:	000d0020 	.word	0x000d0020
   22548:	000c0064 	.word	0x000c0064
   2254c:	000c0068 	.word	0x000c0068
   22550:	000c0060 	.word	0x000c0060
   22554:	000d0068 	.word	0x000d0068
   22558:	000d0040 	.word	0x000d0040
   2255c:	000d0044 	.word	0x000d0044
   22560:	000d0048 	.word	0x000d0048
   22564:	000d003c 	.word	0x000d003c
   22568:	2500      	movs	r5, #0
   2256a:	f7fe ba0f 	b.w	2098c <dwt_ioctl+0x154>
   2256e:	2500      	movs	r5, #0
   22570:	f7fe ba0c 	b.w	2098c <dwt_ioctl+0x154>
   22574:	2500      	movs	r5, #0
   22576:	f7fe ba09 	b.w	2098c <dwt_ioctl+0x154>
   2257a:	2500      	movs	r5, #0
   2257c:	f7fe ba06 	b.w	2098c <dwt_ioctl+0x154>
   22580:	2500      	movs	r5, #0
   22582:	f7fe ba03 	b.w	2098c <dwt_ioctl+0x154>
   22586:	2500      	movs	r5, #0
   22588:	f7fe ba00 	b.w	2098c <dwt_ioctl+0x154>
   2258c:	2500      	movs	r5, #0
   2258e:	f7fe b9fd 	b.w	2098c <dwt_ioctl+0x154>
   22592:	2500      	movs	r5, #0
   22594:	f7fe b9fa 	b.w	2098c <dwt_ioctl+0x154>
   22598:	2500      	movs	r5, #0
   2259a:	f7fe b9f7 	b.w	2098c <dwt_ioctl+0x154>
   2259e:	2500      	movs	r5, #0
   225a0:	f7fe b9f4 	b.w	2098c <dwt_ioctl+0x154>
   225a4:	2500      	movs	r5, #0
   225a6:	f7fe b9f1 	b.w	2098c <dwt_ioctl+0x154>
   225aa:	2500      	movs	r5, #0
   225ac:	f7fe b9ee 	b.w	2098c <dwt_ioctl+0x154>
   225b0:	2500      	movs	r5, #0
   225b2:	f7fe b9eb 	b.w	2098c <dwt_ioctl+0x154>
   225b6:	2500      	movs	r5, #0
   225b8:	f7fe b9e8 	b.w	2098c <dwt_ioctl+0x154>
   225bc:	2500      	movs	r5, #0
   225be:	f7fe b9e5 	b.w	2098c <dwt_ioctl+0x154>
   225c2:	2500      	movs	r5, #0
   225c4:	f7fe b9e2 	b.w	2098c <dwt_ioctl+0x154>
   225c8:	2500      	movs	r5, #0
   225ca:	f7fe b9df 	b.w	2098c <dwt_ioctl+0x154>
   225ce:	2500      	movs	r5, #0
   225d0:	f7fe b9dc 	b.w	2098c <dwt_ioctl+0x154>
   225d4:	2500      	movs	r5, #0
   225d6:	f7fe b9d9 	b.w	2098c <dwt_ioctl+0x154>
   225da:	2500      	movs	r5, #0
   225dc:	f7fe b9d6 	b.w	2098c <dwt_ioctl+0x154>
   225e0:	2500      	movs	r5, #0
   225e2:	f7fe b9d3 	b.w	2098c <dwt_ioctl+0x154>
   225e6:	2500      	movs	r5, #0
   225e8:	f7fe b9d0 	b.w	2098c <dwt_ioctl+0x154>
   225ec:	2500      	movs	r5, #0
   225ee:	f7fe b9cd 	b.w	2098c <dwt_ioctl+0x154>
   225f2:	2500      	movs	r5, #0
   225f4:	f7fe b9ca 	b.w	2098c <dwt_ioctl+0x154>
   225f8:	2500      	movs	r5, #0
   225fa:	f7fe b9c7 	b.w	2098c <dwt_ioctl+0x154>
   225fe:	2500      	movs	r5, #0
   22600:	f7fe b9c4 	b.w	2098c <dwt_ioctl+0x154>
   22604:	2500      	movs	r5, #0
   22606:	f7fe b9c1 	b.w	2098c <dwt_ioctl+0x154>
   2260a:	2500      	movs	r5, #0
   2260c:	f7fe b9be 	b.w	2098c <dwt_ioctl+0x154>
   22610:	2500      	movs	r5, #0
   22612:	f7fe b9bb 	b.w	2098c <dwt_ioctl+0x154>
   22616:	2500      	movs	r5, #0
   22618:	f7fe b9b8 	b.w	2098c <dwt_ioctl+0x154>
   2261c:	2500      	movs	r5, #0
   2261e:	f7fe b9b5 	b.w	2098c <dwt_ioctl+0x154>
   22622:	2500      	movs	r5, #0
   22624:	f7fe b9b2 	b.w	2098c <dwt_ioctl+0x154>
   22628:	2500      	movs	r5, #0
   2262a:	f7fe b9af 	b.w	2098c <dwt_ioctl+0x154>
   2262e:	2500      	movs	r5, #0
   22630:	f7fe b9ac 	b.w	2098c <dwt_ioctl+0x154>
   22634:	2500      	movs	r5, #0
   22636:	f7fe b9a9 	b.w	2098c <dwt_ioctl+0x154>
   2263a:	2500      	movs	r5, #0
   2263c:	f7fe b9a6 	b.w	2098c <dwt_ioctl+0x154>
   22640:	2500      	movs	r5, #0
   22642:	f7fe b9a3 	b.w	2098c <dwt_ioctl+0x154>
   22646:	2500      	movs	r5, #0
   22648:	f7fe b9a0 	b.w	2098c <dwt_ioctl+0x154>
   2264c:	2500      	movs	r5, #0
   2264e:	f7fe b99d 	b.w	2098c <dwt_ioctl+0x154>
   22652:	2500      	movs	r5, #0
   22654:	f7fe b99a 	b.w	2098c <dwt_ioctl+0x154>
   22658:	2500      	movs	r5, #0
   2265a:	f7fe b997 	b.w	2098c <dwt_ioctl+0x154>
   2265e:	2500      	movs	r5, #0
   22660:	f7fe b994 	b.w	2098c <dwt_ioctl+0x154>
   22664:	2500      	movs	r5, #0
   22666:	f7fe b991 	b.w	2098c <dwt_ioctl+0x154>
   2266a:	2500      	movs	r5, #0
   2266c:	f7fe b98e 	b.w	2098c <dwt_ioctl+0x154>
   22670:	2500      	movs	r5, #0
   22672:	f7fe b98b 	b.w	2098c <dwt_ioctl+0x154>
   22676:	2500      	movs	r5, #0
   22678:	f7fe b988 	b.w	2098c <dwt_ioctl+0x154>
   2267c:	2500      	movs	r5, #0
   2267e:	f7fe b985 	b.w	2098c <dwt_ioctl+0x154>
   22682:	2500      	movs	r5, #0
   22684:	f7fe b982 	b.w	2098c <dwt_ioctl+0x154>
   22688:	2500      	movs	r5, #0
   2268a:	f7fe b97f 	b.w	2098c <dwt_ioctl+0x154>
   2268e:	2500      	movs	r5, #0
   22690:	f7fe b97c 	b.w	2098c <dwt_ioctl+0x154>
   22694:	2500      	movs	r5, #0
   22696:	f7fe b979 	b.w	2098c <dwt_ioctl+0x154>
   2269a:	f899 3011 	ldrb.w	r3, [r9, #17]
   2269e:	1e5a      	subs	r2, r3, #1
   226a0:	b2d2      	uxtb	r2, r2
   226a2:	2a01      	cmp	r2, #1
   226a4:	f67f a801 	bls.w	216aa <dwt_ioctl+0xe72>
   226a8:	2202      	movs	r2, #2
   226aa:	f7fe bf88 	b.w	215be <dwt_ioctl+0xd86>
   226ae:	2f00      	cmp	r7, #0
   226b0:	f43f ac62 	beq.w	21f78 <dwt_ioctl+0x1740>
   226b4:	f819 1000 	ldrb.w	r1, [r9, r0]
   226b8:	1a5b      	subs	r3, r3, r1
   226ba:	b29b      	uxth	r3, r3
   226bc:	e481      	b.n	21fc2 <dwt_ioctl+0x178a>
   226be:	283f      	cmp	r0, #63	@ 0x3f
   226c0:	d027      	beq.n	22712 <dwt_ioctl+0x1eda>
   226c2:	2e00      	cmp	r6, #0
   226c4:	f47f ac5e 	bne.w	21f84 <dwt_ioctl+0x174c>
   226c8:	3001      	adds	r0, #1
   226ca:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
   226ce:	f819 1000 	ldrb.w	r1, [r9, r0]
   226d2:	440b      	add	r3, r1
   226d4:	b29b      	uxth	r3, r3
   226d6:	459c      	cmp	ip, r3
   226d8:	f43f ac71 	beq.w	21fbe <dwt_ioctl+0x1786>
   226dc:	3d01      	subs	r5, #1
   226de:	f015 05ff 	ands.w	r5, r5, #255	@ 0xff
   226e2:	f43f ac32 	beq.w	21f4a <dwt_ioctl+0x1712>
   226e6:	459e      	cmp	lr, r3
   226e8:	f4bf ac40 	bcs.w	21f6c <dwt_ioctl+0x1734>
   226ec:	4598      	cmp	r8, r3
   226ee:	d9de      	bls.n	226ae <dwt_ioctl+0x1e76>
   226f0:	ebac 0103 	sub.w	r1, ip, r3
   226f4:	b209      	sxth	r1, r1
   226f6:	2900      	cmp	r1, #0
   226f8:	bfb8      	it	lt
   226fa:	4249      	neglt	r1, r1
   226fc:	4559      	cmp	r1, fp
   226fe:	f77f ac2e 	ble.w	21f5e <dwt_ioctl+0x1726>
   22702:	2f00      	cmp	r7, #0
   22704:	f47f ac70 	bne.w	21fe8 <dwt_ioctl+0x17b0>
   22708:	283f      	cmp	r0, #63	@ 0x3f
   2270a:	d1da      	bne.n	226c2 <dwt_ioctl+0x1e8a>
   2270c:	2f00      	cmp	r7, #0
   2270e:	f47f ac70 	bne.w	21ff2 <dwt_ioctl+0x17ba>
   22712:	2a03      	cmp	r2, #3
   22714:	f43f ac70 	beq.w	21ff8 <dwt_ioctl+0x17c0>
   22718:	2a02      	cmp	r2, #2
   2271a:	f43f ac3f 	beq.w	21f9c <dwt_ioctl+0x1764>
   2271e:	f81a 1002 	ldrb.w	r1, [sl, r2]
   22722:	185e      	adds	r6, r3, r1
   22724:	4566      	cmp	r6, ip
   22726:	f77f ac40 	ble.w	21faa <dwt_ioctl+0x1772>
   2272a:	440b      	add	r3, r1
   2272c:	b29b      	uxth	r3, r3
   2272e:	3201      	adds	r2, #1
   22730:	b2d2      	uxtb	r2, r2
   22732:	2700      	movs	r7, #0
   22734:	e426      	b.n	21f84 <dwt_ioctl+0x174c>
   22736:	bf00      	nop

00022738 <ull_initialise>:
   22738:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   2273c:	4605      	mov	r5, r0
   2273e:	460e      	mov	r6, r1
   22740:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   22742:	2b00      	cmp	r3, #0
   22744:	d05c      	beq.n	22800 <ull_initialise+0xc8>
   22746:	6d2c      	ldr	r4, [r5, #80]	@ 0x50
   22748:	2300      	movs	r3, #0
   2274a:	73e3      	strb	r3, [r4, #15]
   2274c:	2202      	movs	r2, #2
   2274e:	8262      	strh	r2, [r4, #18]
   22750:	75a3      	strb	r3, [r4, #22]
   22752:	75e3      	strb	r3, [r4, #23]
   22754:	7423      	strb	r3, [r4, #16]
   22756:	72a3      	strb	r3, [r4, #10]
   22758:	72e3      	strb	r3, [r4, #11]
   2275a:	2104      	movs	r1, #4
   2275c:	4628      	mov	r0, r5
   2275e:	f7fc fd33 	bl	1f1c8 <_dwt_otpread>
   22762:	4607      	mov	r7, r0
   22764:	2105      	movs	r1, #5
   22766:	4628      	mov	r0, r5
   22768:	f7fc fd2e 	bl	1f1c8 <_dwt_otpread>
   2276c:	4680      	mov	r8, r0
   2276e:	210a      	movs	r1, #10
   22770:	4628      	mov	r0, r5
   22772:	f7fc fd29 	bl	1f1c8 <_dwt_otpread>
   22776:	f3c0 4004 	ubfx	r0, r0, #16, #5
   2277a:	7220      	strb	r0, [r4, #8]
   2277c:	b127      	cbz	r7, 22788 <ull_initialise+0x50>
   2277e:	f1b8 0f00 	cmp.w	r8, #0
   22782:	d001      	beq.n	22788 <ull_initialise+0x50>
   22784:	2800      	cmp	r0, #0
   22786:	d140      	bne.n	2280a <ull_initialise+0xd2>
   22788:	2120      	movs	r1, #32
   2278a:	4628      	mov	r0, r5
   2278c:	f7fc fd1c 	bl	1f1c8 <_dwt_otpread>
   22790:	4b2f      	ldr	r3, [pc, #188]	@ (22850 <ull_initialise+0x118>)
   22792:	4298      	cmp	r0, r3
   22794:	bf0c      	ite	eq
   22796:	2301      	moveq	r3, #1
   22798:	2300      	movne	r3, #0
   2279a:	7263      	strb	r3, [r4, #9]
   2279c:	f016 0f10 	tst.w	r6, #16
   227a0:	d137      	bne.n	22812 <ull_initialise+0xda>
   227a2:	f016 0f20 	tst.w	r6, #32
   227a6:	d13a      	bne.n	2281e <ull_initialise+0xe6>
   227a8:	f016 0f40 	tst.w	r6, #64	@ 0x40
   227ac:	d13d      	bne.n	2282a <ull_initialise+0xf2>
   227ae:	f016 0f80 	tst.w	r6, #128	@ 0x80
   227b2:	d141      	bne.n	22838 <ull_initialise+0x100>
   227b4:	7ae3      	ldrb	r3, [r4, #11]
   227b6:	b90b      	cbnz	r3, 227bc <ull_initialise+0x84>
   227b8:	2385      	movs	r3, #133	@ 0x85
   227ba:	72e3      	strb	r3, [r4, #11]
   227bc:	7aa3      	ldrb	r3, [r4, #10]
   227be:	b90b      	cbnz	r3, 227c4 <ull_initialise+0x8c>
   227c0:	2374      	movs	r3, #116	@ 0x74
   227c2:	72a3      	strb	r3, [r4, #10]
   227c4:	211f      	movs	r1, #31
   227c6:	4628      	mov	r0, r5
   227c8:	f7fc fcfe 	bl	1f1c8 <_dwt_otpread>
   227cc:	7360      	strb	r0, [r4, #13]
   227ce:	211e      	movs	r1, #30
   227d0:	4628      	mov	r0, r5
   227d2:	f7fc fcf9 	bl	1f1c8 <_dwt_otpread>
   227d6:	f010 003f 	ands.w	r0, r0, #63	@ 0x3f
   227da:	bf12      	itee	ne
   227dc:	73a0      	strbne	r0, [r4, #14]
   227de:	232e      	moveq	r3, #46	@ 0x2e
   227e0:	73a3      	strbeq	r3, [r4, #14]
   227e2:	7ba3      	ldrb	r3, [r4, #14]
   227e4:	2200      	movs	r2, #0
   227e6:	491b      	ldr	r1, [pc, #108]	@ (22854 <ull_initialise+0x11c>)
   227e8:	4628      	mov	r0, r5
   227ea:	f7fc fc40 	bl	1f06e <dwt_write8bitoffsetreg>
   227ee:	2135      	movs	r1, #53	@ 0x35
   227f0:	4628      	mov	r0, r5
   227f2:	f7fc fce9 	bl	1f1c8 <_dwt_otpread>
   227f6:	4603      	mov	r3, r0
   227f8:	bb20      	cbnz	r0, 22844 <ull_initialise+0x10c>
   227fa:	2000      	movs	r0, #0
   227fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   22800:	202c      	movs	r0, #44	@ 0x2c
   22802:	f7f8 fd1d 	bl	1b240 <malloc>
   22806:	6528      	str	r0, [r5, #80]	@ 0x50
   22808:	e79d      	b.n	22746 <ull_initialise+0xe>
   2280a:	4628      	mov	r0, r5
   2280c:	f7fd fcca 	bl	201a4 <_dwt_prog_ldo_and_bias_tune>
   22810:	e7ba      	b.n	22788 <ull_initialise+0x50>
   22812:	2106      	movs	r1, #6
   22814:	4628      	mov	r0, r5
   22816:	f7fc fcd7 	bl	1f1c8 <_dwt_otpread>
   2281a:	6020      	str	r0, [r4, #0]
   2281c:	e7c1      	b.n	227a2 <ull_initialise+0x6a>
   2281e:	2107      	movs	r1, #7
   22820:	4628      	mov	r0, r5
   22822:	f7fc fcd1 	bl	1f1c8 <_dwt_otpread>
   22826:	6060      	str	r0, [r4, #4]
   22828:	e7be      	b.n	227a8 <ull_initialise+0x70>
   2282a:	2108      	movs	r1, #8
   2282c:	4628      	mov	r0, r5
   2282e:	f7fc fccb 	bl	1f1c8 <_dwt_otpread>
   22832:	0c00      	lsrs	r0, r0, #16
   22834:	72a0      	strb	r0, [r4, #10]
   22836:	e7ba      	b.n	227ae <ull_initialise+0x76>
   22838:	2109      	movs	r1, #9
   2283a:	4628      	mov	r0, r5
   2283c:	f7fc fcc4 	bl	1f1c8 <_dwt_otpread>
   22840:	72e0      	strb	r0, [r4, #11]
   22842:	e7b7      	b.n	227b4 <ull_initialise+0x7c>
   22844:	2200      	movs	r2, #0
   22846:	4904      	ldr	r1, [pc, #16]	@ (22858 <ull_initialise+0x120>)
   22848:	4628      	mov	r0, r5
   2284a:	f7fc fd63 	bl	1f314 <dwt_write32bitoffsetreg>
   2284e:	e7d4      	b.n	227fa <ull_initialise+0xc2>
   22850:	10000240 	.word	0x10000240
   22854:	00090014 	.word	0x00090014
   22858:	00090004 	.word	0x00090004

0002285c <_init>:
   2285c:	b5f0      	push	{r4, r5, r6, r7, lr}
   2285e:	b085      	sub	sp, #20
   22860:	4604      	mov	r4, r0
   22862:	6b43      	ldr	r3, [r0, #52]	@ 0x34
   22864:	6819      	ldr	r1, [r3, #0]
   22866:	f7ff ff67 	bl	22738 <ull_initialise>
   2286a:	4606      	mov	r6, r0
   2286c:	6823      	ldr	r3, [r4, #0]
   2286e:	691b      	ldr	r3, [r3, #16]
   22870:	4798      	blx	r3
   22872:	ab03      	add	r3, sp, #12
   22874:	2200      	movs	r2, #0
   22876:	4611      	mov	r1, r2
   22878:	4620      	mov	r0, r4
   2287a:	f7fd ffdd 	bl	20838 <dwt_ioctl>
   2287e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   22880:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
   22882:	6819      	ldr	r1, [r3, #0]
   22884:	4620      	mov	r0, r4
   22886:	f7fd fdad 	bl	203e4 <ull_configure>
   2288a:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   2288c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
   2288e:	6859      	ldr	r1, [r3, #4]
   22890:	4620      	mov	r0, r4
   22892:	f7fd fb47 	bl	1ff24 <ull_configuretxrf>
   22896:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   22898:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
   2289a:	89db      	ldrh	r3, [r3, #14]
   2289c:	2200      	movs	r2, #0
   2289e:	f44f 2160 	mov.w	r1, #917504	@ 0xe0000
   228a2:	4620      	mov	r0, r4
   228a4:	f7fc fc35 	bl	1f112 <dwt_write16bitoffsetreg>
   228a8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   228aa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
   228ac:	899b      	ldrh	r3, [r3, #12]
   228ae:	2200      	movs	r2, #0
   228b0:	4952      	ldr	r1, [pc, #328]	@ (229fc <_init+0x1a0>)
   228b2:	4620      	mov	r0, r4
   228b4:	f7fc fc2d 	bl	1f112 <dwt_write16bitoffsetreg>
   228b8:	2100      	movs	r1, #0
   228ba:	4620      	mov	r0, r4
   228bc:	f7fc fec6 	bl	1f64c <ull_setrxaftertxdelay>
   228c0:	2500      	movs	r5, #0
   228c2:	9500      	str	r5, [sp, #0]
   228c4:	f64f 53ff 	movw	r3, #65023	@ 0xfdff
   228c8:	462a      	mov	r2, r5
   228ca:	2110      	movs	r1, #16
   228cc:	4620      	mov	r0, r4
   228ce:	f7fd fc4f 	bl	20170 <dwt_modify16bitoffsetreg>
   228d2:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   228d4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
   228d6:	895a      	ldrh	r2, [r3, #10]
   228d8:	8919      	ldrh	r1, [r3, #8]
   228da:	4620      	mov	r0, r4
   228dc:	f7fd fbb2 	bl	20044 <ull_configureframefilter>
   228e0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   228e2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
   228e4:	8a1b      	ldrh	r3, [r3, #16]
   228e6:	2202      	movs	r2, #2
   228e8:	210c      	movs	r1, #12
   228ea:	4620      	mov	r0, r4
   228ec:	f7fc fc11 	bl	1f112 <dwt_write16bitoffsetreg>
   228f0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   228f2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
   228f4:	8a5b      	ldrh	r3, [r3, #18]
   228f6:	462a      	mov	r2, r5
   228f8:	210c      	movs	r1, #12
   228fa:	4620      	mov	r0, r4
   228fc:	f7fc fc09 	bl	1f112 <dwt_write16bitoffsetreg>
   22900:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   22902:	7a19      	ldrb	r1, [r3, #8]
   22904:	4620      	mov	r0, r4
   22906:	f7fd fc69 	bl	201dc <ull_setleds>
   2290a:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   2290c:	68d9      	ldr	r1, [r3, #12]
   2290e:	4620      	mov	r0, r4
   22910:	f7fc feb2 	bl	1f678 <ull_setlnapamode>
   22914:	6b61      	ldr	r1, [r4, #52]	@ 0x34
   22916:	7e0b      	ldrb	r3, [r1, #24]
   22918:	694a      	ldr	r2, [r1, #20]
   2291a:	6909      	ldr	r1, [r1, #16]
   2291c:	4620      	mov	r0, r4
   2291e:	f7fd f9e9 	bl	1fcf4 <ull_setinterrupt>
   22922:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   22924:	7f9a      	ldrb	r2, [r3, #30]
   22926:	8b99      	ldrh	r1, [r3, #28]
   22928:	4620      	mov	r0, r4
   2292a:	f7fc fcb7 	bl	1f29c <ull_configuresleep>
   2292e:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   22930:	7b93      	ldrb	r3, [r2, #14]
   22932:	2b2e      	cmp	r3, #46	@ 0x2e
   22934:	d005      	beq.n	22942 <_init+0xe6>
   22936:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   22938:	f893 302c 	ldrb.w	r3, [r3, #44]	@ 0x2c
   2293c:	f033 033f 	bics.w	r3, r3, #63	@ 0x3f
   22940:	d00a      	beq.n	22958 <_init+0xfc>
   22942:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   22944:	f893 302c 	ldrb.w	r3, [r3, #44]	@ 0x2c
   22948:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
   2294c:	7393      	strb	r3, [r2, #14]
   2294e:	2200      	movs	r2, #0
   22950:	492b      	ldr	r1, [pc, #172]	@ (22a00 <_init+0x1a4>)
   22952:	4620      	mov	r0, r4
   22954:	f7fc fb8b 	bl	1f06e <dwt_write8bitoffsetreg>
   22958:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   2295a:	f893 102d 	ldrb.w	r1, [r3, #45]	@ 0x2d
   2295e:	4620      	mov	r0, r4
   22960:	f7fd fa68 	bl	1fe34 <ull_configciadiag>
   22964:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   22966:	6a19      	ldr	r1, [r3, #32]
   22968:	4620      	mov	r0, r4
   2296a:	f7fc fea7 	bl	1f6bc <ull_configurestskey>
   2296e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   22970:	6a59      	ldr	r1, [r3, #36]	@ 0x24
   22972:	4620      	mov	r0, r4
   22974:	f7fc fec6 	bl	1f704 <ull_configurestsiv>
   22978:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   2297a:	f893 302e 	ldrb.w	r3, [r3, #46]	@ 0x2e
   2297e:	bba3      	cbnz	r3, 229ea <_init+0x18e>
   22980:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   22982:	f893 102f 	ldrb.w	r1, [r3, #47]	@ 0x2f
   22986:	4620      	mov	r0, r4
   22988:	f7fc fbb0 	bl	1f0ec <ull_configeventcounters>
   2298c:	f994 504c 	ldrsb.w	r5, [r4, #76]	@ 0x4c
   22990:	2d00      	cmp	r5, #0
   22992:	db27      	blt.n	229e4 <_init+0x188>
   22994:	2301      	movs	r3, #1
   22996:	fa03 f505 	lsl.w	r5, r3, r5
   2299a:	b2af      	uxth	r7, r5
   2299c:	f04f 7290 	mov.w	r2, #18874368	@ 0x1200000
   229a0:	4639      	mov	r1, r7
   229a2:	4620      	mov	r0, r4
   229a4:	f7fd f988 	bl	1fcb8 <ull_setgpiomode>
   229a8:	f10d 030a 	add.w	r3, sp, #10
   229ac:	9300      	str	r3, [sp, #0]
   229ae:	2302      	movs	r3, #2
   229b0:	2200      	movs	r2, #0
   229b2:	f44f 21a0 	mov.w	r1, #327680	@ 0x50000
   229b6:	4620      	mov	r0, r4
   229b8:	f7fb ff60 	bl	1e87c <dwt_readfromdevice>
   229bc:	f8bd 300a 	ldrh.w	r3, [sp, #10]
   229c0:	ea23 0305 	bic.w	r3, r3, r5
   229c4:	f8ad 300a 	strh.w	r3, [sp, #10]
   229c8:	2200      	movs	r2, #0
   229ca:	490e      	ldr	r1, [pc, #56]	@ (22a04 <_init+0x1a8>)
   229cc:	4620      	mov	r0, r4
   229ce:	f7fc fba0 	bl	1f112 <dwt_write16bitoffsetreg>
   229d2:	f994 204d 	ldrsb.w	r2, [r4, #77]	@ 0x4d
   229d6:	fab2 f282 	clz	r2, r2
   229da:	0952      	lsrs	r2, r2, #5
   229dc:	4639      	mov	r1, r7
   229de:	4620      	mov	r0, r4
   229e0:	f7fd fc7a 	bl	202d8 <ull_setgpiovalue>
   229e4:	4630      	mov	r0, r6
   229e6:	b005      	add	sp, #20
   229e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
   229ea:	2301      	movs	r3, #1
   229ec:	9300      	str	r3, [sp, #0]
   229ee:	23ff      	movs	r3, #255	@ 0xff
   229f0:	2200      	movs	r2, #0
   229f2:	4905      	ldr	r1, [pc, #20]	@ (22a08 <_init+0x1ac>)
   229f4:	4620      	mov	r0, r4
   229f6:	f7fd fa09 	bl	1fe0c <dwt_modify8bitoffsetreg>
   229fa:	e7c1      	b.n	22980 <_init+0x124>
   229fc:	00010004 	.word	0x00010004
   22a00:	00090014 	.word	0x00090014
   22a04:	00050008 	.word	0x00050008
   22a08:	00020004 	.word	0x00020004

00022a0c <dwt_dbg_fn>:
   22a0c:	2998      	cmp	r1, #152	@ 0x98
   22a0e:	4802      	ldr	r0, [pc, #8]	@ (22a18 <dwt_dbg_fn+0xc>)
   22a10:	bf18      	it	ne
   22a12:	2000      	movne	r0, #0
   22a14:	4770      	bx	lr
   22a16:	bf00      	nop
   22a18:	0002c464 	.word	0x0002c464

00022a1c <_deinit>:
   22a1c:	4770      	bx	lr

00022a1e <dwt_xfer3xxx>:
   22a1e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   22a22:	b084      	sub	sp, #16
   22a24:	4605      	mov	r5, r0
   22a26:	460f      	mov	r7, r1
   22a28:	461e      	mov	r6, r3
   22a2a:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
   22a2e:	1e59      	subs	r1, r3, #1
   22a30:	b289      	uxth	r1, r1
   22a32:	2901      	cmp	r1, #1
   22a34:	d91c      	bls.n	22a70 <dwt_xfer3xxx+0x52>
   22a36:	19d0      	adds	r0, r2, r7
   22a38:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
   22a3c:	443a      	add	r2, r7
   22a3e:	f3c2 4104 	ubfx	r1, r2, #16, #5
   22a42:	0082      	lsls	r2, r0, #2
   22a44:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
   22a48:	ea43 0102 	orr.w	r1, r3, r2
   22a4c:	0a09      	lsrs	r1, r1, #8
   22a4e:	f88d 100c 	strb.w	r1, [sp, #12]
   22a52:	b920      	cbnz	r0, 22a5e <dwt_xfer3xxx+0x40>
   22a54:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
   22a58:	d018      	beq.n	22a8c <dwt_xfer3xxx+0x6e>
   22a5a:	2b00      	cmp	r3, #0
   22a5c:	d037      	beq.n	22ace <dwt_xfer3xxx+0xb0>
   22a5e:	f041 0140 	orr.w	r1, r1, #64	@ 0x40
   22a62:	f88d 100c 	strb.w	r1, [sp, #12]
   22a66:	431a      	orrs	r2, r3
   22a68:	f88d 200d 	strb.w	r2, [sp, #13]
   22a6c:	2402      	movs	r4, #2
   22a6e:	e005      	b.n	22a7c <dwt_xfer3xxx+0x5e>
   22a70:	007a      	lsls	r2, r7, #1
   22a72:	f062 027e 	orn	r2, r2, #126	@ 0x7e
   22a76:	f88d 200c 	strb.w	r2, [sp, #12]
   22a7a:	2401      	movs	r4, #1
   22a7c:	2b02      	cmp	r3, #2
   22a7e:	d006      	beq.n	22a8e <dwt_xfer3xxx+0x70>
   22a80:	d326      	bcc.n	22ad0 <dwt_xfer3xxx+0xb2>
   22a82:	f5a3 4300 	sub.w	r3, r3, #32768	@ 0x8000
   22a86:	2b03      	cmp	r3, #3
   22a88:	d901      	bls.n	22a8e <dwt_xfer3xxx+0x70>
   22a8a:	e7fe      	b.n	22a8a <dwt_xfer3xxx+0x6c>
   22a8c:	2401      	movs	r4, #1
   22a8e:	6d2b      	ldr	r3, [r5, #80]	@ 0x50
   22a90:	7d1b      	ldrb	r3, [r3, #20]
   22a92:	b94b      	cbnz	r3, 22aa8 <dwt_xfer3xxx+0x8a>
   22a94:	682b      	ldr	r3, [r5, #0]
   22a96:	685d      	ldr	r5, [r3, #4]
   22a98:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   22a9a:	4632      	mov	r2, r6
   22a9c:	a903      	add	r1, sp, #12
   22a9e:	4620      	mov	r0, r4
   22aa0:	47a8      	blx	r5
   22aa2:	b004      	add	sp, #16
   22aa4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   22aa8:	2200      	movs	r2, #0
   22aaa:	4621      	mov	r1, r4
   22aac:	a803      	add	r0, sp, #12
   22aae:	f7fb fe45 	bl	1e73c <dwt_generatecrc8>
   22ab2:	4602      	mov	r2, r0
   22ab4:	4631      	mov	r1, r6
   22ab6:	980a      	ldr	r0, [sp, #40]	@ 0x28
   22ab8:	f7fb fe40 	bl	1e73c <dwt_generatecrc8>
   22abc:	682b      	ldr	r3, [r5, #0]
   22abe:	9000      	str	r0, [sp, #0]
   22ac0:	689d      	ldr	r5, [r3, #8]
   22ac2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   22ac4:	4632      	mov	r2, r6
   22ac6:	a903      	add	r1, sp, #12
   22ac8:	4620      	mov	r0, r4
   22aca:	47a8      	blx	r5
   22acc:	e7e9      	b.n	22aa2 <dwt_xfer3xxx+0x84>
   22ace:	2401      	movs	r4, #1
   22ad0:	682b      	ldr	r3, [r5, #0]
   22ad2:	f8d3 8000 	ldr.w	r8, [r3]
   22ad6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   22ad8:	4632      	mov	r2, r6
   22ada:	a903      	add	r1, sp, #12
   22adc:	4620      	mov	r0, r4
   22ade:	47c0      	blx	r8
   22ae0:	6d2b      	ldr	r3, [r5, #80]	@ 0x50
   22ae2:	7d1b      	ldrb	r3, [r3, #20]
   22ae4:	2b02      	cmp	r3, #2
   22ae6:	d1dc      	bne.n	22aa2 <dwt_xfer3xxx+0x84>
   22ae8:	2f18      	cmp	r7, #24
   22aea:	d0da      	beq.n	22aa2 <dwt_xfer3xxx+0x84>
   22aec:	2200      	movs	r2, #0
   22aee:	4621      	mov	r1, r4
   22af0:	a803      	add	r0, sp, #12
   22af2:	f7fb fe23 	bl	1e73c <dwt_generatecrc8>
   22af6:	4602      	mov	r2, r0
   22af8:	4631      	mov	r1, r6
   22afa:	980a      	ldr	r0, [sp, #40]	@ 0x28
   22afc:	f7fb fe1e 	bl	1e73c <dwt_generatecrc8>
   22b00:	4604      	mov	r4, r0
   22b02:	2200      	movs	r2, #0
   22b04:	2118      	movs	r1, #24
   22b06:	4628      	mov	r0, r5
   22b08:	f000 f839 	bl	22b7e <dwt_read8bitoffsetreg>
   22b0c:	4284      	cmp	r4, r0
   22b0e:	d0c8      	beq.n	22aa2 <dwt_xfer3xxx+0x84>
   22b10:	68eb      	ldr	r3, [r5, #12]
   22b12:	2b00      	cmp	r3, #0
   22b14:	d0c5      	beq.n	22aa2 <dwt_xfer3xxx+0x84>
   22b16:	4798      	blx	r3
   22b18:	e7c3      	b.n	22aa2 <dwt_xfer3xxx+0x84>

00022b1a <dwt_readfromdevice>:
   22b1a:	b510      	push	{r4, lr}
   22b1c:	b082      	sub	sp, #8
   22b1e:	2400      	movs	r4, #0
   22b20:	9401      	str	r4, [sp, #4]
   22b22:	9c04      	ldr	r4, [sp, #16]
   22b24:	9400      	str	r4, [sp, #0]
   22b26:	f7ff ff7a 	bl	22a1e <dwt_xfer3xxx>
   22b2a:	b002      	add	sp, #8
   22b2c:	bd10      	pop	{r4, pc}

00022b2e <dwt_read32bitoffsetreg>:
   22b2e:	b500      	push	{lr}
   22b30:	b085      	sub	sp, #20
   22b32:	ab03      	add	r3, sp, #12
   22b34:	9300      	str	r3, [sp, #0]
   22b36:	2304      	movs	r3, #4
   22b38:	b292      	uxth	r2, r2
   22b3a:	f7ff ffee 	bl	22b1a <dwt_readfromdevice>
   22b3e:	f10d 030f 	add.w	r3, sp, #15
   22b42:	f10d 010b 	add.w	r1, sp, #11
   22b46:	2000      	movs	r0, #0
   22b48:	f813 2901 	ldrb.w	r2, [r3], #-1
   22b4c:	eb02 2000 	add.w	r0, r2, r0, lsl #8
   22b50:	428b      	cmp	r3, r1
   22b52:	d1f9      	bne.n	22b48 <dwt_read32bitoffsetreg+0x1a>
   22b54:	b005      	add	sp, #20
   22b56:	f85d fb04 	ldr.w	pc, [sp], #4

00022b5a <dwt_read16bitoffsetreg>:
   22b5a:	b500      	push	{lr}
   22b5c:	b085      	sub	sp, #20
   22b5e:	ab03      	add	r3, sp, #12
   22b60:	9300      	str	r3, [sp, #0]
   22b62:	2302      	movs	r3, #2
   22b64:	b292      	uxth	r2, r2
   22b66:	f7ff ffd8 	bl	22b1a <dwt_readfromdevice>
   22b6a:	f89d 300d 	ldrb.w	r3, [sp, #13]
   22b6e:	f89d 000c 	ldrb.w	r0, [sp, #12]
   22b72:	eb00 2003 	add.w	r0, r0, r3, lsl #8
   22b76:	b280      	uxth	r0, r0
   22b78:	b005      	add	sp, #20
   22b7a:	f85d fb04 	ldr.w	pc, [sp], #4

00022b7e <dwt_read8bitoffsetreg>:
   22b7e:	b500      	push	{lr}
   22b80:	b085      	sub	sp, #20
   22b82:	f10d 030f 	add.w	r3, sp, #15
   22b86:	9300      	str	r3, [sp, #0]
   22b88:	2301      	movs	r3, #1
   22b8a:	b292      	uxth	r2, r2
   22b8c:	f7ff ffc5 	bl	22b1a <dwt_readfromdevice>
   22b90:	f89d 000f 	ldrb.w	r0, [sp, #15]
   22b94:	b005      	add	sp, #20
   22b96:	f85d fb04 	ldr.w	pc, [sp], #4

00022b9a <ull_readdiagnostics>:
   22b9a:	b530      	push	{r4, r5, lr}
   22b9c:	b0bd      	sub	sp, #244	@ 0xf4
   22b9e:	4605      	mov	r5, r0
   22ba0:	460c      	mov	r4, r1
   22ba2:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   22ba4:	7b9a      	ldrb	r2, [r3, #14]
   22ba6:	2a01      	cmp	r2, #1
   22ba8:	d01c      	beq.n	22be4 <ull_readdiagnostics+0x4a>
   22baa:	2a03      	cmp	r2, #3
   22bac:	f040 81e8 	bne.w	22f80 <ull_readdiagnostics+0x3e6>
   22bb0:	7d9b      	ldrb	r3, [r3, #22]
   22bb2:	f013 0f08 	tst.w	r3, #8
   22bb6:	d10c      	bne.n	22bd2 <ull_readdiagnostics+0x38>
   22bb8:	f013 0f04 	tst.w	r3, #4
   22bbc:	ab02      	add	r3, sp, #8
   22bbe:	9300      	str	r3, [sp, #0]
   22bc0:	bf14      	ite	ne
   22bc2:	2338      	movne	r3, #56	@ 0x38
   22bc4:	2320      	moveq	r3, #32
   22bc6:	2200      	movs	r2, #0
   22bc8:	f44f 11f0 	mov.w	r1, #1966080	@ 0x1e0000
   22bcc:	f7ff ffa5 	bl	22b1a <dwt_readfromdevice>
   22bd0:	e019      	b.n	22c06 <ull_readdiagnostics+0x6c>
   22bd2:	ab02      	add	r3, sp, #8
   22bd4:	9300      	str	r3, [sp, #0]
   22bd6:	23e8      	movs	r3, #232	@ 0xe8
   22bd8:	2200      	movs	r2, #0
   22bda:	f44f 11f0 	mov.w	r1, #1966080	@ 0x1e0000
   22bde:	f7ff ff9c 	bl	22b1a <dwt_readfromdevice>
   22be2:	e010      	b.n	22c06 <ull_readdiagnostics+0x6c>
   22be4:	7d9b      	ldrb	r3, [r3, #22]
   22be6:	f013 0f08 	tst.w	r3, #8
   22bea:	f040 81c0 	bne.w	22f6e <ull_readdiagnostics+0x3d4>
   22bee:	f013 0f04 	tst.w	r3, #4
   22bf2:	ab02      	add	r3, sp, #8
   22bf4:	9300      	str	r3, [sp, #0]
   22bf6:	bf14      	ite	ne
   22bf8:	2338      	movne	r3, #56	@ 0x38
   22bfa:	2320      	moveq	r3, #32
   22bfc:	2200      	movs	r2, #0
   22bfe:	f44f 11c0 	mov.w	r1, #1572864	@ 0x180000
   22c02:	f7ff ff8a 	bl	22b1a <dwt_readfromdevice>
   22c06:	f10d 0217 	add.w	r2, sp, #23
   22c0a:	f104 031a 	add.w	r3, r4, #26
   22c0e:	f104 0020 	add.w	r0, r4, #32
   22c12:	f812 1f01 	ldrb.w	r1, [r2, #1]!
   22c16:	f803 1b01 	strb.w	r1, [r3], #1
   22c1a:	4283      	cmp	r3, r0
   22c1c:	d1f9      	bne.n	22c12 <ull_readdiagnostics+0x78>
   22c1e:	f89d 2015 	ldrb.w	r2, [sp, #21]
   22c22:	f89d 3014 	ldrb.w	r3, [sp, #20]
   22c26:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   22c2a:	f3c3 030c 	ubfx	r3, r3, #0, #13
   22c2e:	8463      	strh	r3, [r4, #34]	@ 0x22
   22c30:	f89d 201f 	ldrb.w	r2, [sp, #31]
   22c34:	f89d 301e 	ldrb.w	r3, [sp, #30]
   22c38:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   22c3c:	f3c3 030d 	ubfx	r3, r3, #0, #14
   22c40:	f413 5f00 	tst.w	r3, #8192	@ 0x2000
   22c44:	bf1c      	itt	ne
   22c46:	ea6f 4383 	mvnne.w	r3, r3, lsl #18
   22c4a:	ea6f 4393 	mvnne.w	r3, r3, lsr #18
   22c4e:	8423      	strh	r3, [r4, #32]
   22c50:	f89d 2025 	ldrb.w	r2, [sp, #37]	@ 0x25
   22c54:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
   22c58:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   22c5c:	f3c3 030b 	ubfx	r3, r3, #0, #12
   22c60:	87e3      	strh	r3, [r4, #62]	@ 0x3e
   22c62:	6d2b      	ldr	r3, [r5, #80]	@ 0x50
   22c64:	7d9b      	ldrb	r3, [r3, #22]
   22c66:	f013 0f02 	tst.w	r3, #2
   22c6a:	f040 817e 	bne.w	22f6a <ull_readdiagnostics+0x3d0>
   22c6e:	aa0a      	add	r2, sp, #40	@ 0x28
   22c70:	1e63      	subs	r3, r4, #1
   22c72:	1d20      	adds	r0, r4, #4
   22c74:	f812 1b01 	ldrb.w	r1, [r2], #1
   22c78:	f803 1f01 	strb.w	r1, [r3, #1]!
   22c7c:	79d1      	ldrb	r1, [r2, #7]
   22c7e:	7219      	strb	r1, [r3, #8]
   22c80:	7bd1      	ldrb	r1, [r2, #15]
   22c82:	7459      	strb	r1, [r3, #17]
   22c84:	4283      	cmp	r3, r0
   22c86:	d1f5      	bne.n	22c74 <ull_readdiagnostics+0xda>
   22c88:	f89d 302f 	ldrb.w	r3, [sp, #47]	@ 0x2f
   22c8c:	7163      	strb	r3, [r4, #5]
   22c8e:	f89d 202e 	ldrb.w	r2, [sp, #46]	@ 0x2e
   22c92:	f89d 302d 	ldrb.w	r3, [sp, #45]	@ 0x2d
   22c96:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   22c9a:	80e3      	strh	r3, [r4, #6]
   22c9c:	f89d 2037 	ldrb.w	r2, [sp, #55]	@ 0x37
   22ca0:	f89d 3036 	ldrb.w	r3, [sp, #54]	@ 0x36
   22ca4:	eb03 2302 	add.w	r3, r3, r2, lsl #8
   22ca8:	f3c3 13cf 	ubfx	r3, r3, #7, #16
   22cac:	f8a4 300d 	strh.w	r3, [r4, #13]
   22cb0:	f89d 2032 	ldrb.w	r2, [sp, #50]	@ 0x32
   22cb4:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
   22cb8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   22cbc:	f8a4 300f 	strh.w	r3, [r4, #15]
   22cc0:	f89d 203f 	ldrb.w	r2, [sp, #63]	@ 0x3f
   22cc4:	f89d 303e 	ldrb.w	r3, [sp, #62]	@ 0x3e
   22cc8:	eb03 2302 	add.w	r3, r3, r2, lsl #8
   22ccc:	f3c3 13cf 	ubfx	r3, r3, #7, #16
   22cd0:	82e3      	strh	r3, [r4, #22]
   22cd2:	f89d 203a 	ldrb.w	r2, [sp, #58]	@ 0x3a
   22cd6:	f89d 3039 	ldrb.w	r3, [sp, #57]	@ 0x39
   22cda:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   22cde:	8323      	strh	r3, [r4, #24]
   22ce0:	6d2b      	ldr	r3, [r5, #80]	@ 0x50
   22ce2:	7d9b      	ldrb	r3, [r3, #22]
   22ce4:	f013 0f04 	tst.w	r3, #4
   22ce8:	f040 813f 	bne.w	22f6a <ull_readdiagnostics+0x3d0>
   22cec:	f89d 2043 	ldrb.w	r2, [sp, #67]	@ 0x43
   22cf0:	f89d 3042 	ldrb.w	r3, [sp, #66]	@ 0x42
   22cf4:	041b      	lsls	r3, r3, #16
   22cf6:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   22cfa:	f89d 2040 	ldrb.w	r2, [sp, #64]	@ 0x40
   22cfe:	4313      	orrs	r3, r2
   22d00:	f89d 2041 	ldrb.w	r2, [sp, #65]	@ 0x41
   22d04:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   22d08:	f023 4360 	bic.w	r3, r3, #3758096384	@ 0xe0000000
   22d0c:	6263      	str	r3, [r4, #36]	@ 0x24
   22d0e:	f89d 2047 	ldrb.w	r2, [sp, #71]	@ 0x47
   22d12:	f89d 3046 	ldrb.w	r3, [sp, #70]	@ 0x46
   22d16:	041b      	lsls	r3, r3, #16
   22d18:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   22d1c:	f89d 2044 	ldrb.w	r2, [sp, #68]	@ 0x44
   22d20:	4313      	orrs	r3, r2
   22d22:	f89d 2045 	ldrb.w	r2, [sp, #69]	@ 0x45
   22d26:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   22d2a:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
   22d2e:	62a3      	str	r3, [r4, #40]	@ 0x28
   22d30:	f89d 204b 	ldrb.w	r2, [sp, #75]	@ 0x4b
   22d34:	f89d 304a 	ldrb.w	r3, [sp, #74]	@ 0x4a
   22d38:	041b      	lsls	r3, r3, #16
   22d3a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   22d3e:	f89d 2048 	ldrb.w	r2, [sp, #72]	@ 0x48
   22d42:	4313      	orrs	r3, r2
   22d44:	f89d 2049 	ldrb.w	r2, [sp, #73]	@ 0x49
   22d48:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   22d4c:	f3c3 0313 	ubfx	r3, r3, #0, #20
   22d50:	62e3      	str	r3, [r4, #44]	@ 0x2c
   22d52:	f89d 204f 	ldrb.w	r2, [sp, #79]	@ 0x4f
   22d56:	f89d 304e 	ldrb.w	r3, [sp, #78]	@ 0x4e
   22d5a:	041b      	lsls	r3, r3, #16
   22d5c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   22d60:	f89d 204c 	ldrb.w	r2, [sp, #76]	@ 0x4c
   22d64:	4313      	orrs	r3, r2
   22d66:	f89d 204d 	ldrb.w	r2, [sp, #77]	@ 0x4d
   22d6a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   22d6e:	f3c3 0315 	ubfx	r3, r3, #0, #22
   22d72:	6323      	str	r3, [r4, #48]	@ 0x30
   22d74:	f89d 2053 	ldrb.w	r2, [sp, #83]	@ 0x53
   22d78:	f89d 3052 	ldrb.w	r3, [sp, #82]	@ 0x52
   22d7c:	041b      	lsls	r3, r3, #16
   22d7e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   22d82:	f89d 2050 	ldrb.w	r2, [sp, #80]	@ 0x50
   22d86:	4313      	orrs	r3, r2
   22d88:	f89d 2051 	ldrb.w	r2, [sp, #81]	@ 0x51
   22d8c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   22d90:	f3c3 0315 	ubfx	r3, r3, #0, #22
   22d94:	6363      	str	r3, [r4, #52]	@ 0x34
   22d96:	f89d 2057 	ldrb.w	r2, [sp, #87]	@ 0x57
   22d9a:	f89d 3056 	ldrb.w	r3, [sp, #86]	@ 0x56
   22d9e:	041b      	lsls	r3, r3, #16
   22da0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   22da4:	f89d 2054 	ldrb.w	r2, [sp, #84]	@ 0x54
   22da8:	4313      	orrs	r3, r2
   22daa:	f89d 2055 	ldrb.w	r2, [sp, #85]	@ 0x55
   22dae:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   22db2:	f3c3 0315 	ubfx	r3, r3, #0, #22
   22db6:	63a3      	str	r3, [r4, #56]	@ 0x38
   22db8:	f89d 2065 	ldrb.w	r2, [sp, #101]	@ 0x65
   22dbc:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
   22dc0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   22dc4:	87a3      	strh	r3, [r4, #60]	@ 0x3c
   22dc6:	f89d 2077 	ldrb.w	r2, [sp, #119]	@ 0x77
   22dca:	f89d 3076 	ldrb.w	r3, [sp, #118]	@ 0x76
   22dce:	041b      	lsls	r3, r3, #16
   22dd0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   22dd4:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
   22dd8:	4313      	orrs	r3, r2
   22dda:	f89d 2075 	ldrb.w	r2, [sp, #117]	@ 0x75
   22dde:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   22de2:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
   22de6:	6423      	str	r3, [r4, #64]	@ 0x40
   22de8:	f89d 207b 	ldrb.w	r2, [sp, #123]	@ 0x7b
   22dec:	f89d 307a 	ldrb.w	r3, [sp, #122]	@ 0x7a
   22df0:	041b      	lsls	r3, r3, #16
   22df2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   22df6:	f89d 2078 	ldrb.w	r2, [sp, #120]	@ 0x78
   22dfa:	4313      	orrs	r3, r2
   22dfc:	f89d 2079 	ldrb.w	r2, [sp, #121]	@ 0x79
   22e00:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   22e04:	f3c3 0313 	ubfx	r3, r3, #0, #20
   22e08:	6463      	str	r3, [r4, #68]	@ 0x44
   22e0a:	f89d 207f 	ldrb.w	r2, [sp, #127]	@ 0x7f
   22e0e:	f89d 307e 	ldrb.w	r3, [sp, #126]	@ 0x7e
   22e12:	041b      	lsls	r3, r3, #16
   22e14:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   22e18:	f89d 207c 	ldrb.w	r2, [sp, #124]	@ 0x7c
   22e1c:	4313      	orrs	r3, r2
   22e1e:	f89d 207d 	ldrb.w	r2, [sp, #125]	@ 0x7d
   22e22:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   22e26:	f3c3 0315 	ubfx	r3, r3, #0, #22
   22e2a:	64a3      	str	r3, [r4, #72]	@ 0x48
   22e2c:	f89d 2083 	ldrb.w	r2, [sp, #131]	@ 0x83
   22e30:	f89d 3082 	ldrb.w	r3, [sp, #130]	@ 0x82
   22e34:	041b      	lsls	r3, r3, #16
   22e36:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   22e3a:	f89d 2080 	ldrb.w	r2, [sp, #128]	@ 0x80
   22e3e:	4313      	orrs	r3, r2
   22e40:	f89d 2081 	ldrb.w	r2, [sp, #129]	@ 0x81
   22e44:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   22e48:	f3c3 0315 	ubfx	r3, r3, #0, #22
   22e4c:	64e3      	str	r3, [r4, #76]	@ 0x4c
   22e4e:	f89d 2087 	ldrb.w	r2, [sp, #135]	@ 0x87
   22e52:	f89d 3086 	ldrb.w	r3, [sp, #134]	@ 0x86
   22e56:	041b      	lsls	r3, r3, #16
   22e58:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   22e5c:	f89d 2084 	ldrb.w	r2, [sp, #132]	@ 0x84
   22e60:	4313      	orrs	r3, r2
   22e62:	f89d 2085 	ldrb.w	r2, [sp, #133]	@ 0x85
   22e66:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   22e6a:	f3c3 0315 	ubfx	r3, r3, #0, #22
   22e6e:	6523      	str	r3, [r4, #80]	@ 0x50
   22e70:	f89d 2095 	ldrb.w	r2, [sp, #149]	@ 0x95
   22e74:	f89d 3094 	ldrb.w	r3, [sp, #148]	@ 0x94
   22e78:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   22e7c:	f3c3 030e 	ubfx	r3, r3, #0, #15
   22e80:	f8a4 3054 	strh.w	r3, [r4, #84]	@ 0x54
   22e84:	f89d 20a5 	ldrb.w	r2, [sp, #165]	@ 0xa5
   22e88:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
   22e8c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   22e90:	f3c3 030b 	ubfx	r3, r3, #0, #12
   22e94:	f8a4 3056 	strh.w	r3, [r4, #86]	@ 0x56
   22e98:	f89d 20bf 	ldrb.w	r2, [sp, #191]	@ 0xbf
   22e9c:	f89d 30be 	ldrb.w	r3, [sp, #190]	@ 0xbe
   22ea0:	041b      	lsls	r3, r3, #16
   22ea2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   22ea6:	f89d 20bc 	ldrb.w	r2, [sp, #188]	@ 0xbc
   22eaa:	4313      	orrs	r3, r2
   22eac:	f89d 20bd 	ldrb.w	r2, [sp, #189]	@ 0xbd
   22eb0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   22eb4:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
   22eb8:	65a3      	str	r3, [r4, #88]	@ 0x58
   22eba:	f89d 20c3 	ldrb.w	r2, [sp, #195]	@ 0xc3
   22ebe:	f89d 30c2 	ldrb.w	r3, [sp, #194]	@ 0xc2
   22ec2:	041b      	lsls	r3, r3, #16
   22ec4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   22ec8:	f89d 20c0 	ldrb.w	r2, [sp, #192]	@ 0xc0
   22ecc:	4313      	orrs	r3, r2
   22ece:	f89d 20c1 	ldrb.w	r2, [sp, #193]	@ 0xc1
   22ed2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   22ed6:	f3c3 0313 	ubfx	r3, r3, #0, #20
   22eda:	65e3      	str	r3, [r4, #92]	@ 0x5c
   22edc:	f89d 20c7 	ldrb.w	r2, [sp, #199]	@ 0xc7
   22ee0:	f89d 30c6 	ldrb.w	r3, [sp, #198]	@ 0xc6
   22ee4:	041b      	lsls	r3, r3, #16
   22ee6:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   22eea:	f89d 20c4 	ldrb.w	r2, [sp, #196]	@ 0xc4
   22eee:	4313      	orrs	r3, r2
   22ef0:	f89d 20c5 	ldrb.w	r2, [sp, #197]	@ 0xc5
   22ef4:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   22ef8:	f3c3 0315 	ubfx	r3, r3, #0, #22
   22efc:	6623      	str	r3, [r4, #96]	@ 0x60
   22efe:	f89d 20cb 	ldrb.w	r2, [sp, #203]	@ 0xcb
   22f02:	f89d 30ca 	ldrb.w	r3, [sp, #202]	@ 0xca
   22f06:	041b      	lsls	r3, r3, #16
   22f08:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   22f0c:	f89d 20c8 	ldrb.w	r2, [sp, #200]	@ 0xc8
   22f10:	4313      	orrs	r3, r2
   22f12:	f89d 20c9 	ldrb.w	r2, [sp, #201]	@ 0xc9
   22f16:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   22f1a:	f3c3 0315 	ubfx	r3, r3, #0, #22
   22f1e:	6663      	str	r3, [r4, #100]	@ 0x64
   22f20:	f89d 20cf 	ldrb.w	r2, [sp, #207]	@ 0xcf
   22f24:	f89d 30ce 	ldrb.w	r3, [sp, #206]	@ 0xce
   22f28:	041b      	lsls	r3, r3, #16
   22f2a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   22f2e:	f89d 20cc 	ldrb.w	r2, [sp, #204]	@ 0xcc
   22f32:	4313      	orrs	r3, r2
   22f34:	f89d 20cd 	ldrb.w	r2, [sp, #205]	@ 0xcd
   22f38:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   22f3c:	f3c3 0315 	ubfx	r3, r3, #0, #22
   22f40:	66a3      	str	r3, [r4, #104]	@ 0x68
   22f42:	f89d 20dd 	ldrb.w	r2, [sp, #221]	@ 0xdd
   22f46:	f89d 30dc 	ldrb.w	r3, [sp, #220]	@ 0xdc
   22f4a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   22f4e:	f3c3 030e 	ubfx	r3, r3, #0, #15
   22f52:	f8a4 306c 	strh.w	r3, [r4, #108]	@ 0x6c
   22f56:	f89d 20ed 	ldrb.w	r2, [sp, #237]	@ 0xed
   22f5a:	f89d 30ec 	ldrb.w	r3, [sp, #236]	@ 0xec
   22f5e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   22f62:	f3c3 030b 	ubfx	r3, r3, #0, #12
   22f66:	f8a4 306e 	strh.w	r3, [r4, #110]	@ 0x6e
   22f6a:	b03d      	add	sp, #244	@ 0xf4
   22f6c:	bd30      	pop	{r4, r5, pc}
   22f6e:	ab02      	add	r3, sp, #8
   22f70:	9300      	str	r3, [sp, #0]
   22f72:	23e8      	movs	r3, #232	@ 0xe8
   22f74:	2200      	movs	r2, #0
   22f76:	f44f 11c0 	mov.w	r1, #1572864	@ 0x180000
   22f7a:	f7ff fdce 	bl	22b1a <dwt_readfromdevice>
   22f7e:	e642      	b.n	22c06 <ull_readdiagnostics+0x6c>
   22f80:	7d9b      	ldrb	r3, [r3, #22]
   22f82:	f013 0f01 	tst.w	r3, #1
   22f86:	f000 81b3 	beq.w	232f0 <ull_readdiagnostics+0x756>
   22f8a:	ab02      	add	r3, sp, #8
   22f8c:	9300      	str	r3, [sp, #0]
   22f8e:	236c      	movs	r3, #108	@ 0x6c
   22f90:	2200      	movs	r2, #0
   22f92:	f44f 2140 	mov.w	r1, #786432	@ 0xc0000
   22f96:	f7ff fdc0 	bl	22b1a <dwt_readfromdevice>
   22f9a:	ab1d      	add	r3, sp, #116	@ 0x74
   22f9c:	9300      	str	r3, [sp, #0]
   22f9e:	236c      	movs	r3, #108	@ 0x6c
   22fa0:	2200      	movs	r2, #0
   22fa2:	f44f 2150 	mov.w	r1, #851968	@ 0xd0000
   22fa6:	4628      	mov	r0, r5
   22fa8:	f7ff fdb7 	bl	22b1a <dwt_readfromdevice>
   22fac:	aa02      	add	r2, sp, #8
   22fae:	1e63      	subs	r3, r4, #1
   22fb0:	1d20      	adds	r0, r4, #4
   22fb2:	f812 1b01 	ldrb.w	r1, [r2], #1
   22fb6:	f803 1f01 	strb.w	r1, [r3, #1]!
   22fba:	79d1      	ldrb	r1, [r2, #7]
   22fbc:	7219      	strb	r1, [r3, #8]
   22fbe:	7bd1      	ldrb	r1, [r2, #15]
   22fc0:	7459      	strb	r1, [r3, #17]
   22fc2:	7dd1      	ldrb	r1, [r2, #23]
   22fc4:	7699      	strb	r1, [r3, #26]
   22fc6:	4283      	cmp	r3, r0
   22fc8:	d1f3      	bne.n	22fb2 <ull_readdiagnostics+0x418>
   22fca:	f89d 3025 	ldrb.w	r3, [sp, #37]	@ 0x25
   22fce:	77e3      	strb	r3, [r4, #31]
   22fd0:	f89d 300f 	ldrb.w	r3, [sp, #15]
   22fd4:	7163      	strb	r3, [r4, #5]
   22fd6:	f89d 200e 	ldrb.w	r2, [sp, #14]
   22fda:	f89d 300d 	ldrb.w	r3, [sp, #13]
   22fde:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   22fe2:	80e3      	strh	r3, [r4, #6]
   22fe4:	f89d 3016 	ldrb.w	r3, [sp, #22]
   22fe8:	f89d 2017 	ldrb.w	r2, [sp, #23]
   22fec:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
   22ff0:	f3c2 12cf 	ubfx	r2, r2, #7, #16
   22ff4:	f8a4 200d 	strh.w	r2, [r4, #13]
   22ff8:	f89d 2015 	ldrb.w	r2, [sp, #21]
   22ffc:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
   23000:	f8a4 200f 	strh.w	r2, [r4, #15]
   23004:	f89d 201f 	ldrb.w	r2, [sp, #31]
   23008:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   2300c:	f3c3 13cf 	ubfx	r3, r3, #7, #16
   23010:	82e3      	strh	r3, [r4, #22]
   23012:	f89d 201e 	ldrb.w	r2, [sp, #30]
   23016:	f89d 301d 	ldrb.w	r3, [sp, #29]
   2301a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   2301e:	8323      	strh	r3, [r4, #24]
   23020:	f89d 2027 	ldrb.w	r2, [sp, #39]	@ 0x27
   23024:	f89d 3026 	ldrb.w	r3, [sp, #38]	@ 0x26
   23028:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   2302c:	f3c3 030d 	ubfx	r3, r3, #0, #14
   23030:	f413 5f00 	tst.w	r3, #8192	@ 0x2000
   23034:	bf1c      	itt	ne
   23036:	ea6f 4383 	mvnne.w	r3, r3, lsl #18
   2303a:	ea6f 4393 	mvnne.w	r3, r3, lsr #18
   2303e:	8423      	strh	r3, [r4, #32]
   23040:	f89d 2029 	ldrb.w	r2, [sp, #41]	@ 0x29
   23044:	f89d 3028 	ldrb.w	r3, [sp, #40]	@ 0x28
   23048:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   2304c:	f3c3 030c 	ubfx	r3, r3, #0, #13
   23050:	8463      	strh	r3, [r4, #34]	@ 0x22
   23052:	f89d 202f 	ldrb.w	r2, [sp, #47]	@ 0x2f
   23056:	f89d 302e 	ldrb.w	r3, [sp, #46]	@ 0x2e
   2305a:	041b      	lsls	r3, r3, #16
   2305c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   23060:	f89d 202c 	ldrb.w	r2, [sp, #44]	@ 0x2c
   23064:	4313      	orrs	r3, r2
   23066:	f89d 202d 	ldrb.w	r2, [sp, #45]	@ 0x2d
   2306a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   2306e:	f023 4360 	bic.w	r3, r3, #3758096384	@ 0xe0000000
   23072:	6263      	str	r3, [r4, #36]	@ 0x24
   23074:	6d2b      	ldr	r3, [r5, #80]	@ 0x50
   23076:	7d9b      	ldrb	r3, [r3, #22]
   23078:	f013 0f01 	tst.w	r3, #1
   2307c:	f43f af75 	beq.w	22f6a <ull_readdiagnostics+0x3d0>
   23080:	f89d 2033 	ldrb.w	r2, [sp, #51]	@ 0x33
   23084:	f89d 3032 	ldrb.w	r3, [sp, #50]	@ 0x32
   23088:	041b      	lsls	r3, r3, #16
   2308a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   2308e:	f89d 2030 	ldrb.w	r2, [sp, #48]	@ 0x30
   23092:	4313      	orrs	r3, r2
   23094:	f89d 2031 	ldrb.w	r2, [sp, #49]	@ 0x31
   23098:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   2309c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
   230a0:	62a3      	str	r3, [r4, #40]	@ 0x28
   230a2:	f89d 2037 	ldrb.w	r2, [sp, #55]	@ 0x37
   230a6:	f89d 3036 	ldrb.w	r3, [sp, #54]	@ 0x36
   230aa:	041b      	lsls	r3, r3, #16
   230ac:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   230b0:	f89d 2034 	ldrb.w	r2, [sp, #52]	@ 0x34
   230b4:	4313      	orrs	r3, r2
   230b6:	f89d 2035 	ldrb.w	r2, [sp, #53]	@ 0x35
   230ba:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   230be:	f3c3 0313 	ubfx	r3, r3, #0, #20
   230c2:	62e3      	str	r3, [r4, #44]	@ 0x2c
   230c4:	f89d 203b 	ldrb.w	r2, [sp, #59]	@ 0x3b
   230c8:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
   230cc:	041b      	lsls	r3, r3, #16
   230ce:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   230d2:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
   230d6:	4313      	orrs	r3, r2
   230d8:	f89d 2039 	ldrb.w	r2, [sp, #57]	@ 0x39
   230dc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   230e0:	f3c3 0315 	ubfx	r3, r3, #0, #22
   230e4:	6323      	str	r3, [r4, #48]	@ 0x30
   230e6:	f89d 203f 	ldrb.w	r2, [sp, #63]	@ 0x3f
   230ea:	f89d 303e 	ldrb.w	r3, [sp, #62]	@ 0x3e
   230ee:	041b      	lsls	r3, r3, #16
   230f0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   230f4:	f89d 203c 	ldrb.w	r2, [sp, #60]	@ 0x3c
   230f8:	4313      	orrs	r3, r2
   230fa:	f89d 203d 	ldrb.w	r2, [sp, #61]	@ 0x3d
   230fe:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   23102:	f3c3 0315 	ubfx	r3, r3, #0, #22
   23106:	6363      	str	r3, [r4, #52]	@ 0x34
   23108:	f89d 2043 	ldrb.w	r2, [sp, #67]	@ 0x43
   2310c:	f89d 3042 	ldrb.w	r3, [sp, #66]	@ 0x42
   23110:	041b      	lsls	r3, r3, #16
   23112:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   23116:	f89d 2040 	ldrb.w	r2, [sp, #64]	@ 0x40
   2311a:	4313      	orrs	r3, r2
   2311c:	f89d 2041 	ldrb.w	r2, [sp, #65]	@ 0x41
   23120:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   23124:	f3c3 0315 	ubfx	r3, r3, #0, #22
   23128:	63a3      	str	r3, [r4, #56]	@ 0x38
   2312a:	f89d 2051 	ldrb.w	r2, [sp, #81]	@ 0x51
   2312e:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
   23132:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   23136:	87a3      	strh	r3, [r4, #60]	@ 0x3c
   23138:	f89d 2061 	ldrb.w	r2, [sp, #97]	@ 0x61
   2313c:	f89d 3060 	ldrb.w	r3, [sp, #96]	@ 0x60
   23140:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   23144:	f3c3 030b 	ubfx	r3, r3, #0, #12
   23148:	87e3      	strh	r3, [r4, #62]	@ 0x3e
   2314a:	f89d 2067 	ldrb.w	r2, [sp, #103]	@ 0x67
   2314e:	f89d 3066 	ldrb.w	r3, [sp, #102]	@ 0x66
   23152:	041b      	lsls	r3, r3, #16
   23154:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   23158:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
   2315c:	4313      	orrs	r3, r2
   2315e:	f89d 2065 	ldrb.w	r2, [sp, #101]	@ 0x65
   23162:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   23166:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
   2316a:	6423      	str	r3, [r4, #64]	@ 0x40
   2316c:	f89d 206b 	ldrb.w	r2, [sp, #107]	@ 0x6b
   23170:	f89d 306a 	ldrb.w	r3, [sp, #106]	@ 0x6a
   23174:	041b      	lsls	r3, r3, #16
   23176:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   2317a:	f89d 2068 	ldrb.w	r2, [sp, #104]	@ 0x68
   2317e:	4313      	orrs	r3, r2
   23180:	f89d 2069 	ldrb.w	r2, [sp, #105]	@ 0x69
   23184:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   23188:	f3c3 0313 	ubfx	r3, r3, #0, #20
   2318c:	6463      	str	r3, [r4, #68]	@ 0x44
   2318e:	f89d 206f 	ldrb.w	r2, [sp, #111]	@ 0x6f
   23192:	f89d 306e 	ldrb.w	r3, [sp, #110]	@ 0x6e
   23196:	041b      	lsls	r3, r3, #16
   23198:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   2319c:	f89d 206c 	ldrb.w	r2, [sp, #108]	@ 0x6c
   231a0:	4313      	orrs	r3, r2
   231a2:	f89d 206d 	ldrb.w	r2, [sp, #109]	@ 0x6d
   231a6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   231aa:	f3c3 0315 	ubfx	r3, r3, #0, #22
   231ae:	64a3      	str	r3, [r4, #72]	@ 0x48
   231b0:	f89d 2073 	ldrb.w	r2, [sp, #115]	@ 0x73
   231b4:	f89d 3072 	ldrb.w	r3, [sp, #114]	@ 0x72
   231b8:	041b      	lsls	r3, r3, #16
   231ba:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   231be:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
   231c2:	4313      	orrs	r3, r2
   231c4:	f89d 2071 	ldrb.w	r2, [sp, #113]	@ 0x71
   231c8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   231cc:	f3c3 0315 	ubfx	r3, r3, #0, #22
   231d0:	64e3      	str	r3, [r4, #76]	@ 0x4c
   231d2:	f89d 2077 	ldrb.w	r2, [sp, #119]	@ 0x77
   231d6:	f89d 3076 	ldrb.w	r3, [sp, #118]	@ 0x76
   231da:	041b      	lsls	r3, r3, #16
   231dc:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   231e0:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
   231e4:	4313      	orrs	r3, r2
   231e6:	f89d 2075 	ldrb.w	r2, [sp, #117]	@ 0x75
   231ea:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   231ee:	f3c3 0315 	ubfx	r3, r3, #0, #22
   231f2:	6523      	str	r3, [r4, #80]	@ 0x50
   231f4:	f89d 2085 	ldrb.w	r2, [sp, #133]	@ 0x85
   231f8:	f89d 3084 	ldrb.w	r3, [sp, #132]	@ 0x84
   231fc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   23200:	f3c3 030e 	ubfx	r3, r3, #0, #15
   23204:	f8a4 3054 	strh.w	r3, [r4, #84]	@ 0x54
   23208:	f89d 2095 	ldrb.w	r2, [sp, #149]	@ 0x95
   2320c:	f89d 3094 	ldrb.w	r3, [sp, #148]	@ 0x94
   23210:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   23214:	f3c3 030b 	ubfx	r3, r3, #0, #12
   23218:	f8a4 3056 	strh.w	r3, [r4, #86]	@ 0x56
   2321c:	f89d 20af 	ldrb.w	r2, [sp, #175]	@ 0xaf
   23220:	f89d 30ae 	ldrb.w	r3, [sp, #174]	@ 0xae
   23224:	041b      	lsls	r3, r3, #16
   23226:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   2322a:	f89d 20ac 	ldrb.w	r2, [sp, #172]	@ 0xac
   2322e:	4313      	orrs	r3, r2
   23230:	f89d 20ad 	ldrb.w	r2, [sp, #173]	@ 0xad
   23234:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   23238:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
   2323c:	65a3      	str	r3, [r4, #88]	@ 0x58
   2323e:	f89d 20b3 	ldrb.w	r2, [sp, #179]	@ 0xb3
   23242:	f89d 30b2 	ldrb.w	r3, [sp, #178]	@ 0xb2
   23246:	041b      	lsls	r3, r3, #16
   23248:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   2324c:	f89d 20b0 	ldrb.w	r2, [sp, #176]	@ 0xb0
   23250:	4313      	orrs	r3, r2
   23252:	f89d 20b1 	ldrb.w	r2, [sp, #177]	@ 0xb1
   23256:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   2325a:	f3c3 0313 	ubfx	r3, r3, #0, #20
   2325e:	65e3      	str	r3, [r4, #92]	@ 0x5c
   23260:	f89d 20b7 	ldrb.w	r2, [sp, #183]	@ 0xb7
   23264:	f89d 30b6 	ldrb.w	r3, [sp, #182]	@ 0xb6
   23268:	041b      	lsls	r3, r3, #16
   2326a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   2326e:	f89d 20b4 	ldrb.w	r2, [sp, #180]	@ 0xb4
   23272:	4313      	orrs	r3, r2
   23274:	f89d 20b5 	ldrb.w	r2, [sp, #181]	@ 0xb5
   23278:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   2327c:	f3c3 0315 	ubfx	r3, r3, #0, #22
   23280:	6623      	str	r3, [r4, #96]	@ 0x60
   23282:	f89d 20bb 	ldrb.w	r2, [sp, #187]	@ 0xbb
   23286:	f89d 30ba 	ldrb.w	r3, [sp, #186]	@ 0xba
   2328a:	041b      	lsls	r3, r3, #16
   2328c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   23290:	f89d 20b8 	ldrb.w	r2, [sp, #184]	@ 0xb8
   23294:	4313      	orrs	r3, r2
   23296:	f89d 20b9 	ldrb.w	r2, [sp, #185]	@ 0xb9
   2329a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   2329e:	f3c3 0315 	ubfx	r3, r3, #0, #22
   232a2:	6663      	str	r3, [r4, #100]	@ 0x64
   232a4:	f89d 20bf 	ldrb.w	r2, [sp, #191]	@ 0xbf
   232a8:	f89d 30be 	ldrb.w	r3, [sp, #190]	@ 0xbe
   232ac:	041b      	lsls	r3, r3, #16
   232ae:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   232b2:	f89d 20bc 	ldrb.w	r2, [sp, #188]	@ 0xbc
   232b6:	4313      	orrs	r3, r2
   232b8:	f89d 20bd 	ldrb.w	r2, [sp, #189]	@ 0xbd
   232bc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   232c0:	f3c3 0315 	ubfx	r3, r3, #0, #22
   232c4:	66a3      	str	r3, [r4, #104]	@ 0x68
   232c6:	f89d 20cd 	ldrb.w	r2, [sp, #205]	@ 0xcd
   232ca:	f89d 30cc 	ldrb.w	r3, [sp, #204]	@ 0xcc
   232ce:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   232d2:	f3c3 030e 	ubfx	r3, r3, #0, #15
   232d6:	f8a4 306c 	strh.w	r3, [r4, #108]	@ 0x6c
   232da:	f89d 20dd 	ldrb.w	r2, [sp, #221]	@ 0xdd
   232de:	f89d 30dc 	ldrb.w	r3, [sp, #220]	@ 0xdc
   232e2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   232e6:	f3c3 030b 	ubfx	r3, r3, #0, #12
   232ea:	f8a4 306e 	strh.w	r3, [r4, #110]	@ 0x6e
   232ee:	e63c      	b.n	22f6a <ull_readdiagnostics+0x3d0>
   232f0:	ab02      	add	r3, sp, #8
   232f2:	9300      	str	r3, [sp, #0]
   232f4:	2328      	movs	r3, #40	@ 0x28
   232f6:	2200      	movs	r2, #0
   232f8:	f44f 2140 	mov.w	r1, #786432	@ 0xc0000
   232fc:	f7ff fc0d 	bl	22b1a <dwt_readfromdevice>
   23300:	e654      	b.n	22fac <ull_readdiagnostics+0x412>
	...

00023304 <ull_readrxtimestamp>:
   23304:	b500      	push	{lr}
   23306:	b083      	sub	sp, #12
   23308:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   2330a:	7b9b      	ldrb	r3, [r3, #14]
   2330c:	2b01      	cmp	r3, #1
   2330e:	d00b      	beq.n	23328 <ull_readrxtimestamp+0x24>
   23310:	2b03      	cmp	r3, #3
   23312:	d110      	bne.n	23336 <ull_readrxtimestamp+0x32>
   23314:	9100      	str	r1, [sp, #0]
   23316:	2305      	movs	r3, #5
   23318:	2204      	movs	r2, #4
   2331a:	f44f 11f0 	mov.w	r1, #1966080	@ 0x1e0000
   2331e:	f7ff fbfc 	bl	22b1a <dwt_readfromdevice>
   23322:	b003      	add	sp, #12
   23324:	f85d fb04 	ldr.w	pc, [sp], #4
   23328:	9100      	str	r1, [sp, #0]
   2332a:	2305      	movs	r3, #5
   2332c:	2200      	movs	r2, #0
   2332e:	4905      	ldr	r1, [pc, #20]	@ (23344 <ull_readrxtimestamp+0x40>)
   23330:	f7ff fbf3 	bl	22b1a <dwt_readfromdevice>
   23334:	e7f5      	b.n	23322 <ull_readrxtimestamp+0x1e>
   23336:	9100      	str	r1, [sp, #0]
   23338:	2305      	movs	r3, #5
   2333a:	2200      	movs	r2, #0
   2333c:	2160      	movs	r1, #96	@ 0x60
   2333e:	f7ff fbec 	bl	22b1a <dwt_readfromdevice>
   23342:	e7ee      	b.n	23322 <ull_readrxtimestamp+0x1e>
   23344:	00180004 	.word	0x00180004

00023348 <dwt_writetodevice>:
   23348:	b510      	push	{r4, lr}
   2334a:	b082      	sub	sp, #8
   2334c:	f44f 4400 	mov.w	r4, #32768	@ 0x8000
   23350:	9401      	str	r4, [sp, #4]
   23352:	9c04      	ldr	r4, [sp, #16]
   23354:	9400      	str	r4, [sp, #0]
   23356:	f7ff fb62 	bl	22a1e <dwt_xfer3xxx>
   2335a:	b002      	add	sp, #8
   2335c:	bd10      	pop	{r4, pc}

0002335e <dwt_write16bitoffsetreg>:
   2335e:	b500      	push	{lr}
   23360:	b085      	sub	sp, #20
   23362:	f88d 300c 	strb.w	r3, [sp, #12]
   23366:	0a1b      	lsrs	r3, r3, #8
   23368:	f88d 300d 	strb.w	r3, [sp, #13]
   2336c:	ab03      	add	r3, sp, #12
   2336e:	9300      	str	r3, [sp, #0]
   23370:	2302      	movs	r3, #2
   23372:	b292      	uxth	r2, r2
   23374:	f7ff ffe8 	bl	23348 <dwt_writetodevice>
   23378:	b005      	add	sp, #20
   2337a:	f85d fb04 	ldr.w	pc, [sp], #4
	...

00023380 <ull_force_clocks>:
   23380:	b508      	push	{r3, lr}
   23382:	2901      	cmp	r1, #1
   23384:	d002      	beq.n	2338c <ull_force_clocks+0xc>
   23386:	2905      	cmp	r1, #5
   23388:	d007      	beq.n	2339a <ull_force_clocks+0x1a>
   2338a:	bd08      	pop	{r3, pc}
   2338c:	f641 0322 	movw	r3, #6178	@ 0x1822
   23390:	2200      	movs	r2, #0
   23392:	4905      	ldr	r1, [pc, #20]	@ (233a8 <ull_force_clocks+0x28>)
   23394:	f7ff ffe3 	bl	2335e <dwt_write16bitoffsetreg>
   23398:	e7f7      	b.n	2338a <ull_force_clocks+0xa>
   2339a:	f44f 7300 	mov.w	r3, #512	@ 0x200
   2339e:	2200      	movs	r2, #0
   233a0:	4901      	ldr	r1, [pc, #4]	@ (233a8 <ull_force_clocks+0x28>)
   233a2:	f7ff ffdc 	bl	2335e <dwt_write16bitoffsetreg>
   233a6:	e7f0      	b.n	2338a <ull_force_clocks+0xa>
   233a8:	00110004 	.word	0x00110004

000233ac <__dwt_otp_write_wdata_id_reg>:
   233ac:	b538      	push	{r3, r4, r5, lr}
   233ae:	4605      	mov	r5, r0
   233b0:	460c      	mov	r4, r1
   233b2:	f441 7300 	orr.w	r3, r1, #512	@ 0x200
   233b6:	b29b      	uxth	r3, r3
   233b8:	2200      	movs	r2, #0
   233ba:	f44f 2130 	mov.w	r1, #720896	@ 0xb0000
   233be:	f7ff ffce 	bl	2335e <dwt_write16bitoffsetreg>
   233c2:	b2a3      	uxth	r3, r4
   233c4:	2200      	movs	r2, #0
   233c6:	f44f 2130 	mov.w	r1, #720896	@ 0xb0000
   233ca:	4628      	mov	r0, r5
   233cc:	f7ff ffc7 	bl	2335e <dwt_write16bitoffsetreg>
   233d0:	bd38      	pop	{r3, r4, r5, pc}
	...

000233d4 <_dwt_otpread>:
   233d4:	b570      	push	{r4, r5, r6, lr}
   233d6:	4604      	mov	r4, r0
   233d8:	460e      	mov	r6, r1
   233da:	4d0c      	ldr	r5, [pc, #48]	@ (2340c <_dwt_otpread+0x38>)
   233dc:	2301      	movs	r3, #1
   233de:	2200      	movs	r2, #0
   233e0:	4629      	mov	r1, r5
   233e2:	f7ff ffbc 	bl	2335e <dwt_write16bitoffsetreg>
   233e6:	4633      	mov	r3, r6
   233e8:	2200      	movs	r2, #0
   233ea:	4909      	ldr	r1, [pc, #36]	@ (23410 <_dwt_otpread+0x3c>)
   233ec:	4620      	mov	r0, r4
   233ee:	f7ff ffb6 	bl	2335e <dwt_write16bitoffsetreg>
   233f2:	2302      	movs	r3, #2
   233f4:	2200      	movs	r2, #0
   233f6:	4629      	mov	r1, r5
   233f8:	4620      	mov	r0, r4
   233fa:	f7ff ffb0 	bl	2335e <dwt_write16bitoffsetreg>
   233fe:	2200      	movs	r2, #0
   23400:	4904      	ldr	r1, [pc, #16]	@ (23414 <_dwt_otpread+0x40>)
   23402:	4620      	mov	r0, r4
   23404:	f7ff fb93 	bl	22b2e <dwt_read32bitoffsetreg>
   23408:	bd70      	pop	{r4, r5, r6, pc}
   2340a:	bf00      	nop
   2340c:	000b0008 	.word	0x000b0008
   23410:	000b0004 	.word	0x000b0004
   23414:	000b0010 	.word	0x000b0010

00023418 <dwt_write32bitoffsetreg>:
   23418:	b510      	push	{r4, lr}
   2341a:	b084      	sub	sp, #16
   2341c:	f88d 300c 	strb.w	r3, [sp, #12]
   23420:	0a1c      	lsrs	r4, r3, #8
   23422:	f88d 400d 	strb.w	r4, [sp, #13]
   23426:	0c1c      	lsrs	r4, r3, #16
   23428:	f88d 400e 	strb.w	r4, [sp, #14]
   2342c:	0e1b      	lsrs	r3, r3, #24
   2342e:	f88d 300f 	strb.w	r3, [sp, #15]
   23432:	ab03      	add	r3, sp, #12
   23434:	9300      	str	r3, [sp, #0]
   23436:	2304      	movs	r3, #4
   23438:	b292      	uxth	r2, r2
   2343a:	f7ff ff85 	bl	23348 <dwt_writetodevice>
   2343e:	b004      	add	sp, #16
   23440:	bd10      	pop	{r4, pc}

00023442 <_dwt_adjust_delaytime>:
   23442:	b538      	push	{r3, r4, r5, lr}
   23444:	4604      	mov	r4, r0
   23446:	b989      	cbnz	r1, 2346c <_dwt_adjust_delaytime+0x2a>
   23448:	2200      	movs	r2, #0
   2344a:	2128      	movs	r1, #40	@ 0x28
   2344c:	f7ff fb6f 	bl	22b2e <dwt_read32bitoffsetreg>
   23450:	4605      	mov	r5, r0
   23452:	2201      	movs	r2, #1
   23454:	f44f 2160 	mov.w	r1, #917504	@ 0xe0000
   23458:	4620      	mov	r0, r4
   2345a:	f7ff fb90 	bl	22b7e <dwt_read8bitoffsetreg>
   2345e:	1a2b      	subs	r3, r5, r0
   23460:	2200      	movs	r2, #0
   23462:	2128      	movs	r1, #40	@ 0x28
   23464:	4620      	mov	r0, r4
   23466:	f7ff ffd7 	bl	23418 <dwt_write32bitoffsetreg>
   2346a:	bd38      	pop	{r3, r4, r5, pc}
   2346c:	2200      	movs	r2, #0
   2346e:	2128      	movs	r1, #40	@ 0x28
   23470:	f7ff fb5d 	bl	22b2e <dwt_read32bitoffsetreg>
   23474:	4605      	mov	r5, r0
   23476:	2201      	movs	r2, #1
   23478:	217c      	movs	r1, #124	@ 0x7c
   2347a:	4620      	mov	r0, r4
   2347c:	f7ff fb7f 	bl	22b7e <dwt_read8bitoffsetreg>
   23480:	1a2b      	subs	r3, r5, r0
   23482:	2200      	movs	r2, #0
   23484:	2128      	movs	r1, #40	@ 0x28
   23486:	4620      	mov	r0, r4
   23488:	f7ff ffc6 	bl	23418 <dwt_write32bitoffsetreg>
   2348c:	e7ed      	b.n	2346a <_dwt_adjust_delaytime+0x28>

0002348e <ull_setrxaftertxdelay>:
   2348e:	b538      	push	{r3, r4, r5, lr}
   23490:	4605      	mov	r5, r0
   23492:	460c      	mov	r4, r1
   23494:	2200      	movs	r2, #0
   23496:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
   2349a:	f7ff fb48 	bl	22b2e <dwt_read32bitoffsetreg>
   2349e:	0d00      	lsrs	r0, r0, #20
   234a0:	0500      	lsls	r0, r0, #20
   234a2:	f3c4 0313 	ubfx	r3, r4, #0, #20
   234a6:	4303      	orrs	r3, r0
   234a8:	2200      	movs	r2, #0
   234aa:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
   234ae:	4628      	mov	r0, r5
   234b0:	f7ff ffb2 	bl	23418 <dwt_write32bitoffsetreg>
   234b4:	bd38      	pop	{r3, r4, r5, pc}

000234b6 <ull_setlnapamode>:
   234b6:	b538      	push	{r3, r4, r5, lr}
   234b8:	4605      	mov	r5, r0
   234ba:	460c      	mov	r4, r1
   234bc:	2200      	movs	r2, #0
   234be:	f44f 21a0 	mov.w	r1, #327680	@ 0x50000
   234c2:	f7ff fb34 	bl	22b2e <dwt_read32bitoffsetreg>
   234c6:	f420 337c 	bic.w	r3, r0, #258048	@ 0x3f000
   234ca:	f014 0f01 	tst.w	r4, #1
   234ce:	bf18      	it	ne
   234d0:	f443 3380 	orrne.w	r3, r3, #65536	@ 0x10000
   234d4:	f014 0f02 	tst.w	r4, #2
   234d8:	bf18      	it	ne
   234da:	f443 5300 	orrne.w	r3, r3, #8192	@ 0x2000
   234de:	f014 0f04 	tst.w	r4, #4
   234e2:	bf18      	it	ne
   234e4:	f443 3390 	orrne.w	r3, r3, #73728	@ 0x12000
   234e8:	2200      	movs	r2, #0
   234ea:	f44f 21a0 	mov.w	r1, #327680	@ 0x50000
   234ee:	4628      	mov	r0, r5
   234f0:	f7ff ff92 	bl	23418 <dwt_write32bitoffsetreg>
   234f4:	bd38      	pop	{r3, r4, r5, pc}
	...

000234f8 <ull_configurestskey>:
   234f8:	b538      	push	{r3, r4, r5, lr}
   234fa:	4605      	mov	r5, r0
   234fc:	460c      	mov	r4, r1
   234fe:	680b      	ldr	r3, [r1, #0]
   23500:	2200      	movs	r2, #0
   23502:	490b      	ldr	r1, [pc, #44]	@ (23530 <ull_configurestskey+0x38>)
   23504:	f7ff ff88 	bl	23418 <dwt_write32bitoffsetreg>
   23508:	6863      	ldr	r3, [r4, #4]
   2350a:	2200      	movs	r2, #0
   2350c:	4909      	ldr	r1, [pc, #36]	@ (23534 <ull_configurestskey+0x3c>)
   2350e:	4628      	mov	r0, r5
   23510:	f7ff ff82 	bl	23418 <dwt_write32bitoffsetreg>
   23514:	68a3      	ldr	r3, [r4, #8]
   23516:	2200      	movs	r2, #0
   23518:	4907      	ldr	r1, [pc, #28]	@ (23538 <ull_configurestskey+0x40>)
   2351a:	4628      	mov	r0, r5
   2351c:	f7ff ff7c 	bl	23418 <dwt_write32bitoffsetreg>
   23520:	68e3      	ldr	r3, [r4, #12]
   23522:	2200      	movs	r2, #0
   23524:	4905      	ldr	r1, [pc, #20]	@ (2353c <ull_configurestskey+0x44>)
   23526:	4628      	mov	r0, r5
   23528:	f7ff ff76 	bl	23418 <dwt_write32bitoffsetreg>
   2352c:	bd38      	pop	{r3, r4, r5, pc}
   2352e:	bf00      	nop
   23530:	0002000c 	.word	0x0002000c
   23534:	00020010 	.word	0x00020010
   23538:	00020014 	.word	0x00020014
   2353c:	00020018 	.word	0x00020018

00023540 <ull_configurestsiv>:
   23540:	b538      	push	{r3, r4, r5, lr}
   23542:	4605      	mov	r5, r0
   23544:	460c      	mov	r4, r1
   23546:	680b      	ldr	r3, [r1, #0]
   23548:	2200      	movs	r2, #0
   2354a:	490b      	ldr	r1, [pc, #44]	@ (23578 <ull_configurestsiv+0x38>)
   2354c:	f7ff ff64 	bl	23418 <dwt_write32bitoffsetreg>
   23550:	6863      	ldr	r3, [r4, #4]
   23552:	2200      	movs	r2, #0
   23554:	4909      	ldr	r1, [pc, #36]	@ (2357c <ull_configurestsiv+0x3c>)
   23556:	4628      	mov	r0, r5
   23558:	f7ff ff5e 	bl	23418 <dwt_write32bitoffsetreg>
   2355c:	68a3      	ldr	r3, [r4, #8]
   2355e:	2200      	movs	r2, #0
   23560:	4907      	ldr	r1, [pc, #28]	@ (23580 <ull_configurestsiv+0x40>)
   23562:	4628      	mov	r0, r5
   23564:	f7ff ff58 	bl	23418 <dwt_write32bitoffsetreg>
   23568:	68e3      	ldr	r3, [r4, #12]
   2356a:	2200      	movs	r2, #0
   2356c:	4905      	ldr	r1, [pc, #20]	@ (23584 <ull_configurestsiv+0x44>)
   2356e:	4628      	mov	r0, r5
   23570:	f7ff ff52 	bl	23418 <dwt_write32bitoffsetreg>
   23574:	bd38      	pop	{r3, r4, r5, pc}
   23576:	bf00      	nop
   23578:	0002001c 	.word	0x0002001c
   2357c:	00020020 	.word	0x00020020
   23580:	00020024 	.word	0x00020024
   23584:	00020028 	.word	0x00020028

00023588 <ull_configmrxlut>:
   23588:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   2358c:	4604      	mov	r4, r0
   2358e:	2905      	cmp	r1, #5
   23590:	d03a      	beq.n	23608 <ull_configmrxlut+0x80>
   23592:	4d23      	ldr	r5, [pc, #140]	@ (23620 <ull_configmrxlut+0x98>)
   23594:	462e      	mov	r6, r5
   23596:	4f23      	ldr	r7, [pc, #140]	@ (23624 <ull_configmrxlut+0x9c>)
   23598:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 23660 <ull_configmrxlut+0xd8>
   2359c:	f8df 90c4 	ldr.w	r9, [pc, #196]	@ 23664 <ull_configmrxlut+0xdc>
   235a0:	f8df a0c4 	ldr.w	sl, [pc, #196]	@ 23668 <ull_configmrxlut+0xe0>
   235a4:	4b20      	ldr	r3, [pc, #128]	@ (23628 <ull_configmrxlut+0xa0>)
   235a6:	2200      	movs	r2, #0
   235a8:	4920      	ldr	r1, [pc, #128]	@ (2362c <ull_configmrxlut+0xa4>)
   235aa:	4620      	mov	r0, r4
   235ac:	f7ff ff34 	bl	23418 <dwt_write32bitoffsetreg>
   235b0:	4653      	mov	r3, sl
   235b2:	2200      	movs	r2, #0
   235b4:	491e      	ldr	r1, [pc, #120]	@ (23630 <ull_configmrxlut+0xa8>)
   235b6:	4620      	mov	r0, r4
   235b8:	f7ff ff2e 	bl	23418 <dwt_write32bitoffsetreg>
   235bc:	464b      	mov	r3, r9
   235be:	2200      	movs	r2, #0
   235c0:	491c      	ldr	r1, [pc, #112]	@ (23634 <ull_configmrxlut+0xac>)
   235c2:	4620      	mov	r0, r4
   235c4:	f7ff ff28 	bl	23418 <dwt_write32bitoffsetreg>
   235c8:	4643      	mov	r3, r8
   235ca:	2200      	movs	r2, #0
   235cc:	491a      	ldr	r1, [pc, #104]	@ (23638 <ull_configmrxlut+0xb0>)
   235ce:	4620      	mov	r0, r4
   235d0:	f7ff ff22 	bl	23418 <dwt_write32bitoffsetreg>
   235d4:	463b      	mov	r3, r7
   235d6:	2200      	movs	r2, #0
   235d8:	4918      	ldr	r1, [pc, #96]	@ (2363c <ull_configmrxlut+0xb4>)
   235da:	4620      	mov	r0, r4
   235dc:	f7ff ff1c 	bl	23418 <dwt_write32bitoffsetreg>
   235e0:	4633      	mov	r3, r6
   235e2:	2200      	movs	r2, #0
   235e4:	4916      	ldr	r1, [pc, #88]	@ (23640 <ull_configmrxlut+0xb8>)
   235e6:	4620      	mov	r0, r4
   235e8:	f7ff ff16 	bl	23418 <dwt_write32bitoffsetreg>
   235ec:	462b      	mov	r3, r5
   235ee:	2200      	movs	r2, #0
   235f0:	4914      	ldr	r1, [pc, #80]	@ (23644 <ull_configmrxlut+0xbc>)
   235f2:	4620      	mov	r0, r4
   235f4:	f7ff ff10 	bl	23418 <dwt_write32bitoffsetreg>
   235f8:	4b13      	ldr	r3, [pc, #76]	@ (23648 <ull_configmrxlut+0xc0>)
   235fa:	2200      	movs	r2, #0
   235fc:	4913      	ldr	r1, [pc, #76]	@ (2364c <ull_configmrxlut+0xc4>)
   235fe:	4620      	mov	r0, r4
   23600:	f7ff ff0a 	bl	23418 <dwt_write32bitoffsetreg>
   23604:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   23608:	4d11      	ldr	r5, [pc, #68]	@ (23650 <ull_configmrxlut+0xc8>)
   2360a:	4e12      	ldr	r6, [pc, #72]	@ (23654 <ull_configmrxlut+0xcc>)
   2360c:	4f12      	ldr	r7, [pc, #72]	@ (23658 <ull_configmrxlut+0xd0>)
   2360e:	f8df 805c 	ldr.w	r8, [pc, #92]	@ 2366c <ull_configmrxlut+0xe4>
   23612:	f8df 905c 	ldr.w	r9, [pc, #92]	@ 23670 <ull_configmrxlut+0xe8>
   23616:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 23674 <ull_configmrxlut+0xec>
   2361a:	4b10      	ldr	r3, [pc, #64]	@ (2365c <ull_configmrxlut+0xd4>)
   2361c:	e7c3      	b.n	235a6 <ull_configmrxlut+0x1e>
   2361e:	bf00      	nop
   23620:	0002afb5 	.word	0x0002afb5
   23624:	0002af7d 	.word	0x0002af7d
   23628:	0002a8fe 	.word	0x0002a8fe
   2362c:	00030038 	.word	0x00030038
   23630:	0003003c 	.word	0x0003003c
   23634:	00030040 	.word	0x00030040
   23638:	00030044 	.word	0x00030044
   2363c:	00030048 	.word	0x00030048
   23640:	0003004c 	.word	0x0003004c
   23644:	00030050 	.word	0x00030050
   23648:	10000240 	.word	0x10000240
   2364c:	0003001c 	.word	0x0003001c
   23650:	0001cff5 	.word	0x0001cff5
   23654:	0001cfb5 	.word	0x0001cfb5
   23658:	0001cf36 	.word	0x0001cf36
   2365c:	0001c0fd 	.word	0x0001c0fd
   23660:	0002af3e 	.word	0x0002af3e
   23664:	0002a5fe 	.word	0x0002a5fe
   23668:	0002ac36 	.word	0x0002ac36
   2366c:	0001c77e 	.word	0x0001c77e
   23670:	0001c6be 	.word	0x0001c6be
   23674:	0001c43e 	.word	0x0001c43e

00023678 <ull_disable_rftx_blocks>:
   23678:	b508      	push	{r3, lr}
   2367a:	2300      	movs	r3, #0
   2367c:	461a      	mov	r2, r3
   2367e:	4902      	ldr	r1, [pc, #8]	@ (23688 <ull_disable_rftx_blocks+0x10>)
   23680:	f7ff feca 	bl	23418 <dwt_write32bitoffsetreg>
   23684:	bd08      	pop	{r3, pc}
   23686:	bf00      	nop
   23688:	00070004 	.word	0x00070004

0002368c <ull_disable_rf_tx>:
   2368c:	b538      	push	{r3, r4, r5, lr}
   2368e:	4604      	mov	r4, r0
   23690:	460d      	mov	r5, r1
   23692:	2300      	movs	r3, #0
   23694:	461a      	mov	r2, r3
   23696:	490a      	ldr	r1, [pc, #40]	@ (236c0 <ull_disable_rf_tx+0x34>)
   23698:	f7ff febe 	bl	23418 <dwt_write32bitoffsetreg>
   2369c:	2300      	movs	r3, #0
   2369e:	461a      	mov	r2, r3
   236a0:	f44f 21e0 	mov.w	r1, #458752	@ 0x70000
   236a4:	4620      	mov	r0, r4
   236a6:	f7ff feb7 	bl	23418 <dwt_write32bitoffsetreg>
   236aa:	b905      	cbnz	r5, 236ae <ull_disable_rf_tx+0x22>
   236ac:	bd38      	pop	{r3, r4, r5, pc}
   236ae:	f04f 53e0 	mov.w	r3, #469762048	@ 0x1c000000
   236b2:	2200      	movs	r2, #0
   236b4:	4903      	ldr	r1, [pc, #12]	@ (236c4 <ull_disable_rf_tx+0x38>)
   236b6:	4620      	mov	r0, r4
   236b8:	f7ff feae 	bl	23418 <dwt_write32bitoffsetreg>
   236bc:	e7f6      	b.n	236ac <ull_disable_rf_tx+0x20>
   236be:	bf00      	nop
   236c0:	00070048 	.word	0x00070048
   236c4:	00070014 	.word	0x00070014

000236c8 <ull_readrxdata>:
   236c8:	b5f0      	push	{r4, r5, r6, r7, lr}
   236ca:	b083      	sub	sp, #12
   236cc:	6d04      	ldr	r4, [r0, #80]	@ 0x50
   236ce:	7ba4      	ldrb	r4, [r4, #14]
   236d0:	2c03      	cmp	r4, #3
   236d2:	bf0c      	ite	eq
   236d4:	f44f 1c98 	moveq.w	ip, #1245184	@ 0x130000
   236d8:	f44f 1c90 	movne.w	ip, #1179648	@ 0x120000
   236dc:	189c      	adds	r4, r3, r2
   236de:	f5b4 6f80 	cmp.w	r4, #1024	@ 0x400
   236e2:	da19      	bge.n	23718 <ull_readrxdata+0x50>
   236e4:	461d      	mov	r5, r3
   236e6:	4616      	mov	r6, r2
   236e8:	460f      	mov	r7, r1
   236ea:	4604      	mov	r4, r0
   236ec:	2b7f      	cmp	r3, #127	@ 0x7f
   236ee:	d915      	bls.n	2371c <ull_readrxdata+0x54>
   236f0:	ea4f 431c 	mov.w	r3, ip, lsr #16
   236f4:	2200      	movs	r2, #0
   236f6:	490d      	ldr	r1, [pc, #52]	@ (2372c <ull_readrxdata+0x64>)
   236f8:	f7ff fe8e 	bl	23418 <dwt_write32bitoffsetreg>
   236fc:	462b      	mov	r3, r5
   236fe:	2200      	movs	r2, #0
   23700:	490b      	ldr	r1, [pc, #44]	@ (23730 <ull_readrxdata+0x68>)
   23702:	4620      	mov	r0, r4
   23704:	f7ff fe88 	bl	23418 <dwt_write32bitoffsetreg>
   23708:	9700      	str	r7, [sp, #0]
   2370a:	4633      	mov	r3, r6
   2370c:	2200      	movs	r2, #0
   2370e:	f44f 11e8 	mov.w	r1, #1900544	@ 0x1d0000
   23712:	4620      	mov	r0, r4
   23714:	f7ff fa01 	bl	22b1a <dwt_readfromdevice>
   23718:	b003      	add	sp, #12
   2371a:	bdf0      	pop	{r4, r5, r6, r7, pc}
   2371c:	9100      	str	r1, [sp, #0]
   2371e:	4613      	mov	r3, r2
   23720:	462a      	mov	r2, r5
   23722:	4661      	mov	r1, ip
   23724:	f7ff f9f9 	bl	22b1a <dwt_readfromdevice>
   23728:	e7f6      	b.n	23718 <ull_readrxdata+0x50>
   2372a:	bf00      	nop
   2372c:	001f0004 	.word	0x001f0004
   23730:	001f0008 	.word	0x001f0008

00023734 <dwt_write8bitoffsetreg>:
   23734:	b510      	push	{r4, lr}
   23736:	b084      	sub	sp, #16
   23738:	ac04      	add	r4, sp, #16
   2373a:	f804 3d01 	strb.w	r3, [r4, #-1]!
   2373e:	9400      	str	r4, [sp, #0]
   23740:	2301      	movs	r3, #1
   23742:	b292      	uxth	r2, r2
   23744:	f7ff fe00 	bl	23348 <dwt_writetodevice>
   23748:	b004      	add	sp, #16
   2374a:	bd10      	pop	{r4, pc}

0002374c <ull_getframelength>:
   2374c:	b510      	push	{r4, lr}
   2374e:	4604      	mov	r4, r0
   23750:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   23752:	7b9b      	ldrb	r3, [r3, #14]
   23754:	2b01      	cmp	r3, #1
   23756:	d013      	beq.n	23780 <ull_getframelength+0x34>
   23758:	2b03      	cmp	r3, #3
   2375a:	d11d      	bne.n	23798 <ull_getframelength+0x4c>
   2375c:	23f0      	movs	r3, #240	@ 0xf0
   2375e:	2200      	movs	r2, #0
   23760:	4912      	ldr	r1, [pc, #72]	@ (237ac <ull_getframelength+0x60>)
   23762:	f7ff ffe7 	bl	23734 <dwt_write8bitoffsetreg>
   23766:	2200      	movs	r2, #0
   23768:	f44f 11f0 	mov.w	r1, #1966080	@ 0x1e0000
   2376c:	4620      	mov	r0, r4
   2376e:	f7ff f9f4 	bl	22b5a <dwt_read16bitoffsetreg>
   23772:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   23774:	7ada      	ldrb	r2, [r3, #11]
   23776:	b1a2      	cbz	r2, 237a2 <ull_getframelength+0x56>
   23778:	f3c0 0009 	ubfx	r0, r0, #0, #10
   2377c:	83d8      	strh	r0, [r3, #30]
   2377e:	bd10      	pop	{r4, pc}
   23780:	230f      	movs	r3, #15
   23782:	2200      	movs	r2, #0
   23784:	4909      	ldr	r1, [pc, #36]	@ (237ac <ull_getframelength+0x60>)
   23786:	f7ff ffd5 	bl	23734 <dwt_write8bitoffsetreg>
   2378a:	2200      	movs	r2, #0
   2378c:	f44f 11c0 	mov.w	r1, #1572864	@ 0x180000
   23790:	4620      	mov	r0, r4
   23792:	f7ff f9e2 	bl	22b5a <dwt_read16bitoffsetreg>
   23796:	e7ec      	b.n	23772 <ull_getframelength+0x26>
   23798:	2200      	movs	r2, #0
   2379a:	214c      	movs	r1, #76	@ 0x4c
   2379c:	f7ff f9dd 	bl	22b5a <dwt_read16bitoffsetreg>
   237a0:	e7e7      	b.n	23772 <ull_getframelength+0x26>
   237a2:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
   237a6:	83d8      	strh	r0, [r3, #30]
   237a8:	e7e9      	b.n	2377e <ull_getframelength+0x32>
   237aa:	bf00      	nop
   237ac:	00010018 	.word	0x00010018

000237b0 <_dwt_clear_db_events>:
   237b0:	b510      	push	{r4, lr}
   237b2:	4604      	mov	r4, r0
   237b4:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   237b6:	7b9b      	ldrb	r3, [r3, #14]
   237b8:	2b01      	cmp	r3, #1
   237ba:	d004      	beq.n	237c6 <_dwt_clear_db_events+0x16>
   237bc:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   237be:	7b9b      	ldrb	r3, [r3, #14]
   237c0:	2b03      	cmp	r3, #3
   237c2:	d006      	beq.n	237d2 <_dwt_clear_db_events+0x22>
   237c4:	bd10      	pop	{r4, pc}
   237c6:	230f      	movs	r3, #15
   237c8:	2200      	movs	r2, #0
   237ca:	4905      	ldr	r1, [pc, #20]	@ (237e0 <_dwt_clear_db_events+0x30>)
   237cc:	f7ff ffb2 	bl	23734 <dwt_write8bitoffsetreg>
   237d0:	e7f4      	b.n	237bc <_dwt_clear_db_events+0xc>
   237d2:	23f0      	movs	r3, #240	@ 0xf0
   237d4:	2200      	movs	r2, #0
   237d6:	4902      	ldr	r1, [pc, #8]	@ (237e0 <_dwt_clear_db_events+0x30>)
   237d8:	4620      	mov	r0, r4
   237da:	f7ff ffab 	bl	23734 <dwt_write8bitoffsetreg>
   237de:	e7f1      	b.n	237c4 <_dwt_clear_db_events+0x14>
   237e0:	00010018 	.word	0x00010018

000237e4 <ull_clearaonconfig>:
   237e4:	b538      	push	{r3, r4, r5, lr}
   237e6:	4604      	mov	r4, r0
   237e8:	2300      	movs	r3, #0
   237ea:	461a      	mov	r2, r3
   237ec:	f44f 2120 	mov.w	r1, #655360	@ 0xa0000
   237f0:	f7ff fdb5 	bl	2335e <dwt_write16bitoffsetreg>
   237f4:	2300      	movs	r3, #0
   237f6:	461a      	mov	r2, r3
   237f8:	4908      	ldr	r1, [pc, #32]	@ (2381c <ull_clearaonconfig+0x38>)
   237fa:	4620      	mov	r0, r4
   237fc:	f7ff ff9a 	bl	23734 <dwt_write8bitoffsetreg>
   23800:	4d07      	ldr	r5, [pc, #28]	@ (23820 <ull_clearaonconfig+0x3c>)
   23802:	2300      	movs	r3, #0
   23804:	461a      	mov	r2, r3
   23806:	4629      	mov	r1, r5
   23808:	4620      	mov	r0, r4
   2380a:	f7ff ff93 	bl	23734 <dwt_write8bitoffsetreg>
   2380e:	2302      	movs	r3, #2
   23810:	2200      	movs	r2, #0
   23812:	4629      	mov	r1, r5
   23814:	4620      	mov	r0, r4
   23816:	f7ff ff8d 	bl	23734 <dwt_write8bitoffsetreg>
   2381a:	bd38      	pop	{r3, r4, r5, pc}
   2381c:	000a0014 	.word	0x000a0014
   23820:	000a0004 	.word	0x000a0004

00023824 <ull_configeventcounters>:
   23824:	b538      	push	{r3, r4, r5, lr}
   23826:	4605      	mov	r5, r0
   23828:	460c      	mov	r4, r1
   2382a:	2302      	movs	r3, #2
   2382c:	2200      	movs	r2, #0
   2382e:	f44f 2170 	mov.w	r1, #983040	@ 0xf0000
   23832:	f7ff ff7f 	bl	23734 <dwt_write8bitoffsetreg>
   23836:	b904      	cbnz	r4, 2383a <ull_configeventcounters+0x16>
   23838:	bd38      	pop	{r3, r4, r5, pc}
   2383a:	2301      	movs	r3, #1
   2383c:	2200      	movs	r2, #0
   2383e:	f44f 2170 	mov.w	r1, #983040	@ 0xf0000
   23842:	4628      	mov	r0, r5
   23844:	f7ff ff76 	bl	23734 <dwt_write8bitoffsetreg>
   23848:	e7f6      	b.n	23838 <ull_configeventcounters+0x14>
	...

0002384c <ull_aon_read>:
   2384c:	b538      	push	{r3, r4, r5, lr}
   2384e:	4604      	mov	r4, r0
   23850:	460b      	mov	r3, r1
   23852:	2200      	movs	r2, #0
   23854:	490a      	ldr	r1, [pc, #40]	@ (23880 <ull_aon_read+0x34>)
   23856:	f7ff fd82 	bl	2335e <dwt_write16bitoffsetreg>
   2385a:	4d0a      	ldr	r5, [pc, #40]	@ (23884 <ull_aon_read+0x38>)
   2385c:	2388      	movs	r3, #136	@ 0x88
   2385e:	2200      	movs	r2, #0
   23860:	4629      	mov	r1, r5
   23862:	4620      	mov	r0, r4
   23864:	f7ff ff66 	bl	23734 <dwt_write8bitoffsetreg>
   23868:	2300      	movs	r3, #0
   2386a:	461a      	mov	r2, r3
   2386c:	4629      	mov	r1, r5
   2386e:	4620      	mov	r0, r4
   23870:	f7ff ff60 	bl	23734 <dwt_write8bitoffsetreg>
   23874:	2200      	movs	r2, #0
   23876:	4904      	ldr	r1, [pc, #16]	@ (23888 <ull_aon_read+0x3c>)
   23878:	4620      	mov	r0, r4
   2387a:	f7ff f980 	bl	22b7e <dwt_read8bitoffsetreg>
   2387e:	bd38      	pop	{r3, r4, r5, pc}
   23880:	000a000c 	.word	0x000a000c
   23884:	000a0004 	.word	0x000a0004
   23888:	000a0008 	.word	0x000a0008

0002388c <ull_aon_write>:
   2388c:	b570      	push	{r4, r5, r6, lr}
   2388e:	4604      	mov	r4, r0
   23890:	460b      	mov	r3, r1
   23892:	4615      	mov	r5, r2
   23894:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
   23898:	bf34      	ite	cc
   2389a:	2600      	movcc	r6, #0
   2389c:	2620      	movcs	r6, #32
   2389e:	2200      	movs	r2, #0
   238a0:	490b      	ldr	r1, [pc, #44]	@ (238d0 <ull_aon_write+0x44>)
   238a2:	f7ff fd5c 	bl	2335e <dwt_write16bitoffsetreg>
   238a6:	462b      	mov	r3, r5
   238a8:	2200      	movs	r2, #0
   238aa:	490a      	ldr	r1, [pc, #40]	@ (238d4 <ull_aon_write+0x48>)
   238ac:	4620      	mov	r0, r4
   238ae:	f7ff ff41 	bl	23734 <dwt_write8bitoffsetreg>
   238b2:	4d09      	ldr	r5, [pc, #36]	@ (238d8 <ull_aon_write+0x4c>)
   238b4:	f046 0390 	orr.w	r3, r6, #144	@ 0x90
   238b8:	2200      	movs	r2, #0
   238ba:	4629      	mov	r1, r5
   238bc:	4620      	mov	r0, r4
   238be:	f7ff ff39 	bl	23734 <dwt_write8bitoffsetreg>
   238c2:	2300      	movs	r3, #0
   238c4:	461a      	mov	r2, r3
   238c6:	4629      	mov	r1, r5
   238c8:	4620      	mov	r0, r4
   238ca:	f7ff ff33 	bl	23734 <dwt_write8bitoffsetreg>
   238ce:	bd70      	pop	{r4, r5, r6, pc}
   238d0:	000a000c 	.word	0x000a000c
   238d4:	000a0010 	.word	0x000a0010
   238d8:	000a0004 	.word	0x000a0004

000238dc <ull_configuresleep>:
   238dc:	b570      	push	{r4, r5, r6, lr}
   238de:	4604      	mov	r4, r0
   238e0:	460d      	mov	r5, r1
   238e2:	4616      	mov	r6, r2
   238e4:	2200      	movs	r2, #0
   238e6:	f240 110b 	movw	r1, #267	@ 0x10b
   238ea:	f7ff ffcf 	bl	2388c <ull_aon_write>
   238ee:	f44f 7182 	mov.w	r1, #260	@ 0x104
   238f2:	4620      	mov	r0, r4
   238f4:	f7ff ffaa 	bl	2384c <ull_aon_read>
   238f8:	f000 021f 	and.w	r2, r0, #31
   238fc:	f44f 7182 	mov.w	r1, #260	@ 0x104
   23900:	4620      	mov	r0, r4
   23902:	f7ff ffc3 	bl	2388c <ull_aon_write>
   23906:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   23908:	8a1a      	ldrh	r2, [r3, #16]
   2390a:	4315      	orrs	r5, r2
   2390c:	821d      	strh	r5, [r3, #16]
   2390e:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   23910:	8a1b      	ldrh	r3, [r3, #16]
   23912:	2200      	movs	r2, #0
   23914:	f44f 2120 	mov.w	r1, #655360	@ 0xa0000
   23918:	4620      	mov	r0, r4
   2391a:	f7ff fd20 	bl	2335e <dwt_write16bitoffsetreg>
   2391e:	4633      	mov	r3, r6
   23920:	2200      	movs	r2, #0
   23922:	4902      	ldr	r1, [pc, #8]	@ (2392c <ull_configuresleep+0x50>)
   23924:	4620      	mov	r0, r4
   23926:	f7ff ff05 	bl	23734 <dwt_write8bitoffsetreg>
   2392a:	bd70      	pop	{r4, r5, r6, pc}
   2392c:	000a0014 	.word	0x000a0014

00023930 <ull_writetxdata>:
   23930:	b5f0      	push	{r4, r5, r6, r7, lr}
   23932:	b083      	sub	sp, #12
   23934:	185c      	adds	r4, r3, r1
   23936:	f5b4 6f80 	cmp.w	r4, #1024	@ 0x400
   2393a:	da24      	bge.n	23986 <ull_writetxdata+0x56>
   2393c:	461c      	mov	r4, r3
   2393e:	4617      	mov	r7, r2
   23940:	460e      	mov	r6, r1
   23942:	4605      	mov	r5, r0
   23944:	2b7f      	cmp	r3, #127	@ 0x7f
   23946:	d915      	bls.n	23974 <ull_writetxdata+0x44>
   23948:	2314      	movs	r3, #20
   2394a:	2200      	movs	r2, #0
   2394c:	490f      	ldr	r1, [pc, #60]	@ (2398c <ull_writetxdata+0x5c>)
   2394e:	f7ff fd63 	bl	23418 <dwt_write32bitoffsetreg>
   23952:	4623      	mov	r3, r4
   23954:	2200      	movs	r2, #0
   23956:	490e      	ldr	r1, [pc, #56]	@ (23990 <ull_writetxdata+0x60>)
   23958:	4628      	mov	r0, r5
   2395a:	f7ff fd5d 	bl	23418 <dwt_write32bitoffsetreg>
   2395e:	9700      	str	r7, [sp, #0]
   23960:	4633      	mov	r3, r6
   23962:	2200      	movs	r2, #0
   23964:	f44f 11e8 	mov.w	r1, #1900544	@ 0x1d0000
   23968:	4628      	mov	r0, r5
   2396a:	f7ff fced 	bl	23348 <dwt_writetodevice>
   2396e:	2000      	movs	r0, #0
   23970:	b003      	add	sp, #12
   23972:	bdf0      	pop	{r4, r5, r6, r7, pc}
   23974:	9200      	str	r2, [sp, #0]
   23976:	460b      	mov	r3, r1
   23978:	4622      	mov	r2, r4
   2397a:	f44f 11a0 	mov.w	r1, #1310720	@ 0x140000
   2397e:	f7ff fce3 	bl	23348 <dwt_writetodevice>
   23982:	2000      	movs	r0, #0
   23984:	e7f4      	b.n	23970 <ull_writetxdata+0x40>
   23986:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
   2398a:	e7f1      	b.n	23970 <ull_writetxdata+0x40>
   2398c:	001f0004 	.word	0x001f0004
   23990:	001f0008 	.word	0x001f0008

00023994 <ull_signal_rx_buff_free>:
   23994:	b510      	push	{r4, lr}
   23996:	b082      	sub	sp, #8
   23998:	4604      	mov	r4, r0
   2399a:	2302      	movs	r3, #2
   2399c:	9301      	str	r3, [sp, #4]
   2399e:	2200      	movs	r2, #0
   239a0:	9200      	str	r2, [sp, #0]
   239a2:	4613      	mov	r3, r2
   239a4:	2113      	movs	r1, #19
   239a6:	f7ff f83a 	bl	22a1e <dwt_xfer3xxx>
   239aa:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   239ac:	7b9a      	ldrb	r2, [r3, #14]
   239ae:	2a03      	cmp	r2, #3
   239b0:	bf0c      	ite	eq
   239b2:	2201      	moveq	r2, #1
   239b4:	2203      	movne	r2, #3
   239b6:	739a      	strb	r2, [r3, #14]
   239b8:	b002      	add	sp, #8
   239ba:	bd10      	pop	{r4, pc}

000239bc <ull_isr>:
   239bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   239c0:	4604      	mov	r4, r0
   239c2:	2200      	movs	r2, #0
   239c4:	f44f 11f8 	mov.w	r1, #2031616	@ 0x1f0000
   239c8:	f7ff f8d9 	bl	22b7e <dwt_read8bitoffsetreg>
   239cc:	4605      	mov	r5, r0
   239ce:	2200      	movs	r2, #0
   239d0:	2144      	movs	r1, #68	@ 0x44
   239d2:	4620      	mov	r0, r4
   239d4:	f7ff f8ab 	bl	22b2e <dwt_read32bitoffsetreg>
   239d8:	4606      	mov	r6, r0
   239da:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   239dc:	2200      	movs	r2, #0
   239de:	83da      	strh	r2, [r3, #30]
   239e0:	f883 2020 	strb.w	r2, [r3, #32]
   239e4:	619a      	str	r2, [r3, #24]
   239e6:	839a      	strh	r2, [r3, #28]
   239e8:	625a      	str	r2, [r3, #36]	@ 0x24
   239ea:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   239ec:	625c      	str	r4, [r3, #36]	@ 0x24
   239ee:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   239f0:	7b9f      	ldrb	r7, [r3, #14]
   239f2:	2f00      	cmp	r7, #0
   239f4:	d17f      	bne.n	23af6 <ull_isr+0x13a>
   239f6:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   239f8:	619e      	str	r6, [r3, #24]
   239fa:	f8d4 8050 	ldr.w	r8, [r4, #80]	@ 0x50
   239fe:	f898 3015 	ldrb.w	r3, [r8, #21]
   23a02:	f003 0303 	and.w	r3, r3, #3
   23a06:	2b03      	cmp	r3, #3
   23a08:	f000 8090 	beq.w	23b2c <ull_isr+0x170>
   23a0c:	f015 0f80 	tst.w	r5, #128	@ 0x80
   23a10:	f040 8093 	bne.w	23b3a <ull_isr+0x17e>
   23a14:	f015 0f01 	tst.w	r5, #1
   23a18:	f040 80c1 	bne.w	23b9e <ull_isr+0x1e2>
   23a1c:	f015 0f40 	tst.w	r5, #64	@ 0x40
   23a20:	d00b      	beq.n	23a3a <ull_isr+0x7e>
   23a22:	6a63      	ldr	r3, [r4, #36]	@ 0x24
   23a24:	b113      	cbz	r3, 23a2c <ull_isr+0x70>
   23a26:	6d20      	ldr	r0, [r4, #80]	@ 0x50
   23a28:	3018      	adds	r0, #24
   23a2a:	4798      	blx	r3
   23a2c:	f44f 73c0 	mov.w	r3, #384	@ 0x180
   23a30:	2202      	movs	r2, #2
   23a32:	2144      	movs	r1, #68	@ 0x44
   23a34:	4620      	mov	r0, r4
   23a36:	f7ff fc92 	bl	2335e <dwt_write16bitoffsetreg>
   23a3a:	f015 0f08 	tst.w	r5, #8
   23a3e:	d107      	bne.n	23a50 <ull_isr+0x94>
   23a40:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   23a42:	7b9b      	ldrb	r3, [r3, #14]
   23a44:	2b00      	cmp	r3, #0
   23a46:	f000 80ea 	beq.w	23c1e <ull_isr+0x262>
   23a4a:	2f00      	cmp	r7, #0
   23a4c:	f000 80e7 	beq.w	23c1e <ull_isr+0x262>
   23a50:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   23a52:	2200      	movs	r2, #0
   23a54:	f883 2020 	strb.w	r2, [r3, #32]
   23a58:	f416 2f80 	tst.w	r6, #262144	@ 0x40000
   23a5c:	f000 80ad 	beq.w	23bba <ull_isr+0x1fe>
   23a60:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   23a62:	f892 3020 	ldrb.w	r3, [r2, #32]
   23a66:	f043 0308 	orr.w	r3, r3, #8
   23a6a:	f882 3020 	strb.w	r3, [r2, #32]
   23a6e:	f44f 2780 	mov.w	r7, #262144	@ 0x40000
   23a72:	f016 5f80 	tst.w	r6, #268435456	@ 0x10000000
   23a76:	d008      	beq.n	23a8a <ull_isr+0xce>
   23a78:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   23a7a:	f892 3020 	ldrb.w	r3, [r2, #32]
   23a7e:	f043 0310 	orr.w	r3, r3, #16
   23a82:	f882 3020 	strb.w	r3, [r2, #32]
   23a86:	f047 5780 	orr.w	r7, r7, #268435456	@ 0x10000000
   23a8a:	f416 5f00 	tst.w	r6, #8192	@ 0x2000
   23a8e:	d006      	beq.n	23a9e <ull_isr+0xe2>
   23a90:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   23a92:	7d53      	ldrb	r3, [r2, #21]
   23a94:	f003 0303 	and.w	r3, r3, #3
   23a98:	2b03      	cmp	r3, #3
   23a9a:	f000 809a 	beq.w	23bd2 <ull_isr+0x216>
   23a9e:	f416 4f80 	tst.w	r6, #16384	@ 0x4000
   23aa2:	f040 80a2 	bne.w	23bea <ull_isr+0x22e>
   23aa6:	f447 43de 	orr.w	r3, r7, #28416	@ 0x6f00
   23aaa:	2200      	movs	r2, #0
   23aac:	2144      	movs	r1, #68	@ 0x44
   23aae:	4620      	mov	r0, r4
   23ab0:	f7ff fcb2 	bl	23418 <dwt_write32bitoffsetreg>
   23ab4:	4620      	mov	r0, r4
   23ab6:	f7ff fe7b 	bl	237b0 <_dwt_clear_db_events>
   23aba:	6d20      	ldr	r0, [r4, #80]	@ 0x50
   23abc:	8bc3      	ldrh	r3, [r0, #30]
   23abe:	2b00      	cmp	r3, #0
   23ac0:	f040 80a2 	bne.w	23c08 <ull_isr+0x24c>
   23ac4:	7d43      	ldrb	r3, [r0, #21]
   23ac6:	f003 0303 	and.w	r3, r3, #3
   23aca:	2b03      	cmp	r3, #3
   23acc:	f000 809c 	beq.w	23c08 <ull_isr+0x24c>
   23ad0:	6983      	ldr	r3, [r0, #24]
   23ad2:	f423 4390 	bic.w	r3, r3, #18432	@ 0x4800
   23ad6:	6183      	str	r3, [r0, #24]
   23ad8:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   23ada:	6993      	ldr	r3, [r2, #24]
   23adc:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
   23ae0:	6193      	str	r3, [r2, #24]
   23ae2:	69e3      	ldr	r3, [r4, #28]
   23ae4:	b113      	cbz	r3, 23aec <ull_isr+0x130>
   23ae6:	6d20      	ldr	r0, [r4, #80]	@ 0x50
   23ae8:	3018      	adds	r0, #24
   23aea:	4798      	blx	r3
   23aec:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   23aee:	2200      	movs	r2, #0
   23af0:	f883 2020 	strb.w	r2, [r3, #32]
   23af4:	e08c      	b.n	23c10 <ull_isr+0x254>
   23af6:	496d      	ldr	r1, [pc, #436]	@ (23cac <ull_isr+0x2f0>)
   23af8:	4620      	mov	r0, r4
   23afa:	f7ff f840 	bl	22b7e <dwt_read8bitoffsetreg>
   23afe:	4607      	mov	r7, r0
   23b00:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   23b02:	7b9b      	ldrb	r3, [r3, #14]
   23b04:	2b03      	cmp	r3, #3
   23b06:	bf08      	it	eq
   23b08:	f3c0 1707 	ubfxeq	r7, r0, #4, #8
   23b0c:	f017 0f01 	tst.w	r7, #1
   23b10:	bf18      	it	ne
   23b12:	f446 4680 	orrne.w	r6, r6, #16384	@ 0x4000
   23b16:	f017 0f02 	tst.w	r7, #2
   23b1a:	bf18      	it	ne
   23b1c:	f446 5600 	orrne.w	r6, r6, #8192	@ 0x2000
   23b20:	f017 0f04 	tst.w	r7, #4
   23b24:	bf18      	it	ne
   23b26:	f446 6680 	orrne.w	r6, r6, #1024	@ 0x400
   23b2a:	e764      	b.n	239f6 <ull_isr+0x3a>
   23b2c:	f416 5f00 	tst.w	r6, #8192	@ 0x2000
   23b30:	bf1c      	itt	ne
   23b32:	f045 0508 	orrne.w	r5, r5, #8
   23b36:	b2ed      	uxtbne	r5, r5
   23b38:	e768      	b.n	23a0c <ull_isr+0x50>
   23b3a:	2200      	movs	r2, #0
   23b3c:	2148      	movs	r1, #72	@ 0x48
   23b3e:	4620      	mov	r0, r4
   23b40:	f7ff f80b 	bl	22b5a <dwt_read16bitoffsetreg>
   23b44:	f8a8 001c 	strh.w	r0, [r8, #28]
   23b48:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   23b4a:	7d1a      	ldrb	r2, [r3, #20]
   23b4c:	b11a      	cbz	r2, 23b56 <ull_isr+0x19a>
   23b4e:	699a      	ldr	r2, [r3, #24]
   23b50:	f012 0f04 	tst.w	r2, #4
   23b54:	d103      	bne.n	23b5e <ull_isr+0x1a2>
   23b56:	8b9b      	ldrh	r3, [r3, #28]
   23b58:	f403 6360 	and.w	r3, r3, #3584	@ 0xe00
   23b5c:	b18b      	cbz	r3, 23b82 <ull_isr+0x1c6>
   23b5e:	2304      	movs	r3, #4
   23b60:	2200      	movs	r2, #0
   23b62:	2144      	movs	r1, #68	@ 0x44
   23b64:	4620      	mov	r0, r4
   23b66:	f7ff fde5 	bl	23734 <dwt_write8bitoffsetreg>
   23b6a:	f44f 6360 	mov.w	r3, #3584	@ 0xe00
   23b6e:	2200      	movs	r2, #0
   23b70:	2148      	movs	r1, #72	@ 0x48
   23b72:	4620      	mov	r0, r4
   23b74:	f7ff fbf3 	bl	2335e <dwt_write16bitoffsetreg>
   23b78:	6a23      	ldr	r3, [r4, #32]
   23b7a:	b113      	cbz	r3, 23b82 <ull_isr+0x1c6>
   23b7c:	6d20      	ldr	r0, [r4, #80]	@ 0x50
   23b7e:	3018      	adds	r0, #24
   23b80:	4798      	blx	r3
   23b82:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   23b84:	8b9b      	ldrh	r3, [r3, #28]
   23b86:	f413 7f80 	tst.w	r3, #256	@ 0x100
   23b8a:	f43f af43 	beq.w	23a14 <ull_isr+0x58>
   23b8e:	f44f 7380 	mov.w	r3, #256	@ 0x100
   23b92:	2200      	movs	r2, #0
   23b94:	2148      	movs	r1, #72	@ 0x48
   23b96:	4620      	mov	r0, r4
   23b98:	f7ff fbe1 	bl	2335e <dwt_write16bitoffsetreg>
   23b9c:	e73a      	b.n	23a14 <ull_isr+0x58>
   23b9e:	23f8      	movs	r3, #248	@ 0xf8
   23ba0:	2200      	movs	r2, #0
   23ba2:	2144      	movs	r1, #68	@ 0x44
   23ba4:	4620      	mov	r0, r4
   23ba6:	f7ff fdc5 	bl	23734 <dwt_write8bitoffsetreg>
   23baa:	6923      	ldr	r3, [r4, #16]
   23bac:	2b00      	cmp	r3, #0
   23bae:	f43f af35 	beq.w	23a1c <ull_isr+0x60>
   23bb2:	6d20      	ldr	r0, [r4, #80]	@ 0x50
   23bb4:	3018      	adds	r0, #24
   23bb6:	4798      	blx	r3
   23bb8:	e730      	b.n	23a1c <ull_isr+0x60>
   23bba:	f416 6f80 	tst.w	r6, #1024	@ 0x400
   23bbe:	bf1f      	itttt	ne
   23bc0:	6d22      	ldrne	r2, [r4, #80]	@ 0x50
   23bc2:	f892 3020 	ldrbne.w	r3, [r2, #32]
   23bc6:	f043 0304 	orrne.w	r3, r3, #4
   23bca:	f882 3020 	strbne.w	r3, [r2, #32]
   23bce:	2700      	movs	r7, #0
   23bd0:	e74f      	b.n	23a72 <ull_isr+0xb6>
   23bd2:	f892 3020 	ldrb.w	r3, [r2, #32]
   23bd6:	f043 0302 	orr.w	r3, r3, #2
   23bda:	f882 3020 	strb.w	r3, [r2, #32]
   23bde:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   23be0:	2200      	movs	r2, #0
   23be2:	83da      	strh	r2, [r3, #30]
   23be4:	f447 4700 	orr.w	r7, r7, #32768	@ 0x8000
   23be8:	e75d      	b.n	23aa6 <ull_isr+0xea>
   23bea:	4620      	mov	r0, r4
   23bec:	f7ff fdae 	bl	2374c <ull_getframelength>
   23bf0:	f410 4f00 	tst.w	r0, #32768	@ 0x8000
   23bf4:	f43f af57 	beq.w	23aa6 <ull_isr+0xea>
   23bf8:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   23bfa:	f892 3020 	ldrb.w	r3, [r2, #32]
   23bfe:	f043 0301 	orr.w	r3, r3, #1
   23c02:	f882 3020 	strb.w	r3, [r2, #32]
   23c06:	e74e      	b.n	23aa6 <ull_isr+0xea>
   23c08:	6963      	ldr	r3, [r4, #20]
   23c0a:	b10b      	cbz	r3, 23c10 <ull_isr+0x254>
   23c0c:	3018      	adds	r0, #24
   23c0e:	4798      	blx	r3
   23c10:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   23c12:	7b9b      	ldrb	r3, [r3, #14]
   23c14:	bb03      	cbnz	r3, 23c58 <ull_isr+0x29c>
   23c16:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   23c18:	2200      	movs	r2, #0
   23c1a:	f883 2020 	strb.w	r2, [r3, #32]
   23c1e:	f015 0f10 	tst.w	r5, #16
   23c22:	d11d      	bne.n	23c60 <ull_isr+0x2a4>
   23c24:	f015 0f20 	tst.w	r5, #32
   23c28:	d12d      	bne.n	23c86 <ull_isr+0x2ca>
   23c2a:	2200      	movs	r2, #0
   23c2c:	4920      	ldr	r1, [pc, #128]	@ (23cb0 <ull_isr+0x2f4>)
   23c2e:	4620      	mov	r0, r4
   23c30:	f7fe ffa5 	bl	22b7e <dwt_read8bitoffsetreg>
   23c34:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   23c36:	f883 0021 	strb.w	r0, [r3, #33]	@ 0x21
   23c3a:	f010 0303 	ands.w	r3, r0, #3
   23c3e:	d009      	beq.n	23c54 <ull_isr+0x298>
   23c40:	2200      	movs	r2, #0
   23c42:	491b      	ldr	r1, [pc, #108]	@ (23cb0 <ull_isr+0x2f4>)
   23c44:	4620      	mov	r0, r4
   23c46:	f7ff fd75 	bl	23734 <dwt_write8bitoffsetreg>
   23c4a:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
   23c4c:	b113      	cbz	r3, 23c54 <ull_isr+0x298>
   23c4e:	6d20      	ldr	r0, [r4, #80]	@ 0x50
   23c50:	3018      	adds	r0, #24
   23c52:	4798      	blx	r3
   23c54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   23c58:	4620      	mov	r0, r4
   23c5a:	f7ff fe9b 	bl	23994 <ull_signal_rx_buff_free>
   23c5e:	e7da      	b.n	23c16 <ull_isr+0x25a>
   23c60:	4b14      	ldr	r3, [pc, #80]	@ (23cb4 <ull_isr+0x2f8>)
   23c62:	2200      	movs	r2, #0
   23c64:	2144      	movs	r1, #68	@ 0x44
   23c66:	4620      	mov	r0, r4
   23c68:	f7ff fbd6 	bl	23418 <dwt_write32bitoffsetreg>
   23c6c:	4620      	mov	r0, r4
   23c6e:	f7ff fd9f 	bl	237b0 <_dwt_clear_db_events>
   23c72:	69e3      	ldr	r3, [r4, #28]
   23c74:	b113      	cbz	r3, 23c7c <ull_isr+0x2c0>
   23c76:	6d20      	ldr	r0, [r4, #80]	@ 0x50
   23c78:	3018      	adds	r0, #24
   23c7a:	4798      	blx	r3
   23c7c:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   23c7e:	2200      	movs	r2, #0
   23c80:	f883 2020 	strb.w	r2, [r3, #32]
   23c84:	e7ce      	b.n	23c24 <ull_isr+0x268>
   23c86:	4b0c      	ldr	r3, [pc, #48]	@ (23cb8 <ull_isr+0x2fc>)
   23c88:	2200      	movs	r2, #0
   23c8a:	2144      	movs	r1, #68	@ 0x44
   23c8c:	4620      	mov	r0, r4
   23c8e:	f7ff fbc3 	bl	23418 <dwt_write32bitoffsetreg>
   23c92:	4620      	mov	r0, r4
   23c94:	f7ff fd8c 	bl	237b0 <_dwt_clear_db_events>
   23c98:	69a3      	ldr	r3, [r4, #24]
   23c9a:	b113      	cbz	r3, 23ca2 <ull_isr+0x2e6>
   23c9c:	6d20      	ldr	r0, [r4, #80]	@ 0x50
   23c9e:	3018      	adds	r0, #24
   23ca0:	4798      	blx	r3
   23ca2:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   23ca4:	2200      	movs	r2, #0
   23ca6:	f883 2020 	strb.w	r2, [r3, #32]
   23caa:	e7be      	b.n	23c2a <ull_isr+0x26e>
   23cac:	00010018 	.word	0x00010018
   23cb0:	00110038 	.word	0x00110038
   23cb4:	34059400 	.word	0x34059400
   23cb8:	10220400 	.word	0x10220400

00023cbc <dwt_modify32bitoffsetreg>:
   23cbc:	b530      	push	{r4, r5, lr}
   23cbe:	b085      	sub	sp, #20
   23cc0:	9c08      	ldr	r4, [sp, #32]
   23cc2:	f88d 3008 	strb.w	r3, [sp, #8]
   23cc6:	0a1d      	lsrs	r5, r3, #8
   23cc8:	f88d 5009 	strb.w	r5, [sp, #9]
   23ccc:	0c1d      	lsrs	r5, r3, #16
   23cce:	f88d 500a 	strb.w	r5, [sp, #10]
   23cd2:	0e1b      	lsrs	r3, r3, #24
   23cd4:	f88d 300b 	strb.w	r3, [sp, #11]
   23cd8:	f88d 400c 	strb.w	r4, [sp, #12]
   23cdc:	0a23      	lsrs	r3, r4, #8
   23cde:	f88d 300d 	strb.w	r3, [sp, #13]
   23ce2:	0c23      	lsrs	r3, r4, #16
   23ce4:	f88d 300e 	strb.w	r3, [sp, #14]
   23ce8:	0e24      	lsrs	r4, r4, #24
   23cea:	f88d 400f 	strb.w	r4, [sp, #15]
   23cee:	f248 0303 	movw	r3, #32771	@ 0x8003
   23cf2:	9301      	str	r3, [sp, #4]
   23cf4:	ab02      	add	r3, sp, #8
   23cf6:	9300      	str	r3, [sp, #0]
   23cf8:	2308      	movs	r3, #8
   23cfa:	b292      	uxth	r2, r2
   23cfc:	f7fe fe8f 	bl	22a1e <dwt_xfer3xxx>
   23d00:	b005      	add	sp, #20
   23d02:	bd30      	pop	{r4, r5, pc}

00023d04 <ull_enable_rf_tx>:
   23d04:	b570      	push	{r4, r5, r6, lr}
   23d06:	b082      	sub	sp, #8
   23d08:	4604      	mov	r4, r0
   23d0a:	460e      	mov	r6, r1
   23d0c:	4d13      	ldr	r5, [pc, #76]	@ (23d5c <ull_enable_rf_tx+0x58>)
   23d0e:	f04f 2308 	mov.w	r3, #134219776	@ 0x8000800
   23d12:	9300      	str	r3, [sp, #0]
   23d14:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   23d18:	2200      	movs	r2, #0
   23d1a:	4629      	mov	r1, r5
   23d1c:	f7ff ffce 	bl	23cbc <dwt_modify32bitoffsetreg>
   23d20:	f04f 1360 	mov.w	r3, #6291552	@ 0x600060
   23d24:	9300      	str	r3, [sp, #0]
   23d26:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   23d2a:	2200      	movs	r2, #0
   23d2c:	4629      	mov	r1, r5
   23d2e:	4620      	mov	r0, r4
   23d30:	f7ff ffc4 	bl	23cbc <dwt_modify32bitoffsetreg>
   23d34:	4b0a      	ldr	r3, [pc, #40]	@ (23d60 <ull_enable_rf_tx+0x5c>)
   23d36:	9300      	str	r3, [sp, #0]
   23d38:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   23d3c:	2200      	movs	r2, #0
   23d3e:	f44f 21e0 	mov.w	r1, #458752	@ 0x70000
   23d42:	4620      	mov	r0, r4
   23d44:	f7ff ffba 	bl	23cbc <dwt_modify32bitoffsetreg>
   23d48:	b90e      	cbnz	r6, 23d4e <ull_enable_rf_tx+0x4a>
   23d4a:	b002      	add	sp, #8
   23d4c:	bd70      	pop	{r4, r5, r6, pc}
   23d4e:	4b05      	ldr	r3, [pc, #20]	@ (23d64 <ull_enable_rf_tx+0x60>)
   23d50:	2200      	movs	r2, #0
   23d52:	4905      	ldr	r1, [pc, #20]	@ (23d68 <ull_enable_rf_tx+0x64>)
   23d54:	4620      	mov	r0, r4
   23d56:	f7ff fb5f 	bl	23418 <dwt_write32bitoffsetreg>
   23d5a:	e7f6      	b.n	23d4a <ull_enable_rf_tx+0x46>
   23d5c:	00070048 	.word	0x00070048
   23d60:	02003c00 	.word	0x02003c00
   23d64:	01011100 	.word	0x01011100
   23d68:	00070014 	.word	0x00070014

00023d6c <ull_enable_rftx_blocks>:
   23d6c:	b500      	push	{lr}
   23d6e:	b083      	sub	sp, #12
   23d70:	4b05      	ldr	r3, [pc, #20]	@ (23d88 <ull_enable_rftx_blocks+0x1c>)
   23d72:	9300      	str	r3, [sp, #0]
   23d74:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   23d78:	2200      	movs	r2, #0
   23d7a:	4904      	ldr	r1, [pc, #16]	@ (23d8c <ull_enable_rftx_blocks+0x20>)
   23d7c:	f7ff ff9e 	bl	23cbc <dwt_modify32bitoffsetreg>
   23d80:	b003      	add	sp, #12
   23d82:	f85d fb04 	ldr.w	pc, [sp], #4
   23d86:	bf00      	nop
   23d88:	02003c00 	.word	0x02003c00
   23d8c:	00070004 	.word	0x00070004

00023d90 <_dwt_otpprogword32>:
   23d90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   23d94:	b083      	sub	sp, #12
   23d96:	4604      	mov	r4, r0
   23d98:	460d      	mov	r5, r1
   23d9a:	4617      	mov	r7, r2
   23d9c:	4e56      	ldr	r6, [pc, #344]	@ (23ef8 <_dwt_otpprogword32+0x168>)
   23d9e:	2200      	movs	r2, #0
   23da0:	4631      	mov	r1, r6
   23da2:	f7fe fec4 	bl	22b2e <dwt_read32bitoffsetreg>
   23da6:	4681      	mov	r9, r0
   23da8:	f44f 4370 	mov.w	r3, #61440	@ 0xf000
   23dac:	9300      	str	r3, [sp, #0]
   23dae:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   23db2:	2200      	movs	r2, #0
   23db4:	4631      	mov	r1, r6
   23db6:	4620      	mov	r0, r4
   23db8:	f7ff ff80 	bl	23cbc <dwt_modify32bitoffsetreg>
   23dbc:	f8df 813c 	ldr.w	r8, [pc, #316]	@ 23efc <_dwt_otpprogword32+0x16c>
   23dc0:	2318      	movs	r3, #24
   23dc2:	2200      	movs	r2, #0
   23dc4:	4641      	mov	r1, r8
   23dc6:	4620      	mov	r0, r4
   23dc8:	f7ff fac9 	bl	2335e <dwt_write16bitoffsetreg>
   23dcc:	2125      	movs	r1, #37	@ 0x25
   23dce:	4620      	mov	r0, r4
   23dd0:	f7ff faec 	bl	233ac <__dwt_otp_write_wdata_id_reg>
   23dd4:	2102      	movs	r1, #2
   23dd6:	4620      	mov	r0, r4
   23dd8:	f7ff fae8 	bl	233ac <__dwt_otp_write_wdata_id_reg>
   23ddc:	f44f 71fe 	mov.w	r1, #508	@ 0x1fc
   23de0:	4620      	mov	r0, r4
   23de2:	f7ff fae3 	bl	233ac <__dwt_otp_write_wdata_id_reg>
   23de6:	b2f9      	uxtb	r1, r7
   23de8:	f441 7180 	orr.w	r1, r1, #256	@ 0x100
   23dec:	4620      	mov	r0, r4
   23dee:	f7ff fadd 	bl	233ac <__dwt_otp_write_wdata_id_reg>
   23df2:	f44f 7180 	mov.w	r1, #256	@ 0x100
   23df6:	4620      	mov	r0, r4
   23df8:	f7ff fad8 	bl	233ac <__dwt_otp_write_wdata_id_reg>
   23dfc:	2100      	movs	r1, #0
   23dfe:	4620      	mov	r0, r4
   23e00:	f7ff fad4 	bl	233ac <__dwt_otp_write_wdata_id_reg>
   23e04:	2102      	movs	r1, #2
   23e06:	4620      	mov	r0, r4
   23e08:	f7ff fad0 	bl	233ac <__dwt_otp_write_wdata_id_reg>
   23e0c:	f44f 71e0 	mov.w	r1, #448	@ 0x1c0
   23e10:	4620      	mov	r0, r4
   23e12:	f7ff facb 	bl	233ac <__dwt_otp_write_wdata_id_reg>
   23e16:	b2e9      	uxtb	r1, r5
   23e18:	f441 7180 	orr.w	r1, r1, #256	@ 0x100
   23e1c:	4620      	mov	r0, r4
   23e1e:	f7ff fac5 	bl	233ac <__dwt_otp_write_wdata_id_reg>
   23e22:	f3c5 2107 	ubfx	r1, r5, #8, #8
   23e26:	f441 7180 	orr.w	r1, r1, #256	@ 0x100
   23e2a:	4620      	mov	r0, r4
   23e2c:	f7ff fabe 	bl	233ac <__dwt_otp_write_wdata_id_reg>
   23e30:	f3c5 4107 	ubfx	r1, r5, #16, #8
   23e34:	f441 7180 	orr.w	r1, r1, #256	@ 0x100
   23e38:	4620      	mov	r0, r4
   23e3a:	f7ff fab7 	bl	233ac <__dwt_otp_write_wdata_id_reg>
   23e3e:	0e29      	lsrs	r1, r5, #24
   23e40:	f441 7180 	orr.w	r1, r1, #256	@ 0x100
   23e44:	4620      	mov	r0, r4
   23e46:	f7ff fab1 	bl	233ac <__dwt_otp_write_wdata_id_reg>
   23e4a:	2100      	movs	r1, #0
   23e4c:	4620      	mov	r0, r4
   23e4e:	f7ff faad 	bl	233ac <__dwt_otp_write_wdata_id_reg>
   23e52:	213a      	movs	r1, #58	@ 0x3a
   23e54:	4620      	mov	r0, r4
   23e56:	f7ff faa9 	bl	233ac <__dwt_otp_write_wdata_id_reg>
   23e5a:	f240 11ff 	movw	r1, #511	@ 0x1ff
   23e5e:	4620      	mov	r0, r4
   23e60:	f7ff faa4 	bl	233ac <__dwt_otp_write_wdata_id_reg>
   23e64:	f44f 7185 	mov.w	r1, #266	@ 0x10a
   23e68:	4620      	mov	r0, r4
   23e6a:	f7ff fa9f 	bl	233ac <__dwt_otp_write_wdata_id_reg>
   23e6e:	2100      	movs	r1, #0
   23e70:	4620      	mov	r0, r4
   23e72:	f7ff fa9b 	bl	233ac <__dwt_otp_write_wdata_id_reg>
   23e76:	213a      	movs	r1, #58	@ 0x3a
   23e78:	4620      	mov	r0, r4
   23e7a:	f7ff fa97 	bl	233ac <__dwt_otp_write_wdata_id_reg>
   23e7e:	f240 1101 	movw	r1, #257	@ 0x101
   23e82:	4620      	mov	r0, r4
   23e84:	f7ff fa92 	bl	233ac <__dwt_otp_write_wdata_id_reg>
   23e88:	2302      	movs	r3, #2
   23e8a:	2200      	movs	r2, #0
   23e8c:	f44f 2130 	mov.w	r1, #720896	@ 0xb0000
   23e90:	4620      	mov	r0, r4
   23e92:	f7ff fa64 	bl	2335e <dwt_write16bitoffsetreg>
   23e96:	2300      	movs	r3, #0
   23e98:	461a      	mov	r2, r3
   23e9a:	f44f 2130 	mov.w	r1, #720896	@ 0xb0000
   23e9e:	4620      	mov	r0, r4
   23ea0:	f7ff fa5d 	bl	2335e <dwt_write16bitoffsetreg>
   23ea4:	2002      	movs	r0, #2
   23ea6:	f7f6 ffb6 	bl	1ae16 <deca_sleep>
   23eaa:	213a      	movs	r1, #58	@ 0x3a
   23eac:	4620      	mov	r0, r4
   23eae:	f7ff fa7d 	bl	233ac <__dwt_otp_write_wdata_id_reg>
   23eb2:	f44f 7181 	mov.w	r1, #258	@ 0x102
   23eb6:	4620      	mov	r0, r4
   23eb8:	f7ff fa78 	bl	233ac <__dwt_otp_write_wdata_id_reg>
   23ebc:	2302      	movs	r3, #2
   23ebe:	2200      	movs	r2, #0
   23ec0:	f44f 2130 	mov.w	r1, #720896	@ 0xb0000
   23ec4:	4620      	mov	r0, r4
   23ec6:	f7ff fa4a 	bl	2335e <dwt_write16bitoffsetreg>
   23eca:	2300      	movs	r3, #0
   23ecc:	461a      	mov	r2, r3
   23ece:	f44f 2130 	mov.w	r1, #720896	@ 0xb0000
   23ed2:	4620      	mov	r0, r4
   23ed4:	f7ff fa43 	bl	2335e <dwt_write16bitoffsetreg>
   23ed8:	2300      	movs	r3, #0
   23eda:	461a      	mov	r2, r3
   23edc:	4641      	mov	r1, r8
   23ede:	4620      	mov	r0, r4
   23ee0:	f7ff fa3d 	bl	2335e <dwt_write16bitoffsetreg>
   23ee4:	464b      	mov	r3, r9
   23ee6:	2200      	movs	r2, #0
   23ee8:	4631      	mov	r1, r6
   23eea:	4620      	mov	r0, r4
   23eec:	f7ff fa94 	bl	23418 <dwt_write32bitoffsetreg>
   23ef0:	b003      	add	sp, #12
   23ef2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   23ef6:	bf00      	nop
   23ef8:	00070044 	.word	0x00070044
   23efc:	000b0008 	.word	0x000b0008

00023f00 <ull_setgpiomode>:
   23f00:	b5f0      	push	{r4, r5, r6, r7, lr}
   23f02:	b083      	sub	sp, #12
   23f04:	2400      	movs	r4, #0
   23f06:	4623      	mov	r3, r4
   23f08:	2601      	movs	r6, #1
   23f0a:	2707      	movs	r7, #7
   23f0c:	e002      	b.n	23f14 <ull_setgpiomode+0x14>
   23f0e:	3401      	adds	r4, #1
   23f10:	2c09      	cmp	r4, #9
   23f12:	d009      	beq.n	23f28 <ull_setgpiomode+0x28>
   23f14:	fa06 f504 	lsl.w	r5, r6, r4
   23f18:	420d      	tst	r5, r1
   23f1a:	d0f8      	beq.n	23f0e <ull_setgpiomode+0xe>
   23f1c:	eb04 0544 	add.w	r5, r4, r4, lsl #1
   23f20:	fa07 f505 	lsl.w	r5, r7, r5
   23f24:	432b      	orrs	r3, r5
   23f26:	e7f2      	b.n	23f0e <ull_setgpiomode+0xe>
   23f28:	401a      	ands	r2, r3
   23f2a:	9200      	str	r2, [sp, #0]
   23f2c:	43db      	mvns	r3, r3
   23f2e:	2200      	movs	r2, #0
   23f30:	f44f 21a0 	mov.w	r1, #327680	@ 0x50000
   23f34:	f7ff fec2 	bl	23cbc <dwt_modify32bitoffsetreg>
   23f38:	b003      	add	sp, #12
   23f3a:	bdf0      	pop	{r4, r5, r6, r7, pc}

00023f3c <ull_writetxfctrl>:
   23f3c:	b510      	push	{r4, lr}
   23f3e:	b082      	sub	sp, #8
   23f40:	4604      	mov	r4, r0
   23f42:	2a7f      	cmp	r2, #127	@ 0x7f
   23f44:	d912      	bls.n	23f6c <ull_writetxfctrl+0x30>
   23f46:	3280      	adds	r2, #128	@ 0x80
   23f48:	ea41 21c3 	orr.w	r1, r1, r3, lsl #11
   23f4c:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
   23f50:	9100      	str	r1, [sp, #0]
   23f52:	4b0c      	ldr	r3, [pc, #48]	@ (23f84 <ull_writetxfctrl+0x48>)
   23f54:	2200      	movs	r2, #0
   23f56:	2120      	movs	r1, #32
   23f58:	f7ff feb0 	bl	23cbc <dwt_modify32bitoffsetreg>
   23f5c:	2200      	movs	r2, #0
   23f5e:	f44f 2100 	mov.w	r1, #524288	@ 0x80000
   23f62:	4620      	mov	r0, r4
   23f64:	f7fe fe0b 	bl	22b7e <dwt_read8bitoffsetreg>
   23f68:	b002      	add	sp, #8
   23f6a:	bd10      	pop	{r4, pc}
   23f6c:	ea41 21c3 	orr.w	r1, r1, r3, lsl #11
   23f70:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
   23f74:	9100      	str	r1, [sp, #0]
   23f76:	4b03      	ldr	r3, [pc, #12]	@ (23f84 <ull_writetxfctrl+0x48>)
   23f78:	2200      	movs	r2, #0
   23f7a:	2120      	movs	r1, #32
   23f7c:	f7ff fe9e 	bl	23cbc <dwt_modify32bitoffsetreg>
   23f80:	e7f2      	b.n	23f68 <ull_writetxfctrl+0x2c>
   23f82:	bf00      	nop
   23f84:	fc00f400 	.word	0xfc00f400

00023f88 <prs_sys_status_and_or>:
   23f88:	b500      	push	{lr}
   23f8a:	b083      	sub	sp, #12
   23f8c:	9200      	str	r2, [sp, #0]
   23f8e:	460b      	mov	r3, r1
   23f90:	2200      	movs	r2, #0
   23f92:	2144      	movs	r1, #68	@ 0x44
   23f94:	f7ff fe92 	bl	23cbc <dwt_modify32bitoffsetreg>
   23f98:	2000      	movs	r0, #0
   23f9a:	b003      	add	sp, #12
   23f9c:	f85d fb04 	ldr.w	pc, [sp], #4

00023fa0 <dwt_modify8bitoffsetreg>:
   23fa0:	b500      	push	{lr}
   23fa2:	b085      	sub	sp, #20
   23fa4:	f88d 300c 	strb.w	r3, [sp, #12]
   23fa8:	f89d 3018 	ldrb.w	r3, [sp, #24]
   23fac:	f88d 300d 	strb.w	r3, [sp, #13]
   23fb0:	f248 0301 	movw	r3, #32769	@ 0x8001
   23fb4:	9301      	str	r3, [sp, #4]
   23fb6:	ab03      	add	r3, sp, #12
   23fb8:	9300      	str	r3, [sp, #0]
   23fba:	2302      	movs	r3, #2
   23fbc:	b292      	uxth	r2, r2
   23fbe:	f7fe fd2e 	bl	22a1e <dwt_xfer3xxx>
   23fc2:	b005      	add	sp, #20
   23fc4:	f85d fb04 	ldr.w	pc, [sp], #4

00023fc8 <ull_configciadiag>:
   23fc8:	b530      	push	{r4, r5, lr}
   23fca:	b083      	sub	sp, #12
   23fcc:	4604      	mov	r4, r0
   23fce:	460d      	mov	r5, r1
   23fd0:	f011 0f01 	tst.w	r1, #1
   23fd4:	d015      	beq.n	24002 <ull_configciadiag+0x3a>
   23fd6:	2300      	movs	r3, #0
   23fd8:	9300      	str	r3, [sp, #0]
   23fda:	23ef      	movs	r3, #239	@ 0xef
   23fdc:	2202      	movs	r2, #2
   23fde:	f44f 2160 	mov.w	r1, #917504	@ 0xe0000
   23fe2:	f7ff ffdd 	bl	23fa0 <dwt_modify8bitoffsetreg>
   23fe6:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   23fe8:	759d      	strb	r5, [r3, #22]
   23fea:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   23fec:	7d9b      	ldrb	r3, [r3, #22]
   23fee:	085b      	lsrs	r3, r3, #1
   23ff0:	d010      	beq.n	24014 <ull_configciadiag+0x4c>
   23ff2:	086b      	lsrs	r3, r5, #1
   23ff4:	2200      	movs	r2, #0
   23ff6:	490e      	ldr	r1, [pc, #56]	@ (24030 <ull_configciadiag+0x68>)
   23ff8:	4620      	mov	r0, r4
   23ffa:	f7ff fb9b 	bl	23734 <dwt_write8bitoffsetreg>
   23ffe:	b003      	add	sp, #12
   24000:	bd30      	pop	{r4, r5, pc}
   24002:	2310      	movs	r3, #16
   24004:	9300      	str	r3, [sp, #0]
   24006:	23ff      	movs	r3, #255	@ 0xff
   24008:	2202      	movs	r2, #2
   2400a:	f44f 2160 	mov.w	r1, #917504	@ 0xe0000
   2400e:	f7ff ffc7 	bl	23fa0 <dwt_modify8bitoffsetreg>
   24012:	e7e8      	b.n	23fe6 <ull_configciadiag+0x1e>
   24014:	2301      	movs	r3, #1
   24016:	9300      	str	r3, [sp, #0]
   24018:	23ff      	movs	r3, #255	@ 0xff
   2401a:	2200      	movs	r2, #0
   2401c:	4904      	ldr	r1, [pc, #16]	@ (24030 <ull_configciadiag+0x68>)
   2401e:	4620      	mov	r0, r4
   24020:	f7ff ffbe 	bl	23fa0 <dwt_modify8bitoffsetreg>
   24024:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   24026:	7d93      	ldrb	r3, [r2, #22]
   24028:	f043 0302 	orr.w	r3, r3, #2
   2402c:	7593      	strb	r3, [r2, #22]
   2402e:	e7e6      	b.n	23ffe <ull_configciadiag+0x36>
   24030:	00010020 	.word	0x00010020

00024034 <ull_calcbandwidthadj>:
   24034:	b570      	push	{r4, r5, r6, lr}
   24036:	b082      	sub	sp, #8
   24038:	4604      	mov	r4, r0
   2403a:	460d      	mov	r5, r1
   2403c:	2101      	movs	r1, #1
   2403e:	f7ff f99f 	bl	23380 <ull_force_clocks>
   24042:	2100      	movs	r1, #0
   24044:	4620      	mov	r0, r4
   24046:	f7ff fe5d 	bl	23d04 <ull_enable_rf_tx>
   2404a:	4620      	mov	r0, r4
   2404c:	f7ff fe8e 	bl	23d6c <ull_enable_rftx_blocks>
   24050:	f3c5 030b 	ubfx	r3, r5, #0, #12
   24054:	2200      	movs	r2, #0
   24056:	4915      	ldr	r1, [pc, #84]	@ (240ac <ull_calcbandwidthadj+0x78>)
   24058:	4620      	mov	r0, r4
   2405a:	f7ff f980 	bl	2335e <dwt_write16bitoffsetreg>
   2405e:	2303      	movs	r3, #3
   24060:	9300      	str	r3, [sp, #0]
   24062:	23ff      	movs	r3, #255	@ 0xff
   24064:	2200      	movs	r2, #0
   24066:	4912      	ldr	r1, [pc, #72]	@ (240b0 <ull_calcbandwidthadj+0x7c>)
   24068:	4620      	mov	r0, r4
   2406a:	f7ff ff99 	bl	23fa0 <dwt_modify8bitoffsetreg>
   2406e:	4e10      	ldr	r6, [pc, #64]	@ (240b0 <ull_calcbandwidthadj+0x7c>)
   24070:	2500      	movs	r5, #0
   24072:	462a      	mov	r2, r5
   24074:	4631      	mov	r1, r6
   24076:	4620      	mov	r0, r4
   24078:	f7fe fd81 	bl	22b7e <dwt_read8bitoffsetreg>
   2407c:	f010 0f01 	tst.w	r0, #1
   24080:	d1f7      	bne.n	24072 <ull_calcbandwidthadj+0x3e>
   24082:	4620      	mov	r0, r4
   24084:	f7ff faf8 	bl	23678 <ull_disable_rftx_blocks>
   24088:	2100      	movs	r1, #0
   2408a:	4620      	mov	r0, r4
   2408c:	f7ff fafe 	bl	2368c <ull_disable_rf_tx>
   24090:	2105      	movs	r1, #5
   24092:	4620      	mov	r0, r4
   24094:	f7ff f974 	bl	23380 <ull_force_clocks>
   24098:	2200      	movs	r2, #0
   2409a:	4906      	ldr	r1, [pc, #24]	@ (240b4 <ull_calcbandwidthadj+0x80>)
   2409c:	4620      	mov	r0, r4
   2409e:	f7fe fd6e 	bl	22b7e <dwt_read8bitoffsetreg>
   240a2:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
   240a6:	b002      	add	sp, #8
   240a8:	bd70      	pop	{r4, r5, r6, pc}
   240aa:	bf00      	nop
   240ac:	0008001c 	.word	0x0008001c
   240b0:	00080010 	.word	0x00080010
   240b4:	0007001c 	.word	0x0007001c

000240b8 <ull_configuretxrf>:
   240b8:	b538      	push	{r3, r4, r5, lr}
   240ba:	4605      	mov	r5, r0
   240bc:	460c      	mov	r4, r1
   240be:	f8b1 1005 	ldrh.w	r1, [r1, #5]
   240c2:	b149      	cbz	r1, 240d8 <ull_configuretxrf+0x20>
   240c4:	f7ff ffb6 	bl	24034 <ull_calcbandwidthadj>
   240c8:	f8d4 3001 	ldr.w	r3, [r4, #1]
   240cc:	2200      	movs	r2, #0
   240ce:	4905      	ldr	r1, [pc, #20]	@ (240e4 <ull_configuretxrf+0x2c>)
   240d0:	4628      	mov	r0, r5
   240d2:	f7ff f9a1 	bl	23418 <dwt_write32bitoffsetreg>
   240d6:	bd38      	pop	{r3, r4, r5, pc}
   240d8:	7823      	ldrb	r3, [r4, #0]
   240da:	2200      	movs	r2, #0
   240dc:	4902      	ldr	r1, [pc, #8]	@ (240e8 <ull_configuretxrf+0x30>)
   240de:	f7ff fb29 	bl	23734 <dwt_write8bitoffsetreg>
   240e2:	e7f1      	b.n	240c8 <ull_configuretxrf+0x10>
   240e4:	00010004 	.word	0x00010004
   240e8:	0007001c 	.word	0x0007001c

000240ec <ull_repeated_frames>:
   240ec:	b530      	push	{r4, r5, lr}
   240ee:	b083      	sub	sp, #12
   240f0:	4604      	mov	r4, r0
   240f2:	460d      	mov	r5, r1
   240f4:	2310      	movs	r3, #16
   240f6:	9300      	str	r3, [sp, #0]
   240f8:	23ff      	movs	r3, #255	@ 0xff
   240fa:	2200      	movs	r2, #0
   240fc:	4906      	ldr	r1, [pc, #24]	@ (24118 <ull_repeated_frames+0x2c>)
   240fe:	f7ff ff4f 	bl	23fa0 <dwt_modify8bitoffsetreg>
   24102:	462b      	mov	r3, r5
   24104:	2d02      	cmp	r5, #2
   24106:	bf38      	it	cc
   24108:	2302      	movcc	r3, #2
   2410a:	2200      	movs	r2, #0
   2410c:	2128      	movs	r1, #40	@ 0x28
   2410e:	4620      	mov	r0, r4
   24110:	f7ff f982 	bl	23418 <dwt_write32bitoffsetreg>
   24114:	b003      	add	sp, #12
   24116:	bd30      	pop	{r4, r5, pc}
   24118:	000f0028 	.word	0x000f0028

0002411c <ull_setdwstate>:
   2411c:	b530      	push	{r4, r5, lr}
   2411e:	b083      	sub	sp, #12
   24120:	4604      	mov	r4, r0
   24122:	2901      	cmp	r1, #1
   24124:	d01d      	beq.n	24162 <ull_setdwstate+0x46>
   24126:	2902      	cmp	r1, #2
   24128:	d02f      	beq.n	2418a <ull_setdwstate+0x6e>
   2412a:	2301      	movs	r3, #1
   2412c:	9300      	str	r3, [sp, #0]
   2412e:	23ff      	movs	r3, #255	@ 0xff
   24130:	2200      	movs	r2, #0
   24132:	4925      	ldr	r1, [pc, #148]	@ (241c8 <ull_setdwstate+0xac>)
   24134:	f7ff ff34 	bl	23fa0 <dwt_modify8bitoffsetreg>
   24138:	4d24      	ldr	r5, [pc, #144]	@ (241cc <ull_setdwstate+0xb0>)
   2413a:	f44f 0300 	mov.w	r3, #8388608	@ 0x800000
   2413e:	9300      	str	r3, [sp, #0]
   24140:	f46f 7380 	mvn.w	r3, #256	@ 0x100
   24144:	2200      	movs	r2, #0
   24146:	4629      	mov	r1, r5
   24148:	4620      	mov	r0, r4
   2414a:	f7ff fdb7 	bl	23cbc <dwt_modify32bitoffsetreg>
   2414e:	2300      	movs	r3, #0
   24150:	9300      	str	r3, [sp, #0]
   24152:	237f      	movs	r3, #127	@ 0x7f
   24154:	2202      	movs	r2, #2
   24156:	4629      	mov	r1, r5
   24158:	4620      	mov	r0, r4
   2415a:	f7ff ff21 	bl	23fa0 <dwt_modify8bitoffsetreg>
   2415e:	b003      	add	sp, #12
   24160:	bd30      	pop	{r4, r5, pc}
   24162:	2105      	movs	r1, #5
   24164:	f7ff f90c 	bl	23380 <ull_force_clocks>
   24168:	2302      	movs	r3, #2
   2416a:	9300      	str	r3, [sp, #0]
   2416c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   24170:	2200      	movs	r2, #0
   24172:	4917      	ldr	r1, [pc, #92]	@ (241d0 <ull_setdwstate+0xb4>)
   24174:	4620      	mov	r0, r4
   24176:	f7ff fda1 	bl	23cbc <dwt_modify32bitoffsetreg>
   2417a:	2201      	movs	r2, #1
   2417c:	9200      	str	r2, [sp, #0]
   2417e:	23ff      	movs	r3, #255	@ 0xff
   24180:	4912      	ldr	r1, [pc, #72]	@ (241cc <ull_setdwstate+0xb0>)
   24182:	4620      	mov	r0, r4
   24184:	f7ff ff0c 	bl	23fa0 <dwt_modify8bitoffsetreg>
   24188:	e7e9      	b.n	2415e <ull_setdwstate+0x42>
   2418a:	2303      	movs	r3, #3
   2418c:	9300      	str	r3, [sp, #0]
   2418e:	23ff      	movs	r3, #255	@ 0xff
   24190:	2200      	movs	r2, #0
   24192:	490d      	ldr	r1, [pc, #52]	@ (241c8 <ull_setdwstate+0xac>)
   24194:	f7ff ff04 	bl	23fa0 <dwt_modify8bitoffsetreg>
   24198:	4d0c      	ldr	r5, [pc, #48]	@ (241cc <ull_setdwstate+0xb0>)
   2419a:	f44f 0300 	mov.w	r3, #8388608	@ 0x800000
   2419e:	9300      	str	r3, [sp, #0]
   241a0:	f46f 7380 	mvn.w	r3, #256	@ 0x100
   241a4:	2200      	movs	r2, #0
   241a6:	4629      	mov	r1, r5
   241a8:	4620      	mov	r0, r4
   241aa:	f7ff fd87 	bl	23cbc <dwt_modify32bitoffsetreg>
   241ae:	2300      	movs	r3, #0
   241b0:	9300      	str	r3, [sp, #0]
   241b2:	237f      	movs	r3, #127	@ 0x7f
   241b4:	2202      	movs	r2, #2
   241b6:	4629      	mov	r1, r5
   241b8:	4620      	mov	r0, r4
   241ba:	f7ff fef1 	bl	23fa0 <dwt_modify8bitoffsetreg>
   241be:	2105      	movs	r1, #5
   241c0:	4620      	mov	r0, r4
   241c2:	f7ff f8dd 	bl	23380 <ull_force_clocks>
   241c6:	e7ca      	b.n	2415e <ull_setdwstate+0x42>
   241c8:	00110004 	.word	0x00110004
   241cc:	00110008 	.word	0x00110008
   241d0:	00090008 	.word	0x00090008

000241d4 <ull_configureframefilter>:
   241d4:	b530      	push	{r4, r5, lr}
   241d6:	b083      	sub	sp, #12
   241d8:	4605      	mov	r5, r0
   241da:	2902      	cmp	r1, #2
   241dc:	d00e      	beq.n	241fc <ull_configureframefilter+0x28>
   241de:	2400      	movs	r4, #0
   241e0:	9400      	str	r4, [sp, #0]
   241e2:	23fe      	movs	r3, #254	@ 0xfe
   241e4:	4622      	mov	r2, r4
   241e6:	2110      	movs	r1, #16
   241e8:	f7ff feda 	bl	23fa0 <dwt_modify8bitoffsetreg>
   241ec:	4623      	mov	r3, r4
   241ee:	4622      	mov	r2, r4
   241f0:	2114      	movs	r1, #20
   241f2:	4628      	mov	r0, r5
   241f4:	f7ff f8b3 	bl	2335e <dwt_write16bitoffsetreg>
   241f8:	b003      	add	sp, #12
   241fa:	bd30      	pop	{r4, r5, pc}
   241fc:	4614      	mov	r4, r2
   241fe:	2301      	movs	r3, #1
   24200:	9300      	str	r3, [sp, #0]
   24202:	23ff      	movs	r3, #255	@ 0xff
   24204:	2200      	movs	r2, #0
   24206:	2110      	movs	r1, #16
   24208:	f7ff feca 	bl	23fa0 <dwt_modify8bitoffsetreg>
   2420c:	4623      	mov	r3, r4
   2420e:	2200      	movs	r2, #0
   24210:	2114      	movs	r1, #20
   24212:	4628      	mov	r0, r5
   24214:	f7ff f8a3 	bl	2335e <dwt_write16bitoffsetreg>
   24218:	e7ee      	b.n	241f8 <ull_configureframefilter+0x24>
	...

0002421c <ull_run_pgfcal>:
   2421c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   24220:	b082      	sub	sp, #8
   24222:	4605      	mov	r5, r0
   24224:	4c29      	ldr	r4, [pc, #164]	@ (242cc <ull_run_pgfcal+0xb0>)
   24226:	4b2a      	ldr	r3, [pc, #168]	@ (242d0 <ull_run_pgfcal+0xb4>)
   24228:	2200      	movs	r2, #0
   2422a:	4621      	mov	r1, r4
   2422c:	f7ff f8f4 	bl	23418 <dwt_write32bitoffsetreg>
   24230:	2310      	movs	r3, #16
   24232:	9300      	str	r3, [sp, #0]
   24234:	23ff      	movs	r3, #255	@ 0xff
   24236:	2200      	movs	r2, #0
   24238:	4621      	mov	r1, r4
   2423a:	4628      	mov	r0, r5
   2423c:	f7ff feb0 	bl	23fa0 <dwt_modify8bitoffsetreg>
   24240:	2403      	movs	r4, #3
   24242:	f04f 0814 	mov.w	r8, #20
   24246:	4f23      	ldr	r7, [pc, #140]	@ (242d4 <ull_run_pgfcal+0xb8>)
   24248:	2600      	movs	r6, #0
   2424a:	4640      	mov	r0, r8
   2424c:	f7f6 fdf3 	bl	1ae36 <deca_usleep>
   24250:	4632      	mov	r2, r6
   24252:	4639      	mov	r1, r7
   24254:	4628      	mov	r0, r5
   24256:	f7fe fc92 	bl	22b7e <dwt_read8bitoffsetreg>
   2425a:	2801      	cmp	r0, #1
   2425c:	d034      	beq.n	242c8 <ull_run_pgfcal+0xac>
   2425e:	1e63      	subs	r3, r4, #1
   24260:	f013 04ff 	ands.w	r4, r3, #255	@ 0xff
   24264:	d1f1      	bne.n	2424a <ull_run_pgfcal+0x2e>
   24266:	f06f 0402 	mvn.w	r4, #2
   2426a:	4e18      	ldr	r6, [pc, #96]	@ (242cc <ull_run_pgfcal+0xb0>)
   2426c:	2300      	movs	r3, #0
   2426e:	461a      	mov	r2, r3
   24270:	4631      	mov	r1, r6
   24272:	4628      	mov	r0, r5
   24274:	f7ff fa5e 	bl	23734 <dwt_write8bitoffsetreg>
   24278:	2301      	movs	r3, #1
   2427a:	2200      	movs	r2, #0
   2427c:	4915      	ldr	r1, [pc, #84]	@ (242d4 <ull_run_pgfcal+0xb8>)
   2427e:	4628      	mov	r0, r5
   24280:	f7ff fa58 	bl	23734 <dwt_write8bitoffsetreg>
   24284:	2301      	movs	r3, #1
   24286:	9300      	str	r3, [sp, #0]
   24288:	23ff      	movs	r3, #255	@ 0xff
   2428a:	2202      	movs	r2, #2
   2428c:	4631      	mov	r1, r6
   2428e:	4628      	mov	r0, r5
   24290:	f7ff fe86 	bl	23fa0 <dwt_modify8bitoffsetreg>
   24294:	2200      	movs	r2, #0
   24296:	4910      	ldr	r1, [pc, #64]	@ (242d8 <ull_run_pgfcal+0xbc>)
   24298:	4628      	mov	r0, r5
   2429a:	f7fe fc48 	bl	22b2e <dwt_read32bitoffsetreg>
   2429e:	f06f 4360 	mvn.w	r3, #3758096384	@ 0xe0000000
   242a2:	4298      	cmp	r0, r3
   242a4:	bf08      	it	eq
   242a6:	f06f 0403 	mvneq.w	r4, #3
   242aa:	2200      	movs	r2, #0
   242ac:	490b      	ldr	r1, [pc, #44]	@ (242dc <ull_run_pgfcal+0xc0>)
   242ae:	4628      	mov	r0, r5
   242b0:	f7fe fc3d 	bl	22b2e <dwt_read32bitoffsetreg>
   242b4:	f06f 4360 	mvn.w	r3, #3758096384	@ 0xe0000000
   242b8:	4298      	cmp	r0, r3
   242ba:	bf14      	ite	ne
   242bc:	4620      	movne	r0, r4
   242be:	f06f 0004 	mvneq.w	r0, #4
   242c2:	b002      	add	sp, #8
   242c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   242c8:	2400      	movs	r4, #0
   242ca:	e7ce      	b.n	2426a <ull_run_pgfcal+0x4e>
   242cc:	0004000c 	.word	0x0004000c
   242d0:	00020001 	.word	0x00020001
   242d4:	00040020 	.word	0x00040020
   242d8:	00040014 	.word	0x00040014
   242dc:	0004001c 	.word	0x0004001c

000242e0 <ull_setinterrupt>:
   242e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   242e4:	b083      	sub	sp, #12
   242e6:	4605      	mov	r5, r0
   242e8:	4688      	mov	r8, r1
   242ea:	4617      	mov	r7, r2
   242ec:	461c      	mov	r4, r3
   242ee:	f7f6 fd7f 	bl	1adf0 <decamutexon>
   242f2:	4606      	mov	r6, r0
   242f4:	2c02      	cmp	r4, #2
   242f6:	d019      	beq.n	2432c <ull_setinterrupt+0x4c>
   242f8:	2c04      	cmp	r4, #4
   242fa:	d017      	beq.n	2432c <ull_setinterrupt+0x4c>
   242fc:	f004 03fd 	and.w	r3, r4, #253	@ 0xfd
   24300:	2b01      	cmp	r3, #1
   24302:	d03f      	beq.n	24384 <ull_setinterrupt+0xa4>
   24304:	f04f 0900 	mov.w	r9, #0
   24308:	f8cd 9000 	str.w	r9, [sp]
   2430c:	ea6f 0308 	mvn.w	r3, r8
   24310:	464a      	mov	r2, r9
   24312:	213c      	movs	r1, #60	@ 0x3c
   24314:	4628      	mov	r0, r5
   24316:	f7ff fcd1 	bl	23cbc <dwt_modify32bitoffsetreg>
   2431a:	f8cd 9000 	str.w	r9, [sp]
   2431e:	43fb      	mvns	r3, r7
   24320:	464a      	mov	r2, r9
   24322:	2140      	movs	r1, #64	@ 0x40
   24324:	4628      	mov	r0, r5
   24326:	f7ff fcc9 	bl	23cbc <dwt_modify32bitoffsetreg>
   2432a:	e00b      	b.n	24344 <ull_setinterrupt+0x64>
   2432c:	4643      	mov	r3, r8
   2432e:	2200      	movs	r2, #0
   24330:	213c      	movs	r1, #60	@ 0x3c
   24332:	4628      	mov	r0, r5
   24334:	f7ff f870 	bl	23418 <dwt_write32bitoffsetreg>
   24338:	463b      	mov	r3, r7
   2433a:	2200      	movs	r2, #0
   2433c:	2140      	movs	r1, #64	@ 0x40
   2433e:	4628      	mov	r0, r5
   24340:	f7ff f86a 	bl	23418 <dwt_write32bitoffsetreg>
   24344:	3c03      	subs	r4, #3
   24346:	b2e4      	uxtb	r4, r4
   24348:	2c01      	cmp	r4, #1
   2434a:	d92d      	bls.n	243a8 <ull_setinterrupt+0xc8>
   2434c:	2200      	movs	r2, #0
   2434e:	213c      	movs	r1, #60	@ 0x3c
   24350:	4628      	mov	r0, r5
   24352:	f7fe fbec 	bl	22b2e <dwt_read32bitoffsetreg>
   24356:	4603      	mov	r3, r0
   24358:	2200      	movs	r2, #0
   2435a:	2144      	movs	r1, #68	@ 0x44
   2435c:	4628      	mov	r0, r5
   2435e:	f7ff f85b 	bl	23418 <dwt_write32bitoffsetreg>
   24362:	2200      	movs	r2, #0
   24364:	2140      	movs	r1, #64	@ 0x40
   24366:	4628      	mov	r0, r5
   24368:	f7fe fbe1 	bl	22b2e <dwt_read32bitoffsetreg>
   2436c:	4603      	mov	r3, r0
   2436e:	2200      	movs	r2, #0
   24370:	2148      	movs	r1, #72	@ 0x48
   24372:	4628      	mov	r0, r5
   24374:	f7ff f850 	bl	23418 <dwt_write32bitoffsetreg>
   24378:	4630      	mov	r0, r6
   2437a:	f7f6 fd40 	bl	1adfe <decamutexoff>
   2437e:	b003      	add	sp, #12
   24380:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   24384:	f8cd 8000 	str.w	r8, [sp]
   24388:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   2438c:	2200      	movs	r2, #0
   2438e:	213c      	movs	r1, #60	@ 0x3c
   24390:	4628      	mov	r0, r5
   24392:	f7ff fc93 	bl	23cbc <dwt_modify32bitoffsetreg>
   24396:	9700      	str	r7, [sp, #0]
   24398:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   2439c:	2200      	movs	r2, #0
   2439e:	2140      	movs	r1, #64	@ 0x40
   243a0:	4628      	mov	r0, r5
   243a2:	f7ff fc8b 	bl	23cbc <dwt_modify32bitoffsetreg>
   243a6:	e7cd      	b.n	24344 <ull_setinterrupt+0x64>
   243a8:	2110      	movs	r1, #16
   243aa:	9100      	str	r1, [sp, #0]
   243ac:	23ff      	movs	r3, #255	@ 0xff
   243ae:	2202      	movs	r2, #2
   243b0:	4628      	mov	r0, r5
   243b2:	f7ff fdf5 	bl	23fa0 <dwt_modify8bitoffsetreg>
   243b6:	e7c9      	b.n	2434c <ull_setinterrupt+0x6c>

000243b8 <prs_ack_enable>:
   243b8:	b500      	push	{lr}
   243ba:	b083      	sub	sp, #12
   243bc:	2900      	cmp	r1, #0
   243be:	bf0b      	itete	eq
   243c0:	23ff      	moveq	r3, #255	@ 0xff
   243c2:	23f7      	movne	r3, #247	@ 0xf7
   243c4:	2200      	moveq	r2, #0
   243c6:	2208      	movne	r2, #8
   243c8:	9200      	str	r2, [sp, #0]
   243ca:	2201      	movs	r2, #1
   243cc:	2110      	movs	r1, #16
   243ce:	f7ff fde7 	bl	23fa0 <dwt_modify8bitoffsetreg>
   243d2:	b003      	add	sp, #12
   243d4:	f85d fb04 	ldr.w	pc, [sp], #4

000243d8 <dwt_modify16bitoffsetreg>:
   243d8:	b510      	push	{r4, lr}
   243da:	b084      	sub	sp, #16
   243dc:	f8bd 4018 	ldrh.w	r4, [sp, #24]
   243e0:	f88d 300c 	strb.w	r3, [sp, #12]
   243e4:	0a1b      	lsrs	r3, r3, #8
   243e6:	f88d 300d 	strb.w	r3, [sp, #13]
   243ea:	f88d 400e 	strb.w	r4, [sp, #14]
   243ee:	0a24      	lsrs	r4, r4, #8
   243f0:	f88d 400f 	strb.w	r4, [sp, #15]
   243f4:	f248 0302 	movw	r3, #32770	@ 0x8002
   243f8:	9301      	str	r3, [sp, #4]
   243fa:	ab03      	add	r3, sp, #12
   243fc:	9300      	str	r3, [sp, #0]
   243fe:	2304      	movs	r3, #4
   24400:	b292      	uxth	r2, r2
   24402:	f7fe fb0c 	bl	22a1e <dwt_xfer3xxx>
   24406:	b004      	add	sp, #16
   24408:	bd10      	pop	{r4, pc}
	...

0002440c <ull_setleds>:
   2440c:	b530      	push	{r4, r5, lr}
   2440e:	b083      	sub	sp, #12
   24410:	4604      	mov	r4, r0
   24412:	f011 0f01 	tst.w	r1, #1
   24416:	d01f      	beq.n	24458 <ull_setleds+0x4c>
   24418:	460d      	mov	r5, r1
   2441a:	f44f 7310 	mov.w	r3, #576	@ 0x240
   2441e:	9300      	str	r3, [sp, #0]
   24420:	f46f 637c 	mvn.w	r3, #4032	@ 0xfc0
   24424:	2200      	movs	r2, #0
   24426:	f44f 21a0 	mov.w	r1, #327680	@ 0x50000
   2442a:	f7ff fc47 	bl	23cbc <dwt_modify32bitoffsetreg>
   2442e:	f44f 0304 	mov.w	r3, #8650752	@ 0x840000
   24432:	9300      	str	r3, [sp, #0]
   24434:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   24438:	2200      	movs	r2, #0
   2443a:	4918      	ldr	r1, [pc, #96]	@ (2449c <ull_setleds+0x90>)
   2443c:	4620      	mov	r0, r4
   2443e:	f7ff fc3d 	bl	23cbc <dwt_modify32bitoffsetreg>
   24442:	f015 0f02 	tst.w	r5, #2
   24446:	d11a      	bne.n	2447e <ull_setleds+0x72>
   24448:	f44f 7388 	mov.w	r3, #272	@ 0x110
   2444c:	2200      	movs	r2, #0
   2444e:	4914      	ldr	r1, [pc, #80]	@ (244a0 <ull_setleds+0x94>)
   24450:	4620      	mov	r0, r4
   24452:	f7fe ffe1 	bl	23418 <dwt_write32bitoffsetreg>
   24456:	e010      	b.n	2447a <ull_setleds+0x6e>
   24458:	2500      	movs	r5, #0
   2445a:	9500      	str	r5, [sp, #0]
   2445c:	f46f 637c 	mvn.w	r3, #4032	@ 0xfc0
   24460:	462a      	mov	r2, r5
   24462:	f44f 21a0 	mov.w	r1, #327680	@ 0x50000
   24466:	f7ff fc29 	bl	23cbc <dwt_modify32bitoffsetreg>
   2446a:	9500      	str	r5, [sp, #0]
   2446c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
   24470:	462a      	mov	r2, r5
   24472:	490b      	ldr	r1, [pc, #44]	@ (244a0 <ull_setleds+0x94>)
   24474:	4620      	mov	r0, r4
   24476:	f7ff ffaf 	bl	243d8 <dwt_modify16bitoffsetreg>
   2447a:	b003      	add	sp, #12
   2447c:	bd30      	pop	{r4, r5, pc}
   2447e:	4d08      	ldr	r5, [pc, #32]	@ (244a0 <ull_setleds+0x94>)
   24480:	4b08      	ldr	r3, [pc, #32]	@ (244a4 <ull_setleds+0x98>)
   24482:	2200      	movs	r2, #0
   24484:	4629      	mov	r1, r5
   24486:	4620      	mov	r0, r4
   24488:	f7fe ffc6 	bl	23418 <dwt_write32bitoffsetreg>
   2448c:	f44f 7388 	mov.w	r3, #272	@ 0x110
   24490:	2200      	movs	r2, #0
   24492:	4629      	mov	r1, r5
   24494:	4620      	mov	r0, r4
   24496:	f7fe ffbf 	bl	23418 <dwt_write32bitoffsetreg>
   2449a:	e7ee      	b.n	2447a <ull_setleds+0x6e>
   2449c:	00110004 	.word	0x00110004
   244a0:	00110018 	.word	0x00110018
   244a4:	000f0110 	.word	0x000f0110

000244a8 <ull_pgf_cal>:
   244a8:	b5f0      	push	{r4, r5, r6, r7, lr}
   244aa:	b083      	sub	sp, #12
   244ac:	4604      	mov	r4, r0
   244ae:	2901      	cmp	r1, #1
   244b0:	d009      	beq.n	244c6 <ull_pgf_cal+0x1e>
   244b2:	2014      	movs	r0, #20
   244b4:	f7f6 fcbf 	bl	1ae36 <deca_usleep>
   244b8:	4620      	mov	r0, r4
   244ba:	f7ff feaf 	bl	2421c <ull_run_pgfcal>
   244be:	4605      	mov	r5, r0
   244c0:	4628      	mov	r0, r5
   244c2:	b003      	add	sp, #12
   244c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
   244c6:	4e0f      	ldr	r6, [pc, #60]	@ (24504 <ull_pgf_cal+0x5c>)
   244c8:	2200      	movs	r2, #0
   244ca:	4631      	mov	r1, r6
   244cc:	f7fe fb45 	bl	22b5a <dwt_read16bitoffsetreg>
   244d0:	4607      	mov	r7, r0
   244d2:	f240 1307 	movw	r3, #263	@ 0x107
   244d6:	9300      	str	r3, [sp, #0]
   244d8:	f64f 73ff 	movw	r3, #65535	@ 0xffff
   244dc:	2200      	movs	r2, #0
   244de:	4631      	mov	r1, r6
   244e0:	4620      	mov	r0, r4
   244e2:	f7ff ff79 	bl	243d8 <dwt_modify16bitoffsetreg>
   244e6:	2014      	movs	r0, #20
   244e8:	f7f6 fca5 	bl	1ae36 <deca_usleep>
   244ec:	4620      	mov	r0, r4
   244ee:	f7ff fe95 	bl	2421c <ull_run_pgfcal>
   244f2:	4605      	mov	r5, r0
   244f4:	2200      	movs	r2, #0
   244f6:	9200      	str	r2, [sp, #0]
   244f8:	463b      	mov	r3, r7
   244fa:	4631      	mov	r1, r6
   244fc:	4620      	mov	r0, r4
   244fe:	f7ff ff6b 	bl	243d8 <dwt_modify16bitoffsetreg>
   24502:	e7dd      	b.n	244c0 <ull_pgf_cal+0x18>
   24504:	00070048 	.word	0x00070048

00024508 <ull_setgpiovalue>:
   24508:	b500      	push	{lr}
   2450a:	b083      	sub	sp, #12
   2450c:	2a01      	cmp	r2, #1
   2450e:	d009      	beq.n	24524 <ull_setgpiovalue+0x1c>
   24510:	43cb      	mvns	r3, r1
   24512:	2200      	movs	r2, #0
   24514:	9200      	str	r2, [sp, #0]
   24516:	b29b      	uxth	r3, r3
   24518:	4906      	ldr	r1, [pc, #24]	@ (24534 <ull_setgpiovalue+0x2c>)
   2451a:	f7ff ff5d 	bl	243d8 <dwt_modify16bitoffsetreg>
   2451e:	b003      	add	sp, #12
   24520:	f85d fb04 	ldr.w	pc, [sp], #4
   24524:	9100      	str	r1, [sp, #0]
   24526:	f64f 73ff 	movw	r3, #65535	@ 0xffff
   2452a:	2200      	movs	r2, #0
   2452c:	4901      	ldr	r1, [pc, #4]	@ (24534 <ull_setgpiovalue+0x2c>)
   2452e:	f7ff ff53 	bl	243d8 <dwt_modify16bitoffsetreg>
   24532:	e7f4      	b.n	2451e <ull_setgpiovalue+0x16>
   24534:	0005000c 	.word	0x0005000c

00024538 <ull_readaccdata>:
   24538:	b5f0      	push	{r4, r5, r6, r7, lr}
   2453a:	b083      	sub	sp, #12
   2453c:	4604      	mov	r4, r0
   2453e:	460f      	mov	r7, r1
   24540:	4616      	mov	r6, r2
   24542:	461d      	mov	r5, r3
   24544:	f248 0340 	movw	r3, #32832	@ 0x8040
   24548:	9300      	str	r3, [sp, #0]
   2454a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
   2454e:	2200      	movs	r2, #0
   24550:	4918      	ldr	r1, [pc, #96]	@ (245b4 <ull_readaccdata+0x7c>)
   24552:	f7ff ff41 	bl	243d8 <dwt_modify16bitoffsetreg>
   24556:	19aa      	adds	r2, r5, r6
   24558:	f243 0301 	movw	r3, #12289	@ 0x3001
   2455c:	429a      	cmp	r2, r3
   2455e:	dc15      	bgt.n	2458c <ull_readaccdata+0x54>
   24560:	2d7f      	cmp	r5, #127	@ 0x7f
   24562:	d91d      	bls.n	245a0 <ull_readaccdata+0x68>
   24564:	2315      	movs	r3, #21
   24566:	2200      	movs	r2, #0
   24568:	4913      	ldr	r1, [pc, #76]	@ (245b8 <ull_readaccdata+0x80>)
   2456a:	4620      	mov	r0, r4
   2456c:	f7fe ff54 	bl	23418 <dwt_write32bitoffsetreg>
   24570:	462b      	mov	r3, r5
   24572:	2200      	movs	r2, #0
   24574:	4911      	ldr	r1, [pc, #68]	@ (245bc <ull_readaccdata+0x84>)
   24576:	4620      	mov	r0, r4
   24578:	f7fe ff4e 	bl	23418 <dwt_write32bitoffsetreg>
   2457c:	9700      	str	r7, [sp, #0]
   2457e:	4633      	mov	r3, r6
   24580:	2200      	movs	r2, #0
   24582:	f44f 11e8 	mov.w	r1, #1900544	@ 0x1d0000
   24586:	4620      	mov	r0, r4
   24588:	f7fe fac7 	bl	22b1a <dwt_readfromdevice>
   2458c:	2200      	movs	r2, #0
   2458e:	9200      	str	r2, [sp, #0]
   24590:	f647 73bf 	movw	r3, #32703	@ 0x7fbf
   24594:	4907      	ldr	r1, [pc, #28]	@ (245b4 <ull_readaccdata+0x7c>)
   24596:	4620      	mov	r0, r4
   24598:	f7ff ff1e 	bl	243d8 <dwt_modify16bitoffsetreg>
   2459c:	b003      	add	sp, #12
   2459e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   245a0:	9700      	str	r7, [sp, #0]
   245a2:	4633      	mov	r3, r6
   245a4:	462a      	mov	r2, r5
   245a6:	f44f 11a8 	mov.w	r1, #1376256	@ 0x150000
   245aa:	4620      	mov	r0, r4
   245ac:	f7fe fab5 	bl	22b1a <dwt_readfromdevice>
   245b0:	e7ec      	b.n	2458c <ull_readaccdata+0x54>
   245b2:	bf00      	nop
   245b4:	00110004 	.word	0x00110004
   245b8:	001f0004 	.word	0x001f0004
   245bc:	001f0008 	.word	0x001f0008

000245c0 <ull_repeated_cw>:
   245c0:	b570      	push	{r4, r5, r6, lr}
   245c2:	4606      	mov	r6, r0
   245c4:	460c      	mov	r4, r1
   245c6:	4615      	mov	r5, r2
   245c8:	4b0e      	ldr	r3, [pc, #56]	@ (24604 <ull_repeated_cw+0x44>)
   245ca:	2202      	movs	r2, #2
   245cc:	490e      	ldr	r1, [pc, #56]	@ (24608 <ull_repeated_cw+0x48>)
   245ce:	f7fe ff23 	bl	23418 <dwt_write32bitoffsetreg>
   245d2:	2d0f      	cmp	r5, #15
   245d4:	bfa8      	it	ge
   245d6:	250f      	movge	r5, #15
   245d8:	1e63      	subs	r3, r4, #1
   245da:	2b03      	cmp	r3, #3
   245dc:	bf28      	it	cs
   245de:	2404      	movcs	r4, #4
   245e0:	2310      	movs	r3, #16
   245e2:	4123      	asrs	r3, r4
   245e4:	2200      	movs	r2, #0
   245e6:	4909      	ldr	r1, [pc, #36]	@ (2460c <ull_repeated_cw+0x4c>)
   245e8:	4630      	mov	r0, r6
   245ea:	f7fe ff15 	bl	23418 <dwt_write32bitoffsetreg>
   245ee:	1e63      	subs	r3, r4, #1
   245f0:	009b      	lsls	r3, r3, #2
   245f2:	fa05 f303 	lsl.w	r3, r5, r3
   245f6:	2200      	movs	r2, #0
   245f8:	4905      	ldr	r1, [pc, #20]	@ (24610 <ull_repeated_cw+0x50>)
   245fa:	4630      	mov	r0, r6
   245fc:	f7fe ff0c 	bl	23418 <dwt_write32bitoffsetreg>
   24600:	bd70      	pop	{r4, r5, r6, pc}
   24602:	bf00      	nop
   24604:	00d20874 	.word	0x00d20874
   24608:	00110010 	.word	0x00110010
   2460c:	00070028 	.word	0x00070028
   24610:	00080018 	.word	0x00080018

00024614 <ull_configure>:
   24614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24618:	b083      	sub	sp, #12
   2461a:	4604      	mov	r4, r0
   2461c:	460d      	mov	r5, r1
   2461e:	f891 9000 	ldrb.w	r9, [r1]
   24622:	790b      	ldrb	r3, [r1, #4]
   24624:	2b18      	cmp	r3, #24
   24626:	d814      	bhi.n	24652 <ull_configure+0x3e>
   24628:	78cf      	ldrb	r7, [r1, #3]
   2462a:	2f18      	cmp	r7, #24
   2462c:	bf94      	ite	ls
   2462e:	2700      	movls	r7, #0
   24630:	2701      	movhi	r7, #1
   24632:	b2ff      	uxtb	r7, r7
   24634:	79eb      	ldrb	r3, [r5, #7]
   24636:	2b01      	cmp	r3, #1
   24638:	bf0c      	ite	eq
   2463a:	2110      	moveq	r1, #16
   2463c:	2100      	movne	r1, #0
   2463e:	786b      	ldrb	r3, [r5, #1]
   24640:	3b01      	subs	r3, #1
   24642:	2b06      	cmp	r3, #6
   24644:	d810      	bhi.n	24668 <ull_configure+0x54>
   24646:	e8df f003 	tbb	[pc, r3]
   2464a:	0f06      	.short	0x0f06
   2464c:	0f0c120f 	.word	0x0f0c120f
   24650:	09          	.byte	0x09
   24651:	00          	.byte	0x00
   24652:	2701      	movs	r7, #1
   24654:	e7ed      	b.n	24632 <ull_configure+0x1e>
   24656:	f04f 0a40 	mov.w	sl, #64	@ 0x40
   2465a:	e00a      	b.n	24672 <ull_configure+0x5e>
   2465c:	f04f 0a48 	mov.w	sl, #72	@ 0x48
   24660:	e007      	b.n	24672 <ull_configure+0x5e>
   24662:	f04f 0a80 	mov.w	sl, #128	@ 0x80
   24666:	e004      	b.n	24672 <ull_configure+0x5e>
   24668:	f44f 7a80 	mov.w	sl, #256	@ 0x100
   2466c:	e001      	b.n	24672 <ull_configure+0x5e>
   2466e:	f04f 0a20 	mov.w	sl, #32
   24672:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   24674:	8a13      	ldrh	r3, [r2, #16]
   24676:	f023 03e0 	bic.w	r3, r3, #224	@ 0xe0
   2467a:	8213      	strh	r3, [r2, #16]
   2467c:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   2467e:	79ea      	ldrb	r2, [r5, #7]
   24680:	72da      	strb	r2, [r3, #11]
   24682:	7b2e      	ldrb	r6, [r5, #12]
   24684:	1cb3      	adds	r3, r6, #2
   24686:	2601      	movs	r6, #1
   24688:	409e      	lsls	r6, r3
   2468a:	fa1f f886 	uxth.w	r8, r6
   2468e:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   24690:	4bca      	ldr	r3, [pc, #808]	@ (249bc <ull_configure+0x3a8>)
   24692:	fb03 f308 	mul.w	r3, r3, r8
   24696:	0bdb      	lsrs	r3, r3, #15
   24698:	8253      	strh	r3, [r2, #18]
   2469a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   2469c:	7aea      	ldrb	r2, [r5, #11]
   2469e:	755a      	strb	r2, [r3, #21]
   246a0:	7a2b      	ldrb	r3, [r5, #8]
   246a2:	015b      	lsls	r3, r3, #5
   246a4:	f003 0320 	and.w	r3, r3, #32
   246a8:	7b6a      	ldrb	r2, [r5, #13]
   246aa:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   246ae:	7aea      	ldrb	r2, [r5, #11]
   246b0:	0312      	lsls	r2, r2, #12
   246b2:	f402 4230 	and.w	r2, r2, #45056	@ 0xb000
   246b6:	4313      	orrs	r3, r2
   246b8:	430b      	orrs	r3, r1
   246ba:	9300      	str	r3, [sp, #0]
   246bc:	4bc0      	ldr	r3, [pc, #768]	@ (249c0 <ull_configure+0x3ac>)
   246be:	2200      	movs	r2, #0
   246c0:	2110      	movs	r1, #16
   246c2:	4620      	mov	r0, r4
   246c4:	f7ff fafa 	bl	23cbc <dwt_modify32bitoffsetreg>
   246c8:	2f00      	cmp	r7, #0
   246ca:	f040 80fc 	bne.w	248c6 <ull_configure+0x2b2>
   246ce:	7aeb      	ldrb	r3, [r5, #11]
   246d0:	b1f3      	cbz	r3, 24710 <ull_configure+0xfc>
   246d2:	7b6b      	ldrb	r3, [r5, #13]
   246d4:	2b01      	cmp	r3, #1
   246d6:	f240 8121 	bls.w	2491c <ull_configure+0x308>
   246da:	7b2a      	ldrb	r2, [r5, #12]
   246dc:	4bb9      	ldr	r3, [pc, #740]	@ (249c4 <ull_configure+0x3b0>)
   246de:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
   246e2:	0112      	lsls	r2, r2, #4
   246e4:	0ad3      	lsrs	r3, r2, #11
   246e6:	f3c2 020a 	ubfx	r2, r2, #0, #11
   246ea:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
   246ee:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
   246f2:	bf28      	it	cs
   246f4:	3301      	addcs	r3, #1
   246f6:	b29b      	uxth	r3, r3
   246f8:	eb0a 0ac8 	add.w	sl, sl, r8, lsl #3
   246fc:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
   24700:	9300      	str	r3, [sp, #0]
   24702:	f64f 7380 	movw	r3, #65408	@ 0xff80
   24706:	2202      	movs	r2, #2
   24708:	49af      	ldr	r1, [pc, #700]	@ (249c8 <ull_configure+0x3b4>)
   2470a:	4620      	mov	r0, r4
   2470c:	f7ff fe64 	bl	243d8 <dwt_modify16bitoffsetreg>
   24710:	2394      	movs	r3, #148	@ 0x94
   24712:	9300      	str	r3, [sp, #0]
   24714:	4bad      	ldr	r3, [pc, #692]	@ (249cc <ull_configure+0x3b8>)
   24716:	2200      	movs	r2, #0
   24718:	49ad      	ldr	r1, [pc, #692]	@ (249d0 <ull_configure+0x3bc>)
   2471a:	4620      	mov	r0, r4
   2471c:	f7ff face 	bl	23cbc <dwt_modify32bitoffsetreg>
   24720:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
   24724:	f340 810d 	ble.w	24942 <ull_configure+0x32e>
   24728:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   2472a:	8a13      	ldrh	r3, [r2, #16]
   2472c:	f043 0320 	orr.w	r3, r3, #32
   24730:	8213      	strh	r3, [r2, #16]
   24732:	f44f 6300 	mov.w	r3, #2048	@ 0x800
   24736:	9300      	str	r3, [sp, #0]
   24738:	f64c 73ff 	movw	r3, #53247	@ 0xcfff
   2473c:	2200      	movs	r2, #0
   2473e:	49a5      	ldr	r1, [pc, #660]	@ (249d4 <ull_configure+0x3c0>)
   24740:	4620      	mov	r0, r4
   24742:	f7ff fe49 	bl	243d8 <dwt_modify16bitoffsetreg>
   24746:	7b6b      	ldrb	r3, [r5, #13]
   24748:	2b01      	cmp	r3, #1
   2474a:	f000 8105 	beq.w	24958 <ull_configure+0x344>
   2474e:	78ab      	ldrb	r3, [r5, #2]
   24750:	f043 0310 	orr.w	r3, r3, #16
   24754:	9300      	str	r3, [sp, #0]
   24756:	23fc      	movs	r3, #252	@ 0xfc
   24758:	2200      	movs	r2, #0
   2475a:	f44f 21c0 	mov.w	r1, #393216	@ 0x60000
   2475e:	4620      	mov	r0, r4
   24760:	f7ff fc1e 	bl	23fa0 <dwt_modify8bitoffsetreg>
   24764:	1e73      	subs	r3, r6, #1
   24766:	b2db      	uxtb	r3, r3
   24768:	2200      	movs	r2, #0
   2476a:	f44f 3100 	mov.w	r1, #131072	@ 0x20000
   2476e:	4620      	mov	r0, r4
   24770:	f7fe ffe0 	bl	23734 <dwt_write8bitoffsetreg>
   24774:	786b      	ldrb	r3, [r5, #1]
   24776:	2b07      	cmp	r3, #7
   24778:	bf0c      	ite	eq
   2477a:	2308      	moveq	r3, #8
   2477c:	2300      	movne	r3, #0
   2477e:	2201      	movs	r2, #1
   24780:	2124      	movs	r1, #36	@ 0x24
   24782:	4620      	mov	r0, r4
   24784:	f7fe ffd6 	bl	23734 <dwt_write8bitoffsetreg>
   24788:	7aeb      	ldrb	r3, [r5, #11]
   2478a:	f003 0303 	and.w	r3, r3, #3
   2478e:	2b03      	cmp	r3, #3
   24790:	bf0c      	ite	eq
   24792:	4b91      	ldreq	r3, [pc, #580]	@ (249d8 <ull_configure+0x3c4>)
   24794:	4b91      	ldrne	r3, [pc, #580]	@ (249dc <ull_configure+0x3c8>)
   24796:	2200      	movs	r2, #0
   24798:	4991      	ldr	r1, [pc, #580]	@ (249e0 <ull_configure+0x3cc>)
   2479a:	4620      	mov	r0, r4
   2479c:	f7fe fe3c 	bl	23418 <dwt_write32bitoffsetreg>
   247a0:	2200      	movs	r2, #0
   247a2:	4990      	ldr	r1, [pc, #576]	@ (249e4 <ull_configure+0x3d0>)
   247a4:	4620      	mov	r0, r4
   247a6:	f7fe f9c2 	bl	22b2e <dwt_read32bitoffsetreg>
   247aa:	f420 50ff 	bic.w	r0, r0, #8160	@ 0x1fe0
   247ae:	f020 001f 	bic.w	r0, r0, #31
   247b2:	f1b9 0f09 	cmp.w	r9, #9
   247b6:	bf08      	it	eq
   247b8:	f040 0001 	orreq.w	r0, r0, #1
   247bc:	792a      	ldrb	r2, [r5, #4]
   247be:	0212      	lsls	r2, r2, #8
   247c0:	f402 52f8 	and.w	r2, r2, #7936	@ 0x1f00
   247c4:	78eb      	ldrb	r3, [r5, #3]
   247c6:	00db      	lsls	r3, r3, #3
   247c8:	b2db      	uxtb	r3, r3
   247ca:	431a      	orrs	r2, r3
   247cc:	796b      	ldrb	r3, [r5, #5]
   247ce:	005b      	lsls	r3, r3, #1
   247d0:	f003 0306 	and.w	r3, r3, #6
   247d4:	4313      	orrs	r3, r2
   247d6:	4303      	orrs	r3, r0
   247d8:	2200      	movs	r2, #0
   247da:	4982      	ldr	r1, [pc, #520]	@ (249e4 <ull_configure+0x3d0>)
   247dc:	4620      	mov	r0, r4
   247de:	f7fe fe1b 	bl	23418 <dwt_write32bitoffsetreg>
   247e2:	79aa      	ldrb	r2, [r5, #6]
   247e4:	786b      	ldrb	r3, [r5, #1]
   247e6:	031b      	lsls	r3, r3, #12
   247e8:	ea43 2382 	orr.w	r3, r3, r2, lsl #10
   247ec:	9300      	str	r3, [sp, #0]
   247ee:	f46f 4374 	mvn.w	r3, #62464	@ 0xf400
   247f2:	2200      	movs	r2, #0
   247f4:	2120      	movs	r1, #32
   247f6:	4620      	mov	r0, r4
   247f8:	f7ff fa60 	bl	23cbc <dwt_modify32bitoffsetreg>
   247fc:	f8b5 3009 	ldrh.w	r3, [r5, #9]
   24800:	b923      	cbnz	r3, 2480c <ull_configure+0x1f8>
   24802:	f06f 037e 	mvn.w	r3, #126	@ 0x7e
   24806:	726b      	strb	r3, [r5, #9]
   24808:	2300      	movs	r3, #0
   2480a:	72ab      	strb	r3, [r5, #10]
   2480c:	f8b5 3009 	ldrh.w	r3, [r5, #9]
   24810:	2202      	movs	r2, #2
   24812:	f44f 21c0 	mov.w	r1, #393216	@ 0x60000
   24816:	4620      	mov	r0, r4
   24818:	f7fe fda1 	bl	2335e <dwt_write16bitoffsetreg>
   2481c:	2202      	movs	r2, #2
   2481e:	4972      	ldr	r1, [pc, #456]	@ (249e8 <ull_configure+0x3d4>)
   24820:	4620      	mov	r0, r4
   24822:	f7fe f9ac 	bl	22b7e <dwt_read8bitoffsetreg>
   24826:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   24828:	7bdb      	ldrb	r3, [r3, #15]
   2482a:	454b      	cmp	r3, r9
   2482c:	f000 809e 	beq.w	2496c <ull_configure+0x358>
   24830:	2803      	cmp	r0, #3
   24832:	f000 809f 	beq.w	24974 <ull_configure+0x360>
   24836:	f1b9 0f09 	cmp.w	r9, #9
   2483a:	f000 80a0 	beq.w	2497e <ull_configure+0x36a>
   2483e:	4b6b      	ldr	r3, [pc, #428]	@ (249ec <ull_configure+0x3d8>)
   24840:	2200      	movs	r2, #0
   24842:	496b      	ldr	r1, [pc, #428]	@ (249f0 <ull_configure+0x3dc>)
   24844:	4620      	mov	r0, r4
   24846:	f7fe fde7 	bl	23418 <dwt_write32bitoffsetreg>
   2484a:	f641 733c 	movw	r3, #7996	@ 0x1f3c
   2484e:	2200      	movs	r2, #0
   24850:	f44f 2110 	mov.w	r1, #589824	@ 0x90000
   24854:	4620      	mov	r0, r4
   24856:	f7fe fd82 	bl	2335e <dwt_write16bitoffsetreg>
   2485a:	2314      	movs	r3, #20
   2485c:	2201      	movs	r2, #1
   2485e:	4965      	ldr	r1, [pc, #404]	@ (249f4 <ull_configure+0x3e0>)
   24860:	4620      	mov	r0, r4
   24862:	f7fe ff67 	bl	23734 <dwt_write8bitoffsetreg>
   24866:	230e      	movs	r3, #14
   24868:	2202      	movs	r2, #2
   2486a:	4963      	ldr	r1, [pc, #396]	@ (249f8 <ull_configure+0x3e4>)
   2486c:	4620      	mov	r0, r4
   2486e:	f7fe ff61 	bl	23734 <dwt_write8bitoffsetreg>
   24872:	2381      	movs	r3, #129	@ 0x81
   24874:	2200      	movs	r2, #0
   24876:	4961      	ldr	r1, [pc, #388]	@ (249fc <ull_configure+0x3e8>)
   24878:	4620      	mov	r0, r4
   2487a:	f7fe ff5b 	bl	23734 <dwt_write8bitoffsetreg>
   2487e:	2302      	movs	r3, #2
   24880:	2200      	movs	r2, #0
   24882:	2144      	movs	r1, #68	@ 0x44
   24884:	4620      	mov	r0, r4
   24886:	f7fe ff55 	bl	23734 <dwt_write8bitoffsetreg>
   2488a:	2101      	movs	r1, #1
   2488c:	4620      	mov	r0, r4
   2488e:	f7ff fc45 	bl	2411c <ull_setdwstate>
   24892:	f04f 0b32 	mov.w	fp, #50	@ 0x32
   24896:	f04f 0814 	mov.w	r8, #20
   2489a:	2700      	movs	r7, #0
   2489c:	2644      	movs	r6, #68	@ 0x44
   2489e:	4640      	mov	r0, r8
   248a0:	f7f6 fac9 	bl	1ae36 <deca_usleep>
   248a4:	463a      	mov	r2, r7
   248a6:	4631      	mov	r1, r6
   248a8:	4620      	mov	r0, r4
   248aa:	f7fe f968 	bl	22b7e <dwt_read8bitoffsetreg>
   248ae:	f010 0f02 	tst.w	r0, #2
   248b2:	f040 80b5 	bne.w	24a20 <ull_configure+0x40c>
   248b6:	f10b 33ff 	add.w	r3, fp, #4294967295	@ 0xffffffff
   248ba:	f013 0bff 	ands.w	fp, r3, #255	@ 0xff
   248be:	d1ee      	bne.n	2489e <ull_configure+0x28a>
   248c0:	f06f 0001 	mvn.w	r0, #1
   248c4:	e0de      	b.n	24a84 <ull_configure+0x470>
   248c6:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   248c8:	8a13      	ldrh	r3, [r2, #16]
   248ca:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
   248ce:	8213      	strh	r3, [r2, #16]
   248d0:	f44f 53c0 	mov.w	r3, #6144	@ 0x1800
   248d4:	9300      	str	r3, [sp, #0]
   248d6:	f46f 5340 	mvn.w	r3, #12288	@ 0x3000
   248da:	2200      	movs	r2, #0
   248dc:	493d      	ldr	r1, [pc, #244]	@ (249d4 <ull_configure+0x3c0>)
   248de:	4620      	mov	r0, r4
   248e0:	f7ff f9ec 	bl	23cbc <dwt_modify32bitoffsetreg>
   248e4:	f240 3306 	movw	r3, #774	@ 0x306
   248e8:	2200      	movs	r2, #0
   248ea:	4945      	ldr	r1, [pc, #276]	@ (24a00 <ull_configure+0x3ec>)
   248ec:	4620      	mov	r0, r4
   248ee:	f7fe fd93 	bl	23418 <dwt_write32bitoffsetreg>
   248f2:	2300      	movs	r3, #0
   248f4:	461a      	mov	r2, r3
   248f6:	4943      	ldr	r1, [pc, #268]	@ (24a04 <ull_configure+0x3f0>)
   248f8:	4620      	mov	r0, r4
   248fa:	f7fe fd8d 	bl	23418 <dwt_write32bitoffsetreg>
   248fe:	4b42      	ldr	r3, [pc, #264]	@ (24a08 <ull_configure+0x3f4>)
   24900:	2200      	movs	r2, #0
   24902:	4931      	ldr	r1, [pc, #196]	@ (249c8 <ull_configure+0x3b4>)
   24904:	4620      	mov	r0, r4
   24906:	f7fe fd87 	bl	23418 <dwt_write32bitoffsetreg>
   2490a:	239d      	movs	r3, #157	@ 0x9d
   2490c:	9300      	str	r3, [sp, #0]
   2490e:	4b2f      	ldr	r3, [pc, #188]	@ (249cc <ull_configure+0x3b8>)
   24910:	2200      	movs	r2, #0
   24912:	492f      	ldr	r1, [pc, #188]	@ (249d0 <ull_configure+0x3bc>)
   24914:	4620      	mov	r0, r4
   24916:	f7ff f9d1 	bl	23cbc <dwt_modify32bitoffsetreg>
   2491a:	e714      	b.n	24746 <ull_configure+0x132>
   2491c:	7b2a      	ldrb	r2, [r5, #12]
   2491e:	4b29      	ldr	r3, [pc, #164]	@ (249c4 <ull_configure+0x3b0>)
   24920:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
   24924:	f44f 6235 	mov.w	r2, #2896	@ 0xb50
   24928:	fb02 f203 	mul.w	r2, r2, r3
   2492c:	0c93      	lsrs	r3, r2, #18
   2492e:	f3c2 12ca 	ubfx	r2, r2, #7, #11
   24932:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
   24936:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
   2493a:	bf28      	it	cs
   2493c:	3301      	addcs	r3, #1
   2493e:	b29b      	uxth	r3, r3
   24940:	e6da      	b.n	246f8 <ull_configure+0xe4>
   24942:	f44f 5320 	mov.w	r3, #10240	@ 0x2800
   24946:	9300      	str	r3, [sp, #0]
   24948:	f64c 73ff 	movw	r3, #53247	@ 0xcfff
   2494c:	2200      	movs	r2, #0
   2494e:	4921      	ldr	r1, [pc, #132]	@ (249d4 <ull_configure+0x3c0>)
   24950:	4620      	mov	r0, r4
   24952:	f7ff fd41 	bl	243d8 <dwt_modify16bitoffsetreg>
   24956:	e6f6      	b.n	24746 <ull_configure+0x132>
   24958:	78ab      	ldrb	r3, [r5, #2]
   2495a:	9300      	str	r3, [sp, #0]
   2495c:	23ec      	movs	r3, #236	@ 0xec
   2495e:	2200      	movs	r2, #0
   24960:	f44f 21c0 	mov.w	r1, #393216	@ 0x60000
   24964:	4620      	mov	r0, r4
   24966:	f7ff fb1b 	bl	23fa0 <dwt_modify8bitoffsetreg>
   2496a:	e6fb      	b.n	24764 <ull_configure+0x150>
   2496c:	2803      	cmp	r0, #3
   2496e:	f47f af62 	bne.w	24836 <ull_configure+0x222>
   24972:	e058      	b.n	24a26 <ull_configure+0x412>
   24974:	2102      	movs	r1, #2
   24976:	4620      	mov	r0, r4
   24978:	f7ff fbd0 	bl	2411c <ull_setdwstate>
   2497c:	e75b      	b.n	24836 <ull_configure+0x222>
   2497e:	4b23      	ldr	r3, [pc, #140]	@ (24a0c <ull_configure+0x3f8>)
   24980:	2200      	movs	r2, #0
   24982:	491b      	ldr	r1, [pc, #108]	@ (249f0 <ull_configure+0x3dc>)
   24984:	4620      	mov	r0, r4
   24986:	f7fe fd47 	bl	23418 <dwt_write32bitoffsetreg>
   2498a:	f640 733c 	movw	r3, #3900	@ 0xf3c
   2498e:	2200      	movs	r2, #0
   24990:	f44f 2110 	mov.w	r1, #589824	@ 0x90000
   24994:	4620      	mov	r0, r4
   24996:	f7fe fce2 	bl	2335e <dwt_write16bitoffsetreg>
   2499a:	e75e      	b.n	2485a <ull_configure+0x246>
   2499c:	f44f 7380 	mov.w	r3, #256	@ 0x100
   249a0:	9300      	str	r3, [sp, #0]
   249a2:	f64f 73ff 	movw	r3, #65535	@ 0xffff
   249a6:	2200      	movs	r2, #0
   249a8:	490a      	ldr	r1, [pc, #40]	@ (249d4 <ull_configure+0x3c0>)
   249aa:	4620      	mov	r0, r4
   249ac:	f7ff fd14 	bl	243d8 <dwt_modify16bitoffsetreg>
   249b0:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   249b2:	8a13      	ldrh	r3, [r2, #16]
   249b4:	f043 0308 	orr.w	r3, r3, #8
   249b8:	8213      	strh	r3, [r2, #16]
   249ba:	e046      	b.n	24a4a <ull_configure+0x436>
   249bc:	00026668 	.word	0x00026668
   249c0:	fffc4fcf 	.word	0xfffc4fcf
   249c4:	0002c46c 	.word	0x0002c46c
   249c8:	000e0014 	.word	0x000e0014
   249cc:	bfffff00 	.word	0xbfffff00
   249d0:	000e0018 	.word	0x000e0018
   249d4:	000b0008 	.word	0x000b0008
   249d8:	af5f35cc 	.word	0xaf5f35cc
   249dc:	af5f584c 	.word	0xaf5f584c
   249e0:	0006000c 	.word	0x0006000c
   249e4:	00010008 	.word	0x00010008
   249e8:	000f0030 	.word	0x000f0030
   249ec:	1c071134 	.word	0x1c071134
   249f0:	0007001c 	.word	0x0007001c
   249f4:	00070050 	.word	0x00070050
   249f8:	00070018 	.word	0x00070018
   249fc:	00090008 	.word	0x00090008
   24a00:	000e000c 	.word	0x000e000c
   24a04:	000e0010 	.word	0x000e0010
   24a08:	000c5a0a 	.word	0x000c5a0a
   24a0c:	1c010034 	.word	0x1c010034
   24a10:	2200      	movs	r2, #0
   24a12:	9200      	str	r2, [sp, #0]
   24a14:	23fe      	movs	r3, #254	@ 0xfe
   24a16:	491d      	ldr	r1, [pc, #116]	@ (24a8c <ull_configure+0x478>)
   24a18:	4620      	mov	r0, r4
   24a1a:	f7ff fac1 	bl	23fa0 <dwt_modify8bitoffsetreg>
   24a1e:	e01e      	b.n	24a5e <ull_configure+0x44a>
   24a20:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   24a22:	f883 900f 	strb.w	r9, [r3, #15]
   24a26:	792b      	ldrb	r3, [r5, #4]
   24a28:	3b09      	subs	r3, #9
   24a2a:	b2db      	uxtb	r3, r3
   24a2c:	2b0f      	cmp	r3, #15
   24a2e:	d8ef      	bhi.n	24a10 <ull_configure+0x3fc>
   24a30:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   24a32:	7a1b      	ldrb	r3, [r3, #8]
   24a34:	2b01      	cmp	r3, #1
   24a36:	d0b1      	beq.n	2499c <ull_configure+0x388>
   24a38:	4649      	mov	r1, r9
   24a3a:	4620      	mov	r0, r4
   24a3c:	f7fe fda4 	bl	23588 <ull_configmrxlut>
   24a40:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   24a42:	8a13      	ldrh	r3, [r2, #16]
   24a44:	f023 0308 	bic.w	r3, r3, #8
   24a48:	8213      	strh	r3, [r2, #16]
   24a4a:	f44f 43c8 	mov.w	r3, #25600	@ 0x6400
   24a4e:	9300      	str	r3, [sp, #0]
   24a50:	f248 13ff 	movw	r3, #33279	@ 0x81ff
   24a54:	2200      	movs	r2, #0
   24a56:	490d      	ldr	r1, [pc, #52]	@ (24a8c <ull_configure+0x478>)
   24a58:	4620      	mov	r0, r4
   24a5a:	f7ff fcbd 	bl	243d8 <dwt_modify16bitoffsetreg>
   24a5e:	f1ba 0f40 	cmp.w	sl, #64	@ 0x40
   24a62:	bfcc      	ite	gt
   24a64:	f04f 5300 	movgt.w	r3, #536870912	@ 0x20000000
   24a68:	f04f 53a0 	movle.w	r3, #335544320	@ 0x14000000
   24a6c:	9300      	str	r3, [sp, #0]
   24a6e:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
   24a72:	2200      	movs	r2, #0
   24a74:	4906      	ldr	r1, [pc, #24]	@ (24a90 <ull_configure+0x47c>)
   24a76:	4620      	mov	r0, r4
   24a78:	f7ff f920 	bl	23cbc <dwt_modify32bitoffsetreg>
   24a7c:	2101      	movs	r1, #1
   24a7e:	4620      	mov	r0, r4
   24a80:	f7ff fd12 	bl	244a8 <ull_pgf_cal>
   24a84:	b003      	add	sp, #12
   24a86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24a8a:	bf00      	nop
   24a8c:	00030018 	.word	0x00030018
   24a90:	00060010 	.word	0x00060010

00024a94 <ull_initialise>:
   24a94:	b5f0      	push	{r4, r5, r6, r7, lr}
   24a96:	b083      	sub	sp, #12
   24a98:	4605      	mov	r5, r0
   24a9a:	460e      	mov	r6, r1
   24a9c:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   24a9e:	2b00      	cmp	r3, #0
   24aa0:	d051      	beq.n	24b46 <ull_initialise+0xb2>
   24aa2:	6d2c      	ldr	r4, [r5, #80]	@ 0x50
   24aa4:	2300      	movs	r3, #0
   24aa6:	73a3      	strb	r3, [r4, #14]
   24aa8:	2202      	movs	r2, #2
   24aaa:	8222      	strh	r2, [r4, #16]
   24aac:	7523      	strb	r3, [r4, #20]
   24aae:	7563      	strb	r3, [r4, #21]
   24ab0:	73e3      	strb	r3, [r4, #15]
   24ab2:	7263      	strb	r3, [r4, #9]
   24ab4:	72a3      	strb	r3, [r4, #10]
   24ab6:	2104      	movs	r1, #4
   24ab8:	4628      	mov	r0, r5
   24aba:	f7fe fc8b 	bl	233d4 <_dwt_otpread>
   24abe:	4607      	mov	r7, r0
   24ac0:	2105      	movs	r1, #5
   24ac2:	4628      	mov	r0, r5
   24ac4:	f7fe fc86 	bl	233d4 <_dwt_otpread>
   24ac8:	b10f      	cbz	r7, 24ace <ull_initialise+0x3a>
   24aca:	2800      	cmp	r0, #0
   24acc:	d140      	bne.n	24b50 <ull_initialise+0xbc>
   24ace:	2120      	movs	r1, #32
   24ad0:	4628      	mov	r0, r5
   24ad2:	f7fe fc7f 	bl	233d4 <_dwt_otpread>
   24ad6:	4b35      	ldr	r3, [pc, #212]	@ (24bac <ull_initialise+0x118>)
   24ad8:	4298      	cmp	r0, r3
   24ada:	bf0c      	ite	eq
   24adc:	2301      	moveq	r3, #1
   24ade:	2300      	movne	r3, #0
   24ae0:	7223      	strb	r3, [r4, #8]
   24ae2:	f016 0f10 	tst.w	r6, #16
   24ae6:	d142      	bne.n	24b6e <ull_initialise+0xda>
   24ae8:	f016 0f20 	tst.w	r6, #32
   24aec:	d145      	bne.n	24b7a <ull_initialise+0xe6>
   24aee:	f016 0f40 	tst.w	r6, #64	@ 0x40
   24af2:	d148      	bne.n	24b86 <ull_initialise+0xf2>
   24af4:	f016 0f80 	tst.w	r6, #128	@ 0x80
   24af8:	d14c      	bne.n	24b94 <ull_initialise+0x100>
   24afa:	7aa3      	ldrb	r3, [r4, #10]
   24afc:	b90b      	cbnz	r3, 24b02 <ull_initialise+0x6e>
   24afe:	2385      	movs	r3, #133	@ 0x85
   24b00:	72a3      	strb	r3, [r4, #10]
   24b02:	7a63      	ldrb	r3, [r4, #9]
   24b04:	b90b      	cbnz	r3, 24b0a <ull_initialise+0x76>
   24b06:	2374      	movs	r3, #116	@ 0x74
   24b08:	7263      	strb	r3, [r4, #9]
   24b0a:	211f      	movs	r1, #31
   24b0c:	4628      	mov	r0, r5
   24b0e:	f7fe fc61 	bl	233d4 <_dwt_otpread>
   24b12:	7320      	strb	r0, [r4, #12]
   24b14:	211e      	movs	r1, #30
   24b16:	4628      	mov	r0, r5
   24b18:	f7fe fc5c 	bl	233d4 <_dwt_otpread>
   24b1c:	f010 003f 	ands.w	r0, r0, #63	@ 0x3f
   24b20:	bf12      	itee	ne
   24b22:	7360      	strbne	r0, [r4, #13]
   24b24:	232e      	moveq	r3, #46	@ 0x2e
   24b26:	7363      	strbeq	r3, [r4, #13]
   24b28:	7b63      	ldrb	r3, [r4, #13]
   24b2a:	2200      	movs	r2, #0
   24b2c:	4920      	ldr	r1, [pc, #128]	@ (24bb0 <ull_initialise+0x11c>)
   24b2e:	4628      	mov	r0, r5
   24b30:	f7fe fe00 	bl	23734 <dwt_write8bitoffsetreg>
   24b34:	2135      	movs	r1, #53	@ 0x35
   24b36:	4628      	mov	r0, r5
   24b38:	f7fe fc4c 	bl	233d4 <_dwt_otpread>
   24b3c:	4603      	mov	r3, r0
   24b3e:	bb78      	cbnz	r0, 24ba0 <ull_initialise+0x10c>
   24b40:	2000      	movs	r0, #0
   24b42:	b003      	add	sp, #12
   24b44:	bdf0      	pop	{r4, r5, r6, r7, pc}
   24b46:	2028      	movs	r0, #40	@ 0x28
   24b48:	f7f6 fb7a 	bl	1b240 <malloc>
   24b4c:	6528      	str	r0, [r5, #80]	@ 0x50
   24b4e:	e7a8      	b.n	24aa2 <ull_initialise+0xe>
   24b50:	f44f 7300 	mov.w	r3, #512	@ 0x200
   24b54:	9300      	str	r3, [sp, #0]
   24b56:	f64f 73ff 	movw	r3, #65535	@ 0xffff
   24b5a:	2200      	movs	r2, #0
   24b5c:	4915      	ldr	r1, [pc, #84]	@ (24bb4 <ull_initialise+0x120>)
   24b5e:	4628      	mov	r0, r5
   24b60:	f7ff fc3a 	bl	243d8 <dwt_modify16bitoffsetreg>
   24b64:	8a23      	ldrh	r3, [r4, #16]
   24b66:	f043 0310 	orr.w	r3, r3, #16
   24b6a:	8223      	strh	r3, [r4, #16]
   24b6c:	e7af      	b.n	24ace <ull_initialise+0x3a>
   24b6e:	2106      	movs	r1, #6
   24b70:	4628      	mov	r0, r5
   24b72:	f7fe fc2f 	bl	233d4 <_dwt_otpread>
   24b76:	6020      	str	r0, [r4, #0]
   24b78:	e7b6      	b.n	24ae8 <ull_initialise+0x54>
   24b7a:	2107      	movs	r1, #7
   24b7c:	4628      	mov	r0, r5
   24b7e:	f7fe fc29 	bl	233d4 <_dwt_otpread>
   24b82:	6060      	str	r0, [r4, #4]
   24b84:	e7b3      	b.n	24aee <ull_initialise+0x5a>
   24b86:	2108      	movs	r1, #8
   24b88:	4628      	mov	r0, r5
   24b8a:	f7fe fc23 	bl	233d4 <_dwt_otpread>
   24b8e:	0c00      	lsrs	r0, r0, #16
   24b90:	7260      	strb	r0, [r4, #9]
   24b92:	e7af      	b.n	24af4 <ull_initialise+0x60>
   24b94:	2109      	movs	r1, #9
   24b96:	4628      	mov	r0, r5
   24b98:	f7fe fc1c 	bl	233d4 <_dwt_otpread>
   24b9c:	72a0      	strb	r0, [r4, #10]
   24b9e:	e7ac      	b.n	24afa <ull_initialise+0x66>
   24ba0:	2200      	movs	r2, #0
   24ba2:	4905      	ldr	r1, [pc, #20]	@ (24bb8 <ull_initialise+0x124>)
   24ba4:	4628      	mov	r0, r5
   24ba6:	f7fe fc37 	bl	23418 <dwt_write32bitoffsetreg>
   24baa:	e7c9      	b.n	24b40 <ull_initialise+0xac>
   24bac:	10000240 	.word	0x10000240
   24bb0:	00090014 	.word	0x00090014
   24bb4:	000b0008 	.word	0x000b0008
   24bb8:	00090004 	.word	0x00090004

00024bbc <ull_rxenable>:
   24bbc:	b530      	push	{r4, r5, lr}
   24bbe:	b083      	sub	sp, #12
   24bc0:	4605      	mov	r5, r0
   24bc2:	460c      	mov	r4, r1
   24bc4:	b171      	cbz	r1, 24be4 <ull_rxenable+0x28>
   24bc6:	f021 0302 	bic.w	r3, r1, #2
   24bca:	3b01      	subs	r3, #1
   24bcc:	2b0f      	cmp	r3, #15
   24bce:	d862      	bhi.n	24c96 <ull_rxenable+0xda>
   24bd0:	e8df f003 	tbb	[pc, r3]
   24bd4:	24616111 	.word	0x24616111
   24bd8:	2d616161 	.word	0x2d616161
   24bdc:	61616161 	.word	0x61616161
   24be0:	3a616161 	.word	0x3a616161
   24be4:	2102      	movs	r1, #2
   24be6:	9101      	str	r1, [sp, #4]
   24be8:	2200      	movs	r2, #0
   24bea:	9200      	str	r2, [sp, #0]
   24bec:	4613      	mov	r3, r2
   24bee:	f7fd ff16 	bl	22a1e <dwt_xfer3xxx>
   24bf2:	4620      	mov	r0, r4
   24bf4:	e010      	b.n	24c18 <ull_rxenable+0x5c>
   24bf6:	2302      	movs	r3, #2
   24bf8:	9301      	str	r3, [sp, #4]
   24bfa:	2200      	movs	r2, #0
   24bfc:	9200      	str	r2, [sp, #0]
   24bfe:	4613      	mov	r3, r2
   24c00:	2104      	movs	r1, #4
   24c02:	f7fd ff0c 	bl	22a1e <dwt_xfer3xxx>
   24c06:	2203      	movs	r2, #3
   24c08:	2144      	movs	r1, #68	@ 0x44
   24c0a:	4628      	mov	r0, r5
   24c0c:	f7fd ffb7 	bl	22b7e <dwt_read8bitoffsetreg>
   24c10:	f010 0f08 	tst.w	r0, #8
   24c14:	d125      	bne.n	24c62 <ull_rxenable+0xa6>
   24c16:	2000      	movs	r0, #0
   24c18:	b003      	add	sp, #12
   24c1a:	bd30      	pop	{r4, r5, pc}
   24c1c:	2302      	movs	r3, #2
   24c1e:	9301      	str	r3, [sp, #4]
   24c20:	2200      	movs	r2, #0
   24c22:	9200      	str	r2, [sp, #0]
   24c24:	4613      	mov	r3, r2
   24c26:	210a      	movs	r1, #10
   24c28:	f7fd fef9 	bl	22a1e <dwt_xfer3xxx>
   24c2c:	e7eb      	b.n	24c06 <ull_rxenable+0x4a>
   24c2e:	2100      	movs	r1, #0
   24c30:	f7fe fc07 	bl	23442 <_dwt_adjust_delaytime>
   24c34:	2302      	movs	r3, #2
   24c36:	9301      	str	r3, [sp, #4]
   24c38:	2200      	movs	r2, #0
   24c3a:	9200      	str	r2, [sp, #0]
   24c3c:	4613      	mov	r3, r2
   24c3e:	2108      	movs	r1, #8
   24c40:	4628      	mov	r0, r5
   24c42:	f7fd feec 	bl	22a1e <dwt_xfer3xxx>
   24c46:	e7de      	b.n	24c06 <ull_rxenable+0x4a>
   24c48:	2101      	movs	r1, #1
   24c4a:	f7fe fbfa 	bl	23442 <_dwt_adjust_delaytime>
   24c4e:	2302      	movs	r3, #2
   24c50:	9301      	str	r3, [sp, #4]
   24c52:	2200      	movs	r2, #0
   24c54:	9200      	str	r2, [sp, #0]
   24c56:	4613      	mov	r3, r2
   24c58:	2106      	movs	r1, #6
   24c5a:	4628      	mov	r0, r5
   24c5c:	f7fd fedf 	bl	22a1e <dwt_xfer3xxx>
   24c60:	e7d1      	b.n	24c06 <ull_rxenable+0x4a>
   24c62:	2302      	movs	r3, #2
   24c64:	9301      	str	r3, [sp, #4]
   24c66:	2100      	movs	r1, #0
   24c68:	9100      	str	r1, [sp, #0]
   24c6a:	460b      	mov	r3, r1
   24c6c:	460a      	mov	r2, r1
   24c6e:	4628      	mov	r0, r5
   24c70:	f7fd fed5 	bl	22a1e <dwt_xfer3xxx>
   24c74:	f014 0f02 	tst.w	r4, #2
   24c78:	d002      	beq.n	24c80 <ull_rxenable+0xc4>
   24c7a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
   24c7e:	e7cb      	b.n	24c18 <ull_rxenable+0x5c>
   24c80:	2102      	movs	r1, #2
   24c82:	9101      	str	r1, [sp, #4]
   24c84:	2200      	movs	r2, #0
   24c86:	9200      	str	r2, [sp, #0]
   24c88:	4613      	mov	r3, r2
   24c8a:	4628      	mov	r0, r5
   24c8c:	f7fd fec7 	bl	22a1e <dwt_xfer3xxx>
   24c90:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
   24c94:	e7c0      	b.n	24c18 <ull_rxenable+0x5c>
   24c96:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
   24c9a:	e7bd      	b.n	24c18 <ull_rxenable+0x5c>

00024c9c <ull_softreset_no_sema_fcmd>:
   24c9c:	b570      	push	{r4, r5, r6, lr}
   24c9e:	b082      	sub	sp, #8
   24ca0:	4606      	mov	r6, r0
   24ca2:	2502      	movs	r5, #2
   24ca4:	9501      	str	r5, [sp, #4]
   24ca6:	2400      	movs	r4, #0
   24ca8:	9400      	str	r4, [sp, #0]
   24caa:	4623      	mov	r3, r4
   24cac:	4622      	mov	r2, r4
   24cae:	2119      	movs	r1, #25
   24cb0:	f7fd feb5 	bl	22a1e <dwt_xfer3xxx>
   24cb4:	6d33      	ldr	r3, [r6, #80]	@ 0x50
   24cb6:	739c      	strb	r4, [r3, #14]
   24cb8:	821d      	strh	r5, [r3, #16]
   24cba:	751c      	strb	r4, [r3, #20]
   24cbc:	755c      	strb	r4, [r3, #21]
   24cbe:	73dc      	strb	r4, [r3, #15]
   24cc0:	b002      	add	sp, #8
   24cc2:	bd70      	pop	{r4, r5, r6, pc}

00024cc4 <ull_softreset_fcmd>:
   24cc4:	b570      	push	{r4, r5, r6, lr}
   24cc6:	b082      	sub	sp, #8
   24cc8:	4606      	mov	r6, r0
   24cca:	2502      	movs	r5, #2
   24ccc:	9501      	str	r5, [sp, #4]
   24cce:	2400      	movs	r4, #0
   24cd0:	9400      	str	r4, [sp, #0]
   24cd2:	4623      	mov	r3, r4
   24cd4:	4622      	mov	r2, r4
   24cd6:	2118      	movs	r1, #24
   24cd8:	f7fd fea1 	bl	22a1e <dwt_xfer3xxx>
   24cdc:	6d33      	ldr	r3, [r6, #80]	@ 0x50
   24cde:	739c      	strb	r4, [r3, #14]
   24ce0:	821d      	strh	r5, [r3, #16]
   24ce2:	751c      	strb	r4, [r3, #20]
   24ce4:	755c      	strb	r4, [r3, #21]
   24ce6:	73dc      	strb	r4, [r3, #15]
   24ce8:	b002      	add	sp, #8
   24cea:	bd70      	pop	{r4, r5, r6, pc}

00024cec <dwt_ioctl>:
   24cec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24cf0:	b091      	sub	sp, #68	@ 0x44
   24cf2:	4606      	mov	r6, r0
   24cf4:	4615      	mov	r5, r2
   24cf6:	461c      	mov	r4, r3
   24cf8:	299c      	cmp	r1, #156	@ 0x9c
   24cfa:	f200 809f 	bhi.w	24e3c <dwt_ioctl+0x150>
   24cfe:	e8df f011 	tbh	[pc, r1, lsl #1]
   24d02:	0a54      	.short	0x0a54
   24d04:	00a30a5f 	.word	0x00a30a5f
   24d08:	00c000a7 	.word	0x00c000a7
   24d0c:	0192014c 	.word	0x0192014c
   24d10:	0156016f 	.word	0x0156016f
   24d14:	01ad01a2 	.word	0x01ad01a2
   24d18:	01bd01b5 	.word	0x01bd01b5
   24d1c:	01cd01c5 	.word	0x01cd01c5
   24d20:	01d901d5 	.word	0x01d901d5
   24d24:	027201e1 	.word	0x027201e1
   24d28:	02850280 	.word	0x02850280
   24d2c:	0294028f 	.word	0x0294028f
   24d30:	02a20299 	.word	0x02a20299
   24d34:	02dd02a7 	.word	0x02dd02a7
   24d38:	030502fa 	.word	0x030502fa
   24d3c:	031a0310 	.word	0x031a0310
   24d40:	03480352 	.word	0x03480352
   24d44:	0324033e 	.word	0x0324033e
   24d48:	03810331 	.word	0x03810331
   24d4c:	022f01fc 	.word	0x022f01fc
   24d50:	0245023d 	.word	0x0245023d
   24d54:	097d0259 	.word	0x097d0259
   24d58:	03610982 	.word	0x03610982
   24d5c:	03a3039f 	.word	0x03a3039f
   24d60:	03b103ac 	.word	0x03b103ac
   24d64:	03e503db 	.word	0x03e503db
   24d68:	041703ed 	.word	0x041703ed
   24d6c:	042e0423 	.word	0x042e0423
   24d70:	04390357 	.word	0x04390357
   24d74:	04540442 	.word	0x04540442
   24d78:	047e046d 	.word	0x047e046d
   24d7c:	04ca04c0 	.word	0x04ca04c0
   24d80:	04ff04f0 	.word	0x04ff04f0
   24d84:	0508051a 	.word	0x0508051a
   24d88:	056a0524 	.word	0x056a0524
   24d8c:	05a20582 	.word	0x05a20582
   24d90:	05e505d1 	.word	0x05e505d1
   24d94:	060a05ee 	.word	0x060a05ee
   24d98:	074305f7 	.word	0x074305f7
   24d9c:	07d30785 	.word	0x07d30785
   24da0:	07e407d9 	.word	0x07e407d9
   24da4:	081d07fd 	.word	0x081d07fd
   24da8:	08310827 	.word	0x08310827
   24dac:	0868085f 	.word	0x0868085f
   24db0:	0877086e 	.word	0x0877086e
   24db4:	08910884 	.word	0x08910884
   24db8:	08a4089b 	.word	0x08a4089b
   24dbc:	08b808ad 	.word	0x08b808ad
   24dc0:	08c908c3 	.word	0x08c908c3
   24dc4:	08f708ec 	.word	0x08f708ec
   24dc8:	090d0902 	.word	0x090d0902
   24dcc:	0959094e 	.word	0x0959094e
   24dd0:	09880972 	.word	0x09880972
   24dd4:	0a0709fd 	.word	0x0a0709fd
   24dd8:	0a670a12 	.word	0x0a670a12
   24ddc:	0a490a1c 	.word	0x0a490a1c
   24de0:	09c60777 	.word	0x09c60777
   24de4:	0ad509e7 	.word	0x0ad509e7
   24de8:	0a740aca 	.word	0x0a740aca
   24dec:	0a8a0a7f 	.word	0x0a8a0a7f
   24df0:	0aa00a95 	.word	0x0aa00a95
   24df4:	0ab60aab 	.word	0x0ab60aab
   24df8:	0cb50abf 	.word	0x0cb50abf
   24dfc:	0d2a0cef 	.word	0x0d2a0cef
   24e00:	0df90d4d 	.word	0x0df90d4d
   24e04:	0afd0e0e 	.word	0x0afd0e0e
   24e08:	0bf40bc1 	.word	0x0bf40bc1
   24e0c:	0c040bff 	.word	0x0c040bff
   24e10:	0c140c09 	.word	0x0c140c09
   24e14:	0c320c27 	.word	0x0c320c27
   24e18:	0c5c0c47 	.word	0x0c5c0c47
   24e1c:	009d0c98 	.word	0x009d0c98
   24e20:	009d009d 	.word	0x009d009d
   24e24:	009d009d 	.word	0x009d009d
   24e28:	009d009d 	.word	0x009d009d
   24e2c:	0d64009d 	.word	0x0d64009d
   24e30:	0ec20d75 	.word	0x0ec20d75
   24e34:	0db40dbf 	.word	0x0db40dbf
   24e38:	0dca0dd3 	.word	0x0dca0dd3
   24e3c:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
   24e40:	4628      	mov	r0, r5
   24e42:	b011      	add	sp, #68	@ 0x44
   24e44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24e48:	6843      	ldr	r3, [r0, #4]
   24e4a:	4798      	blx	r3
   24e4c:	2500      	movs	r5, #0
   24e4e:	e7f7      	b.n	24e40 <dwt_ioctl+0x154>
   24e50:	2202      	movs	r2, #2
   24e52:	49b4      	ldr	r1, [pc, #720]	@ (25124 <dwt_ioctl+0x438>)
   24e54:	f7fd fe93 	bl	22b7e <dwt_read8bitoffsetreg>
   24e58:	2803      	cmp	r0, #3
   24e5a:	d801      	bhi.n	24e60 <dwt_ioctl+0x174>
   24e5c:	2500      	movs	r5, #0
   24e5e:	e7ef      	b.n	24e40 <dwt_ioctl+0x154>
   24e60:	f7f5 ffc6 	bl	1adf0 <decamutexon>
   24e64:	4604      	mov	r4, r0
   24e66:	2302      	movs	r3, #2
   24e68:	9301      	str	r3, [sp, #4]
   24e6a:	2500      	movs	r5, #0
   24e6c:	9500      	str	r5, [sp, #0]
   24e6e:	462b      	mov	r3, r5
   24e70:	462a      	mov	r2, r5
   24e72:	4629      	mov	r1, r5
   24e74:	4630      	mov	r0, r6
   24e76:	f7fd fdd2 	bl	22a1e <dwt_xfer3xxx>
   24e7a:	4620      	mov	r0, r4
   24e7c:	f7f5 ffbf 	bl	1adfe <decamutexoff>
   24e80:	e7de      	b.n	24e40 <dwt_ioctl+0x154>
   24e82:	2c00      	cmp	r4, #0
   24e84:	f001 8602 	beq.w	26a8c <dwt_ioctl+0x1da0>
   24e88:	7824      	ldrb	r4, [r4, #0]
   24e8a:	f014 0f1d 	tst.w	r4, #29
   24e8e:	d061      	beq.n	24f54 <dwt_ioctl+0x268>
   24e90:	f014 0f01 	tst.w	r4, #1
   24e94:	d023      	beq.n	24ede <dwt_ioctl+0x1f2>
   24e96:	f014 0f02 	tst.w	r4, #2
   24e9a:	f04f 0302 	mov.w	r3, #2
   24e9e:	9301      	str	r3, [sp, #4]
   24ea0:	f04f 0200 	mov.w	r2, #0
   24ea4:	9200      	str	r2, [sp, #0]
   24ea6:	4613      	mov	r3, r2
   24ea8:	bf14      	ite	ne
   24eaa:	210d      	movne	r1, #13
   24eac:	2103      	moveq	r1, #3
   24eae:	f7fd fdb6 	bl	22a1e <dwt_xfer3xxx>
   24eb2:	2203      	movs	r2, #3
   24eb4:	2144      	movs	r1, #68	@ 0x44
   24eb6:	4630      	mov	r0, r6
   24eb8:	f7fd fe61 	bl	22b7e <dwt_read8bitoffsetreg>
   24ebc:	f010 0f08 	tst.w	r0, #8
   24ec0:	bf08      	it	eq
   24ec2:	2500      	moveq	r5, #0
   24ec4:	d0bc      	beq.n	24e40 <dwt_ioctl+0x154>
   24ec6:	2302      	movs	r3, #2
   24ec8:	9301      	str	r3, [sp, #4]
   24eca:	2100      	movs	r1, #0
   24ecc:	9100      	str	r1, [sp, #0]
   24ece:	460b      	mov	r3, r1
   24ed0:	460a      	mov	r2, r1
   24ed2:	4630      	mov	r0, r6
   24ed4:	f7fd fda3 	bl	22a1e <dwt_xfer3xxx>
   24ed8:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
   24edc:	e7b0      	b.n	24e40 <dwt_ioctl+0x154>
   24ede:	f014 0f08 	tst.w	r4, #8
   24ee2:	d111      	bne.n	24f08 <dwt_ioctl+0x21c>
   24ee4:	f014 0f10 	tst.w	r4, #16
   24ee8:	d121      	bne.n	24f2e <dwt_ioctl+0x242>
   24eea:	f014 0f02 	tst.w	r4, #2
   24eee:	f04f 0302 	mov.w	r3, #2
   24ef2:	9301      	str	r3, [sp, #4]
   24ef4:	f04f 0200 	mov.w	r2, #0
   24ef8:	9200      	str	r2, [sp, #0]
   24efa:	4613      	mov	r3, r2
   24efc:	bf14      	ite	ne
   24efe:	2110      	movne	r1, #16
   24f00:	2109      	moveq	r1, #9
   24f02:	f7fd fd8c 	bl	22a1e <dwt_xfer3xxx>
   24f06:	e7d4      	b.n	24eb2 <dwt_ioctl+0x1c6>
   24f08:	2100      	movs	r1, #0
   24f0a:	f7fe fa9a 	bl	23442 <_dwt_adjust_delaytime>
   24f0e:	f014 0f02 	tst.w	r4, #2
   24f12:	f04f 0302 	mov.w	r3, #2
   24f16:	9301      	str	r3, [sp, #4]
   24f18:	f04f 0200 	mov.w	r2, #0
   24f1c:	9200      	str	r2, [sp, #0]
   24f1e:	4613      	mov	r3, r2
   24f20:	bf14      	ite	ne
   24f22:	210f      	movne	r1, #15
   24f24:	2107      	moveq	r1, #7
   24f26:	4630      	mov	r0, r6
   24f28:	f7fd fd79 	bl	22a1e <dwt_xfer3xxx>
   24f2c:	e7c1      	b.n	24eb2 <dwt_ioctl+0x1c6>
   24f2e:	2101      	movs	r1, #1
   24f30:	f7fe fa87 	bl	23442 <_dwt_adjust_delaytime>
   24f34:	f014 0f02 	tst.w	r4, #2
   24f38:	f04f 0302 	mov.w	r3, #2
   24f3c:	9301      	str	r3, [sp, #4]
   24f3e:	f04f 0200 	mov.w	r2, #0
   24f42:	9200      	str	r2, [sp, #0]
   24f44:	4613      	mov	r3, r2
   24f46:	bf14      	ite	ne
   24f48:	210e      	movne	r1, #14
   24f4a:	2105      	moveq	r1, #5
   24f4c:	4630      	mov	r0, r6
   24f4e:	f7fd fd66 	bl	22a1e <dwt_xfer3xxx>
   24f52:	e7ae      	b.n	24eb2 <dwt_ioctl+0x1c6>
   24f54:	f014 0f20 	tst.w	r4, #32
   24f58:	d00f      	beq.n	24f7a <dwt_ioctl+0x28e>
   24f5a:	f014 0f02 	tst.w	r4, #2
   24f5e:	f04f 0302 	mov.w	r3, #2
   24f62:	9301      	str	r3, [sp, #4]
   24f64:	f04f 0500 	mov.w	r5, #0
   24f68:	9500      	str	r5, [sp, #0]
   24f6a:	462b      	mov	r3, r5
   24f6c:	462a      	mov	r2, r5
   24f6e:	bf14      	ite	ne
   24f70:	2111      	movne	r1, #17
   24f72:	210b      	moveq	r1, #11
   24f74:	f7fd fd53 	bl	22a1e <dwt_xfer3xxx>
   24f78:	e762      	b.n	24e40 <dwt_ioctl+0x154>
   24f7a:	f014 0f02 	tst.w	r4, #2
   24f7e:	f04f 0302 	mov.w	r3, #2
   24f82:	9301      	str	r3, [sp, #4]
   24f84:	f04f 0500 	mov.w	r5, #0
   24f88:	9500      	str	r5, [sp, #0]
   24f8a:	462b      	mov	r3, r5
   24f8c:	462a      	mov	r2, r5
   24f8e:	bf14      	ite	ne
   24f90:	210c      	movne	r1, #12
   24f92:	2101      	moveq	r1, #1
   24f94:	f7fd fd43 	bl	22a1e <dwt_xfer3xxx>
   24f98:	e752      	b.n	24e40 <dwt_ioctl+0x154>
   24f9a:	2c00      	cmp	r4, #0
   24f9c:	f001 8579 	beq.w	26a92 <dwt_ioctl+0x1da6>
   24fa0:	6823      	ldr	r3, [r4, #0]
   24fa2:	2200      	movs	r2, #0
   24fa4:	2128      	movs	r1, #40	@ 0x28
   24fa6:	f7fe fa37 	bl	23418 <dwt_write32bitoffsetreg>
   24faa:	2500      	movs	r5, #0
   24fac:	e748      	b.n	24e40 <dwt_ioctl+0x154>
   24fae:	6823      	ldr	r3, [r4, #0]
   24fb0:	2200      	movs	r2, #0
   24fb2:	495d      	ldr	r1, [pc, #372]	@ (25128 <dwt_ioctl+0x43c>)
   24fb4:	f7fe fa30 	bl	23418 <dwt_write32bitoffsetreg>
   24fb8:	6863      	ldr	r3, [r4, #4]
   24fba:	2200      	movs	r2, #0
   24fbc:	495b      	ldr	r1, [pc, #364]	@ (2512c <dwt_ioctl+0x440>)
   24fbe:	4630      	mov	r0, r6
   24fc0:	f7fe fa2a 	bl	23418 <dwt_write32bitoffsetreg>
   24fc4:	68a3      	ldr	r3, [r4, #8]
   24fc6:	2200      	movs	r2, #0
   24fc8:	4959      	ldr	r1, [pc, #356]	@ (25130 <dwt_ioctl+0x444>)
   24fca:	4630      	mov	r0, r6
   24fcc:	f7fe fa24 	bl	23418 <dwt_write32bitoffsetreg>
   24fd0:	68e3      	ldr	r3, [r4, #12]
   24fd2:	2200      	movs	r2, #0
   24fd4:	4957      	ldr	r1, [pc, #348]	@ (25134 <dwt_ioctl+0x448>)
   24fd6:	4630      	mov	r0, r6
   24fd8:	f7fe fa1e 	bl	23418 <dwt_write32bitoffsetreg>
   24fdc:	2500      	movs	r5, #0
   24fde:	e72f      	b.n	24e40 <dwt_ioctl+0x154>
   24fe0:	2c00      	cmp	r4, #0
   24fe2:	f001 8559 	beq.w	26a98 <dwt_ioctl+0x1dac>
   24fe6:	8823      	ldrh	r3, [r4, #0]
   24fe8:	6865      	ldr	r5, [r4, #4]
   24fea:	2d03      	cmp	r5, #3
   24fec:	f201 8557 	bhi.w	26a9e <dwt_ioctl+0x1db2>
   24ff0:	e8df f005 	tbb	[pc, r5]
   24ff4:	130d0702 	.word	0x130d0702
   24ff8:	2200      	movs	r2, #0
   24ffa:	494f      	ldr	r1, [pc, #316]	@ (25138 <dwt_ioctl+0x44c>)
   24ffc:	f7fe f9af 	bl	2335e <dwt_write16bitoffsetreg>
   25000:	e71e      	b.n	24e40 <dwt_ioctl+0x154>
   25002:	2202      	movs	r2, #2
   25004:	494c      	ldr	r1, [pc, #304]	@ (25138 <dwt_ioctl+0x44c>)
   25006:	f7fe f9aa 	bl	2335e <dwt_write16bitoffsetreg>
   2500a:	2500      	movs	r5, #0
   2500c:	e718      	b.n	24e40 <dwt_ioctl+0x154>
   2500e:	2200      	movs	r2, #0
   25010:	494a      	ldr	r1, [pc, #296]	@ (2513c <dwt_ioctl+0x450>)
   25012:	f7fe f9a4 	bl	2335e <dwt_write16bitoffsetreg>
   25016:	2500      	movs	r5, #0
   25018:	e712      	b.n	24e40 <dwt_ioctl+0x154>
   2501a:	2202      	movs	r2, #2
   2501c:	4947      	ldr	r1, [pc, #284]	@ (2513c <dwt_ioctl+0x450>)
   2501e:	f7fe f99e 	bl	2335e <dwt_write16bitoffsetreg>
   25022:	2500      	movs	r5, #0
   25024:	e70c      	b.n	24e40 <dwt_ioctl+0x154>
   25026:	2c00      	cmp	r4, #0
   25028:	f001 853c 	beq.w	26aa4 <dwt_ioctl+0x1db8>
   2502c:	7823      	ldrb	r3, [r4, #0]
   2502e:	005b      	lsls	r3, r3, #1
   25030:	f003 0306 	and.w	r3, r3, #6
   25034:	9300      	str	r3, [sp, #0]
   25036:	f06f 0306 	mvn.w	r3, #6
   2503a:	2200      	movs	r2, #0
   2503c:	4940      	ldr	r1, [pc, #256]	@ (25140 <dwt_ioctl+0x454>)
   2503e:	f7fe fe3d 	bl	23cbc <dwt_modify32bitoffsetreg>
   25042:	2500      	movs	r5, #0
   25044:	e6fc      	b.n	24e40 <dwt_ioctl+0x154>
   25046:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
   2504a:	9300      	str	r3, [sp, #0]
   2504c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   25050:	2200      	movs	r2, #0
   25052:	493c      	ldr	r1, [pc, #240]	@ (25144 <dwt_ioctl+0x458>)
   25054:	f7fe fe32 	bl	23cbc <dwt_modify32bitoffsetreg>
   25058:	2500      	movs	r5, #0
   2505a:	e6f1      	b.n	24e40 <dwt_ioctl+0x154>
   2505c:	2c00      	cmp	r4, #0
   2505e:	f001 8524 	beq.w	26aaa <dwt_ioctl+0x1dbe>
   25062:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   25064:	7b1b      	ldrb	r3, [r3, #12]
   25066:	7023      	strb	r3, [r4, #0]
   25068:	2500      	movs	r5, #0
   2506a:	e6e9      	b.n	24e40 <dwt_ioctl+0x154>
   2506c:	2c00      	cmp	r4, #0
   2506e:	f001 851f 	beq.w	26ab0 <dwt_ioctl+0x1dc4>
   25072:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   25074:	7a5b      	ldrb	r3, [r3, #9]
   25076:	7023      	strb	r3, [r4, #0]
   25078:	2500      	movs	r5, #0
   2507a:	e6e1      	b.n	24e40 <dwt_ioctl+0x154>
   2507c:	2c00      	cmp	r4, #0
   2507e:	f001 851a 	beq.w	26ab6 <dwt_ioctl+0x1dca>
   25082:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   25084:	7a9b      	ldrb	r3, [r3, #10]
   25086:	7023      	strb	r3, [r4, #0]
   25088:	2500      	movs	r5, #0
   2508a:	e6d9      	b.n	24e40 <dwt_ioctl+0x154>
   2508c:	2c00      	cmp	r4, #0
   2508e:	f001 8515 	beq.w	26abc <dwt_ioctl+0x1dd0>
   25092:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   25094:	681b      	ldr	r3, [r3, #0]
   25096:	6023      	str	r3, [r4, #0]
   25098:	2500      	movs	r5, #0
   2509a:	e6d1      	b.n	24e40 <dwt_ioctl+0x154>
   2509c:	2c00      	cmp	r4, #0
   2509e:	f001 8510 	beq.w	26ac2 <dwt_ioctl+0x1dd6>
   250a2:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   250a4:	685b      	ldr	r3, [r3, #4]
   250a6:	6023      	str	r3, [r4, #0]
   250a8:	2500      	movs	r5, #0
   250aa:	e6c9      	b.n	24e40 <dwt_ioctl+0x154>
   250ac:	f7fe fc72 	bl	23994 <ull_signal_rx_buff_free>
   250b0:	2500      	movs	r5, #0
   250b2:	e6c5      	b.n	24e40 <dwt_ioctl+0x154>
   250b4:	2c00      	cmp	r4, #0
   250b6:	f001 8507 	beq.w	26ac8 <dwt_ioctl+0x1ddc>
   250ba:	6821      	ldr	r1, [r4, #0]
   250bc:	f7fe f9e7 	bl	2348e <ull_setrxaftertxdelay>
   250c0:	2500      	movs	r5, #0
   250c2:	e6bd      	b.n	24e40 <dwt_ioctl+0x154>
   250c4:	2c00      	cmp	r4, #0
   250c6:	f001 8502 	beq.w	26ace <dwt_ioctl+0x1de2>
   250ca:	7825      	ldrb	r5, [r4, #0]
   250cc:	b15d      	cbz	r5, 250e6 <dwt_ioctl+0x3fa>
   250ce:	6864      	ldr	r4, [r4, #4]
   250d0:	2340      	movs	r3, #64	@ 0x40
   250d2:	9300      	str	r3, [sp, #0]
   250d4:	23ff      	movs	r3, #255	@ 0xff
   250d6:	2200      	movs	r2, #0
   250d8:	2110      	movs	r1, #16
   250da:	f7fe ff61 	bl	23fa0 <dwt_modify8bitoffsetreg>
   250de:	2d02      	cmp	r5, #2
   250e0:	d107      	bne.n	250f2 <dwt_ioctl+0x406>
   250e2:	60f4      	str	r4, [r6, #12]
   250e4:	e005      	b.n	250f2 <dwt_ioctl+0x406>
   250e6:	2200      	movs	r2, #0
   250e8:	9200      	str	r2, [sp, #0]
   250ea:	23bf      	movs	r3, #191	@ 0xbf
   250ec:	2110      	movs	r1, #16
   250ee:	f7fe ff57 	bl	23fa0 <dwt_modify8bitoffsetreg>
   250f2:	6d33      	ldr	r3, [r6, #80]	@ 0x50
   250f4:	751d      	strb	r5, [r3, #20]
   250f6:	2500      	movs	r5, #0
   250f8:	e6a2      	b.n	24e40 <dwt_ioctl+0x154>
   250fa:	2c00      	cmp	r4, #0
   250fc:	f001 84ea 	beq.w	26ad4 <dwt_ioctl+0x1de8>
   25100:	6865      	ldr	r5, [r4, #4]
   25102:	7823      	ldrb	r3, [r4, #0]
   25104:	2203      	movs	r2, #3
   25106:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
   2510a:	f7fe fb13 	bl	23734 <dwt_write8bitoffsetreg>
   2510e:	b9dd      	cbnz	r5, 25148 <dwt_ioctl+0x45c>
   25110:	2200      	movs	r2, #0
   25112:	9200      	str	r2, [sp, #0]
   25114:	f24f 73ff 	movw	r3, #63487	@ 0xf7ff
   25118:	2110      	movs	r1, #16
   2511a:	4630      	mov	r0, r6
   2511c:	f7ff f95c 	bl	243d8 <dwt_modify16bitoffsetreg>
   25120:	e68e      	b.n	24e40 <dwt_ioctl+0x154>
   25122:	bf00      	nop
   25124:	000f0030 	.word	0x000f0030
   25128:	00010054 	.word	0x00010054
   2512c:	00010058 	.word	0x00010058
   25130:	0001005c 	.word	0x0001005c
   25134:	00010060 	.word	0x00010060
   25138:	0001000c 	.word	0x0001000c
   2513c:	00010010 	.word	0x00010010
   25140:	00010008 	.word	0x00010008
   25144:	00110004 	.word	0x00110004
   25148:	f44f 2381 	mov.w	r3, #264192	@ 0x40800
   2514c:	9300      	str	r3, [sp, #0]
   2514e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   25152:	2200      	movs	r2, #0
   25154:	2110      	movs	r1, #16
   25156:	4630      	mov	r0, r6
   25158:	f7fe fdb0 	bl	23cbc <dwt_modify32bitoffsetreg>
   2515c:	2500      	movs	r5, #0
   2515e:	e66f      	b.n	24e40 <dwt_ioctl+0x154>
   25160:	2200      	movs	r2, #0
   25162:	4611      	mov	r1, r2
   25164:	f7fd fce3 	bl	22b2e <dwt_read32bitoffsetreg>
   25168:	68b2      	ldr	r2, [r6, #8]
   2516a:	6813      	ldr	r3, [r2, #0]
   2516c:	4043      	eors	r3, r0
   2516e:	6852      	ldr	r2, [r2, #4]
   25170:	4213      	tst	r3, r2
   25172:	bf14      	ite	ne
   25174:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
   25178:	2500      	moveq	r5, #0
   2517a:	e661      	b.n	24e40 <dwt_ioctl+0x154>
   2517c:	2c00      	cmp	r4, #0
   2517e:	f001 84ac 	beq.w	26ada <dwt_ioctl+0x1dee>
   25182:	7821      	ldrb	r1, [r4, #0]
   25184:	f7fe ff20 	bl	23fc8 <ull_configciadiag>
   25188:	2500      	movs	r5, #0
   2518a:	e659      	b.n	24e40 <dwt_ioctl+0x154>
   2518c:	b93a      	cbnz	r2, 2519e <dwt_ioctl+0x4b2>
   2518e:	2200      	movs	r2, #0
   25190:	9200      	str	r2, [sp, #0]
   25192:	f24f 73ff 	movw	r3, #63487	@ 0xf7ff
   25196:	49b8      	ldr	r1, [pc, #736]	@ (25478 <dwt_ioctl+0x78c>)
   25198:	f7ff f91e 	bl	243d8 <dwt_modify16bitoffsetreg>
   2519c:	e650      	b.n	24e40 <dwt_ioctl+0x154>
   2519e:	f44f 6300 	mov.w	r3, #2048	@ 0x800
   251a2:	9300      	str	r3, [sp, #0]
   251a4:	f64f 73ff 	movw	r3, #65535	@ 0xffff
   251a8:	2200      	movs	r2, #0
   251aa:	49b3      	ldr	r1, [pc, #716]	@ (25478 <dwt_ioctl+0x78c>)
   251ac:	f7ff f914 	bl	243d8 <dwt_modify16bitoffsetreg>
   251b0:	2500      	movs	r5, #0
   251b2:	e645      	b.n	24e40 <dwt_ioctl+0x154>
   251b4:	f002 0201 	and.w	r2, r2, #1
   251b8:	f64f 73ff 	movw	r3, #65535	@ 0xffff
   251bc:	f24f 71ff 	movw	r1, #63487	@ 0xf7ff
   251c0:	2a00      	cmp	r2, #0
   251c2:	bf08      	it	eq
   251c4:	460b      	moveq	r3, r1
   251c6:	02d2      	lsls	r2, r2, #11
   251c8:	f015 0f02 	tst.w	r5, #2
   251cc:	bf12      	itee	ne
   251ce:	f442 5280 	orrne.w	r2, r2, #4096	@ 0x1000
   251d2:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
   251d6:	b29b      	uxtheq	r3, r3
   251d8:	9200      	str	r2, [sp, #0]
   251da:	2200      	movs	r2, #0
   251dc:	49a6      	ldr	r1, [pc, #664]	@ (25478 <dwt_ioctl+0x78c>)
   251de:	f7ff f8fb 	bl	243d8 <dwt_modify16bitoffsetreg>
   251e2:	2500      	movs	r5, #0
   251e4:	e62c      	b.n	24e40 <dwt_ioctl+0x154>
   251e6:	b92a      	cbnz	r2, 251f4 <dwt_ioctl+0x508>
   251e8:	4ba4      	ldr	r3, [pc, #656]	@ (2547c <dwt_ioctl+0x790>)
   251ea:	2202      	movs	r2, #2
   251ec:	49a4      	ldr	r1, [pc, #656]	@ (25480 <dwt_ioctl+0x794>)
   251ee:	f7fe f913 	bl	23418 <dwt_write32bitoffsetreg>
   251f2:	e625      	b.n	24e40 <dwt_ioctl+0x154>
   251f4:	4ba3      	ldr	r3, [pc, #652]	@ (25484 <dwt_ioctl+0x798>)
   251f6:	2202      	movs	r2, #2
   251f8:	49a1      	ldr	r1, [pc, #644]	@ (25480 <dwt_ioctl+0x794>)
   251fa:	f7fe f90d 	bl	23418 <dwt_write32bitoffsetreg>
   251fe:	2500      	movs	r5, #0
   25200:	e61e      	b.n	24e40 <dwt_ioctl+0x154>
   25202:	4611      	mov	r1, r2
   25204:	f7fe f957 	bl	234b6 <ull_setlnapamode>
   25208:	2500      	movs	r5, #0
   2520a:	e619      	b.n	24e40 <dwt_ioctl+0x154>
   2520c:	2c00      	cmp	r4, #0
   2520e:	f001 8467 	beq.w	26ae0 <dwt_ioctl+0x1df4>
   25212:	2200      	movs	r2, #0
   25214:	499c      	ldr	r1, [pc, #624]	@ (25488 <dwt_ioctl+0x79c>)
   25216:	f7fd fcb2 	bl	22b7e <dwt_read8bitoffsetreg>
   2521a:	7020      	strb	r0, [r4, #0]
   2521c:	2500      	movs	r5, #0
   2521e:	e60f      	b.n	24e40 <dwt_ioctl+0x154>
   25220:	4621      	mov	r1, r4
   25222:	f7fe f969 	bl	234f8 <ull_configurestskey>
   25226:	2500      	movs	r5, #0
   25228:	e60a      	b.n	24e40 <dwt_ioctl+0x154>
   2522a:	4621      	mov	r1, r4
   2522c:	f7fe f988 	bl	23540 <ull_configurestsiv>
   25230:	2500      	movs	r5, #0
   25232:	e605      	b.n	24e40 <dwt_ioctl+0x154>
   25234:	2301      	movs	r3, #1
   25236:	9300      	str	r3, [sp, #0]
   25238:	23ff      	movs	r3, #255	@ 0xff
   2523a:	2200      	movs	r2, #0
   2523c:	4993      	ldr	r1, [pc, #588]	@ (2548c <dwt_ioctl+0x7a0>)
   2523e:	f7fe feaf 	bl	23fa0 <dwt_modify8bitoffsetreg>
   25242:	2500      	movs	r5, #0
   25244:	e5fc      	b.n	24e40 <dwt_ioctl+0x154>
   25246:	4611      	mov	r1, r2
   25248:	f7fe f99e 	bl	23588 <ull_configmrxlut>
   2524c:	2500      	movs	r5, #0
   2524e:	e5f7      	b.n	24e40 <dwt_ioctl+0x154>
   25250:	2318      	movs	r3, #24
   25252:	2200      	movs	r2, #0
   25254:	498e      	ldr	r1, [pc, #568]	@ (25490 <dwt_ioctl+0x7a4>)
   25256:	f7fe f8df 	bl	23418 <dwt_write32bitoffsetreg>
   2525a:	23e8      	movs	r3, #232	@ 0xe8
   2525c:	2200      	movs	r2, #0
   2525e:	498d      	ldr	r1, [pc, #564]	@ (25494 <dwt_ioctl+0x7a8>)
   25260:	4630      	mov	r0, r6
   25262:	f7fe f8d9 	bl	23418 <dwt_write32bitoffsetreg>
   25266:	6d33      	ldr	r3, [r6, #80]	@ 0x50
   25268:	7d9b      	ldrb	r3, [r3, #22]
   2526a:	085b      	lsrs	r3, r3, #1
   2526c:	d01a      	beq.n	252a4 <dwt_ioctl+0x5b8>
   2526e:	2200      	movs	r2, #0
   25270:	4989      	ldr	r1, [pc, #548]	@ (25498 <dwt_ioctl+0x7ac>)
   25272:	4630      	mov	r0, r6
   25274:	f7fd fc71 	bl	22b5a <dwt_read16bitoffsetreg>
   25278:	f3c0 03c4 	ubfx	r3, r0, #3, #5
   2527c:	3b09      	subs	r3, #9
   2527e:	2b0f      	cmp	r3, #15
   25280:	f201 8431 	bhi.w	26ae6 <dwt_ioctl+0x1dfa>
   25284:	f000 0001 	and.w	r0, r0, #1
   25288:	2800      	cmp	r0, #0
   2528a:	bf0c      	ite	eq
   2528c:	2105      	moveq	r1, #5
   2528e:	2109      	movne	r1, #9
   25290:	6d33      	ldr	r3, [r6, #80]	@ 0x50
   25292:	7a1b      	ldrb	r3, [r3, #8]
   25294:	2b01      	cmp	r3, #1
   25296:	f001 8429 	beq.w	26aec <dwt_ioctl+0x1e00>
   2529a:	4630      	mov	r0, r6
   2529c:	f7fe f974 	bl	23588 <ull_configmrxlut>
   252a0:	2500      	movs	r5, #0
   252a2:	e5cd      	b.n	24e40 <dwt_ioctl+0x154>
   252a4:	2301      	movs	r3, #1
   252a6:	2200      	movs	r2, #0
   252a8:	497c      	ldr	r1, [pc, #496]	@ (2549c <dwt_ioctl+0x7b0>)
   252aa:	4630      	mov	r0, r6
   252ac:	f7fe fa42 	bl	23734 <dwt_write8bitoffsetreg>
   252b0:	6d32      	ldr	r2, [r6, #80]	@ 0x50
   252b2:	7d93      	ldrb	r3, [r2, #22]
   252b4:	f043 0302 	orr.w	r3, r3, #2
   252b8:	7593      	strb	r3, [r2, #22]
   252ba:	e7d8      	b.n	2526e <dwt_ioctl+0x582>
   252bc:	2c00      	cmp	r4, #0
   252be:	f001 8418 	beq.w	26af2 <dwt_ioctl+0x1e06>
   252c2:	7824      	ldrb	r4, [r4, #0]
   252c4:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   252c6:	755c      	strb	r4, [r3, #21]
   252c8:	0323      	lsls	r3, r4, #12
   252ca:	f403 4330 	and.w	r3, r3, #45056	@ 0xb000
   252ce:	9300      	str	r3, [sp, #0]
   252d0:	f644 73ff 	movw	r3, #20479	@ 0x4fff
   252d4:	2200      	movs	r2, #0
   252d6:	2110      	movs	r1, #16
   252d8:	f7ff f87e 	bl	243d8 <dwt_modify16bitoffsetreg>
   252dc:	f004 0403 	and.w	r4, r4, #3
   252e0:	2c03      	cmp	r4, #3
   252e2:	bf0c      	ite	eq
   252e4:	4b6e      	ldreq	r3, [pc, #440]	@ (254a0 <dwt_ioctl+0x7b4>)
   252e6:	4b6f      	ldrne	r3, [pc, #444]	@ (254a4 <dwt_ioctl+0x7b8>)
   252e8:	2200      	movs	r2, #0
   252ea:	496f      	ldr	r1, [pc, #444]	@ (254a8 <dwt_ioctl+0x7bc>)
   252ec:	4630      	mov	r0, r6
   252ee:	f7fe f893 	bl	23418 <dwt_write32bitoffsetreg>
   252f2:	2500      	movs	r5, #0
   252f4:	e5a4      	b.n	24e40 <dwt_ioctl+0x154>
   252f6:	2c00      	cmp	r4, #0
   252f8:	f001 83fe 	beq.w	26af8 <dwt_ioctl+0x1e0c>
   252fc:	8823      	ldrh	r3, [r4, #0]
   252fe:	2200      	movs	r2, #0
   25300:	f44f 2160 	mov.w	r1, #917504	@ 0xe0000
   25304:	f7fe f82b 	bl	2335e <dwt_write16bitoffsetreg>
   25308:	2500      	movs	r5, #0
   2530a:	e599      	b.n	24e40 <dwt_ioctl+0x154>
   2530c:	2c00      	cmp	r4, #0
   2530e:	f001 83f6 	beq.w	26afe <dwt_ioctl+0x1e12>
   25312:	2200      	movs	r2, #0
   25314:	f44f 2160 	mov.w	r1, #917504	@ 0xe0000
   25318:	f7fd fc1f 	bl	22b5a <dwt_read16bitoffsetreg>
   2531c:	8020      	strh	r0, [r4, #0]
   2531e:	2500      	movs	r5, #0
   25320:	e58e      	b.n	24e40 <dwt_ioctl+0x154>
   25322:	2c00      	cmp	r4, #0
   25324:	f001 83ee 	beq.w	26b04 <dwt_ioctl+0x1e18>
   25328:	8823      	ldrh	r3, [r4, #0]
   2532a:	2200      	movs	r2, #0
   2532c:	217c      	movs	r1, #124	@ 0x7c
   2532e:	f7fe f816 	bl	2335e <dwt_write16bitoffsetreg>
   25332:	2500      	movs	r5, #0
   25334:	e584      	b.n	24e40 <dwt_ioctl+0x154>
   25336:	2c00      	cmp	r4, #0
   25338:	f001 83e7 	beq.w	26b0a <dwt_ioctl+0x1e1e>
   2533c:	2200      	movs	r2, #0
   2533e:	217c      	movs	r1, #124	@ 0x7c
   25340:	f7fd fc0b 	bl	22b5a <dwt_read16bitoffsetreg>
   25344:	8020      	strh	r0, [r4, #0]
   25346:	2500      	movs	r5, #0
   25348:	e57a      	b.n	24e40 <dwt_ioctl+0x154>
   2534a:	2c00      	cmp	r4, #0
   2534c:	f001 83e0 	beq.w	26b10 <dwt_ioctl+0x1e24>
   25350:	88a3      	ldrh	r3, [r4, #4]
   25352:	88e2      	ldrh	r2, [r4, #6]
   25354:	6821      	ldr	r1, [r4, #0]
   25356:	9100      	str	r1, [sp, #0]
   25358:	f44f 11b0 	mov.w	r1, #1441792	@ 0x160000
   2535c:	f7fd fff4 	bl	23348 <dwt_writetodevice>
   25360:	2500      	movs	r5, #0
   25362:	e56d      	b.n	24e40 <dwt_ioctl+0x154>
   25364:	2c00      	cmp	r4, #0
   25366:	f001 83d6 	beq.w	26b16 <dwt_ioctl+0x1e2a>
   2536a:	88a3      	ldrh	r3, [r4, #4]
   2536c:	88e2      	ldrh	r2, [r4, #6]
   2536e:	6821      	ldr	r1, [r4, #0]
   25370:	9100      	str	r1, [sp, #0]
   25372:	f44f 11b0 	mov.w	r1, #1441792	@ 0x160000
   25376:	f7fd fbd0 	bl	22b1a <dwt_readfromdevice>
   2537a:	2500      	movs	r5, #0
   2537c:	e560      	b.n	24e40 <dwt_ioctl+0x154>
   2537e:	2c00      	cmp	r4, #0
   25380:	f001 83cc 	beq.w	26b1c <dwt_ioctl+0x1e30>
   25384:	88e3      	ldrh	r3, [r4, #6]
   25386:	88a2      	ldrh	r2, [r4, #4]
   25388:	6821      	ldr	r1, [r4, #0]
   2538a:	f7fe f99d 	bl	236c8 <ull_readrxdata>
   2538e:	2500      	movs	r5, #0
   25390:	e556      	b.n	24e40 <dwt_ioctl+0x154>
   25392:	2c00      	cmp	r4, #0
   25394:	f001 83c5 	beq.w	26b22 <dwt_ioctl+0x1e36>
   25398:	88e3      	ldrh	r3, [r4, #6]
   2539a:	6822      	ldr	r2, [r4, #0]
   2539c:	88a1      	ldrh	r1, [r4, #4]
   2539e:	f7fe fac7 	bl	23930 <ull_writetxdata>
   253a2:	2500      	movs	r5, #0
   253a4:	e54c      	b.n	24e40 <dwt_ioctl+0x154>
   253a6:	4611      	mov	r1, r2
   253a8:	f7ff fc08 	bl	24bbc <ull_rxenable>
   253ac:	2500      	movs	r5, #0
   253ae:	e547      	b.n	24e40 <dwt_ioctl+0x154>
   253b0:	2c00      	cmp	r4, #0
   253b2:	f001 83b9 	beq.w	26b28 <dwt_ioctl+0x1e3c>
   253b6:	7923      	ldrb	r3, [r4, #4]
   253b8:	8862      	ldrh	r2, [r4, #2]
   253ba:	8821      	ldrh	r1, [r4, #0]
   253bc:	f7fe fdbe 	bl	23f3c <ull_writetxfctrl>
   253c0:	2500      	movs	r5, #0
   253c2:	e53d      	b.n	24e40 <dwt_ioctl+0x154>
   253c4:	2c00      	cmp	r4, #0
   253c6:	f001 83b2 	beq.w	26b2e <dwt_ioctl+0x1e42>
   253ca:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   253cc:	7b9b      	ldrb	r3, [r3, #14]
   253ce:	2b01      	cmp	r3, #1
   253d0:	d00c      	beq.n	253ec <dwt_ioctl+0x700>
   253d2:	2b03      	cmp	r3, #3
   253d4:	d110      	bne.n	253f8 <dwt_ioctl+0x70c>
   253d6:	220c      	movs	r2, #12
   253d8:	f44f 11f0 	mov.w	r1, #1966080	@ 0x1e0000
   253dc:	f7fd fbbd 	bl	22b5a <dwt_read16bitoffsetreg>
   253e0:	b200      	sxth	r0, r0
   253e2:	f340 030c 	sbfx	r3, r0, #0, #13
   253e6:	8023      	strh	r3, [r4, #0]
   253e8:	2500      	movs	r5, #0
   253ea:	e529      	b.n	24e40 <dwt_ioctl+0x154>
   253ec:	2200      	movs	r2, #0
   253ee:	492f      	ldr	r1, [pc, #188]	@ (254ac <dwt_ioctl+0x7c0>)
   253f0:	f7fd fbb3 	bl	22b5a <dwt_read16bitoffsetreg>
   253f4:	b200      	sxth	r0, r0
   253f6:	e7f4      	b.n	253e2 <dwt_ioctl+0x6f6>
   253f8:	2200      	movs	r2, #0
   253fa:	492d      	ldr	r1, [pc, #180]	@ (254b0 <dwt_ioctl+0x7c4>)
   253fc:	f7fd fbad 	bl	22b5a <dwt_read16bitoffsetreg>
   25400:	b200      	sxth	r0, r0
   25402:	e7ee      	b.n	253e2 <dwt_ioctl+0x6f6>
   25404:	2c00      	cmp	r4, #0
   25406:	f001 8395 	beq.w	26b34 <dwt_ioctl+0x1e48>
   2540a:	ab0c      	add	r3, sp, #48	@ 0x30
   2540c:	9300      	str	r3, [sp, #0]
   2540e:	2303      	movs	r3, #3
   25410:	2200      	movs	r2, #0
   25412:	4928      	ldr	r1, [pc, #160]	@ (254b4 <dwt_ioctl+0x7c8>)
   25414:	f7fd fb81 	bl	22b1a <dwt_readfromdevice>
   25418:	f89d 2032 	ldrb.w	r2, [sp, #50]	@ 0x32
   2541c:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
   25420:	eb03 2202 	add.w	r2, r3, r2, lsl #8
   25424:	f89d 3030 	ldrb.w	r3, [sp, #48]	@ 0x30
   25428:	eb03 2302 	add.w	r3, r3, r2, lsl #8
   2542c:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
   25430:	bf1c      	itt	ne
   25432:	ea6f 3303 	mvnne.w	r3, r3, lsl #12
   25436:	ea6f 3313 	mvnne.w	r3, r3, lsr #12
   2543a:	6023      	str	r3, [r4, #0]
   2543c:	2500      	movs	r5, #0
   2543e:	e4ff      	b.n	24e40 <dwt_ioctl+0x154>
   25440:	f7fe f9d0 	bl	237e4 <ull_clearaonconfig>
   25444:	2500      	movs	r5, #0
   25446:	e4fb      	b.n	24e40 <dwt_ioctl+0x154>
   25448:	2c00      	cmp	r4, #0
   2544a:	f001 8376 	beq.w	26b3a <dwt_ioctl+0x1e4e>
   2544e:	8861      	ldrh	r1, [r4, #2]
   25450:	f7fe fdf0 	bl	24034 <ull_calcbandwidthadj>
   25454:	7020      	strb	r0, [r4, #0]
   25456:	2500      	movs	r5, #0
   25458:	e4f2      	b.n	24e40 <dwt_ioctl+0x154>
   2545a:	4621      	mov	r1, r4
   2545c:	f7fd fb9d 	bl	22b9a <ull_readdiagnostics>
   25460:	2500      	movs	r5, #0
   25462:	e4ed      	b.n	24e40 <dwt_ioctl+0x154>
   25464:	2c00      	cmp	r4, #0
   25466:	f001 836b 	beq.w	26b40 <dwt_ioctl+0x1e54>
   2546a:	2201      	movs	r2, #1
   2546c:	2170      	movs	r1, #112	@ 0x70
   2546e:	f7fd fb5e 	bl	22b2e <dwt_read32bitoffsetreg>
   25472:	6020      	str	r0, [r4, #0]
   25474:	2500      	movs	r5, #0
   25476:	e4e3      	b.n	24e40 <dwt_ioctl+0x154>
   25478:	00110008 	.word	0x00110008
   2547c:	00d20874 	.word	0x00d20874
   25480:	00110010 	.word	0x00110010
   25484:	04d28874 	.word	0x04d28874
   25488:	0007001c 	.word	0x0007001c
   2548c:	00020004 	.word	0x00020004
   25490:	001f000c 	.word	0x001f000c
   25494:	001f0010 	.word	0x001f0010
   25498:	00010008 	.word	0x00010008
   2549c:	00010020 	.word	0x00010020
   254a0:	af5f35cc 	.word	0xaf5f35cc
   254a4:	af5f584c 	.word	0xaf5f584c
   254a8:	0006000c 	.word	0x0006000c
   254ac:	0018000c 	.word	0x0018000c
   254b0:	000c0020 	.word	0x000c0020
   254b4:	00060029 	.word	0x00060029
   254b8:	2c00      	cmp	r4, #0
   254ba:	f001 8344 	beq.w	26b46 <dwt_ioctl+0x1e5a>
   254be:	2200      	movs	r2, #0
   254c0:	2170      	movs	r1, #112	@ 0x70
   254c2:	f7fd fb34 	bl	22b2e <dwt_read32bitoffsetreg>
   254c6:	6020      	str	r0, [r4, #0]
   254c8:	2500      	movs	r5, #0
   254ca:	e4b9      	b.n	24e40 <dwt_ioctl+0x154>
   254cc:	9400      	str	r4, [sp, #0]
   254ce:	2305      	movs	r3, #5
   254d0:	2200      	movs	r2, #0
   254d2:	2170      	movs	r1, #112	@ 0x70
   254d4:	f7fd fb21 	bl	22b1a <dwt_readfromdevice>
   254d8:	2500      	movs	r5, #0
   254da:	e4b1      	b.n	24e40 <dwt_ioctl+0x154>
   254dc:	2c00      	cmp	r4, #0
   254de:	f001 8335 	beq.w	26b4c <dwt_ioctl+0x1e60>
   254e2:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   254e4:	7b9b      	ldrb	r3, [r3, #14]
   254e6:	2b01      	cmp	r3, #1
   254e8:	d014      	beq.n	25514 <dwt_ioctl+0x828>
   254ea:	2b03      	cmp	r3, #3
   254ec:	d119      	bne.n	25522 <dwt_ioctl+0x836>
   254ee:	2216      	movs	r2, #22
   254f0:	f44f 11f0 	mov.w	r1, #1966080	@ 0x1e0000
   254f4:	f7fd fb31 	bl	22b5a <dwt_read16bitoffsetreg>
   254f8:	f3c0 000d 	ubfx	r0, r0, #0, #14
   254fc:	b283      	uxth	r3, r0
   254fe:	f413 5f00 	tst.w	r3, #8192	@ 0x2000
   25502:	d004      	beq.n	2550e <dwt_ioctl+0x822>
   25504:	ea6f 4383 	mvn.w	r3, r3, lsl #18
   25508:	ea6f 4393 	mvn.w	r3, r3, lsr #18
   2550c:	b218      	sxth	r0, r3
   2550e:	8020      	strh	r0, [r4, #0]
   25510:	2500      	movs	r5, #0
   25512:	e495      	b.n	24e40 <dwt_ioctl+0x154>
   25514:	2202      	movs	r2, #2
   25516:	49d6      	ldr	r1, [pc, #856]	@ (25870 <dwt_ioctl+0xb84>)
   25518:	f7fd fb1f 	bl	22b5a <dwt_read16bitoffsetreg>
   2551c:	f3c0 000d 	ubfx	r0, r0, #0, #14
   25520:	e7ec      	b.n	254fc <dwt_ioctl+0x810>
   25522:	2202      	movs	r2, #2
   25524:	49d3      	ldr	r1, [pc, #844]	@ (25874 <dwt_ioctl+0xb88>)
   25526:	f7fd fb18 	bl	22b5a <dwt_read16bitoffsetreg>
   2552a:	f3c0 000d 	ubfx	r0, r0, #0, #14
   2552e:	e7e5      	b.n	254fc <dwt_ioctl+0x810>
   25530:	9400      	str	r4, [sp, #0]
   25532:	2306      	movs	r3, #6
   25534:	2200      	movs	r2, #0
   25536:	49d0      	ldr	r1, [pc, #832]	@ (25878 <dwt_ioctl+0xb8c>)
   25538:	f7fd faef 	bl	22b1a <dwt_readfromdevice>
   2553c:	7963      	ldrb	r3, [r4, #5]
   2553e:	f003 0301 	and.w	r3, r3, #1
   25542:	7163      	strb	r3, [r4, #5]
   25544:	2500      	movs	r5, #0
   25546:	e47b      	b.n	24e40 <dwt_ioctl+0x154>
   25548:	2c00      	cmp	r4, #0
   2554a:	f001 8302 	beq.w	26b52 <dwt_ioctl+0x1e66>
   2554e:	2201      	movs	r2, #1
   25550:	f04f 1108 	mov.w	r1, #524296	@ 0x80008
   25554:	f7fd fb13 	bl	22b7e <dwt_read8bitoffsetreg>
   25558:	7020      	strb	r0, [r4, #0]
   2555a:	2500      	movs	r5, #0
   2555c:	e470      	b.n	24e40 <dwt_ioctl+0x154>
   2555e:	2c00      	cmp	r4, #0
   25560:	f001 82fa 	beq.w	26b58 <dwt_ioctl+0x1e6c>
   25564:	2200      	movs	r2, #0
   25566:	f04f 1108 	mov.w	r1, #524296	@ 0x80008
   2556a:	f7fd fb08 	bl	22b7e <dwt_read8bitoffsetreg>
   2556e:	7020      	strb	r0, [r4, #0]
   25570:	2500      	movs	r5, #0
   25572:	e465      	b.n	24e40 <dwt_ioctl+0x154>
   25574:	2c00      	cmp	r4, #0
   25576:	f001 82f2 	beq.w	26b5e <dwt_ioctl+0x1e72>
   2557a:	88a2      	ldrh	r2, [r4, #4]
   2557c:	6821      	ldr	r1, [r4, #0]
   2557e:	f7fe fc07 	bl	23d90 <_dwt_otpprogword32>
   25582:	2500      	movs	r5, #0
   25584:	e45c      	b.n	24e40 <dwt_ioctl+0x154>
   25586:	2c00      	cmp	r4, #0
   25588:	f001 82ec 	beq.w	26b64 <dwt_ioctl+0x1e78>
   2558c:	6825      	ldr	r5, [r4, #0]
   2558e:	88a4      	ldrh	r4, [r4, #4]
   25590:	4622      	mov	r2, r4
   25592:	4629      	mov	r1, r5
   25594:	f7fe fbfc 	bl	23d90 <_dwt_otpprogword32>
   25598:	4621      	mov	r1, r4
   2559a:	4630      	mov	r0, r6
   2559c:	f7fd ff1a 	bl	233d4 <_dwt_otpread>
   255a0:	1a2d      	subs	r5, r5, r0
   255a2:	bf18      	it	ne
   255a4:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
   255a8:	e44a      	b.n	24e40 <dwt_ioctl+0x154>
   255aa:	2a02      	cmp	r2, #2
   255ac:	d00e      	beq.n	255cc <dwt_ioctl+0x8e0>
   255ae:	4cb3      	ldr	r4, [pc, #716]	@ (2587c <dwt_ioctl+0xb90>)
   255b0:	2300      	movs	r3, #0
   255b2:	461a      	mov	r2, r3
   255b4:	4621      	mov	r1, r4
   255b6:	4630      	mov	r0, r6
   255b8:	f7fe f8bc 	bl	23734 <dwt_write8bitoffsetreg>
   255bc:	2302      	movs	r3, #2
   255be:	2200      	movs	r2, #0
   255c0:	4621      	mov	r1, r4
   255c2:	4630      	mov	r0, r6
   255c4:	f7fe f8b6 	bl	23734 <dwt_write8bitoffsetreg>
   255c8:	2500      	movs	r5, #0
   255ca:	e439      	b.n	24e40 <dwt_ioctl+0x154>
   255cc:	2300      	movs	r3, #0
   255ce:	9300      	str	r3, [sp, #0]
   255d0:	23fe      	movs	r3, #254	@ 0xfe
   255d2:	2201      	movs	r2, #1
   255d4:	49aa      	ldr	r1, [pc, #680]	@ (25880 <dwt_ioctl+0xb94>)
   255d6:	f7fe fce3 	bl	23fa0 <dwt_modify8bitoffsetreg>
   255da:	e7e8      	b.n	255ae <dwt_ioctl+0x8c2>
   255dc:	2c00      	cmp	r4, #0
   255de:	f001 82c4 	beq.w	26b6a <dwt_ioctl+0x1e7e>
   255e2:	8824      	ldrh	r4, [r4, #0]
   255e4:	b2e2      	uxtb	r2, r4
   255e6:	f44f 7181 	mov.w	r1, #258	@ 0x102
   255ea:	f7fe f94f 	bl	2388c <ull_aon_write>
   255ee:	0a22      	lsrs	r2, r4, #8
   255f0:	f240 1103 	movw	r1, #259	@ 0x103
   255f4:	4630      	mov	r0, r6
   255f6:	f7fe f949 	bl	2388c <ull_aon_write>
   255fa:	2500      	movs	r5, #0
   255fc:	e420      	b.n	24e40 <dwt_ioctl+0x154>
   255fe:	2c00      	cmp	r4, #0
   25600:	f001 82b6 	beq.w	26b70 <dwt_ioctl+0x1e84>
   25604:	f8df 8284 	ldr.w	r8, [pc, #644]	@ 2588c <dwt_ioctl+0xba0>
   25608:	2310      	movs	r3, #16
   2560a:	9300      	str	r3, [sp, #0]
   2560c:	23ff      	movs	r3, #255	@ 0xff
   2560e:	2200      	movs	r2, #0
   25610:	4641      	mov	r1, r8
   25612:	f7fe fcc5 	bl	23fa0 <dwt_modify8bitoffsetreg>
   25616:	f44f 7182 	mov.w	r1, #260	@ 0x104
   2561a:	4630      	mov	r0, r6
   2561c:	f7fe f916 	bl	2384c <ull_aon_read>
   25620:	f000 05e0 	and.w	r5, r0, #224	@ 0xe0
   25624:	462a      	mov	r2, r5
   25626:	f44f 7182 	mov.w	r1, #260	@ 0x104
   2562a:	4630      	mov	r0, r6
   2562c:	f7fe f92e 	bl	2388c <ull_aon_write>
   25630:	f045 0204 	orr.w	r2, r5, #4
   25634:	f44f 7182 	mov.w	r1, #260	@ 0x104
   25638:	4630      	mov	r0, r6
   2563a:	f7fe f927 	bl	2388c <ull_aon_write>
   2563e:	2002      	movs	r0, #2
   25640:	f7f5 fbe9 	bl	1ae16 <deca_sleep>
   25644:	f44f 7187 	mov.w	r1, #270	@ 0x10e
   25648:	4630      	mov	r0, r6
   2564a:	f7fe f8ff 	bl	2384c <ull_aon_read>
   2564e:	4607      	mov	r7, r0
   25650:	f240 110f 	movw	r1, #271	@ 0x10f
   25654:	4630      	mov	r0, r6
   25656:	f7fe f8f9 	bl	2384c <ull_aon_read>
   2565a:	4681      	mov	r9, r0
   2565c:	462a      	mov	r2, r5
   2565e:	f44f 7182 	mov.w	r1, #260	@ 0x104
   25662:	4630      	mov	r0, r6
   25664:	f7fe f912 	bl	2388c <ull_aon_write>
   25668:	2500      	movs	r5, #0
   2566a:	9500      	str	r5, [sp, #0]
   2566c:	23ef      	movs	r3, #239	@ 0xef
   2566e:	462a      	mov	r2, r5
   25670:	4641      	mov	r1, r8
   25672:	4630      	mov	r0, r6
   25674:	f7fe fc94 	bl	23fa0 <dwt_modify8bitoffsetreg>
   25678:	ea47 2709 	orr.w	r7, r7, r9, lsl #8
   2567c:	8027      	strh	r7, [r4, #0]
   2567e:	f7ff bbdf 	b.w	24e40 <dwt_ioctl+0x154>
   25682:	2c00      	cmp	r4, #0
   25684:	f001 8277 	beq.w	26b76 <dwt_ioctl+0x1e8a>
   25688:	78a2      	ldrb	r2, [r4, #2]
   2568a:	8821      	ldrh	r1, [r4, #0]
   2568c:	f7fe f926 	bl	238dc <ull_configuresleep>
   25690:	2500      	movs	r5, #0
   25692:	f7ff bbd5 	b.w	24e40 <dwt_ioctl+0x154>
   25696:	2c00      	cmp	r4, #0
   25698:	f001 8270 	beq.w	26b7c <dwt_ioctl+0x1e90>
   2569c:	6824      	ldr	r4, [r4, #0]
   2569e:	f7fe f8a1 	bl	237e4 <ull_clearaonconfig>
   256a2:	2001      	movs	r0, #1
   256a4:	f7f5 fbb7 	bl	1ae16 <deca_sleep>
   256a8:	2303      	movs	r3, #3
   256aa:	9300      	str	r3, [sp, #0]
   256ac:	23ff      	movs	r3, #255	@ 0xff
   256ae:	2200      	movs	r2, #0
   256b0:	4974      	ldr	r1, [pc, #464]	@ (25884 <dwt_ioctl+0xb98>)
   256b2:	4630      	mov	r0, r6
   256b4:	f7fe fc74 	bl	23fa0 <dwt_modify8bitoffsetreg>
   256b8:	b97c      	cbnz	r4, 256da <dwt_ioctl+0x9ee>
   256ba:	4630      	mov	r0, r6
   256bc:	f7ff faee 	bl	24c9c <ull_softreset_no_sema_fcmd>
   256c0:	2001      	movs	r0, #1
   256c2:	f7f5 fba8 	bl	1ae16 <deca_sleep>
   256c6:	6d33      	ldr	r3, [r6, #80]	@ 0x50
   256c8:	2500      	movs	r5, #0
   256ca:	739d      	strb	r5, [r3, #14]
   256cc:	2202      	movs	r2, #2
   256ce:	821a      	strh	r2, [r3, #16]
   256d0:	751d      	strb	r5, [r3, #20]
   256d2:	755d      	strb	r5, [r3, #21]
   256d4:	73dd      	strb	r5, [r3, #15]
   256d6:	f7ff bbb3 	b.w	24e40 <dwt_ioctl+0x154>
   256da:	4630      	mov	r0, r6
   256dc:	f7ff faf2 	bl	24cc4 <ull_softreset_fcmd>
   256e0:	e7ee      	b.n	256c0 <dwt_ioctl+0x9d4>
   256e2:	2c00      	cmp	r4, #0
   256e4:	f001 824d 	beq.w	26b82 <dwt_ioctl+0x1e96>
   256e8:	7823      	ldrb	r3, [r4, #0]
   256ea:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
   256ee:	6d02      	ldr	r2, [r0, #80]	@ 0x50
   256f0:	7353      	strb	r3, [r2, #13]
   256f2:	2200      	movs	r2, #0
   256f4:	4964      	ldr	r1, [pc, #400]	@ (25888 <dwt_ioctl+0xb9c>)
   256f6:	f7fe f81d 	bl	23734 <dwt_write8bitoffsetreg>
   256fa:	2500      	movs	r5, #0
   256fc:	f7ff bba0 	b.w	24e40 <dwt_ioctl+0x154>
   25700:	2c00      	cmp	r4, #0
   25702:	f001 8241 	beq.w	26b88 <dwt_ioctl+0x1e9c>
   25706:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   25708:	7b5b      	ldrb	r3, [r3, #13]
   2570a:	7023      	strb	r3, [r4, #0]
   2570c:	2500      	movs	r5, #0
   2570e:	f7ff bb97 	b.w	24e40 <dwt_ioctl+0x154>
   25712:	2101      	movs	r1, #1
   25714:	f7fe faf6 	bl	23d04 <ull_enable_rf_tx>
   25718:	4630      	mov	r0, r6
   2571a:	f7fe fb27 	bl	23d6c <ull_enable_rftx_blocks>
   2571e:	2101      	movs	r1, #1
   25720:	4630      	mov	r0, r6
   25722:	f7fd fe2d 	bl	23380 <ull_force_clocks>
   25726:	220f      	movs	r2, #15
   25728:	2101      	movs	r1, #1
   2572a:	4630      	mov	r0, r6
   2572c:	f7fe ff48 	bl	245c0 <ull_repeated_cw>
   25730:	2500      	movs	r5, #0
   25732:	f7ff bb85 	b.w	24e40 <dwt_ioctl+0x154>
   25736:	2c00      	cmp	r4, #0
   25738:	f001 8229 	beq.w	26b8e <dwt_ioctl+0x1ea2>
   2573c:	6862      	ldr	r2, [r4, #4]
   2573e:	6821      	ldr	r1, [r4, #0]
   25740:	f7fe ff3e 	bl	245c0 <ull_repeated_cw>
   25744:	2500      	movs	r5, #0
   25746:	f7ff bb7b 	b.w	24e40 <dwt_ioctl+0x154>
   2574a:	2c00      	cmp	r4, #0
   2574c:	f001 8222 	beq.w	26b94 <dwt_ioctl+0x1ea8>
   25750:	4d4e      	ldr	r5, [pc, #312]	@ (2588c <dwt_ioctl+0xba0>)
   25752:	2200      	movs	r2, #0
   25754:	4629      	mov	r1, r5
   25756:	f7fd fa12 	bl	22b7e <dwt_read8bitoffsetreg>
   2575a:	4680      	mov	r8, r0
   2575c:	2302      	movs	r3, #2
   2575e:	9300      	str	r3, [sp, #0]
   25760:	23ff      	movs	r3, #255	@ 0xff
   25762:	2200      	movs	r2, #0
   25764:	4629      	mov	r1, r5
   25766:	4630      	mov	r0, r6
   25768:	f7fe fc1a 	bl	23fa0 <dwt_modify8bitoffsetreg>
   2576c:	2304      	movs	r3, #4
   2576e:	2200      	movs	r2, #0
   25770:	4947      	ldr	r1, [pc, #284]	@ (25890 <dwt_ioctl+0xba4>)
   25772:	4630      	mov	r0, r6
   25774:	f7fd ffde 	bl	23734 <dwt_write8bitoffsetreg>
   25778:	2301      	movs	r3, #1
   2577a:	2200      	movs	r2, #0
   2577c:	f44f 2100 	mov.w	r1, #524288	@ 0x80000
   25780:	4630      	mov	r0, r6
   25782:	f7fd ffd7 	bl	23734 <dwt_write8bitoffsetreg>
   25786:	4f43      	ldr	r7, [pc, #268]	@ (25894 <dwt_ioctl+0xba8>)
   25788:	2500      	movs	r5, #0
   2578a:	462a      	mov	r2, r5
   2578c:	4639      	mov	r1, r7
   2578e:	4630      	mov	r0, r6
   25790:	f7fd f9f5 	bl	22b7e <dwt_read8bitoffsetreg>
   25794:	f010 0f01 	tst.w	r0, #1
   25798:	d0f7      	beq.n	2578a <dwt_ioctl+0xa9e>
   2579a:	2200      	movs	r2, #0
   2579c:	f04f 1108 	mov.w	r1, #524296	@ 0x80008
   257a0:	4630      	mov	r0, r6
   257a2:	f7fd f9da 	bl	22b5a <dwt_read16bitoffsetreg>
   257a6:	4605      	mov	r5, r0
   257a8:	2300      	movs	r3, #0
   257aa:	461a      	mov	r2, r3
   257ac:	f44f 2100 	mov.w	r1, #524288	@ 0x80000
   257b0:	4630      	mov	r0, r6
   257b2:	f7fd ffbf 	bl	23734 <dwt_write8bitoffsetreg>
   257b6:	2300      	movs	r3, #0
   257b8:	461a      	mov	r2, r3
   257ba:	4935      	ldr	r1, [pc, #212]	@ (25890 <dwt_ioctl+0xba4>)
   257bc:	4630      	mov	r0, r6
   257be:	f7fd ffb9 	bl	23734 <dwt_write8bitoffsetreg>
   257c2:	4643      	mov	r3, r8
   257c4:	2200      	movs	r2, #0
   257c6:	4931      	ldr	r1, [pc, #196]	@ (2588c <dwt_ioctl+0xba0>)
   257c8:	4630      	mov	r0, r6
   257ca:	f7fd ffb3 	bl	23734 <dwt_write8bitoffsetreg>
   257ce:	8025      	strh	r5, [r4, #0]
   257d0:	2500      	movs	r5, #0
   257d2:	f7ff bb35 	b.w	24e40 <dwt_ioctl+0x154>
   257d6:	2c00      	cmp	r4, #0
   257d8:	f001 81df 	beq.w	26b9a <dwt_ioctl+0x1eae>
   257dc:	7923      	ldrb	r3, [r4, #4]
   257de:	6d02      	ldr	r2, [r0, #80]	@ 0x50
   257e0:	7a92      	ldrb	r2, [r2, #10]
   257e2:	1a9b      	subs	r3, r3, r2
   257e4:	ee07 3a90 	vmov	s15, r3
   257e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
   257ec:	ed9f 7a2a 	vldr	s14, [pc, #168]	@ 25898 <dwt_ioctl+0xbac>
   257f0:	ee67 7a87 	vmul.f32	s15, s15, s14
   257f4:	eeb3 7a06 	vmov.f32	s14, #54	@ 0x41b00000  22.0
   257f8:	ee77 7a87 	vadd.f32	s15, s15, s14
   257fc:	edc4 7a00 	vstr	s15, [r4]
   25800:	2500      	movs	r5, #0
   25802:	f7ff bb1d 	b.w	24e40 <dwt_ioctl+0x154>
   25806:	2c00      	cmp	r4, #0
   25808:	f001 81ca 	beq.w	26ba0 <dwt_ioctl+0x1eb4>
   2580c:	7923      	ldrb	r3, [r4, #4]
   2580e:	6d02      	ldr	r2, [r0, #80]	@ 0x50
   25810:	7a52      	ldrb	r2, [r2, #9]
   25812:	1a9b      	subs	r3, r3, r2
   25814:	ee07 3a90 	vmov	s15, r3
   25818:	eef8 7ae7 	vcvt.f32.s32	s15, s15
   2581c:	ed9f 7a1f 	vldr	s14, [pc, #124]	@ 2589c <dwt_ioctl+0xbb0>
   25820:	ee67 7a87 	vmul.f32	s15, s15, s14
   25824:	eeb3 7a00 	vmov.f32	s14, #48	@ 0x41800000  16.0
   25828:	ee67 7a87 	vmul.f32	s15, s15, s14
   2582c:	eddf 6a1c 	vldr	s13, [pc, #112]	@ 258a0 <dwt_ioctl+0xbb4>
   25830:	ee87 7aa6 	vdiv.f32	s14, s15, s13
   25834:	eef0 7a08 	vmov.f32	s15, #8	@ 0x40400000  3.0
   25838:	ee77 7a27 	vadd.f32	s15, s14, s15
   2583c:	edc4 7a00 	vstr	s15, [r4]
   25840:	2500      	movs	r5, #0
   25842:	f7ff bafd 	b.w	24e40 <dwt_ioctl+0x154>
   25846:	2c00      	cmp	r4, #0
   25848:	f001 81ad 	beq.w	26ba6 <dwt_ioctl+0x1eba>
   2584c:	6824      	ldr	r4, [r4, #0]
   2584e:	2101      	movs	r1, #1
   25850:	f7fe fa58 	bl	23d04 <ull_enable_rf_tx>
   25854:	4630      	mov	r0, r6
   25856:	f7fe fa89 	bl	23d6c <ull_enable_rftx_blocks>
   2585a:	2101      	movs	r1, #1
   2585c:	4630      	mov	r0, r6
   2585e:	f7fd fd8f 	bl	23380 <ull_force_clocks>
   25862:	4621      	mov	r1, r4
   25864:	4630      	mov	r0, r6
   25866:	f7fe fc41 	bl	240ec <ull_repeated_frames>
   2586a:	2500      	movs	r5, #0
   2586c:	f7ff bae8 	b.w	24e40 <dwt_ioctl+0x154>
   25870:	00180014 	.word	0x00180014
   25874:	000c001c 	.word	0x000c001c
   25878:	000c0018 	.word	0x000c0018
   2587c:	000a0004 	.word	0x000a0004
   25880:	00110008 	.word	0x00110008
   25884:	00110004 	.word	0x00110004
   25888:	00090014 	.word	0x00090014
   2588c:	00070048 	.word	0x00070048
   25890:	00070034 	.word	0x00070034
   25894:	00080004 	.word	0x00080004
   25898:	3f866666 	.word	0x3f866666
   2589c:	3ecccccd 	.word	0x3ecccccd
   258a0:	437f0000 	.word	0x437f0000
   258a4:	2500      	movs	r5, #0
   258a6:	9500      	str	r5, [sp, #0]
   258a8:	23ef      	movs	r3, #239	@ 0xef
   258aa:	462a      	mov	r2, r5
   258ac:	49c7      	ldr	r1, [pc, #796]	@ (25bcc <dwt_ioctl+0xee0>)
   258ae:	f7fe fb77 	bl	23fa0 <dwt_modify8bitoffsetreg>
   258b2:	2105      	movs	r1, #5
   258b4:	4630      	mov	r0, r6
   258b6:	f7fd fd63 	bl	23380 <ull_force_clocks>
   258ba:	2101      	movs	r1, #1
   258bc:	4630      	mov	r0, r6
   258be:	f7fd fee5 	bl	2368c <ull_disable_rf_tx>
   258c2:	4630      	mov	r0, r6
   258c4:	f7fd fed8 	bl	23678 <ull_disable_rftx_blocks>
   258c8:	f7ff baba 	b.w	24e40 <dwt_ioctl+0x154>
   258cc:	2500      	movs	r5, #0
   258ce:	9500      	str	r5, [sp, #0]
   258d0:	23ef      	movs	r3, #239	@ 0xef
   258d2:	462a      	mov	r2, r5
   258d4:	49bd      	ldr	r1, [pc, #756]	@ (25bcc <dwt_ioctl+0xee0>)
   258d6:	f7fe fb63 	bl	23fa0 <dwt_modify8bitoffsetreg>
   258da:	f7ff bab1 	b.w	24e40 <dwt_ioctl+0x154>
   258de:	2c00      	cmp	r4, #0
   258e0:	f001 8164 	beq.w	26bac <dwt_ioctl+0x1ec0>
   258e4:	6821      	ldr	r1, [r4, #0]
   258e6:	f7fe fc01 	bl	240ec <ull_repeated_frames>
   258ea:	2500      	movs	r5, #0
   258ec:	f7ff baa8 	b.w	24e40 <dwt_ioctl+0x154>
   258f0:	2200      	movs	r2, #0
   258f2:	49b7      	ldr	r1, [pc, #732]	@ (25bd0 <dwt_ioctl+0xee4>)
   258f4:	f7fd f931 	bl	22b5a <dwt_read16bitoffsetreg>
   258f8:	f3c0 050b 	ubfx	r5, r0, #0, #12
   258fc:	f410 6f00 	tst.w	r0, #2048	@ 0x800
   25900:	bf18      	it	ne
   25902:	f445 4570 	orrne.w	r5, r5, #61440	@ 0xf000
   25906:	b22d      	sxth	r5, r5
   25908:	8025      	strh	r5, [r4, #0]
   2590a:	6d33      	ldr	r3, [r6, #80]	@ 0x50
   2590c:	f9b3 3012 	ldrsh.w	r3, [r3, #18]
   25910:	1aed      	subs	r5, r5, r3
   25912:	f7ff ba95 	b.w	24e40 <dwt_ioctl+0x154>
   25916:	2c00      	cmp	r4, #0
   25918:	f001 814b 	beq.w	26bb2 <dwt_ioctl+0x1ec6>
   2591c:	f8d4 9004 	ldr.w	r9, [r4, #4]
   25920:	7a23      	ldrb	r3, [r4, #8]
   25922:	f899 2013 	ldrb.w	r2, [r9, #19]
   25926:	2aff      	cmp	r2, #255	@ 0xff
   25928:	f000 8122 	beq.w	25b70 <dwt_ioctl+0xe84>
   2592c:	2b00      	cmp	r3, #0
   2592e:	d136      	bne.n	2599e <dwt_ioctl+0xcb2>
   25930:	f8d9 3000 	ldr.w	r3, [r9]
   25934:	9300      	str	r3, [sp, #0]
   25936:	230c      	movs	r3, #12
   25938:	2200      	movs	r2, #0
   2593a:	49a6      	ldr	r1, [pc, #664]	@ (25bd4 <dwt_ioctl+0xee8>)
   2593c:	f7fd fd04 	bl	23348 <dwt_writetodevice>
   25940:	f899 300c 	ldrb.w	r3, [r9, #12]
   25944:	f8b9 200e 	ldrh.w	r2, [r9, #14]
   25948:	18d1      	adds	r1, r2, r3
   2594a:	f899 2012 	ldrb.w	r2, [r9, #18]
   2594e:	2a00      	cmp	r2, #0
   25950:	d15f      	bne.n	25a12 <dwt_ioctl+0xd26>
   25952:	f899 0010 	ldrb.w	r0, [r9, #16]
   25956:	2800      	cmp	r0, #0
   25958:	bf0b      	itete	eq
   2595a:	227f      	moveq	r2, #127	@ 0x7f
   2595c:	f44f 6280 	movne.w	r2, #1024	@ 0x400
   25960:	f44f 15b0 	moveq.w	r5, #1441792	@ 0x160000
   25964:	f44f 15a0 	movne.w	r5, #1310720	@ 0x140000
   25968:	f899 0013 	ldrb.w	r0, [r9, #19]
   2596c:	1a12      	subs	r2, r2, r0
   2596e:	3a02      	subs	r2, #2
   25970:	4291      	cmp	r1, r2
   25972:	f200 8103 	bhi.w	25b7c <dwt_ioctl+0xe90>
   25976:	f8d9 2004 	ldr.w	r2, [r9, #4]
   2597a:	9200      	str	r2, [sp, #0]
   2597c:	2200      	movs	r2, #0
   2597e:	4629      	mov	r1, r5
   25980:	4630      	mov	r0, r6
   25982:	f7fd fce1 	bl	23348 <dwt_writetodevice>
   25986:	f8b9 300e 	ldrh.w	r3, [r9, #14]
   2598a:	f899 200c 	ldrb.w	r2, [r9, #12]
   2598e:	f8d9 1008 	ldr.w	r1, [r9, #8]
   25992:	9100      	str	r1, [sp, #0]
   25994:	4629      	mov	r1, r5
   25996:	4630      	mov	r0, r6
   25998:	f7fd fcd6 	bl	23348 <dwt_writetodevice>
   2599c:	e04a      	b.n	25a34 <dwt_ioctl+0xd48>
   2599e:	f8d9 3000 	ldr.w	r3, [r9]
   259a2:	f8b9 100e 	ldrh.w	r1, [r9, #14]
   259a6:	7a9a      	ldrb	r2, [r3, #10]
   259a8:	f88d 2030 	strb.w	r2, [sp, #48]	@ 0x30
   259ac:	7a5a      	ldrb	r2, [r3, #9]
   259ae:	f88d 2031 	strb.w	r2, [sp, #49]	@ 0x31
   259b2:	7a1a      	ldrb	r2, [r3, #8]
   259b4:	f88d 2032 	strb.w	r2, [sp, #50]	@ 0x32
   259b8:	79da      	ldrb	r2, [r3, #7]
   259ba:	f88d 2033 	strb.w	r2, [sp, #51]	@ 0x33
   259be:	799a      	ldrb	r2, [r3, #6]
   259c0:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
   259c4:	795a      	ldrb	r2, [r3, #5]
   259c6:	f88d 2035 	strb.w	r2, [sp, #53]	@ 0x35
   259ca:	791a      	ldrb	r2, [r3, #4]
   259cc:	f88d 2036 	strb.w	r2, [sp, #54]	@ 0x36
   259d0:	78da      	ldrb	r2, [r3, #3]
   259d2:	f88d 2037 	strb.w	r2, [sp, #55]	@ 0x37
   259d6:	789a      	ldrb	r2, [r3, #2]
   259d8:	f88d 2038 	strb.w	r2, [sp, #56]	@ 0x38
   259dc:	785a      	ldrb	r2, [r3, #1]
   259de:	f88d 2039 	strb.w	r2, [sp, #57]	@ 0x39
   259e2:	781a      	ldrb	r2, [r3, #0]
   259e4:	f88d 203a 	strb.w	r2, [sp, #58]	@ 0x3a
   259e8:	2200      	movs	r2, #0
   259ea:	f88d 203b 	strb.w	r2, [sp, #59]	@ 0x3b
   259ee:	f88d 103c 	strb.w	r1, [sp, #60]	@ 0x3c
   259f2:	0a09      	lsrs	r1, r1, #8
   259f4:	f88d 103d 	strb.w	r1, [sp, #61]	@ 0x3d
   259f8:	7b19      	ldrb	r1, [r3, #12]
   259fa:	f88d 103e 	strb.w	r1, [sp, #62]	@ 0x3e
   259fe:	7adb      	ldrb	r3, [r3, #11]
   25a00:	f88d 303f 	strb.w	r3, [sp, #63]	@ 0x3f
   25a04:	ab0c      	add	r3, sp, #48	@ 0x30
   25a06:	9300      	str	r3, [sp, #0]
   25a08:	2310      	movs	r3, #16
   25a0a:	4972      	ldr	r1, [pc, #456]	@ (25bd4 <dwt_ioctl+0xee8>)
   25a0c:	f7fd fc9c 	bl	23348 <dwt_writetodevice>
   25a10:	e796      	b.n	25940 <dwt_ioctl+0xc54>
   25a12:	2a01      	cmp	r2, #1
   25a14:	f040 80af 	bne.w	25b76 <dwt_ioctl+0xe8a>
   25a18:	f899 3011 	ldrb.w	r3, [r9, #17]
   25a1c:	2b00      	cmp	r3, #0
   25a1e:	f240 33ff 	movw	r3, #1023	@ 0x3ff
   25a22:	bf08      	it	eq
   25a24:	237f      	moveq	r3, #127	@ 0x7f
   25a26:	f899 2013 	ldrb.w	r2, [r9, #19]
   25a2a:	1a9b      	subs	r3, r3, r2
   25a2c:	3b02      	subs	r3, #2
   25a2e:	4299      	cmp	r1, r3
   25a30:	f200 80a7 	bhi.w	25b82 <dwt_ioctl+0xe96>
   25a34:	f899 2010 	ldrb.w	r2, [r9, #16]
   25a38:	1e53      	subs	r3, r2, #1
   25a3a:	b2db      	uxtb	r3, r3
   25a3c:	2b01      	cmp	r3, #1
   25a3e:	d940      	bls.n	25ac2 <dwt_ioctl+0xdd6>
   25a40:	f899 3011 	ldrb.w	r3, [r9, #17]
   25a44:	1e59      	subs	r1, r3, #1
   25a46:	b2c9      	uxtb	r1, r1
   25a48:	2901      	cmp	r1, #1
   25a4a:	d947      	bls.n	25adc <dwt_ioctl+0xdf0>
   25a4c:	2b04      	cmp	r3, #4
   25a4e:	d04c      	beq.n	25aea <dwt_ioctl+0xdfe>
   25a50:	ea42 3343 	orr.w	r3, r2, r3, lsl #13
   25a54:	2200      	movs	r2, #0
   25a56:	4960      	ldr	r1, [pc, #384]	@ (25bd8 <dwt_ioctl+0xeec>)
   25a58:	4630      	mov	r0, r6
   25a5a:	f7fd fcdd 	bl	23418 <dwt_write32bitoffsetreg>
   25a5e:	f8b9 300e 	ldrh.w	r3, [r9, #14]
   25a62:	4a5e      	ldr	r2, [pc, #376]	@ (25bdc <dwt_ioctl+0xef0>)
   25a64:	ea02 12c3 	and.w	r2, r2, r3, lsl #7
   25a68:	f899 300c 	ldrb.w	r3, [r9, #12]
   25a6c:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
   25a70:	4313      	orrs	r3, r2
   25a72:	2200      	movs	r2, #0
   25a74:	495a      	ldr	r1, [pc, #360]	@ (25be0 <dwt_ioctl+0xef4>)
   25a76:	4630      	mov	r0, r6
   25a78:	f7fd fcce 	bl	23418 <dwt_write32bitoffsetreg>
   25a7c:	2301      	movs	r3, #1
   25a7e:	2200      	movs	r2, #0
   25a80:	4958      	ldr	r1, [pc, #352]	@ (25be4 <dwt_ioctl+0xef8>)
   25a82:	4630      	mov	r0, r6
   25a84:	f7fd fe56 	bl	23734 <dwt_write8bitoffsetreg>
   25a88:	f8df 815c 	ldr.w	r8, [pc, #348]	@ 25be8 <dwt_ioctl+0xefc>
   25a8c:	2700      	movs	r7, #0
   25a8e:	463a      	mov	r2, r7
   25a90:	4641      	mov	r1, r8
   25a92:	4630      	mov	r0, r6
   25a94:	f7fd f873 	bl	22b7e <dwt_read8bitoffsetreg>
   25a98:	f010 0f05 	tst.w	r0, #5
   25a9c:	d0f7      	beq.n	25a8e <dwt_ioctl+0xda2>
   25a9e:	4605      	mov	r5, r0
   25aa0:	4603      	mov	r3, r0
   25aa2:	2200      	movs	r2, #0
   25aa4:	4950      	ldr	r1, [pc, #320]	@ (25be8 <dwt_ioctl+0xefc>)
   25aa6:	4630      	mov	r0, r6
   25aa8:	f7fd fe44 	bl	23734 <dwt_write8bitoffsetreg>
   25aac:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
   25ab0:	f025 0330 	bic.w	r3, r5, #48	@ 0x30
   25ab4:	2b01      	cmp	r3, #1
   25ab6:	d025      	beq.n	25b04 <dwt_ioctl+0xe18>
   25ab8:	b26b      	sxtb	r3, r5
   25aba:	7023      	strb	r3, [r4, #0]
   25abc:	2500      	movs	r5, #0
   25abe:	f7ff b9bf 	b.w	24e40 <dwt_ioctl+0x154>
   25ac2:	6d33      	ldr	r3, [r6, #80]	@ 0x50
   25ac4:	7b9b      	ldrb	r3, [r3, #14]
   25ac6:	2b03      	cmp	r3, #3
   25ac8:	f001 8123 	beq.w	26d12 <dwt_ioctl+0x2026>
   25acc:	f899 3011 	ldrb.w	r3, [r9, #17]
   25ad0:	1e5a      	subs	r2, r3, #1
   25ad2:	b2d2      	uxtb	r2, r2
   25ad4:	2a01      	cmp	r2, #1
   25ad6:	d912      	bls.n	25afe <dwt_ioctl+0xe12>
   25ad8:	2201      	movs	r2, #1
   25ada:	e7b7      	b.n	25a4c <dwt_ioctl+0xd60>
   25adc:	6d33      	ldr	r3, [r6, #80]	@ 0x50
   25ade:	7b9b      	ldrb	r3, [r3, #14]
   25ae0:	2b03      	cmp	r3, #3
   25ae2:	bf0c      	ite	eq
   25ae4:	2302      	moveq	r3, #2
   25ae6:	2301      	movne	r3, #1
   25ae8:	e7b2      	b.n	25a50 <dwt_ioctl+0xd64>
   25aea:	f8b9 100e 	ldrh.w	r1, [r9, #14]
   25aee:	2910      	cmp	r1, #16
   25af0:	d9ae      	bls.n	25a50 <dwt_ioctl+0xd64>
   25af2:	f06f 0303 	mvn.w	r3, #3
   25af6:	e7e0      	b.n	25aba <dwt_ioctl+0xdce>
   25af8:	2202      	movs	r2, #2
   25afa:	4613      	mov	r3, r2
   25afc:	e7a8      	b.n	25a50 <dwt_ioctl+0xd64>
   25afe:	2201      	movs	r2, #1
   25b00:	4613      	mov	r3, r2
   25b02:	e7a5      	b.n	25a50 <dwt_ioctl+0xd64>
   25b04:	f899 3012 	ldrb.w	r3, [r9, #18]
   25b08:	2b01      	cmp	r3, #1
   25b0a:	d1d5      	bne.n	25ab8 <dwt_ioctl+0xdcc>
   25b0c:	f899 2011 	ldrb.w	r2, [r9, #17]
   25b10:	1e53      	subs	r3, r2, #1
   25b12:	b2db      	uxtb	r3, r3
   25b14:	2b01      	cmp	r3, #1
   25b16:	d91b      	bls.n	25b50 <dwt_ioctl+0xe64>
   25b18:	2a03      	cmp	r2, #3
   25b1a:	bf0c      	ite	eq
   25b1c:	f44f 17a0 	moveq.w	r7, #1310720	@ 0x140000
   25b20:	f44f 17b0 	movne.w	r7, #1441792	@ 0x160000
   25b24:	f8d9 2004 	ldr.w	r2, [r9, #4]
   25b28:	b112      	cbz	r2, 25b30 <dwt_ioctl+0xe44>
   25b2a:	f899 300c 	ldrb.w	r3, [r9, #12]
   25b2e:	b9c3      	cbnz	r3, 25b62 <dwt_ioctl+0xe76>
   25b30:	f8d9 1008 	ldr.w	r1, [r9, #8]
   25b34:	2900      	cmp	r1, #0
   25b36:	d0bf      	beq.n	25ab8 <dwt_ioctl+0xdcc>
   25b38:	f8b9 300e 	ldrh.w	r3, [r9, #14]
   25b3c:	2b00      	cmp	r3, #0
   25b3e:	d0bb      	beq.n	25ab8 <dwt_ioctl+0xdcc>
   25b40:	f899 200c 	ldrb.w	r2, [r9, #12]
   25b44:	9100      	str	r1, [sp, #0]
   25b46:	4639      	mov	r1, r7
   25b48:	4630      	mov	r0, r6
   25b4a:	f7fc ffe6 	bl	22b1a <dwt_readfromdevice>
   25b4e:	e7b3      	b.n	25ab8 <dwt_ioctl+0xdcc>
   25b50:	6d33      	ldr	r3, [r6, #80]	@ 0x50
   25b52:	7b9b      	ldrb	r3, [r3, #14]
   25b54:	2b03      	cmp	r3, #3
   25b56:	bf0c      	ite	eq
   25b58:	f44f 1798 	moveq.w	r7, #1245184	@ 0x130000
   25b5c:	f44f 1790 	movne.w	r7, #1179648	@ 0x120000
   25b60:	e7e0      	b.n	25b24 <dwt_ioctl+0xe38>
   25b62:	9200      	str	r2, [sp, #0]
   25b64:	2200      	movs	r2, #0
   25b66:	4639      	mov	r1, r7
   25b68:	4630      	mov	r0, r6
   25b6a:	f7fc ffd6 	bl	22b1a <dwt_readfromdevice>
   25b6e:	e7df      	b.n	25b30 <dwt_ioctl+0xe44>
   25b70:	f06f 0302 	mvn.w	r3, #2
   25b74:	e7a1      	b.n	25aba <dwt_ioctl+0xdce>
   25b76:	f06f 0301 	mvn.w	r3, #1
   25b7a:	e79e      	b.n	25aba <dwt_ioctl+0xdce>
   25b7c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   25b80:	e79b      	b.n	25aba <dwt_ioctl+0xdce>
   25b82:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   25b86:	e798      	b.n	25aba <dwt_ioctl+0xdce>
   25b88:	7a23      	ldrb	r3, [r4, #8]
   25b8a:	79e1      	ldrb	r1, [r4, #7]
   25b8c:	79a2      	ldrb	r2, [r4, #6]
   25b8e:	00d2      	lsls	r2, r2, #3
   25b90:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
   25b94:	4313      	orrs	r3, r2
   25b96:	7962      	ldrb	r2, [r4, #5]
   25b98:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
   25b9c:	7922      	ldrb	r2, [r4, #4]
   25b9e:	ea43 13c2 	orr.w	r3, r3, r2, lsl #7
   25ba2:	78e2      	ldrb	r2, [r4, #3]
   25ba4:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   25ba8:	78a2      	ldrb	r2, [r4, #2]
   25baa:	ea43 23c2 	orr.w	r3, r3, r2, lsl #11
   25bae:	7862      	ldrb	r2, [r4, #1]
   25bb0:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
   25bb4:	7822      	ldrb	r2, [r4, #0]
   25bb6:	ea43 3342 	orr.w	r3, r3, r2, lsl #13
   25bba:	b29b      	uxth	r3, r3
   25bbc:	2200      	movs	r2, #0
   25bbe:	490b      	ldr	r1, [pc, #44]	@ (25bec <dwt_ioctl+0xf00>)
   25bc0:	f7fd fbcd 	bl	2335e <dwt_write16bitoffsetreg>
   25bc4:	2500      	movs	r5, #0
   25bc6:	f7ff b93b 	b.w	24e40 <dwt_ioctl+0x154>
   25bca:	bf00      	nop
   25bcc:	000f0028 	.word	0x000f0028
   25bd0:	00020008 	.word	0x00020008
   25bd4:	00010034 	.word	0x00010034
   25bd8:	00010044 	.word	0x00010044
   25bdc:	0001ff80 	.word	0x0001ff80
   25be0:	00010048 	.word	0x00010048
   25be4:	0001004c 	.word	0x0001004c
   25be8:	00010050 	.word	0x00010050
   25bec:	00010030 	.word	0x00010030
   25bf0:	2c00      	cmp	r4, #0
   25bf2:	f000 87e1 	beq.w	26bb8 <dwt_ioctl+0x1ecc>
   25bf6:	7863      	ldrb	r3, [r4, #1]
   25bf8:	b133      	cbz	r3, 25c08 <dwt_ioctl+0xf1c>
   25bfa:	085b      	lsrs	r3, r3, #1
   25bfc:	3b01      	subs	r3, #1
   25bfe:	b2db      	uxtb	r3, r3
   25c00:	7023      	strb	r3, [r4, #0]
   25c02:	2500      	movs	r5, #0
   25c04:	f7ff b91c 	b.w	24e40 <dwt_ioctl+0x154>
   25c08:	2300      	movs	r3, #0
   25c0a:	e7f9      	b.n	25c00 <dwt_ioctl+0xf14>
   25c0c:	2200      	movs	r2, #0
   25c0e:	49d0      	ldr	r1, [pc, #832]	@ (25f50 <dwt_ioctl+0x1264>)
   25c10:	f7fc ff8d 	bl	22b2e <dwt_read32bitoffsetreg>
   25c14:	f3c0 030b 	ubfx	r3, r0, #0, #12
   25c18:	8023      	strh	r3, [r4, #0]
   25c1a:	f3c0 400b 	ubfx	r0, r0, #16, #12
   25c1e:	8060      	strh	r0, [r4, #2]
   25c20:	2200      	movs	r2, #0
   25c22:	49cc      	ldr	r1, [pc, #816]	@ (25f54 <dwt_ioctl+0x1268>)
   25c24:	4630      	mov	r0, r6
   25c26:	f7fc ff82 	bl	22b2e <dwt_read32bitoffsetreg>
   25c2a:	f3c0 030b 	ubfx	r3, r0, #0, #12
   25c2e:	80a3      	strh	r3, [r4, #4]
   25c30:	f3c0 400b 	ubfx	r0, r0, #16, #12
   25c34:	80e0      	strh	r0, [r4, #6]
   25c36:	2200      	movs	r2, #0
   25c38:	49c7      	ldr	r1, [pc, #796]	@ (25f58 <dwt_ioctl+0x126c>)
   25c3a:	4630      	mov	r0, r6
   25c3c:	f7fc ff77 	bl	22b2e <dwt_read32bitoffsetreg>
   25c40:	7220      	strb	r0, [r4, #8]
   25c42:	0c00      	lsrs	r0, r0, #16
   25c44:	7260      	strb	r0, [r4, #9]
   25c46:	2200      	movs	r2, #0
   25c48:	49c4      	ldr	r1, [pc, #784]	@ (25f5c <dwt_ioctl+0x1270>)
   25c4a:	4630      	mov	r0, r6
   25c4c:	f7fc ff6f 	bl	22b2e <dwt_read32bitoffsetreg>
   25c50:	f3c0 430b 	ubfx	r3, r0, #16, #12
   25c54:	81a3      	strh	r3, [r4, #12]
   25c56:	f3c0 000b 	ubfx	r0, r0, #0, #12
   25c5a:	8160      	strh	r0, [r4, #10]
   25c5c:	2200      	movs	r2, #0
   25c5e:	49c0      	ldr	r1, [pc, #768]	@ (25f60 <dwt_ioctl+0x1274>)
   25c60:	4630      	mov	r0, r6
   25c62:	f7fc ff64 	bl	22b2e <dwt_read32bitoffsetreg>
   25c66:	f3c0 430b 	ubfx	r3, r0, #16, #12
   25c6a:	f8a4 300f 	strh.w	r3, [r4, #15]
   25c6e:	73a0      	strb	r0, [r4, #14]
   25c70:	2200      	movs	r2, #0
   25c72:	49bc      	ldr	r1, [pc, #752]	@ (25f64 <dwt_ioctl+0x1278>)
   25c74:	4630      	mov	r0, r6
   25c76:	f7fc ff5a 	bl	22b2e <dwt_read32bitoffsetreg>
   25c7a:	7460      	strb	r0, [r4, #17]
   25c7c:	0c00      	lsrs	r0, r0, #16
   25c7e:	74a0      	strb	r0, [r4, #18]
   25c80:	2200      	movs	r2, #0
   25c82:	49b9      	ldr	r1, [pc, #740]	@ (25f68 <dwt_ioctl+0x127c>)
   25c84:	4630      	mov	r0, r6
   25c86:	f7fc ff52 	bl	22b2e <dwt_read32bitoffsetreg>
   25c8a:	f3c0 000b 	ubfx	r0, r0, #0, #12
   25c8e:	f8a4 0013 	strh.w	r0, [r4, #19]
   25c92:	2500      	movs	r5, #0
   25c94:	7565      	strb	r5, [r4, #21]
   25c96:	75a5      	strb	r5, [r4, #22]
   25c98:	462a      	mov	r2, r5
   25c9a:	49b4      	ldr	r1, [pc, #720]	@ (25f6c <dwt_ioctl+0x1280>)
   25c9c:	4630      	mov	r0, r6
   25c9e:	f7fc ff6e 	bl	22b7e <dwt_read8bitoffsetreg>
   25ca2:	75e0      	strb	r0, [r4, #23]
   25ca4:	f7ff b8cc 	b.w	24e40 <dwt_ioctl+0x154>
   25ca8:	4611      	mov	r1, r2
   25caa:	f7fd fdbb 	bl	23824 <ull_configeventcounters>
   25cae:	2500      	movs	r5, #0
   25cb0:	f7ff b8c6 	b.w	24e40 <dwt_ioctl+0x154>
   25cb4:	2c00      	cmp	r4, #0
   25cb6:	f000 8782 	beq.w	26bbe <dwt_ioctl+0x1ed2>
   25cba:	8823      	ldrh	r3, [r4, #0]
   25cbc:	2200      	movs	r2, #0
   25cbe:	49ac      	ldr	r1, [pc, #688]	@ (25f70 <dwt_ioctl+0x1284>)
   25cc0:	f7fd fb4d 	bl	2335e <dwt_write16bitoffsetreg>
   25cc4:	2500      	movs	r5, #0
   25cc6:	f7ff b8bb 	b.w	24e40 <dwt_ioctl+0x154>
   25cca:	2c00      	cmp	r4, #0
   25ccc:	f000 877a 	beq.w	26bc4 <dwt_ioctl+0x1ed8>
   25cd0:	6825      	ldr	r5, [r4, #0]
   25cd2:	b935      	cbnz	r5, 25ce2 <dwt_ioctl+0xff6>
   25cd4:	2300      	movs	r3, #0
   25cd6:	461a      	mov	r2, r3
   25cd8:	49a6      	ldr	r1, [pc, #664]	@ (25f74 <dwt_ioctl+0x1288>)
   25cda:	f7fd fb40 	bl	2335e <dwt_write16bitoffsetreg>
   25cde:	f7ff b8af 	b.w	24e40 <dwt_ioctl+0x154>
   25ce2:	7962      	ldrb	r2, [r4, #5]
   25ce4:	7923      	ldrb	r3, [r4, #4]
   25ce6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   25cea:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
   25cee:	2200      	movs	r2, #0
   25cf0:	49a0      	ldr	r1, [pc, #640]	@ (25f74 <dwt_ioctl+0x1288>)
   25cf2:	f7fd fb34 	bl	2335e <dwt_write16bitoffsetreg>
   25cf6:	2500      	movs	r5, #0
   25cf8:	f7ff b8a2 	b.w	24e40 <dwt_ioctl+0x154>
   25cfc:	2c00      	cmp	r4, #0
   25cfe:	f000 8764 	beq.w	26bca <dwt_ioctl+0x1ede>
   25d02:	6823      	ldr	r3, [r4, #0]
   25d04:	b94b      	cbnz	r3, 25d1a <dwt_ioctl+0x102e>
   25d06:	2500      	movs	r5, #0
   25d08:	9500      	str	r5, [sp, #0]
   25d0a:	f64f 53ff 	movw	r3, #65023	@ 0xfdff
   25d0e:	462a      	mov	r2, r5
   25d10:	2110      	movs	r1, #16
   25d12:	f7fe fb61 	bl	243d8 <dwt_modify16bitoffsetreg>
   25d16:	f7ff b893 	b.w	24e40 <dwt_ioctl+0x154>
   25d1a:	2200      	movs	r2, #0
   25d1c:	2134      	movs	r1, #52	@ 0x34
   25d1e:	f7fd fb7b 	bl	23418 <dwt_write32bitoffsetreg>
   25d22:	f44f 7300 	mov.w	r3, #512	@ 0x200
   25d26:	9300      	str	r3, [sp, #0]
   25d28:	f64f 73ff 	movw	r3, #65535	@ 0xffff
   25d2c:	2200      	movs	r2, #0
   25d2e:	2110      	movs	r1, #16
   25d30:	4630      	mov	r0, r6
   25d32:	f7fe fb51 	bl	243d8 <dwt_modify16bitoffsetreg>
   25d36:	2500      	movs	r5, #0
   25d38:	f7ff b882 	b.w	24e40 <dwt_ioctl+0x154>
   25d3c:	2c00      	cmp	r4, #0
   25d3e:	f000 8747 	beq.w	26bd0 <dwt_ioctl+0x1ee4>
   25d42:	8861      	ldrh	r1, [r4, #2]
   25d44:	f7fd fd82 	bl	2384c <ull_aon_read>
   25d48:	7020      	strb	r0, [r4, #0]
   25d4a:	2500      	movs	r5, #0
   25d4c:	f7ff b878 	b.w	24e40 <dwt_ioctl+0x154>
   25d50:	2c00      	cmp	r4, #0
   25d52:	f000 8740 	beq.w	26bd6 <dwt_ioctl+0x1eea>
   25d56:	78a2      	ldrb	r2, [r4, #2]
   25d58:	8821      	ldrh	r1, [r4, #0]
   25d5a:	f7fd fd97 	bl	2388c <ull_aon_write>
   25d5e:	2500      	movs	r5, #0
   25d60:	f7ff b86e 	b.w	24e40 <dwt_ioctl+0x154>
   25d64:	4b84      	ldr	r3, [pc, #528]	@ (25f78 <dwt_ioctl+0x128c>)
   25d66:	4a85      	ldr	r2, [pc, #532]	@ (25f7c <dwt_ioctl+0x1290>)
   25d68:	2d01      	cmp	r5, #1
   25d6a:	bf18      	it	ne
   25d6c:	4613      	movne	r3, r2
   25d6e:	2d01      	cmp	r5, #1
   25d70:	4983      	ldr	r1, [pc, #524]	@ (25f80 <dwt_ioctl+0x1294>)
   25d72:	bf18      	it	ne
   25d74:	f04f 110c 	movne.w	r1, #786444	@ 0xc000c
   25d78:	6d02      	ldr	r2, [r0, #80]	@ 0x50
   25d7a:	7b92      	ldrb	r2, [r2, #14]
   25d7c:	2a01      	cmp	r2, #1
   25d7e:	d012      	beq.n	25da6 <dwt_ioctl+0x10ba>
   25d80:	2a03      	cmp	r2, #3
   25d82:	d117      	bne.n	25db4 <dwt_ioctl+0x10c8>
   25d84:	f5a2 12c0 	sub.w	r2, r2, #1572864	@ 0x180000
   25d88:	3a01      	subs	r2, #1
   25d8a:	441a      	add	r2, r3
   25d8c:	f44f 11f0 	mov.w	r1, #1966080	@ 0x1e0000
   25d90:	f7fc fee3 	bl	22b5a <dwt_read16bitoffsetreg>
   25d94:	09c0      	lsrs	r0, r0, #7
   25d96:	8020      	strh	r0, [r4, #0]
   25d98:	8825      	ldrh	r5, [r4, #0]
   25d9a:	3500      	adds	r5, #0
   25d9c:	bf18      	it	ne
   25d9e:	2501      	movne	r5, #1
   25da0:	426d      	negs	r5, r5
   25da2:	f7ff b84d 	b.w	24e40 <dwt_ioctl+0x154>
   25da6:	2202      	movs	r2, #2
   25da8:	4619      	mov	r1, r3
   25daa:	f7fc fed6 	bl	22b5a <dwt_read16bitoffsetreg>
   25dae:	09c0      	lsrs	r0, r0, #7
   25db0:	8020      	strh	r0, [r4, #0]
   25db2:	e7f1      	b.n	25d98 <dwt_ioctl+0x10ac>
   25db4:	2202      	movs	r2, #2
   25db6:	f7fc fed0 	bl	22b5a <dwt_read16bitoffsetreg>
   25dba:	09c0      	lsrs	r0, r0, #7
   25dbc:	8020      	strh	r0, [r4, #0]
   25dbe:	e7eb      	b.n	25d98 <dwt_ioctl+0x10ac>
   25dc0:	2c00      	cmp	r4, #0
   25dc2:	f000 870b 	beq.w	26bdc <dwt_ioctl+0x1ef0>
   25dc6:	7821      	ldrb	r1, [r4, #0]
   25dc8:	f7fe fb20 	bl	2440c <ull_setleds>
   25dcc:	2500      	movs	r5, #0
   25dce:	f7ff b837 	b.w	24e40 <dwt_ioctl+0x154>
   25dd2:	4611      	mov	r1, r2
   25dd4:	f7fe f9a2 	bl	2411c <ull_setdwstate>
   25dd8:	2500      	movs	r5, #0
   25dda:	f7ff b831 	b.w	24e40 <dwt_ioctl+0x154>
   25dde:	9400      	str	r4, [sp, #0]
   25de0:	2304      	movs	r3, #4
   25de2:	2200      	movs	r2, #0
   25de4:	211c      	movs	r1, #28
   25de6:	f7fc fe98 	bl	22b1a <dwt_readfromdevice>
   25dea:	2500      	movs	r5, #0
   25dec:	f7ff b828 	b.w	24e40 <dwt_ioctl+0x154>
   25df0:	2c00      	cmp	r4, #0
   25df2:	f000 86f6 	beq.w	26be2 <dwt_ioctl+0x1ef6>
   25df6:	2202      	movs	r2, #2
   25df8:	2144      	movs	r1, #68	@ 0x44
   25dfa:	f7fc feae 	bl	22b5a <dwt_read16bitoffsetreg>
   25dfe:	f3c0 2000 	ubfx	r0, r0, #8, #1
   25e02:	7020      	strb	r0, [r4, #0]
   25e04:	2500      	movs	r5, #0
   25e06:	f7ff b81b 	b.w	24e40 <dwt_ioctl+0x154>
   25e0a:	2c00      	cmp	r4, #0
   25e0c:	f000 86ec 	beq.w	26be8 <dwt_ioctl+0x1efc>
   25e10:	2200      	movs	r2, #0
   25e12:	2144      	movs	r1, #68	@ 0x44
   25e14:	f7fc feb3 	bl	22b7e <dwt_read8bitoffsetreg>
   25e18:	f000 0001 	and.w	r0, r0, #1
   25e1c:	7020      	strb	r0, [r4, #0]
   25e1e:	2500      	movs	r5, #0
   25e20:	f7ff b80e 	b.w	24e40 <dwt_ioctl+0x154>
   25e24:	2c00      	cmp	r4, #0
   25e26:	f000 86e2 	beq.w	26bee <dwt_ioctl+0x1f02>
   25e2a:	8862      	ldrh	r2, [r4, #2]
   25e2c:	8821      	ldrh	r1, [r4, #0]
   25e2e:	f7fe f9d1 	bl	241d4 <ull_configureframefilter>
   25e32:	2500      	movs	r5, #0
   25e34:	f7ff b804 	b.w	24e40 <dwt_ioctl+0x154>
   25e38:	9400      	str	r4, [sp, #0]
   25e3a:	2308      	movs	r3, #8
   25e3c:	2200      	movs	r2, #0
   25e3e:	2104      	movs	r1, #4
   25e40:	f7fd fa82 	bl	23348 <dwt_writetodevice>
   25e44:	2500      	movs	r5, #0
   25e46:	f7fe bffb 	b.w	24e40 <dwt_ioctl+0x154>
   25e4a:	9400      	str	r4, [sp, #0]
   25e4c:	2308      	movs	r3, #8
   25e4e:	2200      	movs	r2, #0
   25e50:	2104      	movs	r1, #4
   25e52:	f7fc fe62 	bl	22b1a <dwt_readfromdevice>
   25e56:	2500      	movs	r5, #0
   25e58:	f7fe bff2 	b.w	24e40 <dwt_ioctl+0x154>
   25e5c:	2c00      	cmp	r4, #0
   25e5e:	f000 86c9 	beq.w	26bf4 <dwt_ioctl+0x1f08>
   25e62:	8823      	ldrh	r3, [r4, #0]
   25e64:	2202      	movs	r2, #2
   25e66:	210c      	movs	r1, #12
   25e68:	f7fd fa79 	bl	2335e <dwt_write16bitoffsetreg>
   25e6c:	2500      	movs	r5, #0
   25e6e:	f7fe bfe7 	b.w	24e40 <dwt_ioctl+0x154>
   25e72:	2c00      	cmp	r4, #0
   25e74:	f000 86c1 	beq.w	26bfa <dwt_ioctl+0x1f0e>
   25e78:	8823      	ldrh	r3, [r4, #0]
   25e7a:	2200      	movs	r2, #0
   25e7c:	210c      	movs	r1, #12
   25e7e:	f7fd fa6e 	bl	2335e <dwt_write16bitoffsetreg>
   25e82:	2500      	movs	r5, #0
   25e84:	f7fe bfdc 	b.w	24e40 <dwt_ioctl+0x154>
   25e88:	4621      	mov	r1, r4
   25e8a:	f7fd fa3b 	bl	23304 <ull_readrxtimestamp>
   25e8e:	2500      	movs	r5, #0
   25e90:	f7fe bfd6 	b.w	24e40 <dwt_ioctl+0x154>
   25e94:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   25e96:	7b9b      	ldrb	r3, [r3, #14]
   25e98:	2b01      	cmp	r3, #1
   25e9a:	d00b      	beq.n	25eb4 <dwt_ioctl+0x11c8>
   25e9c:	2b03      	cmp	r3, #3
   25e9e:	d112      	bne.n	25ec6 <dwt_ioctl+0x11da>
   25ea0:	9400      	str	r4, [sp, #0]
   25ea2:	2305      	movs	r3, #5
   25ea4:	2220      	movs	r2, #32
   25ea6:	f44f 11f0 	mov.w	r1, #1966080	@ 0x1e0000
   25eaa:	f7fc fe36 	bl	22b1a <dwt_readfromdevice>
   25eae:	2500      	movs	r5, #0
   25eb0:	f7fe bfc6 	b.w	24e40 <dwt_ioctl+0x154>
   25eb4:	9400      	str	r4, [sp, #0]
   25eb6:	2305      	movs	r3, #5
   25eb8:	2200      	movs	r2, #0
   25eba:	4932      	ldr	r1, [pc, #200]	@ (25f84 <dwt_ioctl+0x1298>)
   25ebc:	f7fc fe2d 	bl	22b1a <dwt_readfromdevice>
   25ec0:	2500      	movs	r5, #0
   25ec2:	f7fe bfbd 	b.w	24e40 <dwt_ioctl+0x154>
   25ec6:	9400      	str	r4, [sp, #0]
   25ec8:	2305      	movs	r3, #5
   25eca:	2200      	movs	r2, #0
   25ecc:	f44f 2140 	mov.w	r1, #786432	@ 0xc0000
   25ed0:	f7fc fe23 	bl	22b1a <dwt_readfromdevice>
   25ed4:	2500      	movs	r5, #0
   25ed6:	f7fe bfb3 	b.w	24e40 <dwt_ioctl+0x154>
   25eda:	2500      	movs	r5, #0
   25edc:	f804 5b01 	strb.w	r5, [r4], #1
   25ee0:	9400      	str	r4, [sp, #0]
   25ee2:	2304      	movs	r3, #4
   25ee4:	462a      	mov	r2, r5
   25ee6:	216c      	movs	r1, #108	@ 0x6c
   25ee8:	f7fc fe17 	bl	22b1a <dwt_readfromdevice>
   25eec:	f7fe bfa8 	b.w	24e40 <dwt_ioctl+0x154>
   25ef0:	2c00      	cmp	r4, #0
   25ef2:	f000 8685 	beq.w	26c00 <dwt_ioctl+0x1f14>
   25ef6:	2201      	movs	r2, #1
   25ef8:	2160      	movs	r1, #96	@ 0x60
   25efa:	f7fc fe18 	bl	22b2e <dwt_read32bitoffsetreg>
   25efe:	6020      	str	r0, [r4, #0]
   25f00:	2500      	movs	r5, #0
   25f02:	f7fe bf9d 	b.w	24e40 <dwt_ioctl+0x154>
   25f06:	2c00      	cmp	r4, #0
   25f08:	f000 867d 	beq.w	26c06 <dwt_ioctl+0x1f1a>
   25f0c:	2200      	movs	r2, #0
   25f0e:	2160      	movs	r1, #96	@ 0x60
   25f10:	f7fc fe0d 	bl	22b2e <dwt_read32bitoffsetreg>
   25f14:	6020      	str	r0, [r4, #0]
   25f16:	2500      	movs	r5, #0
   25f18:	f7fe bf92 	b.w	24e40 <dwt_ioctl+0x154>
   25f1c:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   25f1e:	7b9b      	ldrb	r3, [r3, #14]
   25f20:	2b01      	cmp	r3, #1
   25f22:	d00b      	beq.n	25f3c <dwt_ioctl+0x1250>
   25f24:	2b03      	cmp	r3, #3
   25f26:	d131      	bne.n	25f8c <dwt_ioctl+0x12a0>
   25f28:	9400      	str	r4, [sp, #0]
   25f2a:	2305      	movs	r3, #5
   25f2c:	2228      	movs	r2, #40	@ 0x28
   25f2e:	f44f 11f0 	mov.w	r1, #1966080	@ 0x1e0000
   25f32:	f7fc fdf2 	bl	22b1a <dwt_readfromdevice>
   25f36:	2500      	movs	r5, #0
   25f38:	f7fe bf82 	b.w	24e40 <dwt_ioctl+0x154>
   25f3c:	9400      	str	r4, [sp, #0]
   25f3e:	2305      	movs	r3, #5
   25f40:	2200      	movs	r2, #0
   25f42:	4911      	ldr	r1, [pc, #68]	@ (25f88 <dwt_ioctl+0x129c>)
   25f44:	f7fc fde9 	bl	22b1a <dwt_readfromdevice>
   25f48:	2500      	movs	r5, #0
   25f4a:	f7fe bf79 	b.w	24e40 <dwt_ioctl+0x154>
   25f4e:	bf00      	nop
   25f50:	000f0004 	.word	0x000f0004
   25f54:	000f0008 	.word	0x000f0008
   25f58:	000f000c 	.word	0x000f000c
   25f5c:	000f0010 	.word	0x000f0010
   25f60:	000f0014 	.word	0x000f0014
   25f64:	000f0018 	.word	0x000f0018
   25f68:	000f001c 	.word	0x000f001c
   25f6c:	000f0020 	.word	0x000f0020
   25f70:	00060004 	.word	0x00060004
   25f74:	0011001c 	.word	0x0011001c
   25f78:	00180034 	.word	0x00180034
   25f7c:	0018002c 	.word	0x0018002c
   25f80:	000c0014 	.word	0x000c0014
   25f84:	00180020 	.word	0x00180020
   25f88:	00180028 	.word	0x00180028
   25f8c:	9400      	str	r4, [sp, #0]
   25f8e:	2305      	movs	r3, #5
   25f90:	2200      	movs	r2, #0
   25f92:	49ce      	ldr	r1, [pc, #824]	@ (262cc <dwt_ioctl+0x15e0>)
   25f94:	f7fc fdc1 	bl	22b1a <dwt_readfromdevice>
   25f98:	2500      	movs	r5, #0
   25f9a:	f7fe bf51 	b.w	24e40 <dwt_ioctl+0x154>
   25f9e:	2c00      	cmp	r4, #0
   25fa0:	f000 8634 	beq.w	26c0c <dwt_ioctl+0x1f20>
   25fa4:	2200      	movs	r2, #0
   25fa6:	211c      	movs	r1, #28
   25fa8:	f7fc fdc1 	bl	22b2e <dwt_read32bitoffsetreg>
   25fac:	6020      	str	r0, [r4, #0]
   25fae:	2500      	movs	r5, #0
   25fb0:	f7fe bf46 	b.w	24e40 <dwt_ioctl+0x154>
   25fb4:	2c00      	cmp	r4, #0
   25fb6:	f000 862c 	beq.w	26c12 <dwt_ioctl+0x1f26>
   25fba:	8825      	ldrh	r5, [r4, #0]
   25fbc:	6867      	ldr	r7, [r4, #4]
   25fbe:	7a23      	ldrb	r3, [r4, #8]
   25fc0:	2b00      	cmp	r3, #0
   25fc2:	f000 8629 	beq.w	26c18 <dwt_ioctl+0x1f2c>
   25fc6:	463c      	mov	r4, r7
   25fc8:	eb07 0783 	add.w	r7, r7, r3, lsl #2
   25fcc:	4629      	mov	r1, r5
   25fce:	4630      	mov	r0, r6
   25fd0:	f7fd fa00 	bl	233d4 <_dwt_otpread>
   25fd4:	f844 0b04 	str.w	r0, [r4], #4
   25fd8:	3501      	adds	r5, #1
   25fda:	b2ad      	uxth	r5, r5
   25fdc:	42bc      	cmp	r4, r7
   25fde:	d1f5      	bne.n	25fcc <dwt_ioctl+0x12e0>
   25fe0:	2500      	movs	r5, #0
   25fe2:	f7fe bf2d 	b.w	24e40 <dwt_ioctl+0x154>
   25fe6:	2c00      	cmp	r4, #0
   25fe8:	f000 8619 	beq.w	26c1e <dwt_ioctl+0x1f32>
   25fec:	7823      	ldrb	r3, [r4, #0]
   25fee:	2201      	movs	r2, #1
   25ff0:	2124      	movs	r1, #36	@ 0x24
   25ff2:	f7fd fb9f 	bl	23734 <dwt_write8bitoffsetreg>
   25ff6:	2500      	movs	r5, #0
   25ff8:	f7fe bf22 	b.w	24e40 <dwt_ioctl+0x154>
   25ffc:	f7fe f90e 	bl	2421c <ull_run_pgfcal>
   26000:	4605      	mov	r5, r0
   26002:	f7fe bf1d 	b.w	24e40 <dwt_ioctl+0x154>
   26006:	4611      	mov	r1, r2
   26008:	f7fe fa4e 	bl	244a8 <ull_pgf_cal>
   2600c:	4605      	mov	r5, r0
   2600e:	f7fe bf17 	b.w	24e40 <dwt_ioctl+0x154>
   26012:	2c00      	cmp	r4, #0
   26014:	f000 8606 	beq.w	26c24 <dwt_ioctl+0x1f38>
   26018:	78a5      	ldrb	r5, [r4, #2]
   2601a:	2101      	movs	r1, #1
   2601c:	f7fd f9b0 	bl	23380 <ull_force_clocks>
   26020:	2100      	movs	r1, #0
   26022:	4630      	mov	r0, r6
   26024:	f7fd fe6e 	bl	23d04 <ull_enable_rf_tx>
   26028:	4630      	mov	r0, r6
   2602a:	f7fd fe9f 	bl	23d6c <ull_enable_rftx_blocks>
   2602e:	f005 033f 	and.w	r3, r5, #63	@ 0x3f
   26032:	2200      	movs	r2, #0
   26034:	49a6      	ldr	r1, [pc, #664]	@ (262d0 <dwt_ioctl+0x15e4>)
   26036:	4630      	mov	r0, r6
   26038:	f7fd fb7c 	bl	23734 <dwt_write8bitoffsetreg>
   2603c:	2301      	movs	r3, #1
   2603e:	9300      	str	r3, [sp, #0]
   26040:	23ff      	movs	r3, #255	@ 0xff
   26042:	2200      	movs	r2, #0
   26044:	49a3      	ldr	r1, [pc, #652]	@ (262d4 <dwt_ioctl+0x15e8>)
   26046:	4630      	mov	r0, r6
   26048:	f7fd ffaa 	bl	23fa0 <dwt_modify8bitoffsetreg>
   2604c:	4fa1      	ldr	r7, [pc, #644]	@ (262d4 <dwt_ioctl+0x15e8>)
   2604e:	2500      	movs	r5, #0
   26050:	462a      	mov	r2, r5
   26052:	4639      	mov	r1, r7
   26054:	4630      	mov	r0, r6
   26056:	f7fc fd92 	bl	22b7e <dwt_read8bitoffsetreg>
   2605a:	f010 0f01 	tst.w	r0, #1
   2605e:	d1f7      	bne.n	26050 <dwt_ioctl+0x1364>
   26060:	2200      	movs	r2, #0
   26062:	499d      	ldr	r1, [pc, #628]	@ (262d8 <dwt_ioctl+0x15ec>)
   26064:	4630      	mov	r0, r6
   26066:	f7fc fd78 	bl	22b5a <dwt_read16bitoffsetreg>
   2606a:	4605      	mov	r5, r0
   2606c:	4630      	mov	r0, r6
   2606e:	f7fd fb03 	bl	23678 <ull_disable_rftx_blocks>
   26072:	2100      	movs	r1, #0
   26074:	4630      	mov	r0, r6
   26076:	f7fd fb09 	bl	2368c <ull_disable_rf_tx>
   2607a:	2105      	movs	r1, #5
   2607c:	4630      	mov	r0, r6
   2607e:	f7fd f97f 	bl	23380 <ull_force_clocks>
   26082:	f3c5 050b 	ubfx	r5, r5, #0, #12
   26086:	8025      	strh	r5, [r4, #0]
   26088:	2500      	movs	r5, #0
   2608a:	f7fe bed9 	b.w	24e40 <dwt_ioctl+0x154>
   2608e:	2102      	movs	r1, #2
   26090:	f7fe f844 	bl	2411c <ull_setdwstate>
   26094:	2101      	movs	r1, #1
   26096:	4630      	mov	r0, r6
   26098:	f7fe f840 	bl	2411c <ull_setdwstate>
   2609c:	2432      	movs	r4, #50	@ 0x32
   2609e:	f04f 0814 	mov.w	r8, #20
   260a2:	2700      	movs	r7, #0
   260a4:	2544      	movs	r5, #68	@ 0x44
   260a6:	4640      	mov	r0, r8
   260a8:	f7f4 fec5 	bl	1ae36 <deca_usleep>
   260ac:	463a      	mov	r2, r7
   260ae:	4629      	mov	r1, r5
   260b0:	4630      	mov	r0, r6
   260b2:	f7fc fd64 	bl	22b7e <dwt_read8bitoffsetreg>
   260b6:	f010 0f02 	tst.w	r0, #2
   260ba:	d105      	bne.n	260c8 <dwt_ioctl+0x13dc>
   260bc:	1e63      	subs	r3, r4, #1
   260be:	f013 04ff 	ands.w	r4, r3, #255	@ 0xff
   260c2:	d1f0      	bne.n	260a6 <dwt_ioctl+0x13ba>
   260c4:	2501      	movs	r5, #1
   260c6:	e000      	b.n	260ca <dwt_ioctl+0x13de>
   260c8:	2500      	movs	r5, #0
   260ca:	426d      	negs	r5, r5
   260cc:	f7fe beb8 	b.w	24e40 <dwt_ioctl+0x154>
   260d0:	2c00      	cmp	r4, #0
   260d2:	f000 85aa 	beq.w	26c2a <dwt_ioctl+0x1f3e>
   260d6:	7823      	ldrb	r3, [r4, #0]
   260d8:	031b      	lsls	r3, r3, #12
   260da:	f403 43e0 	and.w	r3, r3, #28672	@ 0x7000
   260de:	7862      	ldrb	r2, [r4, #1]
   260e0:	2a01      	cmp	r2, #1
   260e2:	bf08      	it	eq
   260e4:	f443 7380 	orreq.w	r3, r3, #256	@ 0x100
   260e8:	9300      	str	r3, [sp, #0]
   260ea:	f46f 43e2 	mvn.w	r3, #28928	@ 0x7100
   260ee:	2200      	movs	r2, #0
   260f0:	497a      	ldr	r1, [pc, #488]	@ (262dc <dwt_ioctl+0x15f0>)
   260f2:	f7fd fde3 	bl	23cbc <dwt_modify32bitoffsetreg>
   260f6:	2500      	movs	r5, #0
   260f8:	f7fe bea2 	b.w	24e40 <dwt_ioctl+0x154>
   260fc:	2c00      	cmp	r4, #0
   260fe:	f000 8597 	beq.w	26c30 <dwt_ioctl+0x1f44>
   26102:	6862      	ldr	r2, [r4, #4]
   26104:	6821      	ldr	r1, [r4, #0]
   26106:	f7fd fefb 	bl	23f00 <ull_setgpiomode>
   2610a:	2500      	movs	r5, #0
   2610c:	f7fe be98 	b.w	24e40 <dwt_ioctl+0x154>
   26110:	2c00      	cmp	r4, #0
   26112:	f000 8590 	beq.w	26c36 <dwt_ioctl+0x1f4a>
   26116:	8823      	ldrh	r3, [r4, #0]
   26118:	2200      	movs	r2, #0
   2611a:	4971      	ldr	r1, [pc, #452]	@ (262e0 <dwt_ioctl+0x15f4>)
   2611c:	f7fd f91f 	bl	2335e <dwt_write16bitoffsetreg>
   26120:	2500      	movs	r5, #0
   26122:	f7fe be8d 	b.w	24e40 <dwt_ioctl+0x154>
   26126:	2c00      	cmp	r4, #0
   26128:	f000 8588 	beq.w	26c3c <dwt_ioctl+0x1f50>
   2612c:	6862      	ldr	r2, [r4, #4]
   2612e:	8821      	ldrh	r1, [r4, #0]
   26130:	f7fe f9ea 	bl	24508 <ull_setgpiovalue>
   26134:	2500      	movs	r5, #0
   26136:	f7fe be83 	b.w	24e40 <dwt_ioctl+0x154>
   2613a:	2c00      	cmp	r4, #0
   2613c:	f000 8581 	beq.w	26c42 <dwt_ioctl+0x1f56>
   26140:	7865      	ldrb	r5, [r4, #1]
   26142:	7823      	ldrb	r3, [r4, #0]
   26144:	b18b      	cbz	r3, 2616a <dwt_ioctl+0x147e>
   26146:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   26148:	2200      	movs	r2, #0
   2614a:	739a      	strb	r2, [r3, #14]
   2614c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   26150:	2208      	movs	r2, #8
   26152:	b1e5      	cbz	r5, 2618e <dwt_ioctl+0x14a2>
   26154:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
   26158:	9200      	str	r2, [sp, #0]
   2615a:	2200      	movs	r2, #0
   2615c:	2110      	movs	r1, #16
   2615e:	4630      	mov	r0, r6
   26160:	f7fd fdac 	bl	23cbc <dwt_modify32bitoffsetreg>
   26164:	2500      	movs	r5, #0
   26166:	f7fe be6b 	b.w	24e40 <dwt_ioctl+0x154>
   2616a:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   2616c:	2201      	movs	r2, #1
   2616e:	739a      	strb	r2, [r3, #14]
   26170:	2318      	movs	r3, #24
   26172:	2200      	movs	r2, #0
   26174:	495b      	ldr	r1, [pc, #364]	@ (262e4 <dwt_ioctl+0x15f8>)
   26176:	f7fd f94f 	bl	23418 <dwt_write32bitoffsetreg>
   2617a:	23e8      	movs	r3, #232	@ 0xe8
   2617c:	2200      	movs	r2, #0
   2617e:	495a      	ldr	r1, [pc, #360]	@ (262e8 <dwt_ioctl+0x15fc>)
   26180:	4630      	mov	r0, r6
   26182:	f7fd f949 	bl	23418 <dwt_write32bitoffsetreg>
   26186:	f06f 0308 	mvn.w	r3, #8
   2618a:	2200      	movs	r2, #0
   2618c:	e7e1      	b.n	26152 <dwt_ioctl+0x1466>
   2618e:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
   26192:	e7e1      	b.n	26158 <dwt_ioctl+0x146c>
   26194:	2c00      	cmp	r4, #0
   26196:	f000 8557 	beq.w	26c48 <dwt_ioctl+0x1f5c>
   2619a:	6823      	ldr	r3, [r4, #0]
   2619c:	2200      	movs	r2, #0
   2619e:	2130      	movs	r1, #48	@ 0x30
   261a0:	f7fd f93a 	bl	23418 <dwt_write32bitoffsetreg>
   261a4:	2500      	movs	r5, #0
   261a6:	f7fe be4b 	b.w	24e40 <dwt_ioctl+0x154>
   261aa:	2c00      	cmp	r4, #0
   261ac:	f000 854f 	beq.w	26c4e <dwt_ioctl+0x1f62>
   261b0:	2200      	movs	r2, #0
   261b2:	4629      	mov	r1, r5
   261b4:	f7fc fcbb 	bl	22b2e <dwt_read32bitoffsetreg>
   261b8:	6020      	str	r0, [r4, #0]
   261ba:	2500      	movs	r5, #0
   261bc:	f7fe be40 	b.w	24e40 <dwt_ioctl+0x154>
   261c0:	4623      	mov	r3, r4
   261c2:	2200      	movs	r2, #0
   261c4:	4629      	mov	r1, r5
   261c6:	f7fd f927 	bl	23418 <dwt_write32bitoffsetreg>
   261ca:	2500      	movs	r5, #0
   261cc:	f7fe be38 	b.w	24e40 <dwt_ioctl+0x154>
   261d0:	2c00      	cmp	r4, #0
   261d2:	f000 853f 	beq.w	26c54 <dwt_ioctl+0x1f68>
   261d6:	2203      	movs	r2, #3
   261d8:	4944      	ldr	r1, [pc, #272]	@ (262ec <dwt_ioctl+0x1600>)
   261da:	f7fc fcd0 	bl	22b7e <dwt_read8bitoffsetreg>
   261de:	f3c0 1002 	ubfx	r0, r0, #4, #3
   261e2:	7020      	strb	r0, [r4, #0]
   261e4:	2500      	movs	r5, #0
   261e6:	f7fe be2b 	b.w	24e40 <dwt_ioctl+0x154>
   261ea:	2c00      	cmp	r4, #0
   261ec:	f000 8535 	beq.w	26c5a <dwt_ioctl+0x1f6e>
   261f0:	6823      	ldr	r3, [r4, #0]
   261f2:	2200      	movs	r2, #0
   261f4:	2144      	movs	r1, #68	@ 0x44
   261f6:	f7fd f90f 	bl	23418 <dwt_write32bitoffsetreg>
   261fa:	2500      	movs	r5, #0
   261fc:	f7fe be20 	b.w	24e40 <dwt_ioctl+0x154>
   26200:	2c00      	cmp	r4, #0
   26202:	f000 852d 	beq.w	26c60 <dwt_ioctl+0x1f74>
   26206:	8823      	ldrh	r3, [r4, #0]
   26208:	2200      	movs	r2, #0
   2620a:	2148      	movs	r1, #72	@ 0x48
   2620c:	f7fd f8a7 	bl	2335e <dwt_write16bitoffsetreg>
   26210:	2500      	movs	r5, #0
   26212:	f7fe be15 	b.w	24e40 <dwt_ioctl+0x154>
   26216:	2c00      	cmp	r4, #0
   26218:	f000 8525 	beq.w	26c66 <dwt_ioctl+0x1f7a>
   2621c:	2200      	movs	r2, #0
   2621e:	2144      	movs	r1, #68	@ 0x44
   26220:	f7fc fc85 	bl	22b2e <dwt_read32bitoffsetreg>
   26224:	6020      	str	r0, [r4, #0]
   26226:	2500      	movs	r5, #0
   26228:	f7fe be0a 	b.w	24e40 <dwt_ioctl+0x154>
   2622c:	2c00      	cmp	r4, #0
   2622e:	f000 851d 	beq.w	26c6c <dwt_ioctl+0x1f80>
   26232:	2200      	movs	r2, #0
   26234:	2148      	movs	r1, #72	@ 0x48
   26236:	f7fc fc90 	bl	22b5a <dwt_read16bitoffsetreg>
   2623a:	6020      	str	r0, [r4, #0]
   2623c:	2500      	movs	r5, #0
   2623e:	f7fe bdff 	b.w	24e40 <dwt_ioctl+0x154>
   26242:	2c00      	cmp	r4, #0
   26244:	f000 8515 	beq.w	26c72 <dwt_ioctl+0x1f86>
   26248:	7823      	ldrb	r3, [r4, #0]
   2624a:	2200      	movs	r2, #0
   2624c:	4928      	ldr	r1, [pc, #160]	@ (262f0 <dwt_ioctl+0x1604>)
   2624e:	f7fd fa71 	bl	23734 <dwt_write8bitoffsetreg>
   26252:	2500      	movs	r5, #0
   26254:	f7fe bdf4 	b.w	24e40 <dwt_ioctl+0x154>
   26258:	2c00      	cmp	r4, #0
   2625a:	f000 850d 	beq.w	26c78 <dwt_ioctl+0x1f8c>
   2625e:	2200      	movs	r2, #0
   26260:	2144      	movs	r1, #68	@ 0x44
   26262:	f7fc fc8c 	bl	22b7e <dwt_read8bitoffsetreg>
   26266:	7020      	strb	r0, [r4, #0]
   26268:	2500      	movs	r5, #0
   2626a:	f7fe bde9 	b.w	24e40 <dwt_ioctl+0x154>
   2626e:	2c00      	cmp	r4, #0
   26270:	f000 8505 	beq.w	26c7e <dwt_ioctl+0x1f92>
   26274:	f7fd fa6a 	bl	2374c <ull_getframelength>
   26278:	6020      	str	r0, [r4, #0]
   2627a:	2500      	movs	r5, #0
   2627c:	f7fe bde0 	b.w	24e40 <dwt_ioctl+0x154>
   26280:	2c00      	cmp	r4, #0
   26282:	f000 84ff 	beq.w	26c84 <dwt_ioctl+0x1f98>
   26286:	2200      	movs	r2, #0
   26288:	491a      	ldr	r1, [pc, #104]	@ (262f4 <dwt_ioctl+0x1608>)
   2628a:	f7fc fc66 	bl	22b5a <dwt_read16bitoffsetreg>
   2628e:	8020      	strh	r0, [r4, #0]
   26290:	2500      	movs	r5, #0
   26292:	f7fe bdd5 	b.w	24e40 <dwt_ioctl+0x154>
   26296:	2c00      	cmp	r4, #0
   26298:	f000 84f7 	beq.w	26c8a <dwt_ioctl+0x1f9e>
   2629c:	2200      	movs	r2, #0
   2629e:	4916      	ldr	r1, [pc, #88]	@ (262f8 <dwt_ioctl+0x160c>)
   262a0:	f7fc fc45 	bl	22b2e <dwt_read32bitoffsetreg>
   262a4:	6020      	str	r0, [r4, #0]
   262a6:	2500      	movs	r5, #0
   262a8:	f7fe bdca 	b.w	24e40 <dwt_ioctl+0x154>
   262ac:	2c00      	cmp	r4, #0
   262ae:	f000 84ef 	beq.w	26c90 <dwt_ioctl+0x1fa4>
   262b2:	8823      	ldrh	r3, [r4, #0]
   262b4:	f3c3 030d 	ubfx	r3, r3, #0, #14
   262b8:	9300      	str	r3, [sp, #0]
   262ba:	f44f 4340 	mov.w	r3, #49152	@ 0xc000
   262be:	2200      	movs	r2, #0
   262c0:	490d      	ldr	r1, [pc, #52]	@ (262f8 <dwt_ioctl+0x160c>)
   262c2:	f7fe f889 	bl	243d8 <dwt_modify16bitoffsetreg>
   262c6:	2500      	movs	r5, #0
   262c8:	f7fe bdba 	b.w	24e40 <dwt_ioctl+0x154>
   262cc:	000c0008 	.word	0x000c0008
   262d0:	0007001c 	.word	0x0007001c
   262d4:	00080010 	.word	0x00080010
   262d8:	00080014 	.word	0x00080014
   262dc:	00070014 	.word	0x00070014
   262e0:	00050008 	.word	0x00050008
   262e4:	001f000c 	.word	0x001f000c
   262e8:	001f0010 	.word	0x001f0010
   262ec:	00030060 	.word	0x00030060
   262f0:	00010018 	.word	0x00010018
   262f4:	0005002c 	.word	0x0005002c
   262f8:	000e001c 	.word	0x000e001c
   262fc:	2c00      	cmp	r4, #0
   262fe:	f000 84ca 	beq.w	26c96 <dwt_ioctl+0x1faa>
   26302:	88a7      	ldrh	r7, [r4, #4]
   26304:	f8d4 b008 	ldr.w	fp, [r4, #8]
   26308:	7b23      	ldrb	r3, [r4, #12]
   2630a:	9306      	str	r3, [sp, #24]
   2630c:	6922      	ldr	r2, [r4, #16]
   2630e:	9204      	str	r2, [sp, #16]
   26310:	6962      	ldr	r2, [r4, #20]
   26312:	9205      	str	r2, [sp, #20]
   26314:	f00b 0203 	and.w	r2, fp, #3
   26318:	f3cb 0085 	ubfx	r0, fp, #2, #6
   2631c:	2b05      	cmp	r3, #5
   2631e:	d145      	bne.n	263ac <dwt_ioctl+0x16c0>
   26320:	f5b7 7fb1 	cmp.w	r7, #354	@ 0x162
   26324:	bf28      	it	cs
   26326:	f44f 77b1 	movcs.w	r7, #354	@ 0x162
   2632a:	f8df 9338 	ldr.w	r9, [pc, #824]	@ 26664 <dwt_ioctl+0x1978>
   2632e:	2f04      	cmp	r7, #4
   26330:	d805      	bhi.n	2633e <dwt_ioctl+0x1652>
   26332:	eb09 0300 	add.w	r3, r9, r0
   26336:	785b      	ldrb	r3, [r3, #1]
   26338:	3b05      	subs	r3, #5
   2633a:	429f      	cmp	r7, r3
   2633c:	db3e      	blt.n	263bc <dwt_ioctl+0x16d0>
   2633e:	2a01      	cmp	r2, #1
   26340:	d87c      	bhi.n	2643c <dwt_ioctl+0x1750>
   26342:	4bc4      	ldr	r3, [pc, #784]	@ (26654 <dwt_ioctl+0x1968>)
   26344:	5c99      	ldrb	r1, [r3, r2]
   26346:	463e      	mov	r6, r7
   26348:	42b9      	cmp	r1, r7
   2634a:	da79      	bge.n	26440 <dwt_ioctl+0x1754>
   2634c:	1c55      	adds	r5, r2, #1
   2634e:	fa53 f585 	uxtab	r5, r3, r5
   26352:	2300      	movs	r3, #0
   26354:	440b      	add	r3, r1
   26356:	b29b      	uxth	r3, r3
   26358:	3201      	adds	r2, #1
   2635a:	b2d2      	uxtb	r2, r2
   2635c:	2a02      	cmp	r2, #2
   2635e:	d005      	beq.n	2636c <dwt_ioctl+0x1680>
   26360:	f815 1b01 	ldrb.w	r1, [r5], #1
   26364:	eba6 0c03 	sub.w	ip, r6, r3
   26368:	4561      	cmp	r1, ip
   2636a:	dbf3      	blt.n	26354 <dwt_ioctl+0x1668>
   2636c:	429f      	cmp	r7, r3
   2636e:	bf08      	it	eq
   26370:	9003      	streq	r0, [sp, #12]
   26372:	d069      	beq.n	26448 <dwt_ioctl+0x175c>
   26374:	f107 0805 	add.w	r8, r7, #5
   26378:	fa1f f888 	uxth.w	r8, r8
   2637c:	2580      	movs	r5, #128	@ 0x80
   2637e:	2100      	movs	r1, #0
   26380:	9107      	str	r1, [sp, #28]
   26382:	9103      	str	r1, [sp, #12]
   26384:	9108      	str	r1, [sp, #32]
   26386:	460e      	mov	r6, r1
   26388:	2105      	movs	r1, #5
   2638a:	46be      	mov	lr, r7
   2638c:	428f      	cmp	r7, r1
   2638e:	bf38      	it	cc
   26390:	468e      	movcc	lr, r1
   26392:	f1ae 0e05 	sub.w	lr, lr, #5
   26396:	fa1f fe8e 	uxth.w	lr, lr
   2639a:	f8df a2b8 	ldr.w	sl, [pc, #696]	@ 26654 <dwt_ioctl+0x1968>
   2639e:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
   263a2:	468b      	mov	fp, r1
   263a4:	46bc      	mov	ip, r7
   263a6:	4637      	mov	r7, r6
   263a8:	f000 bcec 	b.w	26d84 <dwt_ioctl+0x2098>
   263ac:	f240 1331 	movw	r3, #305	@ 0x131
   263b0:	429f      	cmp	r7, r3
   263b2:	bf28      	it	cs
   263b4:	461f      	movcs	r7, r3
   263b6:	f8df 92b0 	ldr.w	r9, [pc, #688]	@ 26668 <dwt_ioctl+0x197c>
   263ba:	e7b8      	b.n	2632e <dwt_ioctl+0x1642>
   263bc:	2300      	movs	r3, #0
   263be:	9a05      	ldr	r2, [sp, #20]
   263c0:	8013      	strh	r3, [r2, #0]
   263c2:	9a04      	ldr	r2, [sp, #16]
   263c4:	f8c2 b000 	str.w	fp, [r2]
   263c8:	e04d      	b.n	26466 <dwt_ioctl+0x177a>
   263ca:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
   263ce:	2300      	movs	r3, #0
   263d0:	9a05      	ldr	r2, [sp, #20]
   263d2:	8013      	strh	r3, [r2, #0]
   263d4:	9b04      	ldr	r3, [sp, #16]
   263d6:	f8c3 b000 	str.w	fp, [r3]
   263da:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   263de:	e042      	b.n	26466 <dwt_ioctl+0x177a>
   263e0:	fa1f fb81 	uxth.w	fp, r1
   263e4:	9207      	str	r2, [sp, #28]
   263e6:	9003      	str	r0, [sp, #12]
   263e8:	9308      	str	r3, [sp, #32]
   263ea:	2701      	movs	r7, #1
   263ec:	f000 bcdb 	b.w	26da6 <dwt_ioctl+0x20ba>
   263f0:	2f00      	cmp	r7, #0
   263f2:	f040 849b 	bne.w	26d2c <dwt_ioctl+0x2040>
   263f6:	4598      	cmp	r8, r3
   263f8:	f200 84b0 	bhi.w	26d5c <dwt_ioctl+0x2070>
   263fc:	2e00      	cmp	r6, #0
   263fe:	d039      	beq.n	26474 <dwt_ioctl+0x1788>
   26400:	283f      	cmp	r0, #63	@ 0x3f
   26402:	f000 84d5 	beq.w	26db0 <dwt_ioctl+0x20c4>
   26406:	2700      	movs	r7, #0
   26408:	f819 1000 	ldrb.w	r1, [r9, r0]
   2640c:	1a5b      	subs	r3, r3, r1
   2640e:	b29b      	uxth	r3, r3
   26410:	1e46      	subs	r6, r0, #1
   26412:	f006 003f 	and.w	r0, r6, #63	@ 0x3f
   26416:	f016 063f 	ands.w	r6, r6, #63	@ 0x3f
   2641a:	bf18      	it	ne
   2641c:	2601      	movne	r6, #1
   2641e:	f000 bca9 	b.w	26d74 <dwt_ioctl+0x2088>
   26422:	9906      	ldr	r1, [sp, #24]
   26424:	2909      	cmp	r1, #9
   26426:	f040 84c9 	bne.w	26dbc <dwt_ioctl+0x20d0>
   2642a:	213f      	movs	r1, #63	@ 0x3f
   2642c:	9103      	str	r1, [sp, #12]
   2642e:	e00b      	b.n	26448 <dwt_ioctl+0x175c>
   26430:	b2b3      	uxth	r3, r6
   26432:	3201      	adds	r2, #1
   26434:	b2d2      	uxtb	r2, r2
   26436:	213f      	movs	r1, #63	@ 0x3f
   26438:	9103      	str	r1, [sp, #12]
   2643a:	e005      	b.n	26448 <dwt_ioctl+0x175c>
   2643c:	2300      	movs	r3, #0
   2643e:	e795      	b.n	2636c <dwt_ioctl+0x1680>
   26440:	2300      	movs	r3, #0
   26442:	e793      	b.n	2636c <dwt_ioctl+0x1680>
   26444:	9003      	str	r0, [sp, #12]
   26446:	4663      	mov	r3, ip
   26448:	9905      	ldr	r1, [sp, #20]
   2644a:	800b      	strh	r3, [r1, #0]
   2644c:	9b03      	ldr	r3, [sp, #12]
   2644e:	ea42 0283 	orr.w	r2, r2, r3, lsl #2
   26452:	b2d2      	uxtb	r2, r2
   26454:	0413      	lsls	r3, r2, #16
   26456:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   2645a:	4313      	orrs	r3, r2
   2645c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   26460:	9a04      	ldr	r2, [sp, #16]
   26462:	6013      	str	r3, [r2, #0]
   26464:	2300      	movs	r3, #0
   26466:	6023      	str	r3, [r4, #0]
   26468:	2500      	movs	r5, #0
   2646a:	f7fe bce9 	b.w	24e40 <dwt_ioctl+0x154>
   2646e:	9a07      	ldr	r2, [sp, #28]
   26470:	9b08      	ldr	r3, [sp, #32]
   26472:	e7e9      	b.n	26448 <dwt_ioctl+0x175c>
   26474:	9003      	str	r0, [sp, #12]
   26476:	e7e7      	b.n	26448 <dwt_ioctl+0x175c>
   26478:	9a07      	ldr	r2, [sp, #28]
   2647a:	9b08      	ldr	r3, [sp, #32]
   2647c:	e7e4      	b.n	26448 <dwt_ioctl+0x175c>
   2647e:	213f      	movs	r1, #63	@ 0x3f
   26480:	9103      	str	r1, [sp, #12]
   26482:	e7e1      	b.n	26448 <dwt_ioctl+0x175c>
   26484:	2c00      	cmp	r4, #0
   26486:	f000 8409 	beq.w	26c9c <dwt_ioctl+0x1fb0>
   2648a:	7827      	ldrb	r7, [r4, #0]
   2648c:	7864      	ldrb	r4, [r4, #1]
   2648e:	f7f4 fcaf 	bl	1adf0 <decamutexon>
   26492:	4605      	mov	r5, r0
   26494:	2c02      	cmp	r4, #2
   26496:	d00e      	beq.n	264b6 <dwt_ioctl+0x17ca>
   26498:	2c04      	cmp	r4, #4
   2649a:	d00c      	beq.n	264b6 <dwt_ioctl+0x17ca>
   2649c:	f004 04fd 	and.w	r4, r4, #253	@ 0xfd
   264a0:	2c01      	cmp	r4, #1
   264a2:	d01a      	beq.n	264da <dwt_ioctl+0x17ee>
   264a4:	43fb      	mvns	r3, r7
   264a6:	2200      	movs	r2, #0
   264a8:	9200      	str	r2, [sp, #0]
   264aa:	b2db      	uxtb	r3, r3
   264ac:	496a      	ldr	r1, [pc, #424]	@ (26658 <dwt_ioctl+0x196c>)
   264ae:	4630      	mov	r0, r6
   264b0:	f7fd fd76 	bl	23fa0 <dwt_modify8bitoffsetreg>
   264b4:	e005      	b.n	264c2 <dwt_ioctl+0x17d6>
   264b6:	463b      	mov	r3, r7
   264b8:	2200      	movs	r2, #0
   264ba:	4967      	ldr	r1, [pc, #412]	@ (26658 <dwt_ioctl+0x196c>)
   264bc:	4630      	mov	r0, r6
   264be:	f7fd f939 	bl	23734 <dwt_write8bitoffsetreg>
   264c2:	463b      	mov	r3, r7
   264c4:	2200      	movs	r2, #0
   264c6:	4965      	ldr	r1, [pc, #404]	@ (2665c <dwt_ioctl+0x1970>)
   264c8:	4630      	mov	r0, r6
   264ca:	f7fc ffa5 	bl	23418 <dwt_write32bitoffsetreg>
   264ce:	4628      	mov	r0, r5
   264d0:	f7f4 fc95 	bl	1adfe <decamutexoff>
   264d4:	2500      	movs	r5, #0
   264d6:	f7fe bcb3 	b.w	24e40 <dwt_ioctl+0x154>
   264da:	9700      	str	r7, [sp, #0]
   264dc:	23ff      	movs	r3, #255	@ 0xff
   264de:	2200      	movs	r2, #0
   264e0:	495d      	ldr	r1, [pc, #372]	@ (26658 <dwt_ioctl+0x196c>)
   264e2:	4630      	mov	r0, r6
   264e4:	f7fd fd5c 	bl	23fa0 <dwt_modify8bitoffsetreg>
   264e8:	e7eb      	b.n	264c2 <dwt_ioctl+0x17d6>
   264ea:	2302      	movs	r3, #2
   264ec:	9301      	str	r3, [sp, #4]
   264ee:	2500      	movs	r5, #0
   264f0:	9500      	str	r5, [sp, #0]
   264f2:	462b      	mov	r3, r5
   264f4:	462a      	mov	r2, r5
   264f6:	211a      	movs	r1, #26
   264f8:	f7fc fa91 	bl	22a1e <dwt_xfer3xxx>
   264fc:	f7fe bca0 	b.w	24e40 <dwt_ioctl+0x154>
   26500:	f7fe fbe0 	bl	24cc4 <ull_softreset_fcmd>
   26504:	2500      	movs	r5, #0
   26506:	f7fe bc9b 	b.w	24e40 <dwt_ioctl+0x154>
   2650a:	f7fe fbc7 	bl	24c9c <ull_softreset_no_sema_fcmd>
   2650e:	2500      	movs	r5, #0
   26510:	f7fe bc96 	b.w	24e40 <dwt_ioctl+0x154>
   26514:	2302      	movs	r3, #2
   26516:	9301      	str	r3, [sp, #4]
   26518:	2500      	movs	r5, #0
   2651a:	9500      	str	r5, [sp, #0]
   2651c:	462b      	mov	r3, r5
   2651e:	462a      	mov	r2, r5
   26520:	2114      	movs	r1, #20
   26522:	f7fc fa7c 	bl	22a1e <dwt_xfer3xxx>
   26526:	f7fe bc8b 	b.w	24e40 <dwt_ioctl+0x154>
   2652a:	2402      	movs	r4, #2
   2652c:	9401      	str	r4, [sp, #4]
   2652e:	2500      	movs	r5, #0
   26530:	9500      	str	r5, [sp, #0]
   26532:	462b      	mov	r3, r5
   26534:	462a      	mov	r2, r5
   26536:	2115      	movs	r1, #21
   26538:	f7fc fa71 	bl	22a1e <dwt_xfer3xxx>
   2653c:	9401      	str	r4, [sp, #4]
   2653e:	9500      	str	r5, [sp, #0]
   26540:	462b      	mov	r3, r5
   26542:	462a      	mov	r2, r5
   26544:	2115      	movs	r1, #21
   26546:	4630      	mov	r0, r6
   26548:	f7fc fa69 	bl	22a1e <dwt_xfer3xxx>
   2654c:	f7fe bc78 	b.w	24e40 <dwt_ioctl+0x154>
   26550:	2302      	movs	r3, #2
   26552:	9301      	str	r3, [sp, #4]
   26554:	2500      	movs	r5, #0
   26556:	9500      	str	r5, [sp, #0]
   26558:	462b      	mov	r3, r5
   2655a:	462a      	mov	r2, r5
   2655c:	2116      	movs	r1, #22
   2655e:	f7fc fa5e 	bl	22a1e <dwt_xfer3xxx>
   26562:	f7fe bc6d 	b.w	24e40 <dwt_ioctl+0x154>
   26566:	2c00      	cmp	r4, #0
   26568:	f000 839b 	beq.w	26ca2 <dwt_ioctl+0x1fb6>
   2656c:	b93a      	cbnz	r2, 2657e <dwt_ioctl+0x1892>
   2656e:	2200      	movs	r2, #0
   26570:	f44f 11d0 	mov.w	r1, #1703936	@ 0x1a0000
   26574:	f7fc fb03 	bl	22b7e <dwt_read8bitoffsetreg>
   26578:	7020      	strb	r0, [r4, #0]
   2657a:	f7fe bc61 	b.w	24e40 <dwt_ioctl+0x154>
   2657e:	2201      	movs	r2, #1
   26580:	f44f 11d0 	mov.w	r1, #1703936	@ 0x1a0000
   26584:	f7fc fafb 	bl	22b7e <dwt_read8bitoffsetreg>
   26588:	7020      	strb	r0, [r4, #0]
   2658a:	2500      	movs	r5, #0
   2658c:	f7fe bc58 	b.w	24e40 <dwt_ioctl+0x154>
   26590:	2c00      	cmp	r4, #0
   26592:	f000 8389 	beq.w	26ca8 <dwt_ioctl+0x1fbc>
   26596:	7824      	ldrb	r4, [r4, #0]
   26598:	2200      	movs	r2, #0
   2659a:	f44f 11d0 	mov.w	r1, #1703936	@ 0x1a0000
   2659e:	f7fc faee 	bl	22b7e <dwt_read8bitoffsetreg>
   265a2:	f000 039f 	and.w	r3, r0, #159	@ 0x9f
   265a6:	4323      	orrs	r3, r4
   265a8:	2200      	movs	r2, #0
   265aa:	f44f 11d0 	mov.w	r1, #1703936	@ 0x1a0000
   265ae:	4630      	mov	r0, r6
   265b0:	f7fd f8c0 	bl	23734 <dwt_write8bitoffsetreg>
   265b4:	2500      	movs	r5, #0
   265b6:	f7fe bc43 	b.w	24e40 <dwt_ioctl+0x154>
   265ba:	2c00      	cmp	r4, #0
   265bc:	f000 8377 	beq.w	26cae <dwt_ioctl+0x1fc2>
   265c0:	7824      	ldrb	r4, [r4, #0]
   265c2:	f012 05ff 	ands.w	r5, r2, #255	@ 0xff
   265c6:	d01e      	beq.n	26606 <dwt_ioctl+0x191a>
   265c8:	2d01      	cmp	r5, #1
   265ca:	f040 8373 	bne.w	26cb4 <dwt_ioctl+0x1fc8>
   265ce:	2502      	movs	r5, #2
   265d0:	2201      	movs	r2, #1
   265d2:	f44f 11d0 	mov.w	r1, #1703936	@ 0x1a0000
   265d6:	4630      	mov	r0, r6
   265d8:	f7fc fad1 	bl	22b7e <dwt_read8bitoffsetreg>
   265dc:	b9ac      	cbnz	r4, 2660a <dwt_ioctl+0x191e>
   265de:	ea20 0305 	bic.w	r3, r0, r5
   265e2:	b2db      	uxtb	r3, r3
   265e4:	2201      	movs	r2, #1
   265e6:	f44f 11d0 	mov.w	r1, #1703936	@ 0x1a0000
   265ea:	4630      	mov	r0, r6
   265ec:	f7fd f8a2 	bl	23734 <dwt_write8bitoffsetreg>
   265f0:	2200      	movs	r2, #0
   265f2:	2110      	movs	r1, #16
   265f4:	4630      	mov	r0, r6
   265f6:	f7fc fa9a 	bl	22b2e <dwt_read32bitoffsetreg>
   265fa:	f410 1f80 	tst.w	r0, #1048576	@ 0x100000
   265fe:	d00b      	beq.n	26618 <dwt_ioctl+0x192c>
   26600:	2500      	movs	r5, #0
   26602:	f7fe bc1d 	b.w	24e40 <dwt_ioctl+0x154>
   26606:	2504      	movs	r5, #4
   26608:	e7e2      	b.n	265d0 <dwt_ioctl+0x18e4>
   2660a:	2c01      	cmp	r4, #1
   2660c:	f040 8356 	bne.w	26cbc <dwt_ioctl+0x1fd0>
   26610:	ea40 0305 	orr.w	r3, r0, r5
   26614:	b2db      	uxtb	r3, r3
   26616:	e7e5      	b.n	265e4 <dwt_ioctl+0x18f8>
   26618:	f44f 1380 	mov.w	r3, #1048576	@ 0x100000
   2661c:	9300      	str	r3, [sp, #0]
   2661e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   26622:	2200      	movs	r2, #0
   26624:	2110      	movs	r1, #16
   26626:	4630      	mov	r0, r6
   26628:	f7fd fb48 	bl	23cbc <dwt_modify32bitoffsetreg>
   2662c:	2500      	movs	r5, #0
   2662e:	f7fe bc07 	b.w	24e40 <dwt_ioctl+0x154>
   26632:	2c00      	cmp	r4, #0
   26634:	f000 8346 	beq.w	26cc4 <dwt_ioctl+0x1fd8>
   26638:	7823      	ldrb	r3, [r4, #0]
   2663a:	035b      	lsls	r3, r3, #13
   2663c:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
   26640:	9300      	str	r3, [sp, #0]
   26642:	f64d 73ff 	movw	r3, #57343	@ 0xdfff
   26646:	2200      	movs	r2, #0
   26648:	4905      	ldr	r1, [pc, #20]	@ (26660 <dwt_ioctl+0x1974>)
   2664a:	f7fd fec5 	bl	243d8 <dwt_modify16bitoffsetreg>
   2664e:	2500      	movs	r5, #0
   26650:	f7fe bbf6 	b.w	24e40 <dwt_ioctl+0x154>
   26654:	0002c460 	.word	0x0002c460
   26658:	0001001c 	.word	0x0001001c
   2665c:	00010018 	.word	0x00010018
   26660:	000e000c 	.word	0x000e000c
   26664:	0002c3e0 	.word	0x0002c3e0
   26668:	0002c420 	.word	0x0002c420
   2666c:	2c00      	cmp	r4, #0
   2666e:	f000 832c 	beq.w	26cca <dwt_ioctl+0x1fde>
   26672:	7825      	ldrb	r5, [r4, #0]
   26674:	6862      	ldr	r2, [r4, #4]
   26676:	2a01      	cmp	r2, #1
   26678:	bf15      	itete	ne
   2667a:	f46f 3360 	mvnne.w	r3, #229376	@ 0x38000
   2667e:	f46f 43e0 	mvneq.w	r3, #28672	@ 0x7000
   26682:	27df      	movne	r7, #223	@ 0xdf
   26684:	27ef      	moveq	r7, #239	@ 0xef
   26686:	bf14      	ite	ne
   26688:	f04f 0820 	movne.w	r8, #32
   2668c:	f04f 0810 	moveq.w	r8, #16
   26690:	2400      	movs	r4, #0
   26692:	9400      	str	r4, [sp, #0]
   26694:	4622      	mov	r2, r4
   26696:	f44f 21a0 	mov.w	r1, #327680	@ 0x50000
   2669a:	f7fd fb0f 	bl	23cbc <dwt_modify32bitoffsetreg>
   2669e:	9400      	str	r4, [sp, #0]
   266a0:	463b      	mov	r3, r7
   266a2:	4622      	mov	r2, r4
   266a4:	49be      	ldr	r1, [pc, #760]	@ (269a0 <dwt_ioctl+0x1cb4>)
   266a6:	4630      	mov	r0, r6
   266a8:	f7fd fc7a 	bl	23fa0 <dwt_modify8bitoffsetreg>
   266ac:	2d01      	cmp	r5, #1
   266ae:	d003      	beq.n	266b8 <dwt_ioctl+0x19cc>
   266b0:	b165      	cbz	r5, 266cc <dwt_ioctl+0x19e0>
   266b2:	2500      	movs	r5, #0
   266b4:	f7fe bbc4 	b.w	24e40 <dwt_ioctl+0x154>
   266b8:	4625      	mov	r5, r4
   266ba:	9400      	str	r4, [sp, #0]
   266bc:	463b      	mov	r3, r7
   266be:	4622      	mov	r2, r4
   266c0:	49b8      	ldr	r1, [pc, #736]	@ (269a4 <dwt_ioctl+0x1cb8>)
   266c2:	4630      	mov	r0, r6
   266c4:	f7fd fc6c 	bl	23fa0 <dwt_modify8bitoffsetreg>
   266c8:	f7fe bbba 	b.w	24e40 <dwt_ioctl+0x154>
   266cc:	f8cd 8000 	str.w	r8, [sp]
   266d0:	23ff      	movs	r3, #255	@ 0xff
   266d2:	2200      	movs	r2, #0
   266d4:	49b3      	ldr	r1, [pc, #716]	@ (269a4 <dwt_ioctl+0x1cb8>)
   266d6:	4630      	mov	r0, r6
   266d8:	f7fd fc62 	bl	23fa0 <dwt_modify8bitoffsetreg>
   266dc:	f7fe bbb0 	b.w	24e40 <dwt_ioctl+0x154>
   266e0:	2c00      	cmp	r4, #0
   266e2:	f000 82f5 	beq.w	26cd0 <dwt_ioctl+0x1fe4>
   266e6:	7822      	ldrb	r2, [r4, #0]
   266e8:	f012 0f01 	tst.w	r2, #1
   266ec:	d02d      	beq.n	2674a <dwt_ioctl+0x1a5e>
   266ee:	0157      	lsls	r7, r2, #5
   266f0:	f007 0740 	and.w	r7, r7, #64	@ 0x40
   266f4:	2440      	movs	r4, #64	@ 0x40
   266f6:	f44f 13e0 	mov.w	r3, #1835008	@ 0x1c0000
   266fa:	f012 0f04 	tst.w	r2, #4
   266fe:	d028      	beq.n	26752 <dwt_ioctl+0x1a66>
   26700:	f443 0360 	orr.w	r3, r3, #14680064	@ 0xe00000
   26704:	f044 0480 	orr.w	r4, r4, #128	@ 0x80
   26708:	0112      	lsls	r2, r2, #4
   2670a:	f002 0280 	and.w	r2, r2, #128	@ 0x80
   2670e:	4317      	orrs	r7, r2
   26710:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
   26714:	9200      	str	r2, [sp, #0]
   26716:	43db      	mvns	r3, r3
   26718:	2200      	movs	r2, #0
   2671a:	f44f 21a0 	mov.w	r1, #327680	@ 0x50000
   2671e:	4630      	mov	r0, r6
   26720:	f7fd facc 	bl	23cbc <dwt_modify32bitoffsetreg>
   26724:	43e4      	mvns	r4, r4
   26726:	b2a4      	uxth	r4, r4
   26728:	2500      	movs	r5, #0
   2672a:	9500      	str	r5, [sp, #0]
   2672c:	4623      	mov	r3, r4
   2672e:	462a      	mov	r2, r5
   26730:	499b      	ldr	r1, [pc, #620]	@ (269a0 <dwt_ioctl+0x1cb4>)
   26732:	4630      	mov	r0, r6
   26734:	f7fd fe50 	bl	243d8 <dwt_modify16bitoffsetreg>
   26738:	9700      	str	r7, [sp, #0]
   2673a:	4623      	mov	r3, r4
   2673c:	462a      	mov	r2, r5
   2673e:	4999      	ldr	r1, [pc, #612]	@ (269a4 <dwt_ioctl+0x1cb8>)
   26740:	4630      	mov	r0, r6
   26742:	f7fd fe49 	bl	243d8 <dwt_modify16bitoffsetreg>
   26746:	f7fe bb7b 	b.w	24e40 <dwt_ioctl+0x154>
   2674a:	2700      	movs	r7, #0
   2674c:	463c      	mov	r4, r7
   2674e:	463b      	mov	r3, r7
   26750:	e7d3      	b.n	266fa <dwt_ioctl+0x1a0e>
   26752:	2200      	movs	r2, #0
   26754:	e7de      	b.n	26714 <dwt_ioctl+0x1a28>
   26756:	2308      	movs	r3, #8
   26758:	9300      	str	r3, [sp, #0]
   2675a:	23ff      	movs	r3, #255	@ 0xff
   2675c:	2201      	movs	r2, #1
   2675e:	f44f 2180 	mov.w	r1, #262144	@ 0x40000
   26762:	f7fd fc1d 	bl	23fa0 <dwt_modify8bitoffsetreg>
   26766:	4c90      	ldr	r4, [pc, #576]	@ (269a8 <dwt_ioctl+0x1cbc>)
   26768:	2302      	movs	r3, #2
   2676a:	9300      	str	r3, [sp, #0]
   2676c:	23ff      	movs	r3, #255	@ 0xff
   2676e:	2203      	movs	r2, #3
   26770:	4621      	mov	r1, r4
   26772:	4630      	mov	r0, r6
   26774:	f7fd fc14 	bl	23fa0 <dwt_modify8bitoffsetreg>
   26778:	2500      	movs	r5, #0
   2677a:	9500      	str	r5, [sp, #0]
   2677c:	23f7      	movs	r3, #247	@ 0xf7
   2677e:	2201      	movs	r2, #1
   26780:	f44f 2180 	mov.w	r1, #262144	@ 0x40000
   26784:	4630      	mov	r0, r6
   26786:	f7fd fc0b 	bl	23fa0 <dwt_modify8bitoffsetreg>
   2678a:	9500      	str	r5, [sp, #0]
   2678c:	23fd      	movs	r3, #253	@ 0xfd
   2678e:	2203      	movs	r2, #3
   26790:	4621      	mov	r1, r4
   26792:	4630      	mov	r0, r6
   26794:	f7fd fc04 	bl	23fa0 <dwt_modify8bitoffsetreg>
   26798:	f7fe bb52 	b.w	24e40 <dwt_ioctl+0x154>
   2679c:	2c00      	cmp	r4, #0
   2679e:	f000 829a 	beq.w	26cd6 <dwt_ioctl+0x1fea>
   267a2:	8863      	ldrh	r3, [r4, #2]
   267a4:	00db      	lsls	r3, r3, #3
   267a6:	f403 63ff 	and.w	r3, r3, #2040	@ 0x7f8
   267aa:	7822      	ldrb	r2, [r4, #0]
   267ac:	b10a      	cbz	r2, 267b2 <dwt_ioctl+0x1ac6>
   267ae:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
   267b2:	9300      	str	r3, [sp, #0]
   267b4:	f24f 0307 	movw	r3, #61447	@ 0xf007
   267b8:	2200      	movs	r2, #0
   267ba:	f44f 2180 	mov.w	r1, #262144	@ 0x40000
   267be:	4630      	mov	r0, r6
   267c0:	f7fd fe0a 	bl	243d8 <dwt_modify16bitoffsetreg>
   267c4:	2500      	movs	r5, #0
   267c6:	f7fe bb3b 	b.w	24e40 <dwt_ioctl+0x154>
   267ca:	2c00      	cmp	r4, #0
   267cc:	f000 8286 	beq.w	26cdc <dwt_ioctl+0x1ff0>
   267d0:	b2e3      	uxtb	r3, r4
   267d2:	1c9a      	adds	r2, r3, #2
   267d4:	2301      	movs	r3, #1
   267d6:	4093      	lsls	r3, r2
   267d8:	3b01      	subs	r3, #1
   267da:	b2db      	uxtb	r3, r3
   267dc:	2200      	movs	r2, #0
   267de:	f44f 3100 	mov.w	r1, #131072	@ 0x20000
   267e2:	f7fc ffa7 	bl	23734 <dwt_write8bitoffsetreg>
   267e6:	2500      	movs	r5, #0
   267e8:	f7fe bb2a 	b.w	24e40 <dwt_ioctl+0x154>
   267ec:	2c00      	cmp	r4, #0
   267ee:	f000 8278 	beq.w	26ce2 <dwt_ioctl+0x1ff6>
   267f2:	7ae3      	ldrb	r3, [r4, #11]
   267f4:	2b00      	cmp	r3, #0
   267f6:	f000 8277 	beq.w	26ce8 <dwt_ioctl+0x1ffc>
   267fa:	7b63      	ldrb	r3, [r4, #13]
   267fc:	2b01      	cmp	r3, #1
   267fe:	d921      	bls.n	26844 <dwt_ioctl+0x1b58>
   26800:	7b22      	ldrb	r2, [r4, #12]
   26802:	4b6a      	ldr	r3, [pc, #424]	@ (269ac <dwt_ioctl+0x1cc0>)
   26804:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
   26808:	0112      	lsls	r2, r2, #4
   2680a:	0ad3      	lsrs	r3, r2, #11
   2680c:	f3c2 020a 	ubfx	r2, r2, #0, #11
   26810:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
   26814:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
   26818:	bf28      	it	cs
   2681a:	3301      	addcs	r3, #1
   2681c:	b29b      	uxth	r3, r3
   2681e:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
   26822:	9300      	str	r3, [sp, #0]
   26824:	f64f 7380 	movw	r3, #65408	@ 0xff80
   26828:	2202      	movs	r2, #2
   2682a:	4961      	ldr	r1, [pc, #388]	@ (269b0 <dwt_ioctl+0x1cc4>)
   2682c:	4630      	mov	r0, r6
   2682e:	f7fd fdd3 	bl	243d8 <dwt_modify16bitoffsetreg>
   26832:	2394      	movs	r3, #148	@ 0x94
   26834:	2200      	movs	r2, #0
   26836:	495f      	ldr	r1, [pc, #380]	@ (269b4 <dwt_ioctl+0x1cc8>)
   26838:	4630      	mov	r0, r6
   2683a:	f7fc ff7b 	bl	23734 <dwt_write8bitoffsetreg>
   2683e:	2500      	movs	r5, #0
   26840:	f7fe bafe 	b.w	24e40 <dwt_ioctl+0x154>
   26844:	7b22      	ldrb	r2, [r4, #12]
   26846:	4b59      	ldr	r3, [pc, #356]	@ (269ac <dwt_ioctl+0x1cc0>)
   26848:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
   2684c:	f44f 6235 	mov.w	r2, #2896	@ 0xb50
   26850:	fb02 f203 	mul.w	r2, r2, r3
   26854:	0c93      	lsrs	r3, r2, #18
   26856:	f3c2 12ca 	ubfx	r2, r2, #7, #11
   2685a:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
   2685e:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
   26862:	bf28      	it	cs
   26864:	3301      	addcs	r3, #1
   26866:	b29b      	uxth	r3, r3
   26868:	e7d9      	b.n	2681e <dwt_ioctl+0x1b32>
   2686a:	2c00      	cmp	r4, #0
   2686c:	f000 823f 	beq.w	26cee <dwt_ioctl+0x2002>
   26870:	2200      	movs	r2, #0
   26872:	4951      	ldr	r1, [pc, #324]	@ (269b8 <dwt_ioctl+0x1ccc>)
   26874:	f7fc f95b 	bl	22b2e <dwt_read32bitoffsetreg>
   26878:	6020      	str	r0, [r4, #0]
   2687a:	2500      	movs	r5, #0
   2687c:	f7fe bae0 	b.w	24e40 <dwt_ioctl+0x154>
   26880:	2c00      	cmp	r4, #0
   26882:	f000 8237 	beq.w	26cf4 <dwt_ioctl+0x2008>
   26886:	2200      	movs	r2, #0
   26888:	494c      	ldr	r1, [pc, #304]	@ (269bc <dwt_ioctl+0x1cd0>)
   2688a:	f7fc f950 	bl	22b2e <dwt_read32bitoffsetreg>
   2688e:	6020      	str	r0, [r4, #0]
   26890:	2500      	movs	r5, #0
   26892:	f7fe bad5 	b.w	24e40 <dwt_ioctl+0x154>
   26896:	2c00      	cmp	r4, #0
   26898:	f000 822f 	beq.w	26cfa <dwt_ioctl+0x200e>
   2689c:	f44f 13a8 	mov.w	r3, #1376256	@ 0x150000
   268a0:	6023      	str	r3, [r4, #0]
   268a2:	2500      	movs	r5, #0
   268a4:	f7fe bacc 	b.w	24e40 <dwt_ioctl+0x154>
   268a8:	2c00      	cmp	r4, #0
   268aa:	f000 8229 	beq.w	26d00 <dwt_ioctl+0x2014>
   268ae:	2500      	movs	r5, #0
   268b0:	950b      	str	r5, [sp, #44]	@ 0x2c
   268b2:	af10      	add	r7, sp, #64	@ 0x40
   268b4:	2319      	movs	r3, #25
   268b6:	f847 3d10 	str.w	r3, [r7, #-16]!
   268ba:	9700      	str	r7, [sp, #0]
   268bc:	2304      	movs	r3, #4
   268be:	462a      	mov	r2, r5
   268c0:	493f      	ldr	r1, [pc, #252]	@ (269c0 <dwt_ioctl+0x1cd4>)
   268c2:	f7fc fd41 	bl	23348 <dwt_writetodevice>
   268c6:	f641 7348 	movw	r3, #8008	@ 0x1f48
   268ca:	930c      	str	r3, [sp, #48]	@ 0x30
   268cc:	9700      	str	r7, [sp, #0]
   268ce:	2304      	movs	r3, #4
   268d0:	462a      	mov	r2, r5
   268d2:	493c      	ldr	r1, [pc, #240]	@ (269c4 <dwt_ioctl+0x1cd8>)
   268d4:	4630      	mov	r0, r6
   268d6:	f7fc fd37 	bl	23348 <dwt_writetodevice>
   268da:	ab0b      	add	r3, sp, #44	@ 0x2c
   268dc:	9300      	str	r3, [sp, #0]
   268de:	2304      	movs	r3, #4
   268e0:	462a      	mov	r2, r5
   268e2:	f44f 11e8 	mov.w	r1, #1900544	@ 0x1d0000
   268e6:	4630      	mov	r0, r6
   268e8:	f7fc f917 	bl	22b1a <dwt_readfromdevice>
   268ec:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
   268ee:	6023      	str	r3, [r4, #0]
   268f0:	f7fe baa6 	b.w	24e40 <dwt_ioctl+0x154>
   268f4:	2c00      	cmp	r4, #0
   268f6:	f000 8206 	beq.w	26d06 <dwt_ioctl+0x201a>
   268fa:	2200      	movs	r2, #0
   268fc:	4932      	ldr	r1, [pc, #200]	@ (269c8 <dwt_ioctl+0x1cdc>)
   268fe:	f7fc f916 	bl	22b2e <dwt_read32bitoffsetreg>
   26902:	b280      	uxth	r0, r0
   26904:	6020      	str	r0, [r4, #0]
   26906:	2200      	movs	r2, #0
   26908:	4930      	ldr	r1, [pc, #192]	@ (269cc <dwt_ioctl+0x1ce0>)
   2690a:	4630      	mov	r0, r6
   2690c:	f7fc f90f 	bl	22b2e <dwt_read32bitoffsetreg>
   26910:	0d43      	lsrs	r3, r0, #21
   26912:	019b      	lsls	r3, r3, #6
   26914:	b29b      	uxth	r3, r3
   26916:	6063      	str	r3, [r4, #4]
   26918:	2500      	movs	r5, #0
   2691a:	f7fe ba91 	b.w	24e40 <dwt_ioctl+0x154>
   2691e:	2c00      	cmp	r4, #0
   26920:	f000 81f4 	beq.w	26d0c <dwt_ioctl+0x2020>
   26924:	7d63      	ldrb	r3, [r4, #21]
   26926:	b133      	cbz	r3, 26936 <dwt_ioctl+0x1c4a>
   26928:	2b01      	cmp	r3, #1
   2692a:	d05b      	beq.n	269e4 <dwt_ioctl+0x1cf8>
   2692c:	2b02      	cmp	r3, #2
   2692e:	f000 8082 	beq.w	26a36 <dwt_ioctl+0x1d4a>
   26932:	23ff      	movs	r3, #255	@ 0xff
   26934:	e02f      	b.n	26996 <dwt_ioctl+0x1caa>
   26936:	2200      	movs	r2, #0
   26938:	4925      	ldr	r1, [pc, #148]	@ (269d0 <dwt_ioctl+0x1ce4>)
   2693a:	f7fc f8f8 	bl	22b2e <dwt_read32bitoffsetreg>
   2693e:	f3c0 000b 	ubfx	r0, r0, #0, #12
   26942:	6020      	str	r0, [r4, #0]
   26944:	2200      	movs	r2, #0
   26946:	4923      	ldr	r1, [pc, #140]	@ (269d4 <dwt_ioctl+0x1ce8>)
   26948:	4630      	mov	r0, r6
   2694a:	f7fc f8f0 	bl	22b2e <dwt_read32bitoffsetreg>
   2694e:	f3c0 0015 	ubfx	r0, r0, #0, #22
   26952:	6060      	str	r0, [r4, #4]
   26954:	2200      	movs	r2, #0
   26956:	4920      	ldr	r1, [pc, #128]	@ (269d8 <dwt_ioctl+0x1cec>)
   26958:	4630      	mov	r0, r6
   2695a:	f7fc f8e8 	bl	22b2e <dwt_read32bitoffsetreg>
   2695e:	f3c0 0015 	ubfx	r0, r0, #0, #22
   26962:	60a0      	str	r0, [r4, #8]
   26964:	2200      	movs	r2, #0
   26966:	491d      	ldr	r1, [pc, #116]	@ (269dc <dwt_ioctl+0x1cf0>)
   26968:	4630      	mov	r0, r6
   2696a:	f7fc f8e0 	bl	22b2e <dwt_read32bitoffsetreg>
   2696e:	f3c0 0015 	ubfx	r0, r0, #0, #22
   26972:	60e0      	str	r0, [r4, #12]
   26974:	2200      	movs	r2, #0
   26976:	491a      	ldr	r1, [pc, #104]	@ (269e0 <dwt_ioctl+0x1cf4>)
   26978:	4630      	mov	r0, r6
   2697a:	f7fc f8d8 	bl	22b2e <dwt_read32bitoffsetreg>
   2697e:	f3c0 0013 	ubfx	r0, r0, #0, #20
   26982:	6120      	str	r0, [r4, #16]
   26984:	2203      	movs	r2, #3
   26986:	490c      	ldr	r1, [pc, #48]	@ (269b8 <dwt_ioctl+0x1ccc>)
   26988:	4630      	mov	r0, r6
   2698a:	f7fc f8f8 	bl	22b7e <dwt_read8bitoffsetreg>
   2698e:	f3c0 1002 	ubfx	r0, r0, #4, #3
   26992:	7520      	strb	r0, [r4, #20]
   26994:	2300      	movs	r3, #0
   26996:	75a3      	strb	r3, [r4, #22]
   26998:	2500      	movs	r5, #0
   2699a:	f7fe ba51 	b.w	24e40 <dwt_ioctl+0x154>
   2699e:	bf00      	nop
   269a0:	00050008 	.word	0x00050008
   269a4:	0005000c 	.word	0x0005000c
   269a8:	00110008 	.word	0x00110008
   269ac:	0002c46c 	.word	0x0002c46c
   269b0:	000e0014 	.word	0x000e0014
   269b4:	000e0018 	.word	0x000e0018
   269b8:	00030060 	.word	0x00030060
   269bc:	000f004c 	.word	0x000f004c
   269c0:	001f0004 	.word	0x001f0004
   269c4:	001f0008 	.word	0x001f0008
   269c8:	000c0048 	.word	0x000c0048
   269cc:	000c0028 	.word	0x000c0028
   269d0:	000c0058 	.word	0x000c0058
   269d4:	000c0030 	.word	0x000c0030
   269d8:	000c0034 	.word	0x000c0034
   269dc:	000c0038 	.word	0x000c0038
   269e0:	000c002c 	.word	0x000c002c
   269e4:	2200      	movs	r2, #0
   269e6:	49d4      	ldr	r1, [pc, #848]	@ (26d38 <dwt_ioctl+0x204c>)
   269e8:	f7fc f8a1 	bl	22b2e <dwt_read32bitoffsetreg>
   269ec:	f3c0 000b 	ubfx	r0, r0, #0, #12
   269f0:	6020      	str	r0, [r4, #0]
   269f2:	2200      	movs	r2, #0
   269f4:	49d1      	ldr	r1, [pc, #836]	@ (26d3c <dwt_ioctl+0x2050>)
   269f6:	4630      	mov	r0, r6
   269f8:	f7fc f899 	bl	22b2e <dwt_read32bitoffsetreg>
   269fc:	f3c0 0015 	ubfx	r0, r0, #0, #22
   26a00:	6060      	str	r0, [r4, #4]
   26a02:	2200      	movs	r2, #0
   26a04:	49ce      	ldr	r1, [pc, #824]	@ (26d40 <dwt_ioctl+0x2054>)
   26a06:	4630      	mov	r0, r6
   26a08:	f7fc f891 	bl	22b2e <dwt_read32bitoffsetreg>
   26a0c:	f3c0 0015 	ubfx	r0, r0, #0, #22
   26a10:	60a0      	str	r0, [r4, #8]
   26a12:	2200      	movs	r2, #0
   26a14:	f44f 2150 	mov.w	r1, #851968	@ 0xd0000
   26a18:	4630      	mov	r0, r6
   26a1a:	f7fc f888 	bl	22b2e <dwt_read32bitoffsetreg>
   26a1e:	f3c0 0015 	ubfx	r0, r0, #0, #22
   26a22:	60e0      	str	r0, [r4, #12]
   26a24:	2200      	movs	r2, #0
   26a26:	49c7      	ldr	r1, [pc, #796]	@ (26d44 <dwt_ioctl+0x2058>)
   26a28:	4630      	mov	r0, r6
   26a2a:	f7fc f880 	bl	22b2e <dwt_read32bitoffsetreg>
   26a2e:	f3c0 0013 	ubfx	r0, r0, #0, #20
   26a32:	6120      	str	r0, [r4, #16]
   26a34:	e7a6      	b.n	26984 <dwt_ioctl+0x1c98>
   26a36:	2200      	movs	r2, #0
   26a38:	49c3      	ldr	r1, [pc, #780]	@ (26d48 <dwt_ioctl+0x205c>)
   26a3a:	f7fc f878 	bl	22b2e <dwt_read32bitoffsetreg>
   26a3e:	f3c0 000b 	ubfx	r0, r0, #0, #12
   26a42:	6020      	str	r0, [r4, #0]
   26a44:	2200      	movs	r2, #0
   26a46:	49c1      	ldr	r1, [pc, #772]	@ (26d4c <dwt_ioctl+0x2060>)
   26a48:	4630      	mov	r0, r6
   26a4a:	f7fc f870 	bl	22b2e <dwt_read32bitoffsetreg>
   26a4e:	f3c0 0015 	ubfx	r0, r0, #0, #22
   26a52:	6060      	str	r0, [r4, #4]
   26a54:	2200      	movs	r2, #0
   26a56:	49be      	ldr	r1, [pc, #760]	@ (26d50 <dwt_ioctl+0x2064>)
   26a58:	4630      	mov	r0, r6
   26a5a:	f7fc f868 	bl	22b2e <dwt_read32bitoffsetreg>
   26a5e:	f3c0 0015 	ubfx	r0, r0, #0, #22
   26a62:	60a0      	str	r0, [r4, #8]
   26a64:	2200      	movs	r2, #0
   26a66:	49bb      	ldr	r1, [pc, #748]	@ (26d54 <dwt_ioctl+0x2068>)
   26a68:	4630      	mov	r0, r6
   26a6a:	f7fc f860 	bl	22b2e <dwt_read32bitoffsetreg>
   26a6e:	f3c0 0015 	ubfx	r0, r0, #0, #22
   26a72:	60e0      	str	r0, [r4, #12]
   26a74:	2200      	movs	r2, #0
   26a76:	49b8      	ldr	r1, [pc, #736]	@ (26d58 <dwt_ioctl+0x206c>)
   26a78:	4630      	mov	r0, r6
   26a7a:	f7fc f858 	bl	22b2e <dwt_read32bitoffsetreg>
   26a7e:	f3c0 0013 	ubfx	r0, r0, #0, #20
   26a82:	6120      	str	r0, [r4, #16]
   26a84:	e77e      	b.n	26984 <dwt_ioctl+0x1c98>
   26a86:	2500      	movs	r5, #0
   26a88:	f7fe b9da 	b.w	24e40 <dwt_ioctl+0x154>
   26a8c:	2500      	movs	r5, #0
   26a8e:	f7fe b9d7 	b.w	24e40 <dwt_ioctl+0x154>
   26a92:	2500      	movs	r5, #0
   26a94:	f7fe b9d4 	b.w	24e40 <dwt_ioctl+0x154>
   26a98:	2500      	movs	r5, #0
   26a9a:	f7fe b9d1 	b.w	24e40 <dwt_ioctl+0x154>
   26a9e:	2500      	movs	r5, #0
   26aa0:	f7fe b9ce 	b.w	24e40 <dwt_ioctl+0x154>
   26aa4:	2500      	movs	r5, #0
   26aa6:	f7fe b9cb 	b.w	24e40 <dwt_ioctl+0x154>
   26aaa:	2500      	movs	r5, #0
   26aac:	f7fe b9c8 	b.w	24e40 <dwt_ioctl+0x154>
   26ab0:	2500      	movs	r5, #0
   26ab2:	f7fe b9c5 	b.w	24e40 <dwt_ioctl+0x154>
   26ab6:	2500      	movs	r5, #0
   26ab8:	f7fe b9c2 	b.w	24e40 <dwt_ioctl+0x154>
   26abc:	2500      	movs	r5, #0
   26abe:	f7fe b9bf 	b.w	24e40 <dwt_ioctl+0x154>
   26ac2:	2500      	movs	r5, #0
   26ac4:	f7fe b9bc 	b.w	24e40 <dwt_ioctl+0x154>
   26ac8:	2500      	movs	r5, #0
   26aca:	f7fe b9b9 	b.w	24e40 <dwt_ioctl+0x154>
   26ace:	2500      	movs	r5, #0
   26ad0:	f7fe b9b6 	b.w	24e40 <dwt_ioctl+0x154>
   26ad4:	2500      	movs	r5, #0
   26ad6:	f7fe b9b3 	b.w	24e40 <dwt_ioctl+0x154>
   26ada:	2500      	movs	r5, #0
   26adc:	f7fe b9b0 	b.w	24e40 <dwt_ioctl+0x154>
   26ae0:	2500      	movs	r5, #0
   26ae2:	f7fe b9ad 	b.w	24e40 <dwt_ioctl+0x154>
   26ae6:	2500      	movs	r5, #0
   26ae8:	f7fe b9aa 	b.w	24e40 <dwt_ioctl+0x154>
   26aec:	2500      	movs	r5, #0
   26aee:	f7fe b9a7 	b.w	24e40 <dwt_ioctl+0x154>
   26af2:	2500      	movs	r5, #0
   26af4:	f7fe b9a4 	b.w	24e40 <dwt_ioctl+0x154>
   26af8:	2500      	movs	r5, #0
   26afa:	f7fe b9a1 	b.w	24e40 <dwt_ioctl+0x154>
   26afe:	2500      	movs	r5, #0
   26b00:	f7fe b99e 	b.w	24e40 <dwt_ioctl+0x154>
   26b04:	2500      	movs	r5, #0
   26b06:	f7fe b99b 	b.w	24e40 <dwt_ioctl+0x154>
   26b0a:	2500      	movs	r5, #0
   26b0c:	f7fe b998 	b.w	24e40 <dwt_ioctl+0x154>
   26b10:	2500      	movs	r5, #0
   26b12:	f7fe b995 	b.w	24e40 <dwt_ioctl+0x154>
   26b16:	2500      	movs	r5, #0
   26b18:	f7fe b992 	b.w	24e40 <dwt_ioctl+0x154>
   26b1c:	2500      	movs	r5, #0
   26b1e:	f7fe b98f 	b.w	24e40 <dwt_ioctl+0x154>
   26b22:	2500      	movs	r5, #0
   26b24:	f7fe b98c 	b.w	24e40 <dwt_ioctl+0x154>
   26b28:	2500      	movs	r5, #0
   26b2a:	f7fe b989 	b.w	24e40 <dwt_ioctl+0x154>
   26b2e:	2500      	movs	r5, #0
   26b30:	f7fe b986 	b.w	24e40 <dwt_ioctl+0x154>
   26b34:	2500      	movs	r5, #0
   26b36:	f7fe b983 	b.w	24e40 <dwt_ioctl+0x154>
   26b3a:	2500      	movs	r5, #0
   26b3c:	f7fe b980 	b.w	24e40 <dwt_ioctl+0x154>
   26b40:	2500      	movs	r5, #0
   26b42:	f7fe b97d 	b.w	24e40 <dwt_ioctl+0x154>
   26b46:	2500      	movs	r5, #0
   26b48:	f7fe b97a 	b.w	24e40 <dwt_ioctl+0x154>
   26b4c:	2500      	movs	r5, #0
   26b4e:	f7fe b977 	b.w	24e40 <dwt_ioctl+0x154>
   26b52:	2500      	movs	r5, #0
   26b54:	f7fe b974 	b.w	24e40 <dwt_ioctl+0x154>
   26b58:	2500      	movs	r5, #0
   26b5a:	f7fe b971 	b.w	24e40 <dwt_ioctl+0x154>
   26b5e:	2500      	movs	r5, #0
   26b60:	f7fe b96e 	b.w	24e40 <dwt_ioctl+0x154>
   26b64:	2500      	movs	r5, #0
   26b66:	f7fe b96b 	b.w	24e40 <dwt_ioctl+0x154>
   26b6a:	2500      	movs	r5, #0
   26b6c:	f7fe b968 	b.w	24e40 <dwt_ioctl+0x154>
   26b70:	2500      	movs	r5, #0
   26b72:	f7fe b965 	b.w	24e40 <dwt_ioctl+0x154>
   26b76:	2500      	movs	r5, #0
   26b78:	f7fe b962 	b.w	24e40 <dwt_ioctl+0x154>
   26b7c:	2500      	movs	r5, #0
   26b7e:	f7fe b95f 	b.w	24e40 <dwt_ioctl+0x154>
   26b82:	2500      	movs	r5, #0
   26b84:	f7fe b95c 	b.w	24e40 <dwt_ioctl+0x154>
   26b88:	2500      	movs	r5, #0
   26b8a:	f7fe b959 	b.w	24e40 <dwt_ioctl+0x154>
   26b8e:	2500      	movs	r5, #0
   26b90:	f7fe b956 	b.w	24e40 <dwt_ioctl+0x154>
   26b94:	2500      	movs	r5, #0
   26b96:	f7fe b953 	b.w	24e40 <dwt_ioctl+0x154>
   26b9a:	2500      	movs	r5, #0
   26b9c:	f7fe b950 	b.w	24e40 <dwt_ioctl+0x154>
   26ba0:	2500      	movs	r5, #0
   26ba2:	f7fe b94d 	b.w	24e40 <dwt_ioctl+0x154>
   26ba6:	2500      	movs	r5, #0
   26ba8:	f7fe b94a 	b.w	24e40 <dwt_ioctl+0x154>
   26bac:	2500      	movs	r5, #0
   26bae:	f7fe b947 	b.w	24e40 <dwt_ioctl+0x154>
   26bb2:	2500      	movs	r5, #0
   26bb4:	f7fe b944 	b.w	24e40 <dwt_ioctl+0x154>
   26bb8:	2500      	movs	r5, #0
   26bba:	f7fe b941 	b.w	24e40 <dwt_ioctl+0x154>
   26bbe:	2500      	movs	r5, #0
   26bc0:	f7fe b93e 	b.w	24e40 <dwt_ioctl+0x154>
   26bc4:	2500      	movs	r5, #0
   26bc6:	f7fe b93b 	b.w	24e40 <dwt_ioctl+0x154>
   26bca:	2500      	movs	r5, #0
   26bcc:	f7fe b938 	b.w	24e40 <dwt_ioctl+0x154>
   26bd0:	2500      	movs	r5, #0
   26bd2:	f7fe b935 	b.w	24e40 <dwt_ioctl+0x154>
   26bd6:	2500      	movs	r5, #0
   26bd8:	f7fe b932 	b.w	24e40 <dwt_ioctl+0x154>
   26bdc:	2500      	movs	r5, #0
   26bde:	f7fe b92f 	b.w	24e40 <dwt_ioctl+0x154>
   26be2:	2500      	movs	r5, #0
   26be4:	f7fe b92c 	b.w	24e40 <dwt_ioctl+0x154>
   26be8:	2500      	movs	r5, #0
   26bea:	f7fe b929 	b.w	24e40 <dwt_ioctl+0x154>
   26bee:	2500      	movs	r5, #0
   26bf0:	f7fe b926 	b.w	24e40 <dwt_ioctl+0x154>
   26bf4:	2500      	movs	r5, #0
   26bf6:	f7fe b923 	b.w	24e40 <dwt_ioctl+0x154>
   26bfa:	2500      	movs	r5, #0
   26bfc:	f7fe b920 	b.w	24e40 <dwt_ioctl+0x154>
   26c00:	2500      	movs	r5, #0
   26c02:	f7fe b91d 	b.w	24e40 <dwt_ioctl+0x154>
   26c06:	2500      	movs	r5, #0
   26c08:	f7fe b91a 	b.w	24e40 <dwt_ioctl+0x154>
   26c0c:	2500      	movs	r5, #0
   26c0e:	f7fe b917 	b.w	24e40 <dwt_ioctl+0x154>
   26c12:	2500      	movs	r5, #0
   26c14:	f7fe b914 	b.w	24e40 <dwt_ioctl+0x154>
   26c18:	2500      	movs	r5, #0
   26c1a:	f7fe b911 	b.w	24e40 <dwt_ioctl+0x154>
   26c1e:	2500      	movs	r5, #0
   26c20:	f7fe b90e 	b.w	24e40 <dwt_ioctl+0x154>
   26c24:	2500      	movs	r5, #0
   26c26:	f7fe b90b 	b.w	24e40 <dwt_ioctl+0x154>
   26c2a:	2500      	movs	r5, #0
   26c2c:	f7fe b908 	b.w	24e40 <dwt_ioctl+0x154>
   26c30:	2500      	movs	r5, #0
   26c32:	f7fe b905 	b.w	24e40 <dwt_ioctl+0x154>
   26c36:	2500      	movs	r5, #0
   26c38:	f7fe b902 	b.w	24e40 <dwt_ioctl+0x154>
   26c3c:	2500      	movs	r5, #0
   26c3e:	f7fe b8ff 	b.w	24e40 <dwt_ioctl+0x154>
   26c42:	2500      	movs	r5, #0
   26c44:	f7fe b8fc 	b.w	24e40 <dwt_ioctl+0x154>
   26c48:	2500      	movs	r5, #0
   26c4a:	f7fe b8f9 	b.w	24e40 <dwt_ioctl+0x154>
   26c4e:	2500      	movs	r5, #0
   26c50:	f7fe b8f6 	b.w	24e40 <dwt_ioctl+0x154>
   26c54:	2500      	movs	r5, #0
   26c56:	f7fe b8f3 	b.w	24e40 <dwt_ioctl+0x154>
   26c5a:	2500      	movs	r5, #0
   26c5c:	f7fe b8f0 	b.w	24e40 <dwt_ioctl+0x154>
   26c60:	2500      	movs	r5, #0
   26c62:	f7fe b8ed 	b.w	24e40 <dwt_ioctl+0x154>
   26c66:	2500      	movs	r5, #0
   26c68:	f7fe b8ea 	b.w	24e40 <dwt_ioctl+0x154>
   26c6c:	2500      	movs	r5, #0
   26c6e:	f7fe b8e7 	b.w	24e40 <dwt_ioctl+0x154>
   26c72:	2500      	movs	r5, #0
   26c74:	f7fe b8e4 	b.w	24e40 <dwt_ioctl+0x154>
   26c78:	2500      	movs	r5, #0
   26c7a:	f7fe b8e1 	b.w	24e40 <dwt_ioctl+0x154>
   26c7e:	2500      	movs	r5, #0
   26c80:	f7fe b8de 	b.w	24e40 <dwt_ioctl+0x154>
   26c84:	2500      	movs	r5, #0
   26c86:	f7fe b8db 	b.w	24e40 <dwt_ioctl+0x154>
   26c8a:	2500      	movs	r5, #0
   26c8c:	f7fe b8d8 	b.w	24e40 <dwt_ioctl+0x154>
   26c90:	2500      	movs	r5, #0
   26c92:	f7fe b8d5 	b.w	24e40 <dwt_ioctl+0x154>
   26c96:	2500      	movs	r5, #0
   26c98:	f7fe b8d2 	b.w	24e40 <dwt_ioctl+0x154>
   26c9c:	2500      	movs	r5, #0
   26c9e:	f7fe b8cf 	b.w	24e40 <dwt_ioctl+0x154>
   26ca2:	2500      	movs	r5, #0
   26ca4:	f7fe b8cc 	b.w	24e40 <dwt_ioctl+0x154>
   26ca8:	2500      	movs	r5, #0
   26caa:	f7fe b8c9 	b.w	24e40 <dwt_ioctl+0x154>
   26cae:	2500      	movs	r5, #0
   26cb0:	f7fe b8c6 	b.w	24e40 <dwt_ioctl+0x154>
   26cb4:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
   26cb8:	f7fe b8c2 	b.w	24e40 <dwt_ioctl+0x154>
   26cbc:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
   26cc0:	f7fe b8be 	b.w	24e40 <dwt_ioctl+0x154>
   26cc4:	2500      	movs	r5, #0
   26cc6:	f7fe b8bb 	b.w	24e40 <dwt_ioctl+0x154>
   26cca:	2500      	movs	r5, #0
   26ccc:	f7fe b8b8 	b.w	24e40 <dwt_ioctl+0x154>
   26cd0:	2500      	movs	r5, #0
   26cd2:	f7fe b8b5 	b.w	24e40 <dwt_ioctl+0x154>
   26cd6:	2500      	movs	r5, #0
   26cd8:	f7fe b8b2 	b.w	24e40 <dwt_ioctl+0x154>
   26cdc:	2500      	movs	r5, #0
   26cde:	f7fe b8af 	b.w	24e40 <dwt_ioctl+0x154>
   26ce2:	2500      	movs	r5, #0
   26ce4:	f7fe b8ac 	b.w	24e40 <dwt_ioctl+0x154>
   26ce8:	2500      	movs	r5, #0
   26cea:	f7fe b8a9 	b.w	24e40 <dwt_ioctl+0x154>
   26cee:	2500      	movs	r5, #0
   26cf0:	f7fe b8a6 	b.w	24e40 <dwt_ioctl+0x154>
   26cf4:	2500      	movs	r5, #0
   26cf6:	f7fe b8a3 	b.w	24e40 <dwt_ioctl+0x154>
   26cfa:	2500      	movs	r5, #0
   26cfc:	f7fe b8a0 	b.w	24e40 <dwt_ioctl+0x154>
   26d00:	2500      	movs	r5, #0
   26d02:	f7fe b89d 	b.w	24e40 <dwt_ioctl+0x154>
   26d06:	2500      	movs	r5, #0
   26d08:	f7fe b89a 	b.w	24e40 <dwt_ioctl+0x154>
   26d0c:	2500      	movs	r5, #0
   26d0e:	f7fe b897 	b.w	24e40 <dwt_ioctl+0x154>
   26d12:	f899 3011 	ldrb.w	r3, [r9, #17]
   26d16:	1e5a      	subs	r2, r3, #1
   26d18:	b2d2      	uxtb	r2, r2
   26d1a:	2a01      	cmp	r2, #1
   26d1c:	f67e aeec 	bls.w	25af8 <dwt_ioctl+0xe0c>
   26d20:	2202      	movs	r2, #2
   26d22:	f7fe be93 	b.w	25a4c <dwt_ioctl+0xd60>
   26d26:	2f00      	cmp	r7, #0
   26d28:	f43f ab68 	beq.w	263fc <dwt_ioctl+0x1710>
   26d2c:	f819 1000 	ldrb.w	r1, [r9, r0]
   26d30:	1a5b      	subs	r3, r3, r1
   26d32:	b29b      	uxth	r3, r3
   26d34:	f7ff bb88 	b.w	26448 <dwt_ioctl+0x175c>
   26d38:	000d0020 	.word	0x000d0020
   26d3c:	000c0064 	.word	0x000c0064
   26d40:	000c0068 	.word	0x000c0068
   26d44:	000c0060 	.word	0x000c0060
   26d48:	000d0068 	.word	0x000d0068
   26d4c:	000d0040 	.word	0x000d0040
   26d50:	000d0044 	.word	0x000d0044
   26d54:	000d0048 	.word	0x000d0048
   26d58:	000d003c 	.word	0x000d003c
   26d5c:	283f      	cmp	r0, #63	@ 0x3f
   26d5e:	d027      	beq.n	26db0 <dwt_ioctl+0x20c4>
   26d60:	2e00      	cmp	r6, #0
   26d62:	f47f ab51 	bne.w	26408 <dwt_ioctl+0x171c>
   26d66:	3001      	adds	r0, #1
   26d68:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
   26d6c:	f819 1000 	ldrb.w	r1, [r9, r0]
   26d70:	440b      	add	r3, r1
   26d72:	b29b      	uxth	r3, r3
   26d74:	459c      	cmp	ip, r3
   26d76:	f43f ab65 	beq.w	26444 <dwt_ioctl+0x1758>
   26d7a:	3d01      	subs	r5, #1
   26d7c:	f015 05ff 	ands.w	r5, r5, #255	@ 0xff
   26d80:	f43f ab23 	beq.w	263ca <dwt_ioctl+0x16de>
   26d84:	459e      	cmp	lr, r3
   26d86:	f4bf ab33 	bcs.w	263f0 <dwt_ioctl+0x1704>
   26d8a:	4598      	cmp	r8, r3
   26d8c:	d9cb      	bls.n	26d26 <dwt_ioctl+0x203a>
   26d8e:	ebac 0103 	sub.w	r1, ip, r3
   26d92:	b209      	sxth	r1, r1
   26d94:	2900      	cmp	r1, #0
   26d96:	bfb8      	it	lt
   26d98:	4249      	neglt	r1, r1
   26d9a:	4559      	cmp	r1, fp
   26d9c:	f77f ab20 	ble.w	263e0 <dwt_ioctl+0x16f4>
   26da0:	2f00      	cmp	r7, #0
   26da2:	f47f ab64 	bne.w	2646e <dwt_ioctl+0x1782>
   26da6:	283f      	cmp	r0, #63	@ 0x3f
   26da8:	d1da      	bne.n	26d60 <dwt_ioctl+0x2074>
   26daa:	2f00      	cmp	r7, #0
   26dac:	f47f ab64 	bne.w	26478 <dwt_ioctl+0x178c>
   26db0:	2a03      	cmp	r2, #3
   26db2:	f43f ab64 	beq.w	2647e <dwt_ioctl+0x1792>
   26db6:	2a02      	cmp	r2, #2
   26db8:	f43f ab33 	beq.w	26422 <dwt_ioctl+0x1736>
   26dbc:	f81a 1002 	ldrb.w	r1, [sl, r2]
   26dc0:	185e      	adds	r6, r3, r1
   26dc2:	4566      	cmp	r6, ip
   26dc4:	f77f ab34 	ble.w	26430 <dwt_ioctl+0x1744>
   26dc8:	440b      	add	r3, r1
   26dca:	b29b      	uxth	r3, r3
   26dcc:	3201      	adds	r2, #1
   26dce:	b2d2      	uxtb	r2, r2
   26dd0:	2700      	movs	r7, #0
   26dd2:	f7ff bb19 	b.w	26408 <dwt_ioctl+0x171c>
   26dd6:	bf00      	nop

00026dd8 <_init>:
   26dd8:	b5f0      	push	{r4, r5, r6, r7, lr}
   26dda:	b085      	sub	sp, #20
   26ddc:	4604      	mov	r4, r0
   26dde:	6b43      	ldr	r3, [r0, #52]	@ 0x34
   26de0:	6819      	ldr	r1, [r3, #0]
   26de2:	f7fd fe57 	bl	24a94 <ull_initialise>
   26de6:	4606      	mov	r6, r0
   26de8:	6823      	ldr	r3, [r4, #0]
   26dea:	691b      	ldr	r3, [r3, #16]
   26dec:	4798      	blx	r3
   26dee:	ab03      	add	r3, sp, #12
   26df0:	2200      	movs	r2, #0
   26df2:	4611      	mov	r1, r2
   26df4:	4620      	mov	r0, r4
   26df6:	f7fd ff79 	bl	24cec <dwt_ioctl>
   26dfa:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   26dfc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
   26dfe:	6819      	ldr	r1, [r3, #0]
   26e00:	4620      	mov	r0, r4
   26e02:	f7fd fc07 	bl	24614 <ull_configure>
   26e06:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   26e08:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
   26e0a:	6859      	ldr	r1, [r3, #4]
   26e0c:	4620      	mov	r0, r4
   26e0e:	f7fd f953 	bl	240b8 <ull_configuretxrf>
   26e12:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   26e14:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
   26e16:	89db      	ldrh	r3, [r3, #14]
   26e18:	2200      	movs	r2, #0
   26e1a:	f44f 2160 	mov.w	r1, #917504	@ 0xe0000
   26e1e:	4620      	mov	r0, r4
   26e20:	f7fc fa9d 	bl	2335e <dwt_write16bitoffsetreg>
   26e24:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   26e26:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
   26e28:	899b      	ldrh	r3, [r3, #12]
   26e2a:	2200      	movs	r2, #0
   26e2c:	217c      	movs	r1, #124	@ 0x7c
   26e2e:	4620      	mov	r0, r4
   26e30:	f7fc fa95 	bl	2335e <dwt_write16bitoffsetreg>
   26e34:	2100      	movs	r1, #0
   26e36:	4620      	mov	r0, r4
   26e38:	f7fc fb29 	bl	2348e <ull_setrxaftertxdelay>
   26e3c:	2500      	movs	r5, #0
   26e3e:	9500      	str	r5, [sp, #0]
   26e40:	f64f 53ff 	movw	r3, #65023	@ 0xfdff
   26e44:	462a      	mov	r2, r5
   26e46:	2110      	movs	r1, #16
   26e48:	4620      	mov	r0, r4
   26e4a:	f7fd fac5 	bl	243d8 <dwt_modify16bitoffsetreg>
   26e4e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   26e50:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
   26e52:	895a      	ldrh	r2, [r3, #10]
   26e54:	8919      	ldrh	r1, [r3, #8]
   26e56:	4620      	mov	r0, r4
   26e58:	f7fd f9bc 	bl	241d4 <ull_configureframefilter>
   26e5c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   26e5e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
   26e60:	8a1b      	ldrh	r3, [r3, #16]
   26e62:	2202      	movs	r2, #2
   26e64:	210c      	movs	r1, #12
   26e66:	4620      	mov	r0, r4
   26e68:	f7fc fa79 	bl	2335e <dwt_write16bitoffsetreg>
   26e6c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   26e6e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
   26e70:	8a5b      	ldrh	r3, [r3, #18]
   26e72:	462a      	mov	r2, r5
   26e74:	210c      	movs	r1, #12
   26e76:	4620      	mov	r0, r4
   26e78:	f7fc fa71 	bl	2335e <dwt_write16bitoffsetreg>
   26e7c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   26e7e:	7a19      	ldrb	r1, [r3, #8]
   26e80:	4620      	mov	r0, r4
   26e82:	f7fd fac3 	bl	2440c <ull_setleds>
   26e86:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   26e88:	68d9      	ldr	r1, [r3, #12]
   26e8a:	4620      	mov	r0, r4
   26e8c:	f7fc fb13 	bl	234b6 <ull_setlnapamode>
   26e90:	6b61      	ldr	r1, [r4, #52]	@ 0x34
   26e92:	7e0b      	ldrb	r3, [r1, #24]
   26e94:	694a      	ldr	r2, [r1, #20]
   26e96:	6909      	ldr	r1, [r1, #16]
   26e98:	4620      	mov	r0, r4
   26e9a:	f7fd fa21 	bl	242e0 <ull_setinterrupt>
   26e9e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   26ea0:	7f9a      	ldrb	r2, [r3, #30]
   26ea2:	8b99      	ldrh	r1, [r3, #28]
   26ea4:	4620      	mov	r0, r4
   26ea6:	f7fc fd19 	bl	238dc <ull_configuresleep>
   26eaa:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   26eac:	7b53      	ldrb	r3, [r2, #13]
   26eae:	2b2e      	cmp	r3, #46	@ 0x2e
   26eb0:	d005      	beq.n	26ebe <_init+0xe6>
   26eb2:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   26eb4:	f893 302c 	ldrb.w	r3, [r3, #44]	@ 0x2c
   26eb8:	f033 033f 	bics.w	r3, r3, #63	@ 0x3f
   26ebc:	d00a      	beq.n	26ed4 <_init+0xfc>
   26ebe:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   26ec0:	f893 302c 	ldrb.w	r3, [r3, #44]	@ 0x2c
   26ec4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
   26ec8:	7353      	strb	r3, [r2, #13]
   26eca:	2200      	movs	r2, #0
   26ecc:	492a      	ldr	r1, [pc, #168]	@ (26f78 <_init+0x1a0>)
   26ece:	4620      	mov	r0, r4
   26ed0:	f7fc fc30 	bl	23734 <dwt_write8bitoffsetreg>
   26ed4:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   26ed6:	f893 102d 	ldrb.w	r1, [r3, #45]	@ 0x2d
   26eda:	4620      	mov	r0, r4
   26edc:	f7fd f874 	bl	23fc8 <ull_configciadiag>
   26ee0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   26ee2:	6a19      	ldr	r1, [r3, #32]
   26ee4:	4620      	mov	r0, r4
   26ee6:	f7fc fb07 	bl	234f8 <ull_configurestskey>
   26eea:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   26eec:	6a59      	ldr	r1, [r3, #36]	@ 0x24
   26eee:	4620      	mov	r0, r4
   26ef0:	f7fc fb26 	bl	23540 <ull_configurestsiv>
   26ef4:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   26ef6:	f893 302e 	ldrb.w	r3, [r3, #46]	@ 0x2e
   26efa:	bb9b      	cbnz	r3, 26f64 <_init+0x18c>
   26efc:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   26efe:	f893 102f 	ldrb.w	r1, [r3, #47]	@ 0x2f
   26f02:	4620      	mov	r0, r4
   26f04:	f7fc fc8e 	bl	23824 <ull_configeventcounters>
   26f08:	f994 504c 	ldrsb.w	r5, [r4, #76]	@ 0x4c
   26f0c:	2d00      	cmp	r5, #0
   26f0e:	db26      	blt.n	26f5e <_init+0x186>
   26f10:	2301      	movs	r3, #1
   26f12:	fa03 f505 	lsl.w	r5, r3, r5
   26f16:	b2af      	uxth	r7, r5
   26f18:	4a18      	ldr	r2, [pc, #96]	@ (26f7c <_init+0x1a4>)
   26f1a:	4639      	mov	r1, r7
   26f1c:	4620      	mov	r0, r4
   26f1e:	f7fc ffef 	bl	23f00 <ull_setgpiomode>
   26f22:	f10d 030a 	add.w	r3, sp, #10
   26f26:	9300      	str	r3, [sp, #0]
   26f28:	2302      	movs	r3, #2
   26f2a:	2200      	movs	r2, #0
   26f2c:	f44f 21a0 	mov.w	r1, #327680	@ 0x50000
   26f30:	4620      	mov	r0, r4
   26f32:	f7fb fdf2 	bl	22b1a <dwt_readfromdevice>
   26f36:	f8bd 300a 	ldrh.w	r3, [sp, #10]
   26f3a:	ea23 0305 	bic.w	r3, r3, r5
   26f3e:	f8ad 300a 	strh.w	r3, [sp, #10]
   26f42:	2200      	movs	r2, #0
   26f44:	490e      	ldr	r1, [pc, #56]	@ (26f80 <_init+0x1a8>)
   26f46:	4620      	mov	r0, r4
   26f48:	f7fc fa09 	bl	2335e <dwt_write16bitoffsetreg>
   26f4c:	f994 204d 	ldrsb.w	r2, [r4, #77]	@ 0x4d
   26f50:	fab2 f282 	clz	r2, r2
   26f54:	0952      	lsrs	r2, r2, #5
   26f56:	4639      	mov	r1, r7
   26f58:	4620      	mov	r0, r4
   26f5a:	f7fd fad5 	bl	24508 <ull_setgpiovalue>
   26f5e:	4630      	mov	r0, r6
   26f60:	b005      	add	sp, #20
   26f62:	bdf0      	pop	{r4, r5, r6, r7, pc}
   26f64:	2301      	movs	r3, #1
   26f66:	9300      	str	r3, [sp, #0]
   26f68:	23ff      	movs	r3, #255	@ 0xff
   26f6a:	2200      	movs	r2, #0
   26f6c:	4905      	ldr	r1, [pc, #20]	@ (26f84 <_init+0x1ac>)
   26f6e:	4620      	mov	r0, r4
   26f70:	f7fd f816 	bl	23fa0 <dwt_modify8bitoffsetreg>
   26f74:	e7c2      	b.n	26efc <_init+0x124>
   26f76:	bf00      	nop
   26f78:	00090014 	.word	0x00090014
   26f7c:	01200492 	.word	0x01200492
   26f80:	00050008 	.word	0x00050008
   26f84:	00020004 	.word	0x00020004

00026f88 <ull_wakeup_ic>:
   26f88:	b508      	push	{r3, lr}
   26f8a:	6843      	ldr	r3, [r0, #4]
   26f8c:	4798      	blx	r3
   26f8e:	bd08      	pop	{r3, pc}

00026f90 <get_sts_mnth>:
   26f90:	fb01 f100 	mul.w	r1, r1, r0
   26f94:	2a03      	cmp	r2, #3
   26f96:	d00a      	beq.n	26fae <get_sts_mnth+0x1e>
   26f98:	0ac8      	lsrs	r0, r1, #11
   26f9a:	f3c1 010a 	ubfx	r1, r1, #0, #11
   26f9e:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
   26fa2:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
   26fa6:	bf28      	it	cs
   26fa8:	3001      	addcs	r0, #1
   26faa:	b280      	uxth	r0, r0
   26fac:	4770      	bx	lr
   26fae:	20b5      	movs	r0, #181	@ 0xb5
   26fb0:	fb00 f101 	mul.w	r1, r0, r1
   26fb4:	09c9      	lsrs	r1, r1, #7
   26fb6:	e7ef      	b.n	26f98 <get_sts_mnth+0x8>

00026fb8 <dwt_dbg_fn>:
   26fb8:	2998      	cmp	r1, #152	@ 0x98
   26fba:	4802      	ldr	r0, [pc, #8]	@ (26fc4 <dwt_dbg_fn+0xc>)
   26fbc:	bf18      	it	ne
   26fbe:	2000      	movne	r0, #0
   26fc0:	4770      	bx	lr
   26fc2:	bf00      	nop
   26fc4:	0002c574 	.word	0x0002c574

00026fc8 <_deinit>:
   26fc8:	4770      	bx	lr

00026fca <dwt_xfer3xxx>:
   26fca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   26fce:	b084      	sub	sp, #16
   26fd0:	4605      	mov	r5, r0
   26fd2:	460f      	mov	r7, r1
   26fd4:	461e      	mov	r6, r3
   26fd6:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
   26fda:	1e59      	subs	r1, r3, #1
   26fdc:	b289      	uxth	r1, r1
   26fde:	2901      	cmp	r1, #1
   26fe0:	d91c      	bls.n	2701c <dwt_xfer3xxx+0x52>
   26fe2:	19d0      	adds	r0, r2, r7
   26fe4:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
   26fe8:	443a      	add	r2, r7
   26fea:	f3c2 4104 	ubfx	r1, r2, #16, #5
   26fee:	0082      	lsls	r2, r0, #2
   26ff0:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
   26ff4:	ea43 0102 	orr.w	r1, r3, r2
   26ff8:	0a09      	lsrs	r1, r1, #8
   26ffa:	f88d 100c 	strb.w	r1, [sp, #12]
   26ffe:	b920      	cbnz	r0, 2700a <dwt_xfer3xxx+0x40>
   27000:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
   27004:	d018      	beq.n	27038 <dwt_xfer3xxx+0x6e>
   27006:	2b00      	cmp	r3, #0
   27008:	d037      	beq.n	2707a <dwt_xfer3xxx+0xb0>
   2700a:	f041 0140 	orr.w	r1, r1, #64	@ 0x40
   2700e:	f88d 100c 	strb.w	r1, [sp, #12]
   27012:	431a      	orrs	r2, r3
   27014:	f88d 200d 	strb.w	r2, [sp, #13]
   27018:	2402      	movs	r4, #2
   2701a:	e005      	b.n	27028 <dwt_xfer3xxx+0x5e>
   2701c:	007a      	lsls	r2, r7, #1
   2701e:	f062 027e 	orn	r2, r2, #126	@ 0x7e
   27022:	f88d 200c 	strb.w	r2, [sp, #12]
   27026:	2401      	movs	r4, #1
   27028:	2b02      	cmp	r3, #2
   2702a:	d006      	beq.n	2703a <dwt_xfer3xxx+0x70>
   2702c:	d326      	bcc.n	2707c <dwt_xfer3xxx+0xb2>
   2702e:	f5a3 4300 	sub.w	r3, r3, #32768	@ 0x8000
   27032:	2b03      	cmp	r3, #3
   27034:	d901      	bls.n	2703a <dwt_xfer3xxx+0x70>
   27036:	e7fe      	b.n	27036 <dwt_xfer3xxx+0x6c>
   27038:	2401      	movs	r4, #1
   2703a:	6d2b      	ldr	r3, [r5, #80]	@ 0x50
   2703c:	7d1b      	ldrb	r3, [r3, #20]
   2703e:	b94b      	cbnz	r3, 27054 <dwt_xfer3xxx+0x8a>
   27040:	682b      	ldr	r3, [r5, #0]
   27042:	685d      	ldr	r5, [r3, #4]
   27044:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   27046:	4632      	mov	r2, r6
   27048:	a903      	add	r1, sp, #12
   2704a:	4620      	mov	r0, r4
   2704c:	47a8      	blx	r5
   2704e:	b004      	add	sp, #16
   27050:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   27054:	2200      	movs	r2, #0
   27056:	4621      	mov	r1, r4
   27058:	a803      	add	r0, sp, #12
   2705a:	f7f7 fb6f 	bl	1e73c <dwt_generatecrc8>
   2705e:	4602      	mov	r2, r0
   27060:	4631      	mov	r1, r6
   27062:	980a      	ldr	r0, [sp, #40]	@ 0x28
   27064:	f7f7 fb6a 	bl	1e73c <dwt_generatecrc8>
   27068:	682b      	ldr	r3, [r5, #0]
   2706a:	9000      	str	r0, [sp, #0]
   2706c:	689d      	ldr	r5, [r3, #8]
   2706e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   27070:	4632      	mov	r2, r6
   27072:	a903      	add	r1, sp, #12
   27074:	4620      	mov	r0, r4
   27076:	47a8      	blx	r5
   27078:	e7e9      	b.n	2704e <dwt_xfer3xxx+0x84>
   2707a:	2401      	movs	r4, #1
   2707c:	682b      	ldr	r3, [r5, #0]
   2707e:	f8d3 8000 	ldr.w	r8, [r3]
   27082:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   27084:	4632      	mov	r2, r6
   27086:	a903      	add	r1, sp, #12
   27088:	4620      	mov	r0, r4
   2708a:	47c0      	blx	r8
   2708c:	6d2b      	ldr	r3, [r5, #80]	@ 0x50
   2708e:	7d1b      	ldrb	r3, [r3, #20]
   27090:	2b02      	cmp	r3, #2
   27092:	d1dc      	bne.n	2704e <dwt_xfer3xxx+0x84>
   27094:	2f18      	cmp	r7, #24
   27096:	d0da      	beq.n	2704e <dwt_xfer3xxx+0x84>
   27098:	2200      	movs	r2, #0
   2709a:	4621      	mov	r1, r4
   2709c:	a803      	add	r0, sp, #12
   2709e:	f7f7 fb4d 	bl	1e73c <dwt_generatecrc8>
   270a2:	4602      	mov	r2, r0
   270a4:	4631      	mov	r1, r6
   270a6:	980a      	ldr	r0, [sp, #40]	@ 0x28
   270a8:	f7f7 fb48 	bl	1e73c <dwt_generatecrc8>
   270ac:	4604      	mov	r4, r0
   270ae:	2200      	movs	r2, #0
   270b0:	2118      	movs	r1, #24
   270b2:	4628      	mov	r0, r5
   270b4:	f000 f866 	bl	27184 <dwt_read8bitoffsetreg>
   270b8:	4284      	cmp	r4, r0
   270ba:	d0c8      	beq.n	2704e <dwt_xfer3xxx+0x84>
   270bc:	68eb      	ldr	r3, [r5, #12]
   270be:	2b00      	cmp	r3, #0
   270c0:	d0c5      	beq.n	2704e <dwt_xfer3xxx+0x84>
   270c2:	4798      	blx	r3
   270c4:	e7c3      	b.n	2704e <dwt_xfer3xxx+0x84>

000270c6 <dwt_readfromdevice>:
   270c6:	b510      	push	{r4, lr}
   270c8:	b082      	sub	sp, #8
   270ca:	2400      	movs	r4, #0
   270cc:	9401      	str	r4, [sp, #4]
   270ce:	9c04      	ldr	r4, [sp, #16]
   270d0:	9400      	str	r4, [sp, #0]
   270d2:	f7ff ff7a 	bl	26fca <dwt_xfer3xxx>
   270d6:	b002      	add	sp, #8
   270d8:	bd10      	pop	{r4, pc}

000270da <dwt_read32bitoffsetreg>:
   270da:	b500      	push	{lr}
   270dc:	b085      	sub	sp, #20
   270de:	ab03      	add	r3, sp, #12
   270e0:	9300      	str	r3, [sp, #0]
   270e2:	2304      	movs	r3, #4
   270e4:	b292      	uxth	r2, r2
   270e6:	f7ff ffee 	bl	270c6 <dwt_readfromdevice>
   270ea:	f10d 030f 	add.w	r3, sp, #15
   270ee:	f10d 010b 	add.w	r1, sp, #11
   270f2:	2000      	movs	r0, #0
   270f4:	f813 2901 	ldrb.w	r2, [r3], #-1
   270f8:	eb02 2000 	add.w	r0, r2, r0, lsl #8
   270fc:	428b      	cmp	r3, r1
   270fe:	d1f9      	bne.n	270f4 <dwt_read32bitoffsetreg+0x1a>
   27100:	b005      	add	sp, #20
   27102:	f85d fb04 	ldr.w	pc, [sp], #4

00027106 <dwt_read16bitoffsetreg>:
   27106:	b500      	push	{lr}
   27108:	b085      	sub	sp, #20
   2710a:	ab03      	add	r3, sp, #12
   2710c:	9300      	str	r3, [sp, #0]
   2710e:	2302      	movs	r3, #2
   27110:	b292      	uxth	r2, r2
   27112:	f7ff ffd8 	bl	270c6 <dwt_readfromdevice>
   27116:	f89d 300d 	ldrb.w	r3, [sp, #13]
   2711a:	f89d 000c 	ldrb.w	r0, [sp, #12]
   2711e:	eb00 2003 	add.w	r0, r0, r3, lsl #8
   27122:	b280      	uxth	r0, r0
   27124:	b005      	add	sp, #20
   27126:	f85d fb04 	ldr.w	pc, [sp], #4

0002712a <ull_getrxantennadelay>:
   2712a:	b508      	push	{r3, lr}
   2712c:	2200      	movs	r2, #0
   2712e:	f44f 2160 	mov.w	r1, #917504	@ 0xe0000
   27132:	f7ff ffe8 	bl	27106 <dwt_read16bitoffsetreg>
   27136:	bd08      	pop	{r3, pc}

00027138 <ull_gettxantennadelay>:
   27138:	b508      	push	{r3, lr}
   2713a:	2200      	movs	r2, #0
   2713c:	217c      	movs	r1, #124	@ 0x7c
   2713e:	f7ff ffe2 	bl	27106 <dwt_read16bitoffsetreg>
   27142:	bd08      	pop	{r3, pc}

00027144 <ull_readclockoffset>:
   27144:	b508      	push	{r3, lr}
   27146:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   27148:	7b9b      	ldrb	r3, [r3, #14]
   2714a:	2b01      	cmp	r3, #1
   2714c:	d00a      	beq.n	27164 <ull_readclockoffset+0x20>
   2714e:	2b03      	cmp	r3, #3
   27150:	d10e      	bne.n	27170 <ull_readclockoffset+0x2c>
   27152:	220c      	movs	r2, #12
   27154:	f44f 11f0 	mov.w	r1, #1966080	@ 0x1e0000
   27158:	f7ff ffd5 	bl	27106 <dwt_read16bitoffsetreg>
   2715c:	b200      	sxth	r0, r0
   2715e:	f340 000c 	sbfx	r0, r0, #0, #13
   27162:	bd08      	pop	{r3, pc}
   27164:	2200      	movs	r2, #0
   27166:	4905      	ldr	r1, [pc, #20]	@ (2717c <ull_readclockoffset+0x38>)
   27168:	f7ff ffcd 	bl	27106 <dwt_read16bitoffsetreg>
   2716c:	b200      	sxth	r0, r0
   2716e:	e7f6      	b.n	2715e <ull_readclockoffset+0x1a>
   27170:	2200      	movs	r2, #0
   27172:	4903      	ldr	r1, [pc, #12]	@ (27180 <ull_readclockoffset+0x3c>)
   27174:	f7ff ffc7 	bl	27106 <dwt_read16bitoffsetreg>
   27178:	b200      	sxth	r0, r0
   2717a:	e7f0      	b.n	2715e <ull_readclockoffset+0x1a>
   2717c:	0018000c 	.word	0x0018000c
   27180:	000c0020 	.word	0x000c0020

00027184 <dwt_read8bitoffsetreg>:
   27184:	b500      	push	{lr}
   27186:	b085      	sub	sp, #20
   27188:	f10d 030f 	add.w	r3, sp, #15
   2718c:	9300      	str	r3, [sp, #0]
   2718e:	2301      	movs	r3, #1
   27190:	b292      	uxth	r2, r2
   27192:	f7ff ff98 	bl	270c6 <dwt_readfromdevice>
   27196:	f89d 000f 	ldrb.w	r0, [sp, #15]
   2719a:	b005      	add	sp, #20
   2719c:	f85d fb04 	ldr.w	pc, [sp], #4

000271a0 <ull_readcarrierintegrator>:
   271a0:	b500      	push	{lr}
   271a2:	b085      	sub	sp, #20
   271a4:	ab03      	add	r3, sp, #12
   271a6:	9300      	str	r3, [sp, #0]
   271a8:	2303      	movs	r3, #3
   271aa:	2200      	movs	r2, #0
   271ac:	490b      	ldr	r1, [pc, #44]	@ (271dc <ull_readcarrierintegrator+0x3c>)
   271ae:	f7ff ff8a 	bl	270c6 <dwt_readfromdevice>
   271b2:	f89d 300e 	ldrb.w	r3, [sp, #14]
   271b6:	f89d 000d 	ldrb.w	r0, [sp, #13]
   271ba:	eb00 2303 	add.w	r3, r0, r3, lsl #8
   271be:	f89d 000c 	ldrb.w	r0, [sp, #12]
   271c2:	eb00 2003 	add.w	r0, r0, r3, lsl #8
   271c6:	f410 1f80 	tst.w	r0, #1048576	@ 0x100000
   271ca:	bf1c      	itt	ne
   271cc:	ea6f 3000 	mvnne.w	r0, r0, lsl #12
   271d0:	ea6f 3010 	mvnne.w	r0, r0, lsr #12
   271d4:	b005      	add	sp, #20
   271d6:	f85d fb04 	ldr.w	pc, [sp], #4
   271da:	bf00      	nop
   271dc:	00060029 	.word	0x00060029

000271e0 <ull_readdiagnostics>:
   271e0:	b530      	push	{r4, r5, lr}
   271e2:	b0bd      	sub	sp, #244	@ 0xf4
   271e4:	4605      	mov	r5, r0
   271e6:	460c      	mov	r4, r1
   271e8:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   271ea:	7b9a      	ldrb	r2, [r3, #14]
   271ec:	2a01      	cmp	r2, #1
   271ee:	d01c      	beq.n	2722a <ull_readdiagnostics+0x4a>
   271f0:	2a03      	cmp	r2, #3
   271f2:	f040 81f1 	bne.w	275d8 <ull_readdiagnostics+0x3f8>
   271f6:	7d9b      	ldrb	r3, [r3, #22]
   271f8:	f013 0f08 	tst.w	r3, #8
   271fc:	d10c      	bne.n	27218 <ull_readdiagnostics+0x38>
   271fe:	f013 0f04 	tst.w	r3, #4
   27202:	ab02      	add	r3, sp, #8
   27204:	9300      	str	r3, [sp, #0]
   27206:	bf14      	ite	ne
   27208:	2338      	movne	r3, #56	@ 0x38
   2720a:	2320      	moveq	r3, #32
   2720c:	2200      	movs	r2, #0
   2720e:	f44f 11f0 	mov.w	r1, #1966080	@ 0x1e0000
   27212:	f7ff ff58 	bl	270c6 <dwt_readfromdevice>
   27216:	e019      	b.n	2724c <ull_readdiagnostics+0x6c>
   27218:	ab02      	add	r3, sp, #8
   2721a:	9300      	str	r3, [sp, #0]
   2721c:	23e8      	movs	r3, #232	@ 0xe8
   2721e:	2200      	movs	r2, #0
   27220:	f44f 11f0 	mov.w	r1, #1966080	@ 0x1e0000
   27224:	f7ff ff4f 	bl	270c6 <dwt_readfromdevice>
   27228:	e010      	b.n	2724c <ull_readdiagnostics+0x6c>
   2722a:	7d9b      	ldrb	r3, [r3, #22]
   2722c:	f013 0f08 	tst.w	r3, #8
   27230:	f040 81c9 	bne.w	275c6 <ull_readdiagnostics+0x3e6>
   27234:	f013 0f04 	tst.w	r3, #4
   27238:	ab02      	add	r3, sp, #8
   2723a:	9300      	str	r3, [sp, #0]
   2723c:	bf14      	ite	ne
   2723e:	2338      	movne	r3, #56	@ 0x38
   27240:	2320      	moveq	r3, #32
   27242:	2200      	movs	r2, #0
   27244:	f44f 11c0 	mov.w	r1, #1572864	@ 0x180000
   27248:	f7ff ff3d 	bl	270c6 <dwt_readfromdevice>
   2724c:	f10d 0217 	add.w	r2, sp, #23
   27250:	f104 031a 	add.w	r3, r4, #26
   27254:	f104 0020 	add.w	r0, r4, #32
   27258:	f812 1f01 	ldrb.w	r1, [r2, #1]!
   2725c:	f803 1b01 	strb.w	r1, [r3], #1
   27260:	4283      	cmp	r3, r0
   27262:	d1f9      	bne.n	27258 <ull_readdiagnostics+0x78>
   27264:	f89d 2015 	ldrb.w	r2, [sp, #21]
   27268:	f89d 3014 	ldrb.w	r3, [sp, #20]
   2726c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   27270:	f3c3 030c 	ubfx	r3, r3, #0, #13
   27274:	8463      	strh	r3, [r4, #34]	@ 0x22
   27276:	f89d 201f 	ldrb.w	r2, [sp, #31]
   2727a:	f89d 301e 	ldrb.w	r3, [sp, #30]
   2727e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   27282:	f3c3 030d 	ubfx	r3, r3, #0, #14
   27286:	f413 5f00 	tst.w	r3, #8192	@ 0x2000
   2728a:	bf1c      	itt	ne
   2728c:	ea6f 4383 	mvnne.w	r3, r3, lsl #18
   27290:	ea6f 4393 	mvnne.w	r3, r3, lsr #18
   27294:	8423      	strh	r3, [r4, #32]
   27296:	f89d 2025 	ldrb.w	r2, [sp, #37]	@ 0x25
   2729a:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
   2729e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   272a2:	f3c3 030b 	ubfx	r3, r3, #0, #12
   272a6:	87e3      	strh	r3, [r4, #62]	@ 0x3e
   272a8:	6d2b      	ldr	r3, [r5, #80]	@ 0x50
   272aa:	7d9b      	ldrb	r3, [r3, #22]
   272ac:	f013 0f02 	tst.w	r3, #2
   272b0:	f040 817e 	bne.w	275b0 <ull_readdiagnostics+0x3d0>
   272b4:	aa0a      	add	r2, sp, #40	@ 0x28
   272b6:	1e63      	subs	r3, r4, #1
   272b8:	1d20      	adds	r0, r4, #4
   272ba:	f812 1b01 	ldrb.w	r1, [r2], #1
   272be:	f803 1f01 	strb.w	r1, [r3, #1]!
   272c2:	79d1      	ldrb	r1, [r2, #7]
   272c4:	7219      	strb	r1, [r3, #8]
   272c6:	7bd1      	ldrb	r1, [r2, #15]
   272c8:	7459      	strb	r1, [r3, #17]
   272ca:	4283      	cmp	r3, r0
   272cc:	d1f5      	bne.n	272ba <ull_readdiagnostics+0xda>
   272ce:	f89d 302f 	ldrb.w	r3, [sp, #47]	@ 0x2f
   272d2:	7163      	strb	r3, [r4, #5]
   272d4:	f89d 202e 	ldrb.w	r2, [sp, #46]	@ 0x2e
   272d8:	f89d 302d 	ldrb.w	r3, [sp, #45]	@ 0x2d
   272dc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   272e0:	80e3      	strh	r3, [r4, #6]
   272e2:	f89d 2037 	ldrb.w	r2, [sp, #55]	@ 0x37
   272e6:	f89d 3036 	ldrb.w	r3, [sp, #54]	@ 0x36
   272ea:	eb03 2302 	add.w	r3, r3, r2, lsl #8
   272ee:	f3c3 13cf 	ubfx	r3, r3, #7, #16
   272f2:	f8a4 300d 	strh.w	r3, [r4, #13]
   272f6:	f89d 2032 	ldrb.w	r2, [sp, #50]	@ 0x32
   272fa:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
   272fe:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   27302:	f8a4 300f 	strh.w	r3, [r4, #15]
   27306:	f89d 203f 	ldrb.w	r2, [sp, #63]	@ 0x3f
   2730a:	f89d 303e 	ldrb.w	r3, [sp, #62]	@ 0x3e
   2730e:	eb03 2302 	add.w	r3, r3, r2, lsl #8
   27312:	f3c3 13cf 	ubfx	r3, r3, #7, #16
   27316:	82e3      	strh	r3, [r4, #22]
   27318:	f89d 203a 	ldrb.w	r2, [sp, #58]	@ 0x3a
   2731c:	f89d 3039 	ldrb.w	r3, [sp, #57]	@ 0x39
   27320:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   27324:	8323      	strh	r3, [r4, #24]
   27326:	6d2b      	ldr	r3, [r5, #80]	@ 0x50
   27328:	7d9b      	ldrb	r3, [r3, #22]
   2732a:	f013 0f04 	tst.w	r3, #4
   2732e:	f040 813f 	bne.w	275b0 <ull_readdiagnostics+0x3d0>
   27332:	f89d 2043 	ldrb.w	r2, [sp, #67]	@ 0x43
   27336:	f89d 3042 	ldrb.w	r3, [sp, #66]	@ 0x42
   2733a:	041b      	lsls	r3, r3, #16
   2733c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   27340:	f89d 2040 	ldrb.w	r2, [sp, #64]	@ 0x40
   27344:	4313      	orrs	r3, r2
   27346:	f89d 2041 	ldrb.w	r2, [sp, #65]	@ 0x41
   2734a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   2734e:	f023 4360 	bic.w	r3, r3, #3758096384	@ 0xe0000000
   27352:	6263      	str	r3, [r4, #36]	@ 0x24
   27354:	f89d 2047 	ldrb.w	r2, [sp, #71]	@ 0x47
   27358:	f89d 3046 	ldrb.w	r3, [sp, #70]	@ 0x46
   2735c:	041b      	lsls	r3, r3, #16
   2735e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   27362:	f89d 2044 	ldrb.w	r2, [sp, #68]	@ 0x44
   27366:	4313      	orrs	r3, r2
   27368:	f89d 2045 	ldrb.w	r2, [sp, #69]	@ 0x45
   2736c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   27370:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
   27374:	62a3      	str	r3, [r4, #40]	@ 0x28
   27376:	f89d 204b 	ldrb.w	r2, [sp, #75]	@ 0x4b
   2737a:	f89d 304a 	ldrb.w	r3, [sp, #74]	@ 0x4a
   2737e:	041b      	lsls	r3, r3, #16
   27380:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   27384:	f89d 2048 	ldrb.w	r2, [sp, #72]	@ 0x48
   27388:	4313      	orrs	r3, r2
   2738a:	f89d 2049 	ldrb.w	r2, [sp, #73]	@ 0x49
   2738e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   27392:	f3c3 0313 	ubfx	r3, r3, #0, #20
   27396:	62e3      	str	r3, [r4, #44]	@ 0x2c
   27398:	f89d 204f 	ldrb.w	r2, [sp, #79]	@ 0x4f
   2739c:	f89d 304e 	ldrb.w	r3, [sp, #78]	@ 0x4e
   273a0:	041b      	lsls	r3, r3, #16
   273a2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   273a6:	f89d 204c 	ldrb.w	r2, [sp, #76]	@ 0x4c
   273aa:	4313      	orrs	r3, r2
   273ac:	f89d 204d 	ldrb.w	r2, [sp, #77]	@ 0x4d
   273b0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   273b4:	f3c3 0315 	ubfx	r3, r3, #0, #22
   273b8:	6323      	str	r3, [r4, #48]	@ 0x30
   273ba:	f89d 2053 	ldrb.w	r2, [sp, #83]	@ 0x53
   273be:	f89d 3052 	ldrb.w	r3, [sp, #82]	@ 0x52
   273c2:	041b      	lsls	r3, r3, #16
   273c4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   273c8:	f89d 2050 	ldrb.w	r2, [sp, #80]	@ 0x50
   273cc:	4313      	orrs	r3, r2
   273ce:	f89d 2051 	ldrb.w	r2, [sp, #81]	@ 0x51
   273d2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   273d6:	f3c3 0315 	ubfx	r3, r3, #0, #22
   273da:	6363      	str	r3, [r4, #52]	@ 0x34
   273dc:	f89d 2057 	ldrb.w	r2, [sp, #87]	@ 0x57
   273e0:	f89d 3056 	ldrb.w	r3, [sp, #86]	@ 0x56
   273e4:	041b      	lsls	r3, r3, #16
   273e6:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   273ea:	f89d 2054 	ldrb.w	r2, [sp, #84]	@ 0x54
   273ee:	4313      	orrs	r3, r2
   273f0:	f89d 2055 	ldrb.w	r2, [sp, #85]	@ 0x55
   273f4:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   273f8:	f3c3 0315 	ubfx	r3, r3, #0, #22
   273fc:	63a3      	str	r3, [r4, #56]	@ 0x38
   273fe:	f89d 2065 	ldrb.w	r2, [sp, #101]	@ 0x65
   27402:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
   27406:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   2740a:	87a3      	strh	r3, [r4, #60]	@ 0x3c
   2740c:	f89d 2077 	ldrb.w	r2, [sp, #119]	@ 0x77
   27410:	f89d 3076 	ldrb.w	r3, [sp, #118]	@ 0x76
   27414:	041b      	lsls	r3, r3, #16
   27416:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   2741a:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
   2741e:	4313      	orrs	r3, r2
   27420:	f89d 2075 	ldrb.w	r2, [sp, #117]	@ 0x75
   27424:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   27428:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
   2742c:	6423      	str	r3, [r4, #64]	@ 0x40
   2742e:	f89d 207b 	ldrb.w	r2, [sp, #123]	@ 0x7b
   27432:	f89d 307a 	ldrb.w	r3, [sp, #122]	@ 0x7a
   27436:	041b      	lsls	r3, r3, #16
   27438:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   2743c:	f89d 2078 	ldrb.w	r2, [sp, #120]	@ 0x78
   27440:	4313      	orrs	r3, r2
   27442:	f89d 2079 	ldrb.w	r2, [sp, #121]	@ 0x79
   27446:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   2744a:	f3c3 0313 	ubfx	r3, r3, #0, #20
   2744e:	6463      	str	r3, [r4, #68]	@ 0x44
   27450:	f89d 207f 	ldrb.w	r2, [sp, #127]	@ 0x7f
   27454:	f89d 307e 	ldrb.w	r3, [sp, #126]	@ 0x7e
   27458:	041b      	lsls	r3, r3, #16
   2745a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   2745e:	f89d 207c 	ldrb.w	r2, [sp, #124]	@ 0x7c
   27462:	4313      	orrs	r3, r2
   27464:	f89d 207d 	ldrb.w	r2, [sp, #125]	@ 0x7d
   27468:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   2746c:	f3c3 0315 	ubfx	r3, r3, #0, #22
   27470:	64a3      	str	r3, [r4, #72]	@ 0x48
   27472:	f89d 2083 	ldrb.w	r2, [sp, #131]	@ 0x83
   27476:	f89d 3082 	ldrb.w	r3, [sp, #130]	@ 0x82
   2747a:	041b      	lsls	r3, r3, #16
   2747c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   27480:	f89d 2080 	ldrb.w	r2, [sp, #128]	@ 0x80
   27484:	4313      	orrs	r3, r2
   27486:	f89d 2081 	ldrb.w	r2, [sp, #129]	@ 0x81
   2748a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   2748e:	f3c3 0315 	ubfx	r3, r3, #0, #22
   27492:	64e3      	str	r3, [r4, #76]	@ 0x4c
   27494:	f89d 2087 	ldrb.w	r2, [sp, #135]	@ 0x87
   27498:	f89d 3086 	ldrb.w	r3, [sp, #134]	@ 0x86
   2749c:	041b      	lsls	r3, r3, #16
   2749e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   274a2:	f89d 2084 	ldrb.w	r2, [sp, #132]	@ 0x84
   274a6:	4313      	orrs	r3, r2
   274a8:	f89d 2085 	ldrb.w	r2, [sp, #133]	@ 0x85
   274ac:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   274b0:	f3c3 0315 	ubfx	r3, r3, #0, #22
   274b4:	6523      	str	r3, [r4, #80]	@ 0x50
   274b6:	f89d 2095 	ldrb.w	r2, [sp, #149]	@ 0x95
   274ba:	f89d 3094 	ldrb.w	r3, [sp, #148]	@ 0x94
   274be:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   274c2:	f3c3 030e 	ubfx	r3, r3, #0, #15
   274c6:	f8a4 3054 	strh.w	r3, [r4, #84]	@ 0x54
   274ca:	f89d 20a5 	ldrb.w	r2, [sp, #165]	@ 0xa5
   274ce:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
   274d2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   274d6:	f3c3 030b 	ubfx	r3, r3, #0, #12
   274da:	f8a4 3056 	strh.w	r3, [r4, #86]	@ 0x56
   274de:	f89d 20bf 	ldrb.w	r2, [sp, #191]	@ 0xbf
   274e2:	f89d 30be 	ldrb.w	r3, [sp, #190]	@ 0xbe
   274e6:	041b      	lsls	r3, r3, #16
   274e8:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   274ec:	f89d 20bc 	ldrb.w	r2, [sp, #188]	@ 0xbc
   274f0:	4313      	orrs	r3, r2
   274f2:	f89d 20bd 	ldrb.w	r2, [sp, #189]	@ 0xbd
   274f6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   274fa:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
   274fe:	65a3      	str	r3, [r4, #88]	@ 0x58
   27500:	f89d 20c3 	ldrb.w	r2, [sp, #195]	@ 0xc3
   27504:	f89d 30c2 	ldrb.w	r3, [sp, #194]	@ 0xc2
   27508:	041b      	lsls	r3, r3, #16
   2750a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   2750e:	f89d 20c0 	ldrb.w	r2, [sp, #192]	@ 0xc0
   27512:	4313      	orrs	r3, r2
   27514:	f89d 20c1 	ldrb.w	r2, [sp, #193]	@ 0xc1
   27518:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   2751c:	f3c3 0313 	ubfx	r3, r3, #0, #20
   27520:	65e3      	str	r3, [r4, #92]	@ 0x5c
   27522:	f89d 20c7 	ldrb.w	r2, [sp, #199]	@ 0xc7
   27526:	f89d 30c6 	ldrb.w	r3, [sp, #198]	@ 0xc6
   2752a:	041b      	lsls	r3, r3, #16
   2752c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   27530:	f89d 20c4 	ldrb.w	r2, [sp, #196]	@ 0xc4
   27534:	4313      	orrs	r3, r2
   27536:	f89d 20c5 	ldrb.w	r2, [sp, #197]	@ 0xc5
   2753a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   2753e:	f3c3 0315 	ubfx	r3, r3, #0, #22
   27542:	6623      	str	r3, [r4, #96]	@ 0x60
   27544:	f89d 20cb 	ldrb.w	r2, [sp, #203]	@ 0xcb
   27548:	f89d 30ca 	ldrb.w	r3, [sp, #202]	@ 0xca
   2754c:	041b      	lsls	r3, r3, #16
   2754e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   27552:	f89d 20c8 	ldrb.w	r2, [sp, #200]	@ 0xc8
   27556:	4313      	orrs	r3, r2
   27558:	f89d 20c9 	ldrb.w	r2, [sp, #201]	@ 0xc9
   2755c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   27560:	f3c3 0315 	ubfx	r3, r3, #0, #22
   27564:	6663      	str	r3, [r4, #100]	@ 0x64
   27566:	f89d 20cf 	ldrb.w	r2, [sp, #207]	@ 0xcf
   2756a:	f89d 30ce 	ldrb.w	r3, [sp, #206]	@ 0xce
   2756e:	041b      	lsls	r3, r3, #16
   27570:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   27574:	f89d 20cc 	ldrb.w	r2, [sp, #204]	@ 0xcc
   27578:	4313      	orrs	r3, r2
   2757a:	f89d 20cd 	ldrb.w	r2, [sp, #205]	@ 0xcd
   2757e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   27582:	f3c3 0315 	ubfx	r3, r3, #0, #22
   27586:	66a3      	str	r3, [r4, #104]	@ 0x68
   27588:	f89d 20dd 	ldrb.w	r2, [sp, #221]	@ 0xdd
   2758c:	f89d 30dc 	ldrb.w	r3, [sp, #220]	@ 0xdc
   27590:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   27594:	f3c3 030e 	ubfx	r3, r3, #0, #15
   27598:	f8a4 306c 	strh.w	r3, [r4, #108]	@ 0x6c
   2759c:	f89d 20ed 	ldrb.w	r2, [sp, #237]	@ 0xed
   275a0:	f89d 30ec 	ldrb.w	r3, [sp, #236]	@ 0xec
   275a4:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   275a8:	f3c3 030b 	ubfx	r3, r3, #0, #12
   275ac:	f8a4 306e 	strh.w	r3, [r4, #110]	@ 0x6e
   275b0:	f994 301b 	ldrsb.w	r3, [r4, #27]
   275b4:	2b00      	cmp	r3, #0
   275b6:	f2c0 81d0 	blt.w	2795a <ull_readdiagnostics+0x77a>
   275ba:	7fe3      	ldrb	r3, [r4, #31]
   275bc:	f003 0301 	and.w	r3, r3, #1
   275c0:	77e3      	strb	r3, [r4, #31]
   275c2:	b03d      	add	sp, #244	@ 0xf4
   275c4:	bd30      	pop	{r4, r5, pc}
   275c6:	ab02      	add	r3, sp, #8
   275c8:	9300      	str	r3, [sp, #0]
   275ca:	23e8      	movs	r3, #232	@ 0xe8
   275cc:	2200      	movs	r2, #0
   275ce:	f44f 11c0 	mov.w	r1, #1572864	@ 0x180000
   275d2:	f7ff fd78 	bl	270c6 <dwt_readfromdevice>
   275d6:	e639      	b.n	2724c <ull_readdiagnostics+0x6c>
   275d8:	7d9b      	ldrb	r3, [r3, #22]
   275da:	f013 0f01 	tst.w	r3, #1
   275de:	f000 81b3 	beq.w	27948 <ull_readdiagnostics+0x768>
   275e2:	ab02      	add	r3, sp, #8
   275e4:	9300      	str	r3, [sp, #0]
   275e6:	236c      	movs	r3, #108	@ 0x6c
   275e8:	2200      	movs	r2, #0
   275ea:	f44f 2140 	mov.w	r1, #786432	@ 0xc0000
   275ee:	f7ff fd6a 	bl	270c6 <dwt_readfromdevice>
   275f2:	ab1d      	add	r3, sp, #116	@ 0x74
   275f4:	9300      	str	r3, [sp, #0]
   275f6:	236c      	movs	r3, #108	@ 0x6c
   275f8:	2200      	movs	r2, #0
   275fa:	f44f 2150 	mov.w	r1, #851968	@ 0xd0000
   275fe:	4628      	mov	r0, r5
   27600:	f7ff fd61 	bl	270c6 <dwt_readfromdevice>
   27604:	aa02      	add	r2, sp, #8
   27606:	1e63      	subs	r3, r4, #1
   27608:	1d20      	adds	r0, r4, #4
   2760a:	f812 1b01 	ldrb.w	r1, [r2], #1
   2760e:	f803 1f01 	strb.w	r1, [r3, #1]!
   27612:	79d1      	ldrb	r1, [r2, #7]
   27614:	7219      	strb	r1, [r3, #8]
   27616:	7bd1      	ldrb	r1, [r2, #15]
   27618:	7459      	strb	r1, [r3, #17]
   2761a:	7dd1      	ldrb	r1, [r2, #23]
   2761c:	7699      	strb	r1, [r3, #26]
   2761e:	4283      	cmp	r3, r0
   27620:	d1f3      	bne.n	2760a <ull_readdiagnostics+0x42a>
   27622:	f89d 3025 	ldrb.w	r3, [sp, #37]	@ 0x25
   27626:	77e3      	strb	r3, [r4, #31]
   27628:	f89d 300f 	ldrb.w	r3, [sp, #15]
   2762c:	7163      	strb	r3, [r4, #5]
   2762e:	f89d 200e 	ldrb.w	r2, [sp, #14]
   27632:	f89d 300d 	ldrb.w	r3, [sp, #13]
   27636:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   2763a:	80e3      	strh	r3, [r4, #6]
   2763c:	f89d 3016 	ldrb.w	r3, [sp, #22]
   27640:	f89d 2017 	ldrb.w	r2, [sp, #23]
   27644:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
   27648:	f3c2 12cf 	ubfx	r2, r2, #7, #16
   2764c:	f8a4 200d 	strh.w	r2, [r4, #13]
   27650:	f89d 2015 	ldrb.w	r2, [sp, #21]
   27654:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
   27658:	f8a4 200f 	strh.w	r2, [r4, #15]
   2765c:	f89d 201f 	ldrb.w	r2, [sp, #31]
   27660:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   27664:	f3c3 13cf 	ubfx	r3, r3, #7, #16
   27668:	82e3      	strh	r3, [r4, #22]
   2766a:	f89d 201e 	ldrb.w	r2, [sp, #30]
   2766e:	f89d 301d 	ldrb.w	r3, [sp, #29]
   27672:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   27676:	8323      	strh	r3, [r4, #24]
   27678:	f89d 2027 	ldrb.w	r2, [sp, #39]	@ 0x27
   2767c:	f89d 3026 	ldrb.w	r3, [sp, #38]	@ 0x26
   27680:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   27684:	f3c3 030d 	ubfx	r3, r3, #0, #14
   27688:	f413 5f00 	tst.w	r3, #8192	@ 0x2000
   2768c:	bf1c      	itt	ne
   2768e:	ea6f 4383 	mvnne.w	r3, r3, lsl #18
   27692:	ea6f 4393 	mvnne.w	r3, r3, lsr #18
   27696:	8423      	strh	r3, [r4, #32]
   27698:	f89d 2029 	ldrb.w	r2, [sp, #41]	@ 0x29
   2769c:	f89d 3028 	ldrb.w	r3, [sp, #40]	@ 0x28
   276a0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   276a4:	f3c3 030c 	ubfx	r3, r3, #0, #13
   276a8:	8463      	strh	r3, [r4, #34]	@ 0x22
   276aa:	f89d 202f 	ldrb.w	r2, [sp, #47]	@ 0x2f
   276ae:	f89d 302e 	ldrb.w	r3, [sp, #46]	@ 0x2e
   276b2:	041b      	lsls	r3, r3, #16
   276b4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   276b8:	f89d 202c 	ldrb.w	r2, [sp, #44]	@ 0x2c
   276bc:	4313      	orrs	r3, r2
   276be:	f89d 202d 	ldrb.w	r2, [sp, #45]	@ 0x2d
   276c2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   276c6:	f023 4360 	bic.w	r3, r3, #3758096384	@ 0xe0000000
   276ca:	6263      	str	r3, [r4, #36]	@ 0x24
   276cc:	6d2b      	ldr	r3, [r5, #80]	@ 0x50
   276ce:	7d9b      	ldrb	r3, [r3, #22]
   276d0:	f013 0f01 	tst.w	r3, #1
   276d4:	f43f af6c 	beq.w	275b0 <ull_readdiagnostics+0x3d0>
   276d8:	f89d 2033 	ldrb.w	r2, [sp, #51]	@ 0x33
   276dc:	f89d 3032 	ldrb.w	r3, [sp, #50]	@ 0x32
   276e0:	041b      	lsls	r3, r3, #16
   276e2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   276e6:	f89d 2030 	ldrb.w	r2, [sp, #48]	@ 0x30
   276ea:	4313      	orrs	r3, r2
   276ec:	f89d 2031 	ldrb.w	r2, [sp, #49]	@ 0x31
   276f0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   276f4:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
   276f8:	62a3      	str	r3, [r4, #40]	@ 0x28
   276fa:	f89d 2037 	ldrb.w	r2, [sp, #55]	@ 0x37
   276fe:	f89d 3036 	ldrb.w	r3, [sp, #54]	@ 0x36
   27702:	041b      	lsls	r3, r3, #16
   27704:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   27708:	f89d 2034 	ldrb.w	r2, [sp, #52]	@ 0x34
   2770c:	4313      	orrs	r3, r2
   2770e:	f89d 2035 	ldrb.w	r2, [sp, #53]	@ 0x35
   27712:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   27716:	f3c3 0313 	ubfx	r3, r3, #0, #20
   2771a:	62e3      	str	r3, [r4, #44]	@ 0x2c
   2771c:	f89d 203b 	ldrb.w	r2, [sp, #59]	@ 0x3b
   27720:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
   27724:	041b      	lsls	r3, r3, #16
   27726:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   2772a:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
   2772e:	4313      	orrs	r3, r2
   27730:	f89d 2039 	ldrb.w	r2, [sp, #57]	@ 0x39
   27734:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   27738:	f3c3 0315 	ubfx	r3, r3, #0, #22
   2773c:	6323      	str	r3, [r4, #48]	@ 0x30
   2773e:	f89d 203f 	ldrb.w	r2, [sp, #63]	@ 0x3f
   27742:	f89d 303e 	ldrb.w	r3, [sp, #62]	@ 0x3e
   27746:	041b      	lsls	r3, r3, #16
   27748:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   2774c:	f89d 203c 	ldrb.w	r2, [sp, #60]	@ 0x3c
   27750:	4313      	orrs	r3, r2
   27752:	f89d 203d 	ldrb.w	r2, [sp, #61]	@ 0x3d
   27756:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   2775a:	f3c3 0315 	ubfx	r3, r3, #0, #22
   2775e:	6363      	str	r3, [r4, #52]	@ 0x34
   27760:	f89d 2043 	ldrb.w	r2, [sp, #67]	@ 0x43
   27764:	f89d 3042 	ldrb.w	r3, [sp, #66]	@ 0x42
   27768:	041b      	lsls	r3, r3, #16
   2776a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   2776e:	f89d 2040 	ldrb.w	r2, [sp, #64]	@ 0x40
   27772:	4313      	orrs	r3, r2
   27774:	f89d 2041 	ldrb.w	r2, [sp, #65]	@ 0x41
   27778:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   2777c:	f3c3 0315 	ubfx	r3, r3, #0, #22
   27780:	63a3      	str	r3, [r4, #56]	@ 0x38
   27782:	f89d 2051 	ldrb.w	r2, [sp, #81]	@ 0x51
   27786:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
   2778a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   2778e:	87a3      	strh	r3, [r4, #60]	@ 0x3c
   27790:	f89d 2061 	ldrb.w	r2, [sp, #97]	@ 0x61
   27794:	f89d 3060 	ldrb.w	r3, [sp, #96]	@ 0x60
   27798:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   2779c:	f3c3 030b 	ubfx	r3, r3, #0, #12
   277a0:	87e3      	strh	r3, [r4, #62]	@ 0x3e
   277a2:	f89d 2067 	ldrb.w	r2, [sp, #103]	@ 0x67
   277a6:	f89d 3066 	ldrb.w	r3, [sp, #102]	@ 0x66
   277aa:	041b      	lsls	r3, r3, #16
   277ac:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   277b0:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
   277b4:	4313      	orrs	r3, r2
   277b6:	f89d 2065 	ldrb.w	r2, [sp, #101]	@ 0x65
   277ba:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   277be:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
   277c2:	6423      	str	r3, [r4, #64]	@ 0x40
   277c4:	f89d 206b 	ldrb.w	r2, [sp, #107]	@ 0x6b
   277c8:	f89d 306a 	ldrb.w	r3, [sp, #106]	@ 0x6a
   277cc:	041b      	lsls	r3, r3, #16
   277ce:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   277d2:	f89d 2068 	ldrb.w	r2, [sp, #104]	@ 0x68
   277d6:	4313      	orrs	r3, r2
   277d8:	f89d 2069 	ldrb.w	r2, [sp, #105]	@ 0x69
   277dc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   277e0:	f3c3 0313 	ubfx	r3, r3, #0, #20
   277e4:	6463      	str	r3, [r4, #68]	@ 0x44
   277e6:	f89d 206f 	ldrb.w	r2, [sp, #111]	@ 0x6f
   277ea:	f89d 306e 	ldrb.w	r3, [sp, #110]	@ 0x6e
   277ee:	041b      	lsls	r3, r3, #16
   277f0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   277f4:	f89d 206c 	ldrb.w	r2, [sp, #108]	@ 0x6c
   277f8:	4313      	orrs	r3, r2
   277fa:	f89d 206d 	ldrb.w	r2, [sp, #109]	@ 0x6d
   277fe:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   27802:	f3c3 0315 	ubfx	r3, r3, #0, #22
   27806:	64a3      	str	r3, [r4, #72]	@ 0x48
   27808:	f89d 2073 	ldrb.w	r2, [sp, #115]	@ 0x73
   2780c:	f89d 3072 	ldrb.w	r3, [sp, #114]	@ 0x72
   27810:	041b      	lsls	r3, r3, #16
   27812:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   27816:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
   2781a:	4313      	orrs	r3, r2
   2781c:	f89d 2071 	ldrb.w	r2, [sp, #113]	@ 0x71
   27820:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   27824:	f3c3 0315 	ubfx	r3, r3, #0, #22
   27828:	64e3      	str	r3, [r4, #76]	@ 0x4c
   2782a:	f89d 2077 	ldrb.w	r2, [sp, #119]	@ 0x77
   2782e:	f89d 3076 	ldrb.w	r3, [sp, #118]	@ 0x76
   27832:	041b      	lsls	r3, r3, #16
   27834:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   27838:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
   2783c:	4313      	orrs	r3, r2
   2783e:	f89d 2075 	ldrb.w	r2, [sp, #117]	@ 0x75
   27842:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   27846:	f3c3 0315 	ubfx	r3, r3, #0, #22
   2784a:	6523      	str	r3, [r4, #80]	@ 0x50
   2784c:	f89d 2085 	ldrb.w	r2, [sp, #133]	@ 0x85
   27850:	f89d 3084 	ldrb.w	r3, [sp, #132]	@ 0x84
   27854:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   27858:	f3c3 030e 	ubfx	r3, r3, #0, #15
   2785c:	f8a4 3054 	strh.w	r3, [r4, #84]	@ 0x54
   27860:	f89d 2095 	ldrb.w	r2, [sp, #149]	@ 0x95
   27864:	f89d 3094 	ldrb.w	r3, [sp, #148]	@ 0x94
   27868:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   2786c:	f3c3 030b 	ubfx	r3, r3, #0, #12
   27870:	f8a4 3056 	strh.w	r3, [r4, #86]	@ 0x56
   27874:	f89d 20af 	ldrb.w	r2, [sp, #175]	@ 0xaf
   27878:	f89d 30ae 	ldrb.w	r3, [sp, #174]	@ 0xae
   2787c:	041b      	lsls	r3, r3, #16
   2787e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   27882:	f89d 20ac 	ldrb.w	r2, [sp, #172]	@ 0xac
   27886:	4313      	orrs	r3, r2
   27888:	f89d 20ad 	ldrb.w	r2, [sp, #173]	@ 0xad
   2788c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   27890:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
   27894:	65a3      	str	r3, [r4, #88]	@ 0x58
   27896:	f89d 20b3 	ldrb.w	r2, [sp, #179]	@ 0xb3
   2789a:	f89d 30b2 	ldrb.w	r3, [sp, #178]	@ 0xb2
   2789e:	041b      	lsls	r3, r3, #16
   278a0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   278a4:	f89d 20b0 	ldrb.w	r2, [sp, #176]	@ 0xb0
   278a8:	4313      	orrs	r3, r2
   278aa:	f89d 20b1 	ldrb.w	r2, [sp, #177]	@ 0xb1
   278ae:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   278b2:	f3c3 0313 	ubfx	r3, r3, #0, #20
   278b6:	65e3      	str	r3, [r4, #92]	@ 0x5c
   278b8:	f89d 20b7 	ldrb.w	r2, [sp, #183]	@ 0xb7
   278bc:	f89d 30b6 	ldrb.w	r3, [sp, #182]	@ 0xb6
   278c0:	041b      	lsls	r3, r3, #16
   278c2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   278c6:	f89d 20b4 	ldrb.w	r2, [sp, #180]	@ 0xb4
   278ca:	4313      	orrs	r3, r2
   278cc:	f89d 20b5 	ldrb.w	r2, [sp, #181]	@ 0xb5
   278d0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   278d4:	f3c3 0315 	ubfx	r3, r3, #0, #22
   278d8:	6623      	str	r3, [r4, #96]	@ 0x60
   278da:	f89d 20bb 	ldrb.w	r2, [sp, #187]	@ 0xbb
   278de:	f89d 30ba 	ldrb.w	r3, [sp, #186]	@ 0xba
   278e2:	041b      	lsls	r3, r3, #16
   278e4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   278e8:	f89d 20b8 	ldrb.w	r2, [sp, #184]	@ 0xb8
   278ec:	4313      	orrs	r3, r2
   278ee:	f89d 20b9 	ldrb.w	r2, [sp, #185]	@ 0xb9
   278f2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   278f6:	f3c3 0315 	ubfx	r3, r3, #0, #22
   278fa:	6663      	str	r3, [r4, #100]	@ 0x64
   278fc:	f89d 20bf 	ldrb.w	r2, [sp, #191]	@ 0xbf
   27900:	f89d 30be 	ldrb.w	r3, [sp, #190]	@ 0xbe
   27904:	041b      	lsls	r3, r3, #16
   27906:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
   2790a:	f89d 20bc 	ldrb.w	r2, [sp, #188]	@ 0xbc
   2790e:	4313      	orrs	r3, r2
   27910:	f89d 20bd 	ldrb.w	r2, [sp, #189]	@ 0xbd
   27914:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   27918:	f3c3 0315 	ubfx	r3, r3, #0, #22
   2791c:	66a3      	str	r3, [r4, #104]	@ 0x68
   2791e:	f89d 20cd 	ldrb.w	r2, [sp, #205]	@ 0xcd
   27922:	f89d 30cc 	ldrb.w	r3, [sp, #204]	@ 0xcc
   27926:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   2792a:	f3c3 030e 	ubfx	r3, r3, #0, #15
   2792e:	f8a4 306c 	strh.w	r3, [r4, #108]	@ 0x6c
   27932:	f89d 20dd 	ldrb.w	r2, [sp, #221]	@ 0xdd
   27936:	f89d 30dc 	ldrb.w	r3, [sp, #220]	@ 0xdc
   2793a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   2793e:	f3c3 030b 	ubfx	r3, r3, #0, #12
   27942:	f8a4 306e 	strh.w	r3, [r4, #110]	@ 0x6e
   27946:	e633      	b.n	275b0 <ull_readdiagnostics+0x3d0>
   27948:	ab02      	add	r3, sp, #8
   2794a:	9300      	str	r3, [sp, #0]
   2794c:	2328      	movs	r3, #40	@ 0x28
   2794e:	2200      	movs	r2, #0
   27950:	f44f 2140 	mov.w	r1, #786432	@ 0xc0000
   27954:	f7ff fbb7 	bl	270c6 <dwt_readfromdevice>
   27958:	e654      	b.n	27604 <ull_readdiagnostics+0x424>
   2795a:	23ff      	movs	r3, #255	@ 0xff
   2795c:	7723      	strb	r3, [r4, #28]
   2795e:	7763      	strb	r3, [r4, #29]
   27960:	77a3      	strb	r3, [r4, #30]
   27962:	77e3      	strb	r3, [r4, #31]
   27964:	e629      	b.n	275ba <ull_readdiagnostics+0x3da>
	...

00027968 <ull_readrxtimestamp>:
   27968:	b500      	push	{lr}
   2796a:	b083      	sub	sp, #12
   2796c:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   2796e:	7b9b      	ldrb	r3, [r3, #14]
   27970:	2b01      	cmp	r3, #1
   27972:	d00b      	beq.n	2798c <ull_readrxtimestamp+0x24>
   27974:	2b03      	cmp	r3, #3
   27976:	d110      	bne.n	2799a <ull_readrxtimestamp+0x32>
   27978:	9100      	str	r1, [sp, #0]
   2797a:	2305      	movs	r3, #5
   2797c:	2204      	movs	r2, #4
   2797e:	f44f 11f0 	mov.w	r1, #1966080	@ 0x1e0000
   27982:	f7ff fba0 	bl	270c6 <dwt_readfromdevice>
   27986:	b003      	add	sp, #12
   27988:	f85d fb04 	ldr.w	pc, [sp], #4
   2798c:	9100      	str	r1, [sp, #0]
   2798e:	2305      	movs	r3, #5
   27990:	2200      	movs	r2, #0
   27992:	4905      	ldr	r1, [pc, #20]	@ (279a8 <ull_readrxtimestamp+0x40>)
   27994:	f7ff fb97 	bl	270c6 <dwt_readfromdevice>
   27998:	e7f5      	b.n	27986 <ull_readrxtimestamp+0x1e>
   2799a:	9100      	str	r1, [sp, #0]
   2799c:	2305      	movs	r3, #5
   2799e:	2200      	movs	r2, #0
   279a0:	2160      	movs	r1, #96	@ 0x60
   279a2:	f7ff fb90 	bl	270c6 <dwt_readfromdevice>
   279a6:	e7ee      	b.n	27986 <ull_readrxtimestamp+0x1e>
   279a8:	00180004 	.word	0x00180004

000279ac <dwt_writetodevice>:
   279ac:	b510      	push	{r4, lr}
   279ae:	b082      	sub	sp, #8
   279b0:	f44f 4400 	mov.w	r4, #32768	@ 0x8000
   279b4:	9401      	str	r4, [sp, #4]
   279b6:	9c04      	ldr	r4, [sp, #16]
   279b8:	9400      	str	r4, [sp, #0]
   279ba:	f7ff fb06 	bl	26fca <dwt_xfer3xxx>
   279be:	b002      	add	sp, #8
   279c0:	bd10      	pop	{r4, pc}

000279c2 <dwt_write16bitoffsetreg>:
   279c2:	b500      	push	{lr}
   279c4:	b085      	sub	sp, #20
   279c6:	f88d 300c 	strb.w	r3, [sp, #12]
   279ca:	0a1b      	lsrs	r3, r3, #8
   279cc:	f88d 300d 	strb.w	r3, [sp, #13]
   279d0:	ab03      	add	r3, sp, #12
   279d2:	9300      	str	r3, [sp, #0]
   279d4:	2302      	movs	r3, #2
   279d6:	b292      	uxth	r2, r2
   279d8:	f7ff ffe8 	bl	279ac <dwt_writetodevice>
   279dc:	b005      	add	sp, #20
   279de:	f85d fb04 	ldr.w	pc, [sp], #4

000279e2 <ull_setrxantennadelay>:
   279e2:	b508      	push	{r3, lr}
   279e4:	460b      	mov	r3, r1
   279e6:	2200      	movs	r2, #0
   279e8:	f44f 2160 	mov.w	r1, #917504	@ 0xe0000
   279ec:	f7ff ffe9 	bl	279c2 <dwt_write16bitoffsetreg>
   279f0:	bd08      	pop	{r3, pc}

000279f2 <ull_settxantennadelay>:
   279f2:	b508      	push	{r3, lr}
   279f4:	460b      	mov	r3, r1
   279f6:	2200      	movs	r2, #0
   279f8:	217c      	movs	r1, #124	@ 0x7c
   279fa:	f7ff ffe2 	bl	279c2 <dwt_write16bitoffsetreg>
   279fe:	bd08      	pop	{r3, pc}

00027a00 <ull_force_clocks>:
   27a00:	b508      	push	{r3, lr}
   27a02:	2901      	cmp	r1, #1
   27a04:	d002      	beq.n	27a0c <ull_force_clocks+0xc>
   27a06:	2905      	cmp	r1, #5
   27a08:	d007      	beq.n	27a1a <ull_force_clocks+0x1a>
   27a0a:	bd08      	pop	{r3, pc}
   27a0c:	f641 0322 	movw	r3, #6178	@ 0x1822
   27a10:	2200      	movs	r2, #0
   27a12:	4905      	ldr	r1, [pc, #20]	@ (27a28 <ull_force_clocks+0x28>)
   27a14:	f7ff ffd5 	bl	279c2 <dwt_write16bitoffsetreg>
   27a18:	e7f7      	b.n	27a0a <ull_force_clocks+0xa>
   27a1a:	f44f 7300 	mov.w	r3, #512	@ 0x200
   27a1e:	2200      	movs	r2, #0
   27a20:	4901      	ldr	r1, [pc, #4]	@ (27a28 <ull_force_clocks+0x28>)
   27a22:	f7ff ffce 	bl	279c2 <dwt_write16bitoffsetreg>
   27a26:	e7f0      	b.n	27a0a <ull_force_clocks+0xa>
   27a28:	00110004 	.word	0x00110004

00027a2c <__dwt_otp_write_wdata_id_reg>:
   27a2c:	b538      	push	{r3, r4, r5, lr}
   27a2e:	4605      	mov	r5, r0
   27a30:	460c      	mov	r4, r1
   27a32:	f441 7300 	orr.w	r3, r1, #512	@ 0x200
   27a36:	b29b      	uxth	r3, r3
   27a38:	2200      	movs	r2, #0
   27a3a:	f44f 2130 	mov.w	r1, #720896	@ 0xb0000
   27a3e:	f7ff ffc0 	bl	279c2 <dwt_write16bitoffsetreg>
   27a42:	b2a3      	uxth	r3, r4
   27a44:	2200      	movs	r2, #0
   27a46:	f44f 2130 	mov.w	r1, #720896	@ 0xb0000
   27a4a:	4628      	mov	r0, r5
   27a4c:	f7ff ffb9 	bl	279c2 <dwt_write16bitoffsetreg>
   27a50:	bd38      	pop	{r3, r4, r5, pc}
	...

00027a54 <_dwt_otpread>:
   27a54:	b570      	push	{r4, r5, r6, lr}
   27a56:	4604      	mov	r4, r0
   27a58:	460e      	mov	r6, r1
   27a5a:	4d0c      	ldr	r5, [pc, #48]	@ (27a8c <_dwt_otpread+0x38>)
   27a5c:	2301      	movs	r3, #1
   27a5e:	2200      	movs	r2, #0
   27a60:	4629      	mov	r1, r5
   27a62:	f7ff ffae 	bl	279c2 <dwt_write16bitoffsetreg>
   27a66:	4633      	mov	r3, r6
   27a68:	2200      	movs	r2, #0
   27a6a:	4909      	ldr	r1, [pc, #36]	@ (27a90 <_dwt_otpread+0x3c>)
   27a6c:	4620      	mov	r0, r4
   27a6e:	f7ff ffa8 	bl	279c2 <dwt_write16bitoffsetreg>
   27a72:	2302      	movs	r3, #2
   27a74:	2200      	movs	r2, #0
   27a76:	4629      	mov	r1, r5
   27a78:	4620      	mov	r0, r4
   27a7a:	f7ff ffa2 	bl	279c2 <dwt_write16bitoffsetreg>
   27a7e:	2200      	movs	r2, #0
   27a80:	4904      	ldr	r1, [pc, #16]	@ (27a94 <_dwt_otpread+0x40>)
   27a82:	4620      	mov	r0, r4
   27a84:	f7ff fb29 	bl	270da <dwt_read32bitoffsetreg>
   27a88:	bd70      	pop	{r4, r5, r6, pc}
   27a8a:	bf00      	nop
   27a8c:	000b0008 	.word	0x000b0008
   27a90:	000b0004 	.word	0x000b0004
   27a94:	000b0010 	.word	0x000b0010

00027a98 <dwt_write32bitoffsetreg>:
   27a98:	b510      	push	{r4, lr}
   27a9a:	b084      	sub	sp, #16
   27a9c:	f88d 300c 	strb.w	r3, [sp, #12]
   27aa0:	0a1c      	lsrs	r4, r3, #8
   27aa2:	f88d 400d 	strb.w	r4, [sp, #13]
   27aa6:	0c1c      	lsrs	r4, r3, #16
   27aa8:	f88d 400e 	strb.w	r4, [sp, #14]
   27aac:	0e1b      	lsrs	r3, r3, #24
   27aae:	f88d 300f 	strb.w	r3, [sp, #15]
   27ab2:	ab03      	add	r3, sp, #12
   27ab4:	9300      	str	r3, [sp, #0]
   27ab6:	2304      	movs	r3, #4
   27ab8:	b292      	uxth	r2, r2
   27aba:	f7ff ff77 	bl	279ac <dwt_writetodevice>
   27abe:	b004      	add	sp, #16
   27ac0:	bd10      	pop	{r4, pc}

00027ac2 <_dwt_adjust_delaytime>:
   27ac2:	b538      	push	{r3, r4, r5, lr}
   27ac4:	4604      	mov	r4, r0
   27ac6:	b989      	cbnz	r1, 27aec <_dwt_adjust_delaytime+0x2a>
   27ac8:	2200      	movs	r2, #0
   27aca:	2128      	movs	r1, #40	@ 0x28
   27acc:	f7ff fb05 	bl	270da <dwt_read32bitoffsetreg>
   27ad0:	4605      	mov	r5, r0
   27ad2:	2201      	movs	r2, #1
   27ad4:	f44f 2160 	mov.w	r1, #917504	@ 0xe0000
   27ad8:	4620      	mov	r0, r4
   27ada:	f7ff fb53 	bl	27184 <dwt_read8bitoffsetreg>
   27ade:	1a2b      	subs	r3, r5, r0
   27ae0:	2200      	movs	r2, #0
   27ae2:	2128      	movs	r1, #40	@ 0x28
   27ae4:	4620      	mov	r0, r4
   27ae6:	f7ff ffd7 	bl	27a98 <dwt_write32bitoffsetreg>
   27aea:	bd38      	pop	{r3, r4, r5, pc}
   27aec:	2200      	movs	r2, #0
   27aee:	2128      	movs	r1, #40	@ 0x28
   27af0:	f7ff faf3 	bl	270da <dwt_read32bitoffsetreg>
   27af4:	4605      	mov	r5, r0
   27af6:	2201      	movs	r2, #1
   27af8:	217c      	movs	r1, #124	@ 0x7c
   27afa:	4620      	mov	r0, r4
   27afc:	f7ff fb42 	bl	27184 <dwt_read8bitoffsetreg>
   27b00:	1a2b      	subs	r3, r5, r0
   27b02:	2200      	movs	r2, #0
   27b04:	2128      	movs	r1, #40	@ 0x28
   27b06:	4620      	mov	r0, r4
   27b08:	f7ff ffc6 	bl	27a98 <dwt_write32bitoffsetreg>
   27b0c:	e7ed      	b.n	27aea <_dwt_adjust_delaytime+0x28>

00027b0e <ull_setrxaftertxdelay>:
   27b0e:	b538      	push	{r3, r4, r5, lr}
   27b10:	4605      	mov	r5, r0
   27b12:	460c      	mov	r4, r1
   27b14:	2200      	movs	r2, #0
   27b16:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
   27b1a:	f7ff fade 	bl	270da <dwt_read32bitoffsetreg>
   27b1e:	0d00      	lsrs	r0, r0, #20
   27b20:	0500      	lsls	r0, r0, #20
   27b22:	f3c4 0313 	ubfx	r3, r4, #0, #20
   27b26:	4303      	orrs	r3, r0
   27b28:	2200      	movs	r2, #0
   27b2a:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
   27b2e:	4628      	mov	r0, r5
   27b30:	f7ff ffb2 	bl	27a98 <dwt_write32bitoffsetreg>
   27b34:	bd38      	pop	{r3, r4, r5, pc}
	...

00027b38 <ull_setfinegraintxseq>:
   27b38:	b508      	push	{r3, lr}
   27b3a:	b929      	cbnz	r1, 27b48 <ull_setfinegraintxseq+0x10>
   27b3c:	4b05      	ldr	r3, [pc, #20]	@ (27b54 <ull_setfinegraintxseq+0x1c>)
   27b3e:	2202      	movs	r2, #2
   27b40:	4905      	ldr	r1, [pc, #20]	@ (27b58 <ull_setfinegraintxseq+0x20>)
   27b42:	f7ff ffa9 	bl	27a98 <dwt_write32bitoffsetreg>
   27b46:	bd08      	pop	{r3, pc}
   27b48:	4b04      	ldr	r3, [pc, #16]	@ (27b5c <ull_setfinegraintxseq+0x24>)
   27b4a:	2202      	movs	r2, #2
   27b4c:	4902      	ldr	r1, [pc, #8]	@ (27b58 <ull_setfinegraintxseq+0x20>)
   27b4e:	f7ff ffa3 	bl	27a98 <dwt_write32bitoffsetreg>
   27b52:	e7f8      	b.n	27b46 <ull_setfinegraintxseq+0xe>
   27b54:	00d20874 	.word	0x00d20874
   27b58:	00110010 	.word	0x00110010
   27b5c:	04d28874 	.word	0x04d28874

00027b60 <ull_setlnapamode>:
   27b60:	b538      	push	{r3, r4, r5, lr}
   27b62:	4605      	mov	r5, r0
   27b64:	460c      	mov	r4, r1
   27b66:	2200      	movs	r2, #0
   27b68:	f44f 21a0 	mov.w	r1, #327680	@ 0x50000
   27b6c:	f7ff fab5 	bl	270da <dwt_read32bitoffsetreg>
   27b70:	f420 337c 	bic.w	r3, r0, #258048	@ 0x3f000
   27b74:	f014 0f01 	tst.w	r4, #1
   27b78:	bf18      	it	ne
   27b7a:	f443 3380 	orrne.w	r3, r3, #65536	@ 0x10000
   27b7e:	f014 0f02 	tst.w	r4, #2
   27b82:	bf18      	it	ne
   27b84:	f443 5300 	orrne.w	r3, r3, #8192	@ 0x2000
   27b88:	f014 0f04 	tst.w	r4, #4
   27b8c:	bf18      	it	ne
   27b8e:	f443 3390 	orrne.w	r3, r3, #73728	@ 0x12000
   27b92:	2200      	movs	r2, #0
   27b94:	f44f 21a0 	mov.w	r1, #327680	@ 0x50000
   27b98:	4628      	mov	r0, r5
   27b9a:	f7ff ff7d 	bl	27a98 <dwt_write32bitoffsetreg>
   27b9e:	bd38      	pop	{r3, r4, r5, pc}

00027ba0 <ull_configurestskey>:
   27ba0:	b538      	push	{r3, r4, r5, lr}
   27ba2:	4605      	mov	r5, r0
   27ba4:	460c      	mov	r4, r1
   27ba6:	680b      	ldr	r3, [r1, #0]
   27ba8:	2200      	movs	r2, #0
   27baa:	490b      	ldr	r1, [pc, #44]	@ (27bd8 <ull_configurestskey+0x38>)
   27bac:	f7ff ff74 	bl	27a98 <dwt_write32bitoffsetreg>
   27bb0:	6863      	ldr	r3, [r4, #4]
   27bb2:	2200      	movs	r2, #0
   27bb4:	4909      	ldr	r1, [pc, #36]	@ (27bdc <ull_configurestskey+0x3c>)
   27bb6:	4628      	mov	r0, r5
   27bb8:	f7ff ff6e 	bl	27a98 <dwt_write32bitoffsetreg>
   27bbc:	68a3      	ldr	r3, [r4, #8]
   27bbe:	2200      	movs	r2, #0
   27bc0:	4907      	ldr	r1, [pc, #28]	@ (27be0 <ull_configurestskey+0x40>)
   27bc2:	4628      	mov	r0, r5
   27bc4:	f7ff ff68 	bl	27a98 <dwt_write32bitoffsetreg>
   27bc8:	68e3      	ldr	r3, [r4, #12]
   27bca:	2200      	movs	r2, #0
   27bcc:	4905      	ldr	r1, [pc, #20]	@ (27be4 <ull_configurestskey+0x44>)
   27bce:	4628      	mov	r0, r5
   27bd0:	f7ff ff62 	bl	27a98 <dwt_write32bitoffsetreg>
   27bd4:	bd38      	pop	{r3, r4, r5, pc}
   27bd6:	bf00      	nop
   27bd8:	0002000c 	.word	0x0002000c
   27bdc:	00020010 	.word	0x00020010
   27be0:	00020014 	.word	0x00020014
   27be4:	00020018 	.word	0x00020018

00027be8 <ull_configurestsiv>:
   27be8:	b538      	push	{r3, r4, r5, lr}
   27bea:	4605      	mov	r5, r0
   27bec:	460c      	mov	r4, r1
   27bee:	680b      	ldr	r3, [r1, #0]
   27bf0:	2200      	movs	r2, #0
   27bf2:	490b      	ldr	r1, [pc, #44]	@ (27c20 <ull_configurestsiv+0x38>)
   27bf4:	f7ff ff50 	bl	27a98 <dwt_write32bitoffsetreg>
   27bf8:	6863      	ldr	r3, [r4, #4]
   27bfa:	2200      	movs	r2, #0
   27bfc:	4909      	ldr	r1, [pc, #36]	@ (27c24 <ull_configurestsiv+0x3c>)
   27bfe:	4628      	mov	r0, r5
   27c00:	f7ff ff4a 	bl	27a98 <dwt_write32bitoffsetreg>
   27c04:	68a3      	ldr	r3, [r4, #8]
   27c06:	2200      	movs	r2, #0
   27c08:	4907      	ldr	r1, [pc, #28]	@ (27c28 <ull_configurestsiv+0x40>)
   27c0a:	4628      	mov	r0, r5
   27c0c:	f7ff ff44 	bl	27a98 <dwt_write32bitoffsetreg>
   27c10:	68e3      	ldr	r3, [r4, #12]
   27c12:	2200      	movs	r2, #0
   27c14:	4905      	ldr	r1, [pc, #20]	@ (27c2c <ull_configurestsiv+0x44>)
   27c16:	4628      	mov	r0, r5
   27c18:	f7ff ff3e 	bl	27a98 <dwt_write32bitoffsetreg>
   27c1c:	bd38      	pop	{r3, r4, r5, pc}
   27c1e:	bf00      	nop
   27c20:	0002001c 	.word	0x0002001c
   27c24:	00020020 	.word	0x00020020
   27c28:	00020024 	.word	0x00020024
   27c2c:	00020028 	.word	0x00020028

00027c30 <ull_configmrxlut>:
   27c30:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27c34:	4604      	mov	r4, r0
   27c36:	4d35      	ldr	r5, [pc, #212]	@ (27d0c <ull_configmrxlut+0xdc>)
   27c38:	4b35      	ldr	r3, [pc, #212]	@ (27d10 <ull_configmrxlut+0xe0>)
   27c3a:	2905      	cmp	r1, #5
   27c3c:	bf18      	it	ne
   27c3e:	461d      	movne	r5, r3
   27c40:	4e34      	ldr	r6, [pc, #208]	@ (27d14 <ull_configmrxlut+0xe4>)
   27c42:	f5a3 7302 	sub.w	r3, r3, #520	@ 0x208
   27c46:	2905      	cmp	r1, #5
   27c48:	bf18      	it	ne
   27c4a:	461e      	movne	r6, r3
   27c4c:	4f32      	ldr	r7, [pc, #200]	@ (27d18 <ull_configmrxlut+0xe8>)
   27c4e:	f503 73a0 	add.w	r3, r3, #320	@ 0x140
   27c52:	2905      	cmp	r1, #5
   27c54:	bf18      	it	ne
   27c56:	461f      	movne	r7, r3
   27c58:	4a30      	ldr	r2, [pc, #192]	@ (27d1c <ull_configmrxlut+0xec>)
   27c5a:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
   27c5e:	2905      	cmp	r1, #5
   27c60:	bf0c      	ite	eq
   27c62:	4690      	moveq	r8, r2
   27c64:	4698      	movne	r8, r3
   27c66:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
   27c6a:	f5a3 5388 	sub.w	r3, r3, #4352	@ 0x1100
   27c6e:	2905      	cmp	r1, #5
   27c70:	bf0c      	ite	eq
   27c72:	4691      	moveq	r9, r2
   27c74:	4699      	movne	r9, r3
   27c76:	4a2a      	ldr	r2, [pc, #168]	@ (27d20 <ull_configmrxlut+0xf0>)
   27c78:	f5a3 63af 	sub.w	r3, r3, #1400	@ 0x578
   27c7c:	2905      	cmp	r1, #5
   27c7e:	bf0c      	ite	eq
   27c80:	4692      	moveq	sl, r2
   27c82:	469a      	movne	sl, r3
   27c84:	4b27      	ldr	r3, [pc, #156]	@ (27d24 <ull_configmrxlut+0xf4>)
   27c86:	4a28      	ldr	r2, [pc, #160]	@ (27d28 <ull_configmrxlut+0xf8>)
   27c88:	2905      	cmp	r1, #5
   27c8a:	bf0c      	ite	eq
   27c8c:	469b      	moveq	fp, r3
   27c8e:	4693      	movne	fp, r2
   27c90:	f44f 7310 	mov.w	r3, #576	@ 0x240
   27c94:	2200      	movs	r2, #0
   27c96:	4925      	ldr	r1, [pc, #148]	@ (27d2c <ull_configmrxlut+0xfc>)
   27c98:	f7ff fefe 	bl	27a98 <dwt_write32bitoffsetreg>
   27c9c:	4b24      	ldr	r3, [pc, #144]	@ (27d30 <ull_configmrxlut+0x100>)
   27c9e:	2200      	movs	r2, #0
   27ca0:	4924      	ldr	r1, [pc, #144]	@ (27d34 <ull_configmrxlut+0x104>)
   27ca2:	4620      	mov	r0, r4
   27ca4:	f7ff fef8 	bl	27a98 <dwt_write32bitoffsetreg>
   27ca8:	4b23      	ldr	r3, [pc, #140]	@ (27d38 <ull_configmrxlut+0x108>)
   27caa:	2200      	movs	r2, #0
   27cac:	4923      	ldr	r1, [pc, #140]	@ (27d3c <ull_configmrxlut+0x10c>)
   27cae:	4620      	mov	r0, r4
   27cb0:	f7ff fef2 	bl	27a98 <dwt_write32bitoffsetreg>
   27cb4:	465b      	mov	r3, fp
   27cb6:	2200      	movs	r2, #0
   27cb8:	4921      	ldr	r1, [pc, #132]	@ (27d40 <ull_configmrxlut+0x110>)
   27cba:	4620      	mov	r0, r4
   27cbc:	f7ff feec 	bl	27a98 <dwt_write32bitoffsetreg>
   27cc0:	4653      	mov	r3, sl
   27cc2:	2200      	movs	r2, #0
   27cc4:	491f      	ldr	r1, [pc, #124]	@ (27d44 <ull_configmrxlut+0x114>)
   27cc6:	4620      	mov	r0, r4
   27cc8:	f7ff fee6 	bl	27a98 <dwt_write32bitoffsetreg>
   27ccc:	464b      	mov	r3, r9
   27cce:	2200      	movs	r2, #0
   27cd0:	491d      	ldr	r1, [pc, #116]	@ (27d48 <ull_configmrxlut+0x118>)
   27cd2:	4620      	mov	r0, r4
   27cd4:	f7ff fee0 	bl	27a98 <dwt_write32bitoffsetreg>
   27cd8:	4643      	mov	r3, r8
   27cda:	2200      	movs	r2, #0
   27cdc:	491b      	ldr	r1, [pc, #108]	@ (27d4c <ull_configmrxlut+0x11c>)
   27cde:	4620      	mov	r0, r4
   27ce0:	f7ff feda 	bl	27a98 <dwt_write32bitoffsetreg>
   27ce4:	463b      	mov	r3, r7
   27ce6:	2200      	movs	r2, #0
   27ce8:	4919      	ldr	r1, [pc, #100]	@ (27d50 <ull_configmrxlut+0x120>)
   27cea:	4620      	mov	r0, r4
   27cec:	f7ff fed4 	bl	27a98 <dwt_write32bitoffsetreg>
   27cf0:	4633      	mov	r3, r6
   27cf2:	2200      	movs	r2, #0
   27cf4:	4917      	ldr	r1, [pc, #92]	@ (27d54 <ull_configmrxlut+0x124>)
   27cf6:	4620      	mov	r0, r4
   27cf8:	f7ff fece 	bl	27a98 <dwt_write32bitoffsetreg>
   27cfc:	462b      	mov	r3, r5
   27cfe:	2200      	movs	r2, #0
   27d00:	4915      	ldr	r1, [pc, #84]	@ (27d58 <ull_configmrxlut+0x128>)
   27d02:	4620      	mov	r0, r4
   27d04:	f7ff fec8 	bl	27a98 <dwt_write32bitoffsetreg>
   27d08:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27d0c:	00039ff6 	.word	0x00039ff6
   27d10:	00055ffe 	.word	0x00055ffe
   27d14:	00039dfe 	.word	0x00039dfe
   27d18:	00039c7e 	.word	0x00039c7e
   27d1c:	00038efe 	.word	0x00038efe
   27d20:	0003876e 	.word	0x0003876e
   27d24:	0003803e 	.word	0x0003803e
   27d28:	0005407e 	.word	0x0005407e
   27d2c:	0003001c 	.word	0x0003001c
   27d30:	1a491248 	.word	0x1a491248
   27d34:	00030020 	.word	0x00030020
   27d38:	2db248db 	.word	0x2db248db
   27d3c:	00030024 	.word	0x00030024
   27d40:	0003002c 	.word	0x0003002c
   27d44:	00030030 	.word	0x00030030
   27d48:	00030034 	.word	0x00030034
   27d4c:	00030038 	.word	0x00030038
   27d50:	0003003c 	.word	0x0003003c
   27d54:	00030040 	.word	0x00030040
   27d58:	00030044 	.word	0x00030044

00027d5c <ull_disable_rftx_blocks>:
   27d5c:	b508      	push	{r3, lr}
   27d5e:	2300      	movs	r3, #0
   27d60:	461a      	mov	r2, r3
   27d62:	4902      	ldr	r1, [pc, #8]	@ (27d6c <ull_disable_rftx_blocks+0x10>)
   27d64:	f7ff fe98 	bl	27a98 <dwt_write32bitoffsetreg>
   27d68:	bd08      	pop	{r3, pc}
   27d6a:	bf00      	nop
   27d6c:	00070004 	.word	0x00070004

00027d70 <ull_disable_rf_tx>:
   27d70:	b538      	push	{r3, r4, r5, lr}
   27d72:	4604      	mov	r4, r0
   27d74:	460d      	mov	r5, r1
   27d76:	2300      	movs	r3, #0
   27d78:	461a      	mov	r2, r3
   27d7a:	490a      	ldr	r1, [pc, #40]	@ (27da4 <ull_disable_rf_tx+0x34>)
   27d7c:	f7ff fe8c 	bl	27a98 <dwt_write32bitoffsetreg>
   27d80:	2300      	movs	r3, #0
   27d82:	461a      	mov	r2, r3
   27d84:	f44f 21e0 	mov.w	r1, #458752	@ 0x70000
   27d88:	4620      	mov	r0, r4
   27d8a:	f7ff fe85 	bl	27a98 <dwt_write32bitoffsetreg>
   27d8e:	b905      	cbnz	r5, 27d92 <ull_disable_rf_tx+0x22>
   27d90:	bd38      	pop	{r3, r4, r5, pc}
   27d92:	f04f 53e0 	mov.w	r3, #469762048	@ 0x1c000000
   27d96:	2200      	movs	r2, #0
   27d98:	4903      	ldr	r1, [pc, #12]	@ (27da8 <ull_disable_rf_tx+0x38>)
   27d9a:	4620      	mov	r0, r4
   27d9c:	f7ff fe7c 	bl	27a98 <dwt_write32bitoffsetreg>
   27da0:	e7f6      	b.n	27d90 <ull_disable_rf_tx+0x20>
   27da2:	bf00      	nop
   27da4:	00070048 	.word	0x00070048
   27da8:	00070014 	.word	0x00070014

00027dac <ull_repeated_cw>:
   27dac:	b570      	push	{r4, r5, r6, lr}
   27dae:	4606      	mov	r6, r0
   27db0:	460c      	mov	r4, r1
   27db2:	4615      	mov	r5, r2
   27db4:	2100      	movs	r1, #0
   27db6:	f7ff febf 	bl	27b38 <ull_setfinegraintxseq>
   27dba:	2d0f      	cmp	r5, #15
   27dbc:	bfa8      	it	ge
   27dbe:	250f      	movge	r5, #15
   27dc0:	1e63      	subs	r3, r4, #1
   27dc2:	2b03      	cmp	r3, #3
   27dc4:	bf28      	it	cs
   27dc6:	2404      	movcs	r4, #4
   27dc8:	2310      	movs	r3, #16
   27dca:	4123      	asrs	r3, r4
   27dcc:	2200      	movs	r2, #0
   27dce:	4907      	ldr	r1, [pc, #28]	@ (27dec <ull_repeated_cw+0x40>)
   27dd0:	4630      	mov	r0, r6
   27dd2:	f7ff fe61 	bl	27a98 <dwt_write32bitoffsetreg>
   27dd6:	1e63      	subs	r3, r4, #1
   27dd8:	009b      	lsls	r3, r3, #2
   27dda:	fa05 f303 	lsl.w	r3, r5, r3
   27dde:	2200      	movs	r2, #0
   27de0:	4903      	ldr	r1, [pc, #12]	@ (27df0 <ull_repeated_cw+0x44>)
   27de2:	4630      	mov	r0, r6
   27de4:	f7ff fe58 	bl	27a98 <dwt_write32bitoffsetreg>
   27de8:	bd70      	pop	{r4, r5, r6, pc}
   27dea:	bf00      	nop
   27dec:	00070028 	.word	0x00070028
   27df0:	00080018 	.word	0x00080018

00027df4 <ull_readrxdata>:
   27df4:	b5f0      	push	{r4, r5, r6, r7, lr}
   27df6:	b083      	sub	sp, #12
   27df8:	6d04      	ldr	r4, [r0, #80]	@ 0x50
   27dfa:	7ba4      	ldrb	r4, [r4, #14]
   27dfc:	2c03      	cmp	r4, #3
   27dfe:	bf0c      	ite	eq
   27e00:	f44f 1c98 	moveq.w	ip, #1245184	@ 0x130000
   27e04:	f44f 1c90 	movne.w	ip, #1179648	@ 0x120000
   27e08:	189c      	adds	r4, r3, r2
   27e0a:	f5b4 6f80 	cmp.w	r4, #1024	@ 0x400
   27e0e:	da19      	bge.n	27e44 <ull_readrxdata+0x50>
   27e10:	461d      	mov	r5, r3
   27e12:	4616      	mov	r6, r2
   27e14:	460f      	mov	r7, r1
   27e16:	4604      	mov	r4, r0
   27e18:	2b7f      	cmp	r3, #127	@ 0x7f
   27e1a:	d915      	bls.n	27e48 <ull_readrxdata+0x54>
   27e1c:	ea4f 431c 	mov.w	r3, ip, lsr #16
   27e20:	2200      	movs	r2, #0
   27e22:	490d      	ldr	r1, [pc, #52]	@ (27e58 <ull_readrxdata+0x64>)
   27e24:	f7ff fe38 	bl	27a98 <dwt_write32bitoffsetreg>
   27e28:	462b      	mov	r3, r5
   27e2a:	2200      	movs	r2, #0
   27e2c:	490b      	ldr	r1, [pc, #44]	@ (27e5c <ull_readrxdata+0x68>)
   27e2e:	4620      	mov	r0, r4
   27e30:	f7ff fe32 	bl	27a98 <dwt_write32bitoffsetreg>
   27e34:	9700      	str	r7, [sp, #0]
   27e36:	4633      	mov	r3, r6
   27e38:	2200      	movs	r2, #0
   27e3a:	f44f 11e8 	mov.w	r1, #1900544	@ 0x1d0000
   27e3e:	4620      	mov	r0, r4
   27e40:	f7ff f941 	bl	270c6 <dwt_readfromdevice>
   27e44:	b003      	add	sp, #12
   27e46:	bdf0      	pop	{r4, r5, r6, r7, pc}
   27e48:	9100      	str	r1, [sp, #0]
   27e4a:	4613      	mov	r3, r2
   27e4c:	462a      	mov	r2, r5
   27e4e:	4661      	mov	r1, ip
   27e50:	f7ff f939 	bl	270c6 <dwt_readfromdevice>
   27e54:	e7f6      	b.n	27e44 <ull_readrxdata+0x50>
   27e56:	bf00      	nop
   27e58:	001f0004 	.word	0x001f0004
   27e5c:	001f0008 	.word	0x001f0008

00027e60 <dwt_write8bitoffsetreg>:
   27e60:	b510      	push	{r4, lr}
   27e62:	b084      	sub	sp, #16
   27e64:	ac04      	add	r4, sp, #16
   27e66:	f804 3d01 	strb.w	r3, [r4, #-1]!
   27e6a:	9400      	str	r4, [sp, #0]
   27e6c:	2301      	movs	r3, #1
   27e6e:	b292      	uxth	r2, r2
   27e70:	f7ff fd9c 	bl	279ac <dwt_writetodevice>
   27e74:	b004      	add	sp, #16
   27e76:	bd10      	pop	{r4, pc}

00027e78 <ull_getframelength>:
   27e78:	b510      	push	{r4, lr}
   27e7a:	4604      	mov	r4, r0
   27e7c:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   27e7e:	7b9b      	ldrb	r3, [r3, #14]
   27e80:	2b01      	cmp	r3, #1
   27e82:	d013      	beq.n	27eac <ull_getframelength+0x34>
   27e84:	2b03      	cmp	r3, #3
   27e86:	d11d      	bne.n	27ec4 <ull_getframelength+0x4c>
   27e88:	23f0      	movs	r3, #240	@ 0xf0
   27e8a:	2200      	movs	r2, #0
   27e8c:	4912      	ldr	r1, [pc, #72]	@ (27ed8 <ull_getframelength+0x60>)
   27e8e:	f7ff ffe7 	bl	27e60 <dwt_write8bitoffsetreg>
   27e92:	2200      	movs	r2, #0
   27e94:	f44f 11f0 	mov.w	r1, #1966080	@ 0x1e0000
   27e98:	4620      	mov	r0, r4
   27e9a:	f7ff f934 	bl	27106 <dwt_read16bitoffsetreg>
   27e9e:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   27ea0:	7ada      	ldrb	r2, [r3, #11]
   27ea2:	b1a2      	cbz	r2, 27ece <ull_getframelength+0x56>
   27ea4:	f3c0 0009 	ubfx	r0, r0, #0, #10
   27ea8:	83d8      	strh	r0, [r3, #30]
   27eaa:	bd10      	pop	{r4, pc}
   27eac:	230f      	movs	r3, #15
   27eae:	2200      	movs	r2, #0
   27eb0:	4909      	ldr	r1, [pc, #36]	@ (27ed8 <ull_getframelength+0x60>)
   27eb2:	f7ff ffd5 	bl	27e60 <dwt_write8bitoffsetreg>
   27eb6:	2200      	movs	r2, #0
   27eb8:	f44f 11c0 	mov.w	r1, #1572864	@ 0x180000
   27ebc:	4620      	mov	r0, r4
   27ebe:	f7ff f922 	bl	27106 <dwt_read16bitoffsetreg>
   27ec2:	e7ec      	b.n	27e9e <ull_getframelength+0x26>
   27ec4:	2200      	movs	r2, #0
   27ec6:	214c      	movs	r1, #76	@ 0x4c
   27ec8:	f7ff f91d 	bl	27106 <dwt_read16bitoffsetreg>
   27ecc:	e7e7      	b.n	27e9e <ull_getframelength+0x26>
   27ece:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
   27ed2:	83d8      	strh	r0, [r3, #30]
   27ed4:	e7e9      	b.n	27eaa <ull_getframelength+0x32>
   27ed6:	bf00      	nop
   27ed8:	00010018 	.word	0x00010018

00027edc <_dwt_clear_db_events>:
   27edc:	b510      	push	{r4, lr}
   27ede:	4604      	mov	r4, r0
   27ee0:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   27ee2:	7b9b      	ldrb	r3, [r3, #14]
   27ee4:	2b01      	cmp	r3, #1
   27ee6:	d004      	beq.n	27ef2 <_dwt_clear_db_events+0x16>
   27ee8:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   27eea:	7b9b      	ldrb	r3, [r3, #14]
   27eec:	2b03      	cmp	r3, #3
   27eee:	d006      	beq.n	27efe <_dwt_clear_db_events+0x22>
   27ef0:	bd10      	pop	{r4, pc}
   27ef2:	230f      	movs	r3, #15
   27ef4:	2200      	movs	r2, #0
   27ef6:	4905      	ldr	r1, [pc, #20]	@ (27f0c <_dwt_clear_db_events+0x30>)
   27ef8:	f7ff ffb2 	bl	27e60 <dwt_write8bitoffsetreg>
   27efc:	e7f4      	b.n	27ee8 <_dwt_clear_db_events+0xc>
   27efe:	23f0      	movs	r3, #240	@ 0xf0
   27f00:	2200      	movs	r2, #0
   27f02:	4902      	ldr	r1, [pc, #8]	@ (27f0c <_dwt_clear_db_events+0x30>)
   27f04:	4620      	mov	r0, r4
   27f06:	f7ff ffab 	bl	27e60 <dwt_write8bitoffsetreg>
   27f0a:	e7f1      	b.n	27ef0 <_dwt_clear_db_events+0x14>
   27f0c:	00010018 	.word	0x00010018

00027f10 <ull_clearaonconfig>:
   27f10:	b538      	push	{r3, r4, r5, lr}
   27f12:	4604      	mov	r4, r0
   27f14:	2300      	movs	r3, #0
   27f16:	461a      	mov	r2, r3
   27f18:	f44f 2120 	mov.w	r1, #655360	@ 0xa0000
   27f1c:	f7ff fd51 	bl	279c2 <dwt_write16bitoffsetreg>
   27f20:	2300      	movs	r3, #0
   27f22:	461a      	mov	r2, r3
   27f24:	4908      	ldr	r1, [pc, #32]	@ (27f48 <ull_clearaonconfig+0x38>)
   27f26:	4620      	mov	r0, r4
   27f28:	f7ff ff9a 	bl	27e60 <dwt_write8bitoffsetreg>
   27f2c:	4d07      	ldr	r5, [pc, #28]	@ (27f4c <ull_clearaonconfig+0x3c>)
   27f2e:	2300      	movs	r3, #0
   27f30:	461a      	mov	r2, r3
   27f32:	4629      	mov	r1, r5
   27f34:	4620      	mov	r0, r4
   27f36:	f7ff ff93 	bl	27e60 <dwt_write8bitoffsetreg>
   27f3a:	2302      	movs	r3, #2
   27f3c:	2200      	movs	r2, #0
   27f3e:	4629      	mov	r1, r5
   27f40:	4620      	mov	r0, r4
   27f42:	f7ff ff8d 	bl	27e60 <dwt_write8bitoffsetreg>
   27f46:	bd38      	pop	{r3, r4, r5, pc}
   27f48:	000a0014 	.word	0x000a0014
   27f4c:	000a0004 	.word	0x000a0004

00027f50 <ull_configeventcounters>:
   27f50:	b538      	push	{r3, r4, r5, lr}
   27f52:	4605      	mov	r5, r0
   27f54:	460c      	mov	r4, r1
   27f56:	2302      	movs	r3, #2
   27f58:	2200      	movs	r2, #0
   27f5a:	f44f 2170 	mov.w	r1, #983040	@ 0xf0000
   27f5e:	f7ff ff7f 	bl	27e60 <dwt_write8bitoffsetreg>
   27f62:	b904      	cbnz	r4, 27f66 <ull_configeventcounters+0x16>
   27f64:	bd38      	pop	{r3, r4, r5, pc}
   27f66:	2301      	movs	r3, #1
   27f68:	2200      	movs	r2, #0
   27f6a:	f44f 2170 	mov.w	r1, #983040	@ 0xf0000
   27f6e:	4628      	mov	r0, r5
   27f70:	f7ff ff76 	bl	27e60 <dwt_write8bitoffsetreg>
   27f74:	e7f6      	b.n	27f64 <ull_configeventcounters+0x14>
	...

00027f78 <ull_aon_read>:
   27f78:	b538      	push	{r3, r4, r5, lr}
   27f7a:	4604      	mov	r4, r0
   27f7c:	460b      	mov	r3, r1
   27f7e:	2200      	movs	r2, #0
   27f80:	490a      	ldr	r1, [pc, #40]	@ (27fac <ull_aon_read+0x34>)
   27f82:	f7ff fd1e 	bl	279c2 <dwt_write16bitoffsetreg>
   27f86:	4d0a      	ldr	r5, [pc, #40]	@ (27fb0 <ull_aon_read+0x38>)
   27f88:	2388      	movs	r3, #136	@ 0x88
   27f8a:	2200      	movs	r2, #0
   27f8c:	4629      	mov	r1, r5
   27f8e:	4620      	mov	r0, r4
   27f90:	f7ff ff66 	bl	27e60 <dwt_write8bitoffsetreg>
   27f94:	2300      	movs	r3, #0
   27f96:	461a      	mov	r2, r3
   27f98:	4629      	mov	r1, r5
   27f9a:	4620      	mov	r0, r4
   27f9c:	f7ff ff60 	bl	27e60 <dwt_write8bitoffsetreg>
   27fa0:	2200      	movs	r2, #0
   27fa2:	4904      	ldr	r1, [pc, #16]	@ (27fb4 <ull_aon_read+0x3c>)
   27fa4:	4620      	mov	r0, r4
   27fa6:	f7ff f8ed 	bl	27184 <dwt_read8bitoffsetreg>
   27faa:	bd38      	pop	{r3, r4, r5, pc}
   27fac:	000a000c 	.word	0x000a000c
   27fb0:	000a0004 	.word	0x000a0004
   27fb4:	000a0008 	.word	0x000a0008

00027fb8 <ull_aon_write>:
   27fb8:	b570      	push	{r4, r5, r6, lr}
   27fba:	4604      	mov	r4, r0
   27fbc:	460b      	mov	r3, r1
   27fbe:	4615      	mov	r5, r2
   27fc0:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
   27fc4:	bf34      	ite	cc
   27fc6:	2600      	movcc	r6, #0
   27fc8:	2620      	movcs	r6, #32
   27fca:	2200      	movs	r2, #0
   27fcc:	490b      	ldr	r1, [pc, #44]	@ (27ffc <ull_aon_write+0x44>)
   27fce:	f7ff fcf8 	bl	279c2 <dwt_write16bitoffsetreg>
   27fd2:	462b      	mov	r3, r5
   27fd4:	2200      	movs	r2, #0
   27fd6:	490a      	ldr	r1, [pc, #40]	@ (28000 <ull_aon_write+0x48>)
   27fd8:	4620      	mov	r0, r4
   27fda:	f7ff ff41 	bl	27e60 <dwt_write8bitoffsetreg>
   27fde:	4d09      	ldr	r5, [pc, #36]	@ (28004 <ull_aon_write+0x4c>)
   27fe0:	f046 0390 	orr.w	r3, r6, #144	@ 0x90
   27fe4:	2200      	movs	r2, #0
   27fe6:	4629      	mov	r1, r5
   27fe8:	4620      	mov	r0, r4
   27fea:	f7ff ff39 	bl	27e60 <dwt_write8bitoffsetreg>
   27fee:	2300      	movs	r3, #0
   27ff0:	461a      	mov	r2, r3
   27ff2:	4629      	mov	r1, r5
   27ff4:	4620      	mov	r0, r4
   27ff6:	f7ff ff33 	bl	27e60 <dwt_write8bitoffsetreg>
   27ffa:	bd70      	pop	{r4, r5, r6, pc}
   27ffc:	000a000c 	.word	0x000a000c
   28000:	000a0010 	.word	0x000a0010
   28004:	000a0004 	.word	0x000a0004

00028008 <ull_configuresleep>:
   28008:	b570      	push	{r4, r5, r6, lr}
   2800a:	4604      	mov	r4, r0
   2800c:	460d      	mov	r5, r1
   2800e:	4616      	mov	r6, r2
   28010:	2200      	movs	r2, #0
   28012:	f240 110b 	movw	r1, #267	@ 0x10b
   28016:	f7ff ffcf 	bl	27fb8 <ull_aon_write>
   2801a:	f44f 7182 	mov.w	r1, #260	@ 0x104
   2801e:	4620      	mov	r0, r4
   28020:	f7ff ffaa 	bl	27f78 <ull_aon_read>
   28024:	f000 021f 	and.w	r2, r0, #31
   28028:	f44f 7182 	mov.w	r1, #260	@ 0x104
   2802c:	4620      	mov	r0, r4
   2802e:	f7ff ffc3 	bl	27fb8 <ull_aon_write>
   28032:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   28034:	8a1a      	ldrh	r2, [r3, #16]
   28036:	4315      	orrs	r5, r2
   28038:	821d      	strh	r5, [r3, #16]
   2803a:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   2803c:	8a13      	ldrh	r3, [r2, #16]
   2803e:	f413 6f00 	tst.w	r3, #2048	@ 0x800
   28042:	bf1c      	itt	ne
   28044:	f423 6300 	bicne.w	r3, r3, #2048	@ 0x800
   28048:	8213      	strhne	r3, [r2, #16]
   2804a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   2804c:	8a1b      	ldrh	r3, [r3, #16]
   2804e:	2200      	movs	r2, #0
   28050:	f44f 2120 	mov.w	r1, #655360	@ 0xa0000
   28054:	4620      	mov	r0, r4
   28056:	f7ff fcb4 	bl	279c2 <dwt_write16bitoffsetreg>
   2805a:	4633      	mov	r3, r6
   2805c:	2200      	movs	r2, #0
   2805e:	4902      	ldr	r1, [pc, #8]	@ (28068 <ull_configuresleep+0x60>)
   28060:	4620      	mov	r0, r4
   28062:	f7ff fefd 	bl	27e60 <dwt_write8bitoffsetreg>
   28066:	bd70      	pop	{r4, r5, r6, pc}
   28068:	000a0014 	.word	0x000a0014

0002806c <ull_setplenfine>:
   2806c:	b508      	push	{r3, lr}
   2806e:	460b      	mov	r3, r1
   28070:	2201      	movs	r2, #1
   28072:	2124      	movs	r1, #36	@ 0x24
   28074:	f7ff fef4 	bl	27e60 <dwt_write8bitoffsetreg>
   28078:	bd08      	pop	{r3, pc}
	...

0002807c <ull_update_nonce_GCM>:
   2807c:	b500      	push	{lr}
   2807e:	b083      	sub	sp, #12
   28080:	9100      	str	r1, [sp, #0]
   28082:	230c      	movs	r3, #12
   28084:	2200      	movs	r2, #0
   28086:	4903      	ldr	r1, [pc, #12]	@ (28094 <ull_update_nonce_GCM+0x18>)
   28088:	f7ff fc90 	bl	279ac <dwt_writetodevice>
   2808c:	b003      	add	sp, #12
   2808e:	f85d fb04 	ldr.w	pc, [sp], #4
   28092:	bf00      	nop
   28094:	00010034 	.word	0x00010034

00028098 <ull_update_nonce_CCM>:
   28098:	b500      	push	{lr}
   2809a:	b087      	sub	sp, #28
   2809c:	4613      	mov	r3, r2
   2809e:	7a8a      	ldrb	r2, [r1, #10]
   280a0:	f88d 2008 	strb.w	r2, [sp, #8]
   280a4:	7a4a      	ldrb	r2, [r1, #9]
   280a6:	f88d 2009 	strb.w	r2, [sp, #9]
   280aa:	7a0a      	ldrb	r2, [r1, #8]
   280ac:	f88d 200a 	strb.w	r2, [sp, #10]
   280b0:	79ca      	ldrb	r2, [r1, #7]
   280b2:	f88d 200b 	strb.w	r2, [sp, #11]
   280b6:	798a      	ldrb	r2, [r1, #6]
   280b8:	f88d 200c 	strb.w	r2, [sp, #12]
   280bc:	794a      	ldrb	r2, [r1, #5]
   280be:	f88d 200d 	strb.w	r2, [sp, #13]
   280c2:	790a      	ldrb	r2, [r1, #4]
   280c4:	f88d 200e 	strb.w	r2, [sp, #14]
   280c8:	78ca      	ldrb	r2, [r1, #3]
   280ca:	f88d 200f 	strb.w	r2, [sp, #15]
   280ce:	788a      	ldrb	r2, [r1, #2]
   280d0:	f88d 2010 	strb.w	r2, [sp, #16]
   280d4:	784a      	ldrb	r2, [r1, #1]
   280d6:	f88d 2011 	strb.w	r2, [sp, #17]
   280da:	780a      	ldrb	r2, [r1, #0]
   280dc:	f88d 2012 	strb.w	r2, [sp, #18]
   280e0:	2200      	movs	r2, #0
   280e2:	f88d 2013 	strb.w	r2, [sp, #19]
   280e6:	f88d 3014 	strb.w	r3, [sp, #20]
   280ea:	0a1b      	lsrs	r3, r3, #8
   280ec:	f88d 3015 	strb.w	r3, [sp, #21]
   280f0:	7b0b      	ldrb	r3, [r1, #12]
   280f2:	f88d 3016 	strb.w	r3, [sp, #22]
   280f6:	7acb      	ldrb	r3, [r1, #11]
   280f8:	f88d 3017 	strb.w	r3, [sp, #23]
   280fc:	ab02      	add	r3, sp, #8
   280fe:	9300      	str	r3, [sp, #0]
   28100:	2310      	movs	r3, #16
   28102:	4903      	ldr	r1, [pc, #12]	@ (28110 <ull_update_nonce_CCM+0x78>)
   28104:	f7ff fc52 	bl	279ac <dwt_writetodevice>
   28108:	b007      	add	sp, #28
   2810a:	f85d fb04 	ldr.w	pc, [sp], #4
   2810e:	bf00      	nop
   28110:	00010034 	.word	0x00010034

00028114 <ull_writetxdata>:
   28114:	b5f0      	push	{r4, r5, r6, r7, lr}
   28116:	b083      	sub	sp, #12
   28118:	185c      	adds	r4, r3, r1
   2811a:	f5b4 6f80 	cmp.w	r4, #1024	@ 0x400
   2811e:	da24      	bge.n	2816a <ull_writetxdata+0x56>
   28120:	461c      	mov	r4, r3
   28122:	4617      	mov	r7, r2
   28124:	460e      	mov	r6, r1
   28126:	4605      	mov	r5, r0
   28128:	2b7f      	cmp	r3, #127	@ 0x7f
   2812a:	d915      	bls.n	28158 <ull_writetxdata+0x44>
   2812c:	2314      	movs	r3, #20
   2812e:	2200      	movs	r2, #0
   28130:	490f      	ldr	r1, [pc, #60]	@ (28170 <ull_writetxdata+0x5c>)
   28132:	f7ff fcb1 	bl	27a98 <dwt_write32bitoffsetreg>
   28136:	4623      	mov	r3, r4
   28138:	2200      	movs	r2, #0
   2813a:	490e      	ldr	r1, [pc, #56]	@ (28174 <ull_writetxdata+0x60>)
   2813c:	4628      	mov	r0, r5
   2813e:	f7ff fcab 	bl	27a98 <dwt_write32bitoffsetreg>
   28142:	9700      	str	r7, [sp, #0]
   28144:	4633      	mov	r3, r6
   28146:	2200      	movs	r2, #0
   28148:	f44f 11e8 	mov.w	r1, #1900544	@ 0x1d0000
   2814c:	4628      	mov	r0, r5
   2814e:	f7ff fc2d 	bl	279ac <dwt_writetodevice>
   28152:	2000      	movs	r0, #0
   28154:	b003      	add	sp, #12
   28156:	bdf0      	pop	{r4, r5, r6, r7, pc}
   28158:	9200      	str	r2, [sp, #0]
   2815a:	460b      	mov	r3, r1
   2815c:	4622      	mov	r2, r4
   2815e:	f44f 11a0 	mov.w	r1, #1310720	@ 0x140000
   28162:	f7ff fc23 	bl	279ac <dwt_writetodevice>
   28166:	2000      	movs	r0, #0
   28168:	e7f4      	b.n	28154 <ull_writetxdata+0x40>
   2816a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
   2816e:	e7f1      	b.n	28154 <ull_writetxdata+0x40>
   28170:	001f0004 	.word	0x001f0004
   28174:	001f0008 	.word	0x001f0008

00028178 <ull_signal_rx_buff_free>:
   28178:	b510      	push	{r4, lr}
   2817a:	b082      	sub	sp, #8
   2817c:	4604      	mov	r4, r0
   2817e:	2302      	movs	r3, #2
   28180:	9301      	str	r3, [sp, #4]
   28182:	2200      	movs	r2, #0
   28184:	9200      	str	r2, [sp, #0]
   28186:	4613      	mov	r3, r2
   28188:	2113      	movs	r1, #19
   2818a:	f7fe ff1e 	bl	26fca <dwt_xfer3xxx>
   2818e:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   28190:	7b9a      	ldrb	r2, [r3, #14]
   28192:	2a03      	cmp	r2, #3
   28194:	bf0c      	ite	eq
   28196:	2201      	moveq	r2, #1
   28198:	2203      	movne	r2, #3
   2819a:	739a      	strb	r2, [r3, #14]
   2819c:	b002      	add	sp, #8
   2819e:	bd10      	pop	{r4, pc}

000281a0 <ull_isr>:
   281a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   281a4:	4604      	mov	r4, r0
   281a6:	2200      	movs	r2, #0
   281a8:	f44f 11f8 	mov.w	r1, #2031616	@ 0x1f0000
   281ac:	f7fe ffea 	bl	27184 <dwt_read8bitoffsetreg>
   281b0:	4605      	mov	r5, r0
   281b2:	2200      	movs	r2, #0
   281b4:	2144      	movs	r1, #68	@ 0x44
   281b6:	4620      	mov	r0, r4
   281b8:	f7fe ff8f 	bl	270da <dwt_read32bitoffsetreg>
   281bc:	4606      	mov	r6, r0
   281be:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   281c0:	2200      	movs	r2, #0
   281c2:	83da      	strh	r2, [r3, #30]
   281c4:	f883 2020 	strb.w	r2, [r3, #32]
   281c8:	619a      	str	r2, [r3, #24]
   281ca:	839a      	strh	r2, [r3, #28]
   281cc:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
   281d0:	625a      	str	r2, [r3, #36]	@ 0x24
   281d2:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   281d4:	625c      	str	r4, [r3, #36]	@ 0x24
   281d6:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   281d8:	7b9f      	ldrb	r7, [r3, #14]
   281da:	2f00      	cmp	r7, #0
   281dc:	d17f      	bne.n	282de <ull_isr+0x13e>
   281de:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   281e0:	619e      	str	r6, [r3, #24]
   281e2:	f8d4 8050 	ldr.w	r8, [r4, #80]	@ 0x50
   281e6:	f898 3015 	ldrb.w	r3, [r8, #21]
   281ea:	f003 0303 	and.w	r3, r3, #3
   281ee:	2b03      	cmp	r3, #3
   281f0:	f000 8090 	beq.w	28314 <ull_isr+0x174>
   281f4:	f015 0f80 	tst.w	r5, #128	@ 0x80
   281f8:	f040 8093 	bne.w	28322 <ull_isr+0x182>
   281fc:	f015 0f01 	tst.w	r5, #1
   28200:	f040 80c1 	bne.w	28386 <ull_isr+0x1e6>
   28204:	f015 0f40 	tst.w	r5, #64	@ 0x40
   28208:	d00b      	beq.n	28222 <ull_isr+0x82>
   2820a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
   2820c:	b113      	cbz	r3, 28214 <ull_isr+0x74>
   2820e:	6d20      	ldr	r0, [r4, #80]	@ 0x50
   28210:	3018      	adds	r0, #24
   28212:	4798      	blx	r3
   28214:	f44f 73c0 	mov.w	r3, #384	@ 0x180
   28218:	2202      	movs	r2, #2
   2821a:	2144      	movs	r1, #68	@ 0x44
   2821c:	4620      	mov	r0, r4
   2821e:	f7ff fbd0 	bl	279c2 <dwt_write16bitoffsetreg>
   28222:	f015 0f08 	tst.w	r5, #8
   28226:	d107      	bne.n	28238 <ull_isr+0x98>
   28228:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   2822a:	7b9b      	ldrb	r3, [r3, #14]
   2822c:	2b00      	cmp	r3, #0
   2822e:	f000 80ea 	beq.w	28406 <ull_isr+0x266>
   28232:	2f00      	cmp	r7, #0
   28234:	f000 80e7 	beq.w	28406 <ull_isr+0x266>
   28238:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   2823a:	2200      	movs	r2, #0
   2823c:	f883 2020 	strb.w	r2, [r3, #32]
   28240:	f416 2f80 	tst.w	r6, #262144	@ 0x40000
   28244:	f000 80ad 	beq.w	283a2 <ull_isr+0x202>
   28248:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   2824a:	f892 3020 	ldrb.w	r3, [r2, #32]
   2824e:	f043 0308 	orr.w	r3, r3, #8
   28252:	f882 3020 	strb.w	r3, [r2, #32]
   28256:	f44f 2780 	mov.w	r7, #262144	@ 0x40000
   2825a:	f016 5f80 	tst.w	r6, #268435456	@ 0x10000000
   2825e:	d008      	beq.n	28272 <ull_isr+0xd2>
   28260:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   28262:	f892 3020 	ldrb.w	r3, [r2, #32]
   28266:	f043 0310 	orr.w	r3, r3, #16
   2826a:	f882 3020 	strb.w	r3, [r2, #32]
   2826e:	f047 5780 	orr.w	r7, r7, #268435456	@ 0x10000000
   28272:	f416 5f00 	tst.w	r6, #8192	@ 0x2000
   28276:	d006      	beq.n	28286 <ull_isr+0xe6>
   28278:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   2827a:	7d53      	ldrb	r3, [r2, #21]
   2827c:	f003 0303 	and.w	r3, r3, #3
   28280:	2b03      	cmp	r3, #3
   28282:	f000 809a 	beq.w	283ba <ull_isr+0x21a>
   28286:	f416 4f80 	tst.w	r6, #16384	@ 0x4000
   2828a:	f040 80a2 	bne.w	283d2 <ull_isr+0x232>
   2828e:	f447 43de 	orr.w	r3, r7, #28416	@ 0x6f00
   28292:	2200      	movs	r2, #0
   28294:	2144      	movs	r1, #68	@ 0x44
   28296:	4620      	mov	r0, r4
   28298:	f7ff fbfe 	bl	27a98 <dwt_write32bitoffsetreg>
   2829c:	4620      	mov	r0, r4
   2829e:	f7ff fe1d 	bl	27edc <_dwt_clear_db_events>
   282a2:	6d20      	ldr	r0, [r4, #80]	@ 0x50
   282a4:	8bc3      	ldrh	r3, [r0, #30]
   282a6:	2b00      	cmp	r3, #0
   282a8:	f040 80a2 	bne.w	283f0 <ull_isr+0x250>
   282ac:	7d43      	ldrb	r3, [r0, #21]
   282ae:	f003 0303 	and.w	r3, r3, #3
   282b2:	2b03      	cmp	r3, #3
   282b4:	f000 809c 	beq.w	283f0 <ull_isr+0x250>
   282b8:	6983      	ldr	r3, [r0, #24]
   282ba:	f423 4390 	bic.w	r3, r3, #18432	@ 0x4800
   282be:	6183      	str	r3, [r0, #24]
   282c0:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   282c2:	6993      	ldr	r3, [r2, #24]
   282c4:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
   282c8:	6193      	str	r3, [r2, #24]
   282ca:	69e3      	ldr	r3, [r4, #28]
   282cc:	b113      	cbz	r3, 282d4 <ull_isr+0x134>
   282ce:	6d20      	ldr	r0, [r4, #80]	@ 0x50
   282d0:	3018      	adds	r0, #24
   282d2:	4798      	blx	r3
   282d4:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   282d6:	2200      	movs	r2, #0
   282d8:	f883 2020 	strb.w	r2, [r3, #32]
   282dc:	e08c      	b.n	283f8 <ull_isr+0x258>
   282de:	496d      	ldr	r1, [pc, #436]	@ (28494 <ull_isr+0x2f4>)
   282e0:	4620      	mov	r0, r4
   282e2:	f7fe ff4f 	bl	27184 <dwt_read8bitoffsetreg>
   282e6:	4607      	mov	r7, r0
   282e8:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   282ea:	7b9b      	ldrb	r3, [r3, #14]
   282ec:	2b03      	cmp	r3, #3
   282ee:	bf08      	it	eq
   282f0:	f3c0 1707 	ubfxeq	r7, r0, #4, #8
   282f4:	f017 0f01 	tst.w	r7, #1
   282f8:	bf18      	it	ne
   282fa:	f446 4680 	orrne.w	r6, r6, #16384	@ 0x4000
   282fe:	f017 0f02 	tst.w	r7, #2
   28302:	bf18      	it	ne
   28304:	f446 5600 	orrne.w	r6, r6, #8192	@ 0x2000
   28308:	f017 0f04 	tst.w	r7, #4
   2830c:	bf18      	it	ne
   2830e:	f446 6680 	orrne.w	r6, r6, #1024	@ 0x400
   28312:	e764      	b.n	281de <ull_isr+0x3e>
   28314:	f416 5f00 	tst.w	r6, #8192	@ 0x2000
   28318:	bf1c      	itt	ne
   2831a:	f045 0508 	orrne.w	r5, r5, #8
   2831e:	b2ed      	uxtbne	r5, r5
   28320:	e768      	b.n	281f4 <ull_isr+0x54>
   28322:	2200      	movs	r2, #0
   28324:	2148      	movs	r1, #72	@ 0x48
   28326:	4620      	mov	r0, r4
   28328:	f7fe feed 	bl	27106 <dwt_read16bitoffsetreg>
   2832c:	f8a8 001c 	strh.w	r0, [r8, #28]
   28330:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   28332:	7d1a      	ldrb	r2, [r3, #20]
   28334:	b11a      	cbz	r2, 2833e <ull_isr+0x19e>
   28336:	699a      	ldr	r2, [r3, #24]
   28338:	f012 0f04 	tst.w	r2, #4
   2833c:	d103      	bne.n	28346 <ull_isr+0x1a6>
   2833e:	8b9b      	ldrh	r3, [r3, #28]
   28340:	f403 6360 	and.w	r3, r3, #3584	@ 0xe00
   28344:	b18b      	cbz	r3, 2836a <ull_isr+0x1ca>
   28346:	2304      	movs	r3, #4
   28348:	2200      	movs	r2, #0
   2834a:	2144      	movs	r1, #68	@ 0x44
   2834c:	4620      	mov	r0, r4
   2834e:	f7ff fd87 	bl	27e60 <dwt_write8bitoffsetreg>
   28352:	f44f 6360 	mov.w	r3, #3584	@ 0xe00
   28356:	2200      	movs	r2, #0
   28358:	2148      	movs	r1, #72	@ 0x48
   2835a:	4620      	mov	r0, r4
   2835c:	f7ff fb31 	bl	279c2 <dwt_write16bitoffsetreg>
   28360:	6a23      	ldr	r3, [r4, #32]
   28362:	b113      	cbz	r3, 2836a <ull_isr+0x1ca>
   28364:	6d20      	ldr	r0, [r4, #80]	@ 0x50
   28366:	3018      	adds	r0, #24
   28368:	4798      	blx	r3
   2836a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   2836c:	8b9b      	ldrh	r3, [r3, #28]
   2836e:	f413 7f80 	tst.w	r3, #256	@ 0x100
   28372:	f43f af43 	beq.w	281fc <ull_isr+0x5c>
   28376:	f44f 7380 	mov.w	r3, #256	@ 0x100
   2837a:	2200      	movs	r2, #0
   2837c:	2148      	movs	r1, #72	@ 0x48
   2837e:	4620      	mov	r0, r4
   28380:	f7ff fb1f 	bl	279c2 <dwt_write16bitoffsetreg>
   28384:	e73a      	b.n	281fc <ull_isr+0x5c>
   28386:	23f8      	movs	r3, #248	@ 0xf8
   28388:	2200      	movs	r2, #0
   2838a:	2144      	movs	r1, #68	@ 0x44
   2838c:	4620      	mov	r0, r4
   2838e:	f7ff fd67 	bl	27e60 <dwt_write8bitoffsetreg>
   28392:	6923      	ldr	r3, [r4, #16]
   28394:	2b00      	cmp	r3, #0
   28396:	f43f af35 	beq.w	28204 <ull_isr+0x64>
   2839a:	6d20      	ldr	r0, [r4, #80]	@ 0x50
   2839c:	3018      	adds	r0, #24
   2839e:	4798      	blx	r3
   283a0:	e730      	b.n	28204 <ull_isr+0x64>
   283a2:	f416 6f80 	tst.w	r6, #1024	@ 0x400
   283a6:	bf1f      	itttt	ne
   283a8:	6d22      	ldrne	r2, [r4, #80]	@ 0x50
   283aa:	f892 3020 	ldrbne.w	r3, [r2, #32]
   283ae:	f043 0304 	orrne.w	r3, r3, #4
   283b2:	f882 3020 	strbne.w	r3, [r2, #32]
   283b6:	2700      	movs	r7, #0
   283b8:	e74f      	b.n	2825a <ull_isr+0xba>
   283ba:	f892 3020 	ldrb.w	r3, [r2, #32]
   283be:	f043 0302 	orr.w	r3, r3, #2
   283c2:	f882 3020 	strb.w	r3, [r2, #32]
   283c6:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   283c8:	2200      	movs	r2, #0
   283ca:	83da      	strh	r2, [r3, #30]
   283cc:	f447 4700 	orr.w	r7, r7, #32768	@ 0x8000
   283d0:	e75d      	b.n	2828e <ull_isr+0xee>
   283d2:	4620      	mov	r0, r4
   283d4:	f7ff fd50 	bl	27e78 <ull_getframelength>
   283d8:	f410 4f00 	tst.w	r0, #32768	@ 0x8000
   283dc:	f43f af57 	beq.w	2828e <ull_isr+0xee>
   283e0:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   283e2:	f892 3020 	ldrb.w	r3, [r2, #32]
   283e6:	f043 0301 	orr.w	r3, r3, #1
   283ea:	f882 3020 	strb.w	r3, [r2, #32]
   283ee:	e74e      	b.n	2828e <ull_isr+0xee>
   283f0:	6963      	ldr	r3, [r4, #20]
   283f2:	b10b      	cbz	r3, 283f8 <ull_isr+0x258>
   283f4:	3018      	adds	r0, #24
   283f6:	4798      	blx	r3
   283f8:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   283fa:	7b9b      	ldrb	r3, [r3, #14]
   283fc:	bb03      	cbnz	r3, 28440 <ull_isr+0x2a0>
   283fe:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   28400:	2200      	movs	r2, #0
   28402:	f883 2020 	strb.w	r2, [r3, #32]
   28406:	f015 0f10 	tst.w	r5, #16
   2840a:	d11d      	bne.n	28448 <ull_isr+0x2a8>
   2840c:	f015 0f20 	tst.w	r5, #32
   28410:	d12d      	bne.n	2846e <ull_isr+0x2ce>
   28412:	2200      	movs	r2, #0
   28414:	4920      	ldr	r1, [pc, #128]	@ (28498 <ull_isr+0x2f8>)
   28416:	4620      	mov	r0, r4
   28418:	f7fe feb4 	bl	27184 <dwt_read8bitoffsetreg>
   2841c:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   2841e:	f883 0021 	strb.w	r0, [r3, #33]	@ 0x21
   28422:	f010 0303 	ands.w	r3, r0, #3
   28426:	d009      	beq.n	2843c <ull_isr+0x29c>
   28428:	2200      	movs	r2, #0
   2842a:	491b      	ldr	r1, [pc, #108]	@ (28498 <ull_isr+0x2f8>)
   2842c:	4620      	mov	r0, r4
   2842e:	f7ff fd17 	bl	27e60 <dwt_write8bitoffsetreg>
   28432:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
   28434:	b113      	cbz	r3, 2843c <ull_isr+0x29c>
   28436:	6d20      	ldr	r0, [r4, #80]	@ 0x50
   28438:	3018      	adds	r0, #24
   2843a:	4798      	blx	r3
   2843c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   28440:	4620      	mov	r0, r4
   28442:	f7ff fe99 	bl	28178 <ull_signal_rx_buff_free>
   28446:	e7da      	b.n	283fe <ull_isr+0x25e>
   28448:	4b14      	ldr	r3, [pc, #80]	@ (2849c <ull_isr+0x2fc>)
   2844a:	2200      	movs	r2, #0
   2844c:	2144      	movs	r1, #68	@ 0x44
   2844e:	4620      	mov	r0, r4
   28450:	f7ff fb22 	bl	27a98 <dwt_write32bitoffsetreg>
   28454:	4620      	mov	r0, r4
   28456:	f7ff fd41 	bl	27edc <_dwt_clear_db_events>
   2845a:	69e3      	ldr	r3, [r4, #28]
   2845c:	b113      	cbz	r3, 28464 <ull_isr+0x2c4>
   2845e:	6d20      	ldr	r0, [r4, #80]	@ 0x50
   28460:	3018      	adds	r0, #24
   28462:	4798      	blx	r3
   28464:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   28466:	2200      	movs	r2, #0
   28468:	f883 2020 	strb.w	r2, [r3, #32]
   2846c:	e7ce      	b.n	2840c <ull_isr+0x26c>
   2846e:	4b0c      	ldr	r3, [pc, #48]	@ (284a0 <ull_isr+0x300>)
   28470:	2200      	movs	r2, #0
   28472:	2144      	movs	r1, #68	@ 0x44
   28474:	4620      	mov	r0, r4
   28476:	f7ff fb0f 	bl	27a98 <dwt_write32bitoffsetreg>
   2847a:	4620      	mov	r0, r4
   2847c:	f7ff fd2e 	bl	27edc <_dwt_clear_db_events>
   28480:	69a3      	ldr	r3, [r4, #24]
   28482:	b113      	cbz	r3, 2848a <ull_isr+0x2ea>
   28484:	6d20      	ldr	r0, [r4, #80]	@ 0x50
   28486:	3018      	adds	r0, #24
   28488:	4798      	blx	r3
   2848a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   2848c:	2200      	movs	r2, #0
   2848e:	f883 2020 	strb.w	r2, [r3, #32]
   28492:	e7be      	b.n	28412 <ull_isr+0x272>
   28494:	00010018 	.word	0x00010018
   28498:	00110038 	.word	0x00110038
   2849c:	34059400 	.word	0x34059400
   284a0:	10220400 	.word	0x10220400

000284a4 <dwt_modify32bitoffsetreg>:
   284a4:	b530      	push	{r4, r5, lr}
   284a6:	b085      	sub	sp, #20
   284a8:	9c08      	ldr	r4, [sp, #32]
   284aa:	f88d 3008 	strb.w	r3, [sp, #8]
   284ae:	0a1d      	lsrs	r5, r3, #8
   284b0:	f88d 5009 	strb.w	r5, [sp, #9]
   284b4:	0c1d      	lsrs	r5, r3, #16
   284b6:	f88d 500a 	strb.w	r5, [sp, #10]
   284ba:	0e1b      	lsrs	r3, r3, #24
   284bc:	f88d 300b 	strb.w	r3, [sp, #11]
   284c0:	f88d 400c 	strb.w	r4, [sp, #12]
   284c4:	0a23      	lsrs	r3, r4, #8
   284c6:	f88d 300d 	strb.w	r3, [sp, #13]
   284ca:	0c23      	lsrs	r3, r4, #16
   284cc:	f88d 300e 	strb.w	r3, [sp, #14]
   284d0:	0e24      	lsrs	r4, r4, #24
   284d2:	f88d 400f 	strb.w	r4, [sp, #15]
   284d6:	f248 0303 	movw	r3, #32771	@ 0x8003
   284da:	9301      	str	r3, [sp, #4]
   284dc:	ab02      	add	r3, sp, #8
   284de:	9300      	str	r3, [sp, #0]
   284e0:	2308      	movs	r3, #8
   284e2:	b292      	uxth	r2, r2
   284e4:	f7fe fd71 	bl	26fca <dwt_xfer3xxx>
   284e8:	b005      	add	sp, #20
   284ea:	bd30      	pop	{r4, r5, pc}

000284ec <ull_enablegpioclocks>:
   284ec:	b500      	push	{lr}
   284ee:	b083      	sub	sp, #12
   284f0:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
   284f4:	9300      	str	r3, [sp, #0]
   284f6:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   284fa:	2200      	movs	r2, #0
   284fc:	4902      	ldr	r1, [pc, #8]	@ (28508 <ull_enablegpioclocks+0x1c>)
   284fe:	f7ff ffd1 	bl	284a4 <dwt_modify32bitoffsetreg>
   28502:	b003      	add	sp, #12
   28504:	f85d fb04 	ldr.w	pc, [sp], #4
   28508:	00110004 	.word	0x00110004

0002850c <ull_enable_rf_tx>:
   2850c:	b570      	push	{r4, r5, r6, lr}
   2850e:	b082      	sub	sp, #8
   28510:	4604      	mov	r4, r0
   28512:	460e      	mov	r6, r1
   28514:	4d13      	ldr	r5, [pc, #76]	@ (28564 <ull_enable_rf_tx+0x58>)
   28516:	f04f 2308 	mov.w	r3, #134219776	@ 0x8000800
   2851a:	9300      	str	r3, [sp, #0]
   2851c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   28520:	2200      	movs	r2, #0
   28522:	4629      	mov	r1, r5
   28524:	f7ff ffbe 	bl	284a4 <dwt_modify32bitoffsetreg>
   28528:	f04f 1360 	mov.w	r3, #6291552	@ 0x600060
   2852c:	9300      	str	r3, [sp, #0]
   2852e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   28532:	2200      	movs	r2, #0
   28534:	4629      	mov	r1, r5
   28536:	4620      	mov	r0, r4
   28538:	f7ff ffb4 	bl	284a4 <dwt_modify32bitoffsetreg>
   2853c:	4b0a      	ldr	r3, [pc, #40]	@ (28568 <ull_enable_rf_tx+0x5c>)
   2853e:	9300      	str	r3, [sp, #0]
   28540:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   28544:	2200      	movs	r2, #0
   28546:	f44f 21e0 	mov.w	r1, #458752	@ 0x70000
   2854a:	4620      	mov	r0, r4
   2854c:	f7ff ffaa 	bl	284a4 <dwt_modify32bitoffsetreg>
   28550:	b90e      	cbnz	r6, 28556 <ull_enable_rf_tx+0x4a>
   28552:	b002      	add	sp, #8
   28554:	bd70      	pop	{r4, r5, r6, pc}
   28556:	4b05      	ldr	r3, [pc, #20]	@ (2856c <ull_enable_rf_tx+0x60>)
   28558:	2200      	movs	r2, #0
   2855a:	4905      	ldr	r1, [pc, #20]	@ (28570 <ull_enable_rf_tx+0x64>)
   2855c:	4620      	mov	r0, r4
   2855e:	f7ff fa9b 	bl	27a98 <dwt_write32bitoffsetreg>
   28562:	e7f6      	b.n	28552 <ull_enable_rf_tx+0x46>
   28564:	00070048 	.word	0x00070048
   28568:	02003c00 	.word	0x02003c00
   2856c:	01011100 	.word	0x01011100
   28570:	00070014 	.word	0x00070014

00028574 <ull_enable_rftx_blocks>:
   28574:	b500      	push	{lr}
   28576:	b083      	sub	sp, #12
   28578:	4b05      	ldr	r3, [pc, #20]	@ (28590 <ull_enable_rftx_blocks+0x1c>)
   2857a:	9300      	str	r3, [sp, #0]
   2857c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   28580:	2200      	movs	r2, #0
   28582:	4904      	ldr	r1, [pc, #16]	@ (28594 <ull_enable_rftx_blocks+0x20>)
   28584:	f7ff ff8e 	bl	284a4 <dwt_modify32bitoffsetreg>
   28588:	b003      	add	sp, #12
   2858a:	f85d fb04 	ldr.w	pc, [sp], #4
   2858e:	bf00      	nop
   28590:	02003c00 	.word	0x02003c00
   28594:	00070004 	.word	0x00070004

00028598 <_dwt_otpprogword32>:
   28598:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2859c:	b083      	sub	sp, #12
   2859e:	4604      	mov	r4, r0
   285a0:	460d      	mov	r5, r1
   285a2:	4617      	mov	r7, r2
   285a4:	4e56      	ldr	r6, [pc, #344]	@ (28700 <_dwt_otpprogword32+0x168>)
   285a6:	2200      	movs	r2, #0
   285a8:	4631      	mov	r1, r6
   285aa:	f7fe fd96 	bl	270da <dwt_read32bitoffsetreg>
   285ae:	4681      	mov	r9, r0
   285b0:	f44f 4370 	mov.w	r3, #61440	@ 0xf000
   285b4:	9300      	str	r3, [sp, #0]
   285b6:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   285ba:	2200      	movs	r2, #0
   285bc:	4631      	mov	r1, r6
   285be:	4620      	mov	r0, r4
   285c0:	f7ff ff70 	bl	284a4 <dwt_modify32bitoffsetreg>
   285c4:	f8df 813c 	ldr.w	r8, [pc, #316]	@ 28704 <_dwt_otpprogword32+0x16c>
   285c8:	2318      	movs	r3, #24
   285ca:	2200      	movs	r2, #0
   285cc:	4641      	mov	r1, r8
   285ce:	4620      	mov	r0, r4
   285d0:	f7ff f9f7 	bl	279c2 <dwt_write16bitoffsetreg>
   285d4:	2125      	movs	r1, #37	@ 0x25
   285d6:	4620      	mov	r0, r4
   285d8:	f7ff fa28 	bl	27a2c <__dwt_otp_write_wdata_id_reg>
   285dc:	2102      	movs	r1, #2
   285de:	4620      	mov	r0, r4
   285e0:	f7ff fa24 	bl	27a2c <__dwt_otp_write_wdata_id_reg>
   285e4:	f44f 71fe 	mov.w	r1, #508	@ 0x1fc
   285e8:	4620      	mov	r0, r4
   285ea:	f7ff fa1f 	bl	27a2c <__dwt_otp_write_wdata_id_reg>
   285ee:	b2f9      	uxtb	r1, r7
   285f0:	f441 7180 	orr.w	r1, r1, #256	@ 0x100
   285f4:	4620      	mov	r0, r4
   285f6:	f7ff fa19 	bl	27a2c <__dwt_otp_write_wdata_id_reg>
   285fa:	f44f 7180 	mov.w	r1, #256	@ 0x100
   285fe:	4620      	mov	r0, r4
   28600:	f7ff fa14 	bl	27a2c <__dwt_otp_write_wdata_id_reg>
   28604:	2100      	movs	r1, #0
   28606:	4620      	mov	r0, r4
   28608:	f7ff fa10 	bl	27a2c <__dwt_otp_write_wdata_id_reg>
   2860c:	2102      	movs	r1, #2
   2860e:	4620      	mov	r0, r4
   28610:	f7ff fa0c 	bl	27a2c <__dwt_otp_write_wdata_id_reg>
   28614:	f44f 71e0 	mov.w	r1, #448	@ 0x1c0
   28618:	4620      	mov	r0, r4
   2861a:	f7ff fa07 	bl	27a2c <__dwt_otp_write_wdata_id_reg>
   2861e:	b2e9      	uxtb	r1, r5
   28620:	f441 7180 	orr.w	r1, r1, #256	@ 0x100
   28624:	4620      	mov	r0, r4
   28626:	f7ff fa01 	bl	27a2c <__dwt_otp_write_wdata_id_reg>
   2862a:	f3c5 2107 	ubfx	r1, r5, #8, #8
   2862e:	f441 7180 	orr.w	r1, r1, #256	@ 0x100
   28632:	4620      	mov	r0, r4
   28634:	f7ff f9fa 	bl	27a2c <__dwt_otp_write_wdata_id_reg>
   28638:	f3c5 4107 	ubfx	r1, r5, #16, #8
   2863c:	f441 7180 	orr.w	r1, r1, #256	@ 0x100
   28640:	4620      	mov	r0, r4
   28642:	f7ff f9f3 	bl	27a2c <__dwt_otp_write_wdata_id_reg>
   28646:	0e29      	lsrs	r1, r5, #24
   28648:	f441 7180 	orr.w	r1, r1, #256	@ 0x100
   2864c:	4620      	mov	r0, r4
   2864e:	f7ff f9ed 	bl	27a2c <__dwt_otp_write_wdata_id_reg>
   28652:	2100      	movs	r1, #0
   28654:	4620      	mov	r0, r4
   28656:	f7ff f9e9 	bl	27a2c <__dwt_otp_write_wdata_id_reg>
   2865a:	213a      	movs	r1, #58	@ 0x3a
   2865c:	4620      	mov	r0, r4
   2865e:	f7ff f9e5 	bl	27a2c <__dwt_otp_write_wdata_id_reg>
   28662:	f240 11ff 	movw	r1, #511	@ 0x1ff
   28666:	4620      	mov	r0, r4
   28668:	f7ff f9e0 	bl	27a2c <__dwt_otp_write_wdata_id_reg>
   2866c:	f44f 7185 	mov.w	r1, #266	@ 0x10a
   28670:	4620      	mov	r0, r4
   28672:	f7ff f9db 	bl	27a2c <__dwt_otp_write_wdata_id_reg>
   28676:	2100      	movs	r1, #0
   28678:	4620      	mov	r0, r4
   2867a:	f7ff f9d7 	bl	27a2c <__dwt_otp_write_wdata_id_reg>
   2867e:	213a      	movs	r1, #58	@ 0x3a
   28680:	4620      	mov	r0, r4
   28682:	f7ff f9d3 	bl	27a2c <__dwt_otp_write_wdata_id_reg>
   28686:	f240 1101 	movw	r1, #257	@ 0x101
   2868a:	4620      	mov	r0, r4
   2868c:	f7ff f9ce 	bl	27a2c <__dwt_otp_write_wdata_id_reg>
   28690:	2302      	movs	r3, #2
   28692:	2200      	movs	r2, #0
   28694:	f44f 2130 	mov.w	r1, #720896	@ 0xb0000
   28698:	4620      	mov	r0, r4
   2869a:	f7ff f992 	bl	279c2 <dwt_write16bitoffsetreg>
   2869e:	2300      	movs	r3, #0
   286a0:	461a      	mov	r2, r3
   286a2:	f44f 2130 	mov.w	r1, #720896	@ 0xb0000
   286a6:	4620      	mov	r0, r4
   286a8:	f7ff f98b 	bl	279c2 <dwt_write16bitoffsetreg>
   286ac:	2002      	movs	r0, #2
   286ae:	f7f2 fbb2 	bl	1ae16 <deca_sleep>
   286b2:	213a      	movs	r1, #58	@ 0x3a
   286b4:	4620      	mov	r0, r4
   286b6:	f7ff f9b9 	bl	27a2c <__dwt_otp_write_wdata_id_reg>
   286ba:	f44f 7181 	mov.w	r1, #258	@ 0x102
   286be:	4620      	mov	r0, r4
   286c0:	f7ff f9b4 	bl	27a2c <__dwt_otp_write_wdata_id_reg>
   286c4:	2302      	movs	r3, #2
   286c6:	2200      	movs	r2, #0
   286c8:	f44f 2130 	mov.w	r1, #720896	@ 0xb0000
   286cc:	4620      	mov	r0, r4
   286ce:	f7ff f978 	bl	279c2 <dwt_write16bitoffsetreg>
   286d2:	2300      	movs	r3, #0
   286d4:	461a      	mov	r2, r3
   286d6:	f44f 2130 	mov.w	r1, #720896	@ 0xb0000
   286da:	4620      	mov	r0, r4
   286dc:	f7ff f971 	bl	279c2 <dwt_write16bitoffsetreg>
   286e0:	2300      	movs	r3, #0
   286e2:	461a      	mov	r2, r3
   286e4:	4641      	mov	r1, r8
   286e6:	4620      	mov	r0, r4
   286e8:	f7ff f96b 	bl	279c2 <dwt_write16bitoffsetreg>
   286ec:	464b      	mov	r3, r9
   286ee:	2200      	movs	r2, #0
   286f0:	4631      	mov	r1, r6
   286f2:	4620      	mov	r0, r4
   286f4:	f7ff f9d0 	bl	27a98 <dwt_write32bitoffsetreg>
   286f8:	b003      	add	sp, #12
   286fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   286fe:	bf00      	nop
   28700:	00070044 	.word	0x00070044
   28704:	000b0008 	.word	0x000b0008

00028708 <ull_setgpiomode>:
   28708:	b5f0      	push	{r4, r5, r6, r7, lr}
   2870a:	b083      	sub	sp, #12
   2870c:	2400      	movs	r4, #0
   2870e:	4623      	mov	r3, r4
   28710:	2601      	movs	r6, #1
   28712:	2707      	movs	r7, #7
   28714:	e002      	b.n	2871c <ull_setgpiomode+0x14>
   28716:	3401      	adds	r4, #1
   28718:	2c09      	cmp	r4, #9
   2871a:	d009      	beq.n	28730 <ull_setgpiomode+0x28>
   2871c:	fa06 f504 	lsl.w	r5, r6, r4
   28720:	420d      	tst	r5, r1
   28722:	d0f8      	beq.n	28716 <ull_setgpiomode+0xe>
   28724:	eb04 0544 	add.w	r5, r4, r4, lsl #1
   28728:	fa07 f505 	lsl.w	r5, r7, r5
   2872c:	432b      	orrs	r3, r5
   2872e:	e7f2      	b.n	28716 <ull_setgpiomode+0xe>
   28730:	401a      	ands	r2, r3
   28732:	9200      	str	r2, [sp, #0]
   28734:	43db      	mvns	r3, r3
   28736:	2200      	movs	r2, #0
   28738:	f44f 21a0 	mov.w	r1, #327680	@ 0x50000
   2873c:	f7ff feb2 	bl	284a4 <dwt_modify32bitoffsetreg>
   28740:	b003      	add	sp, #12
   28742:	bdf0      	pop	{r4, r5, r6, r7, pc}

00028744 <ull_writetxfctrl>:
   28744:	b500      	push	{lr}
   28746:	b083      	sub	sp, #12
   28748:	2a7f      	cmp	r2, #127	@ 0x7f
   2874a:	bf88      	it	hi
   2874c:	3280      	addhi	r2, #128	@ 0x80
   2874e:	ea41 21c3 	orr.w	r1, r1, r3, lsl #11
   28752:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
   28756:	9100      	str	r1, [sp, #0]
   28758:	4b03      	ldr	r3, [pc, #12]	@ (28768 <ull_writetxfctrl+0x24>)
   2875a:	2200      	movs	r2, #0
   2875c:	2120      	movs	r1, #32
   2875e:	f7ff fea1 	bl	284a4 <dwt_modify32bitoffsetreg>
   28762:	b003      	add	sp, #12
   28764:	f85d fb04 	ldr.w	pc, [sp], #4
   28768:	fc00f400 	.word	0xfc00f400

0002876c <prs_sys_status_and_or>:
   2876c:	b500      	push	{lr}
   2876e:	b083      	sub	sp, #12
   28770:	9200      	str	r2, [sp, #0]
   28772:	460b      	mov	r3, r1
   28774:	2200      	movs	r2, #0
   28776:	2144      	movs	r1, #68	@ 0x44
   28778:	f7ff fe94 	bl	284a4 <dwt_modify32bitoffsetreg>
   2877c:	2000      	movs	r0, #0
   2877e:	b003      	add	sp, #12
   28780:	f85d fb04 	ldr.w	pc, [sp], #4

00028784 <dwt_modify8bitoffsetreg>:
   28784:	b500      	push	{lr}
   28786:	b085      	sub	sp, #20
   28788:	f88d 300c 	strb.w	r3, [sp, #12]
   2878c:	f89d 3018 	ldrb.w	r3, [sp, #24]
   28790:	f88d 300d 	strb.w	r3, [sp, #13]
   28794:	f248 0301 	movw	r3, #32769	@ 0x8001
   28798:	9301      	str	r3, [sp, #4]
   2879a:	ab03      	add	r3, sp, #12
   2879c:	9300      	str	r3, [sp, #0]
   2879e:	2302      	movs	r3, #2
   287a0:	b292      	uxth	r2, r2
   287a2:	f7fe fc12 	bl	26fca <dwt_xfer3xxx>
   287a6:	b005      	add	sp, #20
   287a8:	f85d fb04 	ldr.w	pc, [sp], #4

000287ac <ull_enablespicrccheck>:
   287ac:	b570      	push	{r4, r5, r6, lr}
   287ae:	b082      	sub	sp, #8
   287b0:	4604      	mov	r4, r0
   287b2:	460d      	mov	r5, r1
   287b4:	b159      	cbz	r1, 287ce <ull_enablespicrccheck+0x22>
   287b6:	4616      	mov	r6, r2
   287b8:	2340      	movs	r3, #64	@ 0x40
   287ba:	9300      	str	r3, [sp, #0]
   287bc:	23ff      	movs	r3, #255	@ 0xff
   287be:	2200      	movs	r2, #0
   287c0:	2110      	movs	r1, #16
   287c2:	f7ff ffdf 	bl	28784 <dwt_modify8bitoffsetreg>
   287c6:	2d02      	cmp	r5, #2
   287c8:	d107      	bne.n	287da <ull_enablespicrccheck+0x2e>
   287ca:	60e6      	str	r6, [r4, #12]
   287cc:	e005      	b.n	287da <ull_enablespicrccheck+0x2e>
   287ce:	2200      	movs	r2, #0
   287d0:	9200      	str	r2, [sp, #0]
   287d2:	23bf      	movs	r3, #191	@ 0xbf
   287d4:	2110      	movs	r1, #16
   287d6:	f7ff ffd5 	bl	28784 <dwt_modify8bitoffsetreg>
   287da:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   287dc:	751d      	strb	r5, [r3, #20]
   287de:	b002      	add	sp, #8
   287e0:	bd70      	pop	{r4, r5, r6, pc}
	...

000287e4 <ull_configciadiag>:
   287e4:	b530      	push	{r4, r5, lr}
   287e6:	b083      	sub	sp, #12
   287e8:	4604      	mov	r4, r0
   287ea:	460d      	mov	r5, r1
   287ec:	f011 0f01 	tst.w	r1, #1
   287f0:	d015      	beq.n	2881e <ull_configciadiag+0x3a>
   287f2:	2300      	movs	r3, #0
   287f4:	9300      	str	r3, [sp, #0]
   287f6:	23ef      	movs	r3, #239	@ 0xef
   287f8:	2202      	movs	r2, #2
   287fa:	f44f 2160 	mov.w	r1, #917504	@ 0xe0000
   287fe:	f7ff ffc1 	bl	28784 <dwt_modify8bitoffsetreg>
   28802:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   28804:	759d      	strb	r5, [r3, #22]
   28806:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   28808:	7d9b      	ldrb	r3, [r3, #22]
   2880a:	085b      	lsrs	r3, r3, #1
   2880c:	d010      	beq.n	28830 <ull_configciadiag+0x4c>
   2880e:	086b      	lsrs	r3, r5, #1
   28810:	2200      	movs	r2, #0
   28812:	490e      	ldr	r1, [pc, #56]	@ (2884c <ull_configciadiag+0x68>)
   28814:	4620      	mov	r0, r4
   28816:	f7ff fb23 	bl	27e60 <dwt_write8bitoffsetreg>
   2881a:	b003      	add	sp, #12
   2881c:	bd30      	pop	{r4, r5, pc}
   2881e:	2310      	movs	r3, #16
   28820:	9300      	str	r3, [sp, #0]
   28822:	23ff      	movs	r3, #255	@ 0xff
   28824:	2202      	movs	r2, #2
   28826:	f44f 2160 	mov.w	r1, #917504	@ 0xe0000
   2882a:	f7ff ffab 	bl	28784 <dwt_modify8bitoffsetreg>
   2882e:	e7e8      	b.n	28802 <ull_configciadiag+0x1e>
   28830:	2301      	movs	r3, #1
   28832:	9300      	str	r3, [sp, #0]
   28834:	23ff      	movs	r3, #255	@ 0xff
   28836:	2200      	movs	r2, #0
   28838:	4904      	ldr	r1, [pc, #16]	@ (2884c <ull_configciadiag+0x68>)
   2883a:	4620      	mov	r0, r4
   2883c:	f7ff ffa2 	bl	28784 <dwt_modify8bitoffsetreg>
   28840:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   28842:	7d93      	ldrb	r3, [r2, #22]
   28844:	f043 0302 	orr.w	r3, r3, #2
   28848:	7593      	strb	r3, [r2, #22]
   2884a:	e7e6      	b.n	2881a <ull_configciadiag+0x36>
   2884c:	00010020 	.word	0x00010020

00028850 <ull_configurestsloadiv>:
   28850:	b500      	push	{lr}
   28852:	b083      	sub	sp, #12
   28854:	2301      	movs	r3, #1
   28856:	9300      	str	r3, [sp, #0]
   28858:	23ff      	movs	r3, #255	@ 0xff
   2885a:	2200      	movs	r2, #0
   2885c:	4902      	ldr	r1, [pc, #8]	@ (28868 <ull_configurestsloadiv+0x18>)
   2885e:	f7ff ff91 	bl	28784 <dwt_modify8bitoffsetreg>
   28862:	b003      	add	sp, #12
   28864:	f85d fb04 	ldr.w	pc, [sp], #4
   28868:	00020004 	.word	0x00020004

0002886c <ull_adcoffsetscalibration>:
   2886c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28870:	b08b      	sub	sp, #44	@ 0x2c
   28872:	4607      	mov	r7, r0
   28874:	f8df 8220 	ldr.w	r8, [pc, #544]	@ 28a98 <ull_adcoffsetscalibration+0x22c>
   28878:	2200      	movs	r2, #0
   2887a:	4641      	mov	r1, r8
   2887c:	f7fe fc2d 	bl	270da <dwt_read32bitoffsetreg>
   28880:	9004      	str	r0, [sp, #16]
   28882:	4c7d      	ldr	r4, [pc, #500]	@ (28a78 <ull_adcoffsetscalibration+0x20c>)
   28884:	2200      	movs	r2, #0
   28886:	4621      	mov	r1, r4
   28888:	4638      	mov	r0, r7
   2888a:	f7fe fc26 	bl	270da <dwt_read32bitoffsetreg>
   2888e:	9005      	str	r0, [sp, #20]
   28890:	4d7a      	ldr	r5, [pc, #488]	@ (28a7c <ull_adcoffsetscalibration+0x210>)
   28892:	2200      	movs	r2, #0
   28894:	4629      	mov	r1, r5
   28896:	4638      	mov	r0, r7
   28898:	f7fe fc74 	bl	27184 <dwt_read8bitoffsetreg>
   2889c:	9006      	str	r0, [sp, #24]
   2889e:	4e78      	ldr	r6, [pc, #480]	@ (28a80 <ull_adcoffsetscalibration+0x214>)
   288a0:	2200      	movs	r2, #0
   288a2:	4631      	mov	r1, r6
   288a4:	4638      	mov	r0, r7
   288a6:	f7fe fc18 	bl	270da <dwt_read32bitoffsetreg>
   288aa:	4682      	mov	sl, r0
   288ac:	9007      	str	r0, [sp, #28]
   288ae:	2200      	movs	r2, #0
   288b0:	4974      	ldr	r1, [pc, #464]	@ (28a84 <ull_adcoffsetscalibration+0x218>)
   288b2:	4638      	mov	r0, r7
   288b4:	f7fe fc11 	bl	270da <dwt_read32bitoffsetreg>
   288b8:	4681      	mov	r9, r0
   288ba:	4b73      	ldr	r3, [pc, #460]	@ (28a88 <ull_adcoffsetscalibration+0x21c>)
   288bc:	9300      	str	r3, [sp, #0]
   288be:	f06f 537c 	mvn.w	r3, #1056964608	@ 0x3f000000
   288c2:	2200      	movs	r2, #0
   288c4:	4641      	mov	r1, r8
   288c6:	4638      	mov	r0, r7
   288c8:	f7ff fdec 	bl	284a4 <dwt_modify32bitoffsetreg>
   288cc:	464b      	mov	r3, r9
   288ce:	2200      	movs	r2, #0
   288d0:	4631      	mov	r1, r6
   288d2:	4638      	mov	r0, r7
   288d4:	f7ff f8e0 	bl	27a98 <dwt_write32bitoffsetreg>
   288d8:	4653      	mov	r3, sl
   288da:	00db      	lsls	r3, r3, #3
   288dc:	f003 0338 	and.w	r3, r3, #56	@ 0x38
   288e0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   288e4:	9300      	str	r3, [sp, #0]
   288e6:	2386      	movs	r3, #134	@ 0x86
   288e8:	2200      	movs	r2, #0
   288ea:	4621      	mov	r1, r4
   288ec:	4638      	mov	r0, r7
   288ee:	f7ff ff49 	bl	28784 <dwt_modify8bitoffsetreg>
   288f2:	2300      	movs	r3, #0
   288f4:	2203      	movs	r2, #3
   288f6:	4621      	mov	r1, r4
   288f8:	4638      	mov	r0, r7
   288fa:	f7ff fab1 	bl	27e60 <dwt_write8bitoffsetreg>
   288fe:	f04f 0900 	mov.w	r9, #0
   28902:	f8cd 9000 	str.w	r9, [sp]
   28906:	23fe      	movs	r3, #254	@ 0xfe
   28908:	464a      	mov	r2, r9
   2890a:	4629      	mov	r1, r5
   2890c:	4638      	mov	r0, r7
   2890e:	f7ff ff39 	bl	28784 <dwt_modify8bitoffsetreg>
   28912:	464a      	mov	r2, r9
   28914:	213c      	movs	r1, #60	@ 0x3c
   28916:	4638      	mov	r0, r7
   28918:	f7fe fbdf 	bl	270da <dwt_read32bitoffsetreg>
   2891c:	9008      	str	r0, [sp, #32]
   2891e:	464a      	mov	r2, r9
   28920:	2140      	movs	r1, #64	@ 0x40
   28922:	4638      	mov	r0, r7
   28924:	f7fe fbd9 	bl	270da <dwt_read32bitoffsetreg>
   28928:	9009      	str	r0, [sp, #36]	@ 0x24
   2892a:	464b      	mov	r3, r9
   2892c:	464a      	mov	r2, r9
   2892e:	213c      	movs	r1, #60	@ 0x3c
   28930:	4638      	mov	r0, r7
   28932:	f7ff f8b1 	bl	27a98 <dwt_write32bitoffsetreg>
   28936:	464b      	mov	r3, r9
   28938:	464a      	mov	r2, r9
   2893a:	2140      	movs	r1, #64	@ 0x40
   2893c:	4638      	mov	r0, r7
   2893e:	f7ff f8ab 	bl	27a98 <dwt_write32bitoffsetreg>
   28942:	f7f5 fee1 	bl	1e708 <dwt_forcetrxoff>
   28946:	f04f 0b02 	mov.w	fp, #2
   2894a:	464c      	mov	r4, r9
   2894c:	464d      	mov	r5, r9
   2894e:	464e      	mov	r6, r9
   28950:	46c8      	mov	r8, r9
   28952:	f8cd 900c 	str.w	r9, [sp, #12]
   28956:	46ca      	mov	sl, r9
   28958:	e00e      	b.n	28978 <ull_adcoffsetscalibration+0x10c>
   2895a:	f7f5 fed5 	bl	1e708 <dwt_forcetrxoff>
   2895e:	9b03      	ldr	r3, [sp, #12]
   28960:	2b00      	cmp	r3, #0
   28962:	f000 8082 	beq.w	28a6a <ull_adcoffsetscalibration+0x1fe>
   28966:	f1bb 0f01 	cmp.w	fp, #1
   2896a:	f000 8081 	beq.w	28a70 <ull_adcoffsetscalibration+0x204>
   2896e:	2301      	movs	r3, #1
   28970:	9303      	str	r3, [sp, #12]
   28972:	f1bb 0b01 	subs.w	fp, fp, #1
   28976:	d043      	beq.n	28a00 <ull_adcoffsetscalibration+0x194>
   28978:	4650      	mov	r0, sl
   2897a:	f7f5 fed3 	bl	1e724 <dwt_rxenable>
   2897e:	2014      	movs	r0, #20
   28980:	f7f2 fa59 	bl	1ae36 <deca_usleep>
   28984:	f04f 0904 	mov.w	r9, #4
   28988:	f8cd a000 	str.w	sl, [sp]
   2898c:	23fe      	movs	r3, #254	@ 0xfe
   2898e:	4652      	mov	r2, sl
   28990:	f44f 3140 	mov.w	r1, #196608	@ 0x30000
   28994:	4638      	mov	r0, r7
   28996:	f7ff fef5 	bl	28784 <dwt_modify8bitoffsetreg>
   2899a:	2301      	movs	r3, #1
   2899c:	9300      	str	r3, [sp, #0]
   2899e:	23fe      	movs	r3, #254	@ 0xfe
   289a0:	4652      	mov	r2, sl
   289a2:	f44f 3140 	mov.w	r1, #196608	@ 0x30000
   289a6:	4638      	mov	r0, r7
   289a8:	f7ff feec 	bl	28784 <dwt_modify8bitoffsetreg>
   289ac:	4652      	mov	r2, sl
   289ae:	4937      	ldr	r1, [pc, #220]	@ (28a8c <ull_adcoffsetscalibration+0x220>)
   289b0:	4638      	mov	r0, r7
   289b2:	f7fe fb92 	bl	270da <dwt_read32bitoffsetreg>
   289b6:	fa58 f880 	uxtab	r8, r8, r0
   289ba:	fa1f f888 	uxth.w	r8, r8
   289be:	f3c0 2307 	ubfx	r3, r0, #8, #8
   289c2:	441e      	add	r6, r3
   289c4:	b2b6      	uxth	r6, r6
   289c6:	f3c0 4307 	ubfx	r3, r0, #16, #8
   289ca:	441d      	add	r5, r3
   289cc:	b2ad      	uxth	r5, r5
   289ce:	eb04 6410 	add.w	r4, r4, r0, lsr #24
   289d2:	b2a4      	uxth	r4, r4
   289d4:	f1b9 0901 	subs.w	r9, r9, #1
   289d8:	d1d6      	bne.n	28988 <ull_adcoffsetscalibration+0x11c>
   289da:	f3c8 0887 	ubfx	r8, r8, #2, #8
   289de:	f3c6 0687 	ubfx	r6, r6, #2, #8
   289e2:	f3c5 0587 	ubfx	r5, r5, #2, #8
   289e6:	f3c4 0487 	ubfx	r4, r4, #2, #8
   289ea:	4652      	mov	r2, sl
   289ec:	2144      	movs	r1, #68	@ 0x44
   289ee:	4638      	mov	r0, r7
   289f0:	f7fe fb73 	bl	270da <dwt_read32bitoffsetreg>
   289f4:	4b26      	ldr	r3, [pc, #152]	@ (28a90 <ull_adcoffsetscalibration+0x224>)
   289f6:	4218      	tst	r0, r3
   289f8:	d0af      	beq.n	2895a <ull_adcoffsetscalibration+0xee>
   289fa:	f7f5 fe85 	bl	1e708 <dwt_forcetrxoff>
   289fe:	e7b2      	b.n	28966 <ull_adcoffsetscalibration+0xfa>
   28a00:	f04f 0900 	mov.w	r9, #0
   28a04:	9b08      	ldr	r3, [sp, #32]
   28a06:	2200      	movs	r2, #0
   28a08:	213c      	movs	r1, #60	@ 0x3c
   28a0a:	4638      	mov	r0, r7
   28a0c:	f7ff f844 	bl	27a98 <dwt_write32bitoffsetreg>
   28a10:	9b09      	ldr	r3, [sp, #36]	@ 0x24
   28a12:	2200      	movs	r2, #0
   28a14:	2140      	movs	r1, #64	@ 0x40
   28a16:	4638      	mov	r0, r7
   28a18:	f7ff f83e 	bl	27a98 <dwt_write32bitoffsetreg>
   28a1c:	042b      	lsls	r3, r5, #16
   28a1e:	eb03 6304 	add.w	r3, r3, r4, lsl #24
   28a22:	eb03 2306 	add.w	r3, r3, r6, lsl #8
   28a26:	4443      	add	r3, r8
   28a28:	2200      	movs	r2, #0
   28a2a:	491a      	ldr	r1, [pc, #104]	@ (28a94 <ull_adcoffsetscalibration+0x228>)
   28a2c:	4638      	mov	r0, r7
   28a2e:	f7ff f833 	bl	27a98 <dwt_write32bitoffsetreg>
   28a32:	9b04      	ldr	r3, [sp, #16]
   28a34:	2200      	movs	r2, #0
   28a36:	4918      	ldr	r1, [pc, #96]	@ (28a98 <ull_adcoffsetscalibration+0x22c>)
   28a38:	4638      	mov	r0, r7
   28a3a:	f7ff f82d 	bl	27a98 <dwt_write32bitoffsetreg>
   28a3e:	9b05      	ldr	r3, [sp, #20]
   28a40:	2200      	movs	r2, #0
   28a42:	490d      	ldr	r1, [pc, #52]	@ (28a78 <ull_adcoffsetscalibration+0x20c>)
   28a44:	4638      	mov	r0, r7
   28a46:	f7ff f827 	bl	27a98 <dwt_write32bitoffsetreg>
   28a4a:	9b06      	ldr	r3, [sp, #24]
   28a4c:	2200      	movs	r2, #0
   28a4e:	490b      	ldr	r1, [pc, #44]	@ (28a7c <ull_adcoffsetscalibration+0x210>)
   28a50:	4638      	mov	r0, r7
   28a52:	f7ff fa05 	bl	27e60 <dwt_write8bitoffsetreg>
   28a56:	9b07      	ldr	r3, [sp, #28]
   28a58:	2200      	movs	r2, #0
   28a5a:	4909      	ldr	r1, [pc, #36]	@ (28a80 <ull_adcoffsetscalibration+0x214>)
   28a5c:	4638      	mov	r0, r7
   28a5e:	f7ff f81b 	bl	27a98 <dwt_write32bitoffsetreg>
   28a62:	4648      	mov	r0, r9
   28a64:	b00b      	add	sp, #44	@ 0x2c
   28a66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28a6a:	f04f 0900 	mov.w	r9, #0
   28a6e:	e7c9      	b.n	28a04 <ull_adcoffsetscalibration+0x198>
   28a70:	f06f 0905 	mvn.w	r9, #5
   28a74:	e7c6      	b.n	28a04 <ull_adcoffsetscalibration+0x198>
   28a76:	bf00      	nop
   28a78:	00030014 	.word	0x00030014
   28a7c:	00030018 	.word	0x00030018
   28a80:	0003002c 	.word	0x0003002c
   28a84:	00030044 	.word	0x00030044
   28a88:	38010000 	.word	0x38010000
   28a8c:	0003004c 	.word	0x0003004c
   28a90:	3427ff00 	.word	0x3427ff00
   28a94:	00030010 	.word	0x00030010
   28a98:	00070014 	.word	0x00070014

00028a9c <ull_restoreconfig>:
   28a9c:	b510      	push	{r4, lr}
   28a9e:	4604      	mov	r4, r0
   28aa0:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   28aa2:	7d9b      	ldrb	r3, [r3, #22]
   28aa4:	085b      	lsrs	r3, r3, #1
   28aa6:	d01a      	beq.n	28ade <ull_restoreconfig+0x42>
   28aa8:	2200      	movs	r2, #0
   28aaa:	4912      	ldr	r1, [pc, #72]	@ (28af4 <ull_restoreconfig+0x58>)
   28aac:	4620      	mov	r0, r4
   28aae:	f7fe fb2a 	bl	27106 <dwt_read16bitoffsetreg>
   28ab2:	f3c0 03c4 	ubfx	r3, r0, #3, #5
   28ab6:	3b09      	subs	r3, #9
   28ab8:	2b0f      	cmp	r3, #15
   28aba:	d80c      	bhi.n	28ad6 <ull_restoreconfig+0x3a>
   28abc:	f000 0001 	and.w	r0, r0, #1
   28ac0:	2800      	cmp	r0, #0
   28ac2:	bf0c      	ite	eq
   28ac4:	2105      	moveq	r1, #5
   28ac6:	2109      	movne	r1, #9
   28ac8:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   28aca:	7a1b      	ldrb	r3, [r3, #8]
   28acc:	2b01      	cmp	r3, #1
   28ace:	d002      	beq.n	28ad6 <ull_restoreconfig+0x3a>
   28ad0:	4620      	mov	r0, r4
   28ad2:	f7ff f8ad 	bl	27c30 <ull_configmrxlut>
   28ad6:	4620      	mov	r0, r4
   28ad8:	f7ff fec8 	bl	2886c <ull_adcoffsetscalibration>
   28adc:	bd10      	pop	{r4, pc}
   28ade:	2301      	movs	r3, #1
   28ae0:	2200      	movs	r2, #0
   28ae2:	4905      	ldr	r1, [pc, #20]	@ (28af8 <ull_restoreconfig+0x5c>)
   28ae4:	f7ff f9bc 	bl	27e60 <dwt_write8bitoffsetreg>
   28ae8:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   28aea:	7d93      	ldrb	r3, [r2, #22]
   28aec:	f043 0302 	orr.w	r3, r3, #2
   28af0:	7593      	strb	r3, [r2, #22]
   28af2:	e7d9      	b.n	28aa8 <ull_restoreconfig+0xc>
   28af4:	00010008 	.word	0x00010008
   28af8:	00010020 	.word	0x00010020

00028afc <ull_calcbandwidthadj>:
   28afc:	b570      	push	{r4, r5, r6, lr}
   28afe:	b082      	sub	sp, #8
   28b00:	4604      	mov	r4, r0
   28b02:	460d      	mov	r5, r1
   28b04:	2101      	movs	r1, #1
   28b06:	f7fe ff7b 	bl	27a00 <ull_force_clocks>
   28b0a:	2100      	movs	r1, #0
   28b0c:	4620      	mov	r0, r4
   28b0e:	f7ff fcfd 	bl	2850c <ull_enable_rf_tx>
   28b12:	4620      	mov	r0, r4
   28b14:	f7ff fd2e 	bl	28574 <ull_enable_rftx_blocks>
   28b18:	f3c5 030b 	ubfx	r3, r5, #0, #12
   28b1c:	2200      	movs	r2, #0
   28b1e:	4915      	ldr	r1, [pc, #84]	@ (28b74 <ull_calcbandwidthadj+0x78>)
   28b20:	4620      	mov	r0, r4
   28b22:	f7fe ff4e 	bl	279c2 <dwt_write16bitoffsetreg>
   28b26:	2303      	movs	r3, #3
   28b28:	9300      	str	r3, [sp, #0]
   28b2a:	23ff      	movs	r3, #255	@ 0xff
   28b2c:	2200      	movs	r2, #0
   28b2e:	4912      	ldr	r1, [pc, #72]	@ (28b78 <ull_calcbandwidthadj+0x7c>)
   28b30:	4620      	mov	r0, r4
   28b32:	f7ff fe27 	bl	28784 <dwt_modify8bitoffsetreg>
   28b36:	4e10      	ldr	r6, [pc, #64]	@ (28b78 <ull_calcbandwidthadj+0x7c>)
   28b38:	2500      	movs	r5, #0
   28b3a:	462a      	mov	r2, r5
   28b3c:	4631      	mov	r1, r6
   28b3e:	4620      	mov	r0, r4
   28b40:	f7fe fb20 	bl	27184 <dwt_read8bitoffsetreg>
   28b44:	f010 0f01 	tst.w	r0, #1
   28b48:	d1f7      	bne.n	28b3a <ull_calcbandwidthadj+0x3e>
   28b4a:	4620      	mov	r0, r4
   28b4c:	f7ff f906 	bl	27d5c <ull_disable_rftx_blocks>
   28b50:	2100      	movs	r1, #0
   28b52:	4620      	mov	r0, r4
   28b54:	f7ff f90c 	bl	27d70 <ull_disable_rf_tx>
   28b58:	2105      	movs	r1, #5
   28b5a:	4620      	mov	r0, r4
   28b5c:	f7fe ff50 	bl	27a00 <ull_force_clocks>
   28b60:	2200      	movs	r2, #0
   28b62:	4906      	ldr	r1, [pc, #24]	@ (28b7c <ull_calcbandwidthadj+0x80>)
   28b64:	4620      	mov	r0, r4
   28b66:	f7fe fb0d 	bl	27184 <dwt_read8bitoffsetreg>
   28b6a:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
   28b6e:	b002      	add	sp, #8
   28b70:	bd70      	pop	{r4, r5, r6, pc}
   28b72:	bf00      	nop
   28b74:	0008001c 	.word	0x0008001c
   28b78:	00080010 	.word	0x00080010
   28b7c:	0007001c 	.word	0x0007001c

00028b80 <ull_configuretxrf>:
   28b80:	b538      	push	{r3, r4, r5, lr}
   28b82:	4605      	mov	r5, r0
   28b84:	460c      	mov	r4, r1
   28b86:	f8b1 1005 	ldrh.w	r1, [r1, #5]
   28b8a:	b149      	cbz	r1, 28ba0 <ull_configuretxrf+0x20>
   28b8c:	f7ff ffb6 	bl	28afc <ull_calcbandwidthadj>
   28b90:	f8d4 3001 	ldr.w	r3, [r4, #1]
   28b94:	2200      	movs	r2, #0
   28b96:	4905      	ldr	r1, [pc, #20]	@ (28bac <ull_configuretxrf+0x2c>)
   28b98:	4628      	mov	r0, r5
   28b9a:	f7fe ff7d 	bl	27a98 <dwt_write32bitoffsetreg>
   28b9e:	bd38      	pop	{r3, r4, r5, pc}
   28ba0:	7823      	ldrb	r3, [r4, #0]
   28ba2:	2200      	movs	r2, #0
   28ba4:	4902      	ldr	r1, [pc, #8]	@ (28bb0 <ull_configuretxrf+0x30>)
   28ba6:	f7ff f95b 	bl	27e60 <dwt_write8bitoffsetreg>
   28baa:	e7f1      	b.n	28b90 <ull_configuretxrf+0x10>
   28bac:	00010004 	.word	0x00010004
   28bb0:	0007001c 	.word	0x0007001c

00028bb4 <ull_repeated_frames>:
   28bb4:	b530      	push	{r4, r5, lr}
   28bb6:	b083      	sub	sp, #12
   28bb8:	4604      	mov	r4, r0
   28bba:	460d      	mov	r5, r1
   28bbc:	2310      	movs	r3, #16
   28bbe:	9300      	str	r3, [sp, #0]
   28bc0:	23ff      	movs	r3, #255	@ 0xff
   28bc2:	2200      	movs	r2, #0
   28bc4:	4906      	ldr	r1, [pc, #24]	@ (28be0 <ull_repeated_frames+0x2c>)
   28bc6:	f7ff fddd 	bl	28784 <dwt_modify8bitoffsetreg>
   28bca:	462b      	mov	r3, r5
   28bcc:	2d02      	cmp	r5, #2
   28bce:	bf38      	it	cc
   28bd0:	2302      	movcc	r3, #2
   28bd2:	2200      	movs	r2, #0
   28bd4:	2128      	movs	r1, #40	@ 0x28
   28bd6:	4620      	mov	r0, r4
   28bd8:	f7fe ff5e 	bl	27a98 <dwt_write32bitoffsetreg>
   28bdc:	b003      	add	sp, #12
   28bde:	bd30      	pop	{r4, r5, pc}
   28be0:	000f0028 	.word	0x000f0028

00028be4 <ull_setdwstate>:
   28be4:	b530      	push	{r4, r5, lr}
   28be6:	b083      	sub	sp, #12
   28be8:	4604      	mov	r4, r0
   28bea:	2901      	cmp	r1, #1
   28bec:	d01d      	beq.n	28c2a <ull_setdwstate+0x46>
   28bee:	2902      	cmp	r1, #2
   28bf0:	d030      	beq.n	28c54 <ull_setdwstate+0x70>
   28bf2:	2301      	movs	r3, #1
   28bf4:	9300      	str	r3, [sp, #0]
   28bf6:	23ff      	movs	r3, #255	@ 0xff
   28bf8:	2200      	movs	r2, #0
   28bfa:	4926      	ldr	r1, [pc, #152]	@ (28c94 <ull_setdwstate+0xb0>)
   28bfc:	f7ff fdc2 	bl	28784 <dwt_modify8bitoffsetreg>
   28c00:	4d25      	ldr	r5, [pc, #148]	@ (28c98 <ull_setdwstate+0xb4>)
   28c02:	f44f 0300 	mov.w	r3, #8388608	@ 0x800000
   28c06:	9300      	str	r3, [sp, #0]
   28c08:	f46f 7380 	mvn.w	r3, #256	@ 0x100
   28c0c:	2200      	movs	r2, #0
   28c0e:	4629      	mov	r1, r5
   28c10:	4620      	mov	r0, r4
   28c12:	f7ff fc47 	bl	284a4 <dwt_modify32bitoffsetreg>
   28c16:	2300      	movs	r3, #0
   28c18:	9300      	str	r3, [sp, #0]
   28c1a:	237f      	movs	r3, #127	@ 0x7f
   28c1c:	2202      	movs	r2, #2
   28c1e:	4629      	mov	r1, r5
   28c20:	4620      	mov	r0, r4
   28c22:	f7ff fdaf 	bl	28784 <dwt_modify8bitoffsetreg>
   28c26:	b003      	add	sp, #12
   28c28:	bd30      	pop	{r4, r5, pc}
   28c2a:	2105      	movs	r1, #5
   28c2c:	f7fe fee8 	bl	27a00 <ull_force_clocks>
   28c30:	f44f 7381 	mov.w	r3, #258	@ 0x102
   28c34:	9300      	str	r3, [sp, #0]
   28c36:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   28c3a:	2200      	movs	r2, #0
   28c3c:	4917      	ldr	r1, [pc, #92]	@ (28c9c <ull_setdwstate+0xb8>)
   28c3e:	4620      	mov	r0, r4
   28c40:	f7ff fc30 	bl	284a4 <dwt_modify32bitoffsetreg>
   28c44:	2201      	movs	r2, #1
   28c46:	9200      	str	r2, [sp, #0]
   28c48:	23ff      	movs	r3, #255	@ 0xff
   28c4a:	4913      	ldr	r1, [pc, #76]	@ (28c98 <ull_setdwstate+0xb4>)
   28c4c:	4620      	mov	r0, r4
   28c4e:	f7ff fd99 	bl	28784 <dwt_modify8bitoffsetreg>
   28c52:	e7e8      	b.n	28c26 <ull_setdwstate+0x42>
   28c54:	2303      	movs	r3, #3
   28c56:	9300      	str	r3, [sp, #0]
   28c58:	23ff      	movs	r3, #255	@ 0xff
   28c5a:	2200      	movs	r2, #0
   28c5c:	490d      	ldr	r1, [pc, #52]	@ (28c94 <ull_setdwstate+0xb0>)
   28c5e:	f7ff fd91 	bl	28784 <dwt_modify8bitoffsetreg>
   28c62:	4d0d      	ldr	r5, [pc, #52]	@ (28c98 <ull_setdwstate+0xb4>)
   28c64:	f44f 0300 	mov.w	r3, #8388608	@ 0x800000
   28c68:	9300      	str	r3, [sp, #0]
   28c6a:	f46f 7380 	mvn.w	r3, #256	@ 0x100
   28c6e:	2200      	movs	r2, #0
   28c70:	4629      	mov	r1, r5
   28c72:	4620      	mov	r0, r4
   28c74:	f7ff fc16 	bl	284a4 <dwt_modify32bitoffsetreg>
   28c78:	2300      	movs	r3, #0
   28c7a:	9300      	str	r3, [sp, #0]
   28c7c:	237f      	movs	r3, #127	@ 0x7f
   28c7e:	2202      	movs	r2, #2
   28c80:	4629      	mov	r1, r5
   28c82:	4620      	mov	r0, r4
   28c84:	f7ff fd7e 	bl	28784 <dwt_modify8bitoffsetreg>
   28c88:	2105      	movs	r1, #5
   28c8a:	4620      	mov	r0, r4
   28c8c:	f7fe feb8 	bl	27a00 <ull_force_clocks>
   28c90:	e7c9      	b.n	28c26 <ull_setdwstate+0x42>
   28c92:	bf00      	nop
   28c94:	00110004 	.word	0x00110004
   28c98:	00110008 	.word	0x00110008
   28c9c:	00090008 	.word	0x00090008

00028ca0 <ull_configureframefilter>:
   28ca0:	b530      	push	{r4, r5, lr}
   28ca2:	b083      	sub	sp, #12
   28ca4:	4605      	mov	r5, r0
   28ca6:	2902      	cmp	r1, #2
   28ca8:	d00e      	beq.n	28cc8 <ull_configureframefilter+0x28>
   28caa:	2400      	movs	r4, #0
   28cac:	9400      	str	r4, [sp, #0]
   28cae:	23fe      	movs	r3, #254	@ 0xfe
   28cb0:	4622      	mov	r2, r4
   28cb2:	2110      	movs	r1, #16
   28cb4:	f7ff fd66 	bl	28784 <dwt_modify8bitoffsetreg>
   28cb8:	4623      	mov	r3, r4
   28cba:	4622      	mov	r2, r4
   28cbc:	2114      	movs	r1, #20
   28cbe:	4628      	mov	r0, r5
   28cc0:	f7fe fe7f 	bl	279c2 <dwt_write16bitoffsetreg>
   28cc4:	b003      	add	sp, #12
   28cc6:	bd30      	pop	{r4, r5, pc}
   28cc8:	4614      	mov	r4, r2
   28cca:	2301      	movs	r3, #1
   28ccc:	9300      	str	r3, [sp, #0]
   28cce:	23ff      	movs	r3, #255	@ 0xff
   28cd0:	2200      	movs	r2, #0
   28cd2:	2110      	movs	r1, #16
   28cd4:	f7ff fd56 	bl	28784 <dwt_modify8bitoffsetreg>
   28cd8:	4623      	mov	r3, r4
   28cda:	2200      	movs	r2, #0
   28cdc:	2114      	movs	r1, #20
   28cde:	4628      	mov	r0, r5
   28ce0:	f7fe fe6f 	bl	279c2 <dwt_write16bitoffsetreg>
   28ce4:	e7ee      	b.n	28cc4 <ull_configureframefilter+0x24>
	...

00028ce8 <ull_run_pgfcal>:
   28ce8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   28cec:	b082      	sub	sp, #8
   28cee:	4605      	mov	r5, r0
   28cf0:	4c2a      	ldr	r4, [pc, #168]	@ (28d9c <ull_run_pgfcal+0xb4>)
   28cf2:	2301      	movs	r3, #1
   28cf4:	9300      	str	r3, [sp, #0]
   28cf6:	23ff      	movs	r3, #255	@ 0xff
   28cf8:	2200      	movs	r2, #0
   28cfa:	4621      	mov	r1, r4
   28cfc:	f7ff fd42 	bl	28784 <dwt_modify8bitoffsetreg>
   28d00:	2310      	movs	r3, #16
   28d02:	9300      	str	r3, [sp, #0]
   28d04:	23ff      	movs	r3, #255	@ 0xff
   28d06:	2200      	movs	r2, #0
   28d08:	4621      	mov	r1, r4
   28d0a:	4628      	mov	r0, r5
   28d0c:	f7ff fd3a 	bl	28784 <dwt_modify8bitoffsetreg>
   28d10:	2403      	movs	r4, #3
   28d12:	f04f 0814 	mov.w	r8, #20
   28d16:	4f22      	ldr	r7, [pc, #136]	@ (28da0 <ull_run_pgfcal+0xb8>)
   28d18:	2600      	movs	r6, #0
   28d1a:	4640      	mov	r0, r8
   28d1c:	f7f2 f88b 	bl	1ae36 <deca_usleep>
   28d20:	4632      	mov	r2, r6
   28d22:	4639      	mov	r1, r7
   28d24:	4628      	mov	r0, r5
   28d26:	f7fe fa2d 	bl	27184 <dwt_read8bitoffsetreg>
   28d2a:	2801      	cmp	r0, #1
   28d2c:	d034      	beq.n	28d98 <ull_run_pgfcal+0xb0>
   28d2e:	1e63      	subs	r3, r4, #1
   28d30:	f013 04ff 	ands.w	r4, r3, #255	@ 0xff
   28d34:	d1f1      	bne.n	28d1a <ull_run_pgfcal+0x32>
   28d36:	f06f 0402 	mvn.w	r4, #2
   28d3a:	4e18      	ldr	r6, [pc, #96]	@ (28d9c <ull_run_pgfcal+0xb4>)
   28d3c:	2300      	movs	r3, #0
   28d3e:	461a      	mov	r2, r3
   28d40:	4631      	mov	r1, r6
   28d42:	4628      	mov	r0, r5
   28d44:	f7ff f88c 	bl	27e60 <dwt_write8bitoffsetreg>
   28d48:	2301      	movs	r3, #1
   28d4a:	2200      	movs	r2, #0
   28d4c:	4914      	ldr	r1, [pc, #80]	@ (28da0 <ull_run_pgfcal+0xb8>)
   28d4e:	4628      	mov	r0, r5
   28d50:	f7ff f886 	bl	27e60 <dwt_write8bitoffsetreg>
   28d54:	2301      	movs	r3, #1
   28d56:	9300      	str	r3, [sp, #0]
   28d58:	23ff      	movs	r3, #255	@ 0xff
   28d5a:	2202      	movs	r2, #2
   28d5c:	4631      	mov	r1, r6
   28d5e:	4628      	mov	r0, r5
   28d60:	f7ff fd10 	bl	28784 <dwt_modify8bitoffsetreg>
   28d64:	2200      	movs	r2, #0
   28d66:	490f      	ldr	r1, [pc, #60]	@ (28da4 <ull_run_pgfcal+0xbc>)
   28d68:	4628      	mov	r0, r5
   28d6a:	f7fe f9b6 	bl	270da <dwt_read32bitoffsetreg>
   28d6e:	f06f 4360 	mvn.w	r3, #3758096384	@ 0xe0000000
   28d72:	4298      	cmp	r0, r3
   28d74:	bf08      	it	eq
   28d76:	f06f 0403 	mvneq.w	r4, #3
   28d7a:	2200      	movs	r2, #0
   28d7c:	490a      	ldr	r1, [pc, #40]	@ (28da8 <ull_run_pgfcal+0xc0>)
   28d7e:	4628      	mov	r0, r5
   28d80:	f7fe f9ab 	bl	270da <dwt_read32bitoffsetreg>
   28d84:	f06f 4360 	mvn.w	r3, #3758096384	@ 0xe0000000
   28d88:	4298      	cmp	r0, r3
   28d8a:	bf14      	ite	ne
   28d8c:	4620      	movne	r0, r4
   28d8e:	f06f 0004 	mvneq.w	r0, #4
   28d92:	b002      	add	sp, #8
   28d94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   28d98:	2400      	movs	r4, #0
   28d9a:	e7ce      	b.n	28d3a <ull_run_pgfcal+0x52>
   28d9c:	0004000c 	.word	0x0004000c
   28da0:	00040020 	.word	0x00040020
   28da4:	00040014 	.word	0x00040014
   28da8:	0004001c 	.word	0x0004001c

00028dac <ull_setinterrupt>:
   28dac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   28db0:	b083      	sub	sp, #12
   28db2:	4605      	mov	r5, r0
   28db4:	4688      	mov	r8, r1
   28db6:	4617      	mov	r7, r2
   28db8:	461c      	mov	r4, r3
   28dba:	f7f2 f819 	bl	1adf0 <decamutexon>
   28dbe:	4606      	mov	r6, r0
   28dc0:	2c02      	cmp	r4, #2
   28dc2:	d019      	beq.n	28df8 <ull_setinterrupt+0x4c>
   28dc4:	2c04      	cmp	r4, #4
   28dc6:	d017      	beq.n	28df8 <ull_setinterrupt+0x4c>
   28dc8:	f004 03fd 	and.w	r3, r4, #253	@ 0xfd
   28dcc:	2b01      	cmp	r3, #1
   28dce:	d03f      	beq.n	28e50 <ull_setinterrupt+0xa4>
   28dd0:	f04f 0900 	mov.w	r9, #0
   28dd4:	f8cd 9000 	str.w	r9, [sp]
   28dd8:	ea6f 0308 	mvn.w	r3, r8
   28ddc:	464a      	mov	r2, r9
   28dde:	213c      	movs	r1, #60	@ 0x3c
   28de0:	4628      	mov	r0, r5
   28de2:	f7ff fb5f 	bl	284a4 <dwt_modify32bitoffsetreg>
   28de6:	f8cd 9000 	str.w	r9, [sp]
   28dea:	43fb      	mvns	r3, r7
   28dec:	464a      	mov	r2, r9
   28dee:	2140      	movs	r1, #64	@ 0x40
   28df0:	4628      	mov	r0, r5
   28df2:	f7ff fb57 	bl	284a4 <dwt_modify32bitoffsetreg>
   28df6:	e00b      	b.n	28e10 <ull_setinterrupt+0x64>
   28df8:	4643      	mov	r3, r8
   28dfa:	2200      	movs	r2, #0
   28dfc:	213c      	movs	r1, #60	@ 0x3c
   28dfe:	4628      	mov	r0, r5
   28e00:	f7fe fe4a 	bl	27a98 <dwt_write32bitoffsetreg>
   28e04:	463b      	mov	r3, r7
   28e06:	2200      	movs	r2, #0
   28e08:	2140      	movs	r1, #64	@ 0x40
   28e0a:	4628      	mov	r0, r5
   28e0c:	f7fe fe44 	bl	27a98 <dwt_write32bitoffsetreg>
   28e10:	3c03      	subs	r4, #3
   28e12:	b2e4      	uxtb	r4, r4
   28e14:	2c01      	cmp	r4, #1
   28e16:	d92d      	bls.n	28e74 <ull_setinterrupt+0xc8>
   28e18:	2200      	movs	r2, #0
   28e1a:	213c      	movs	r1, #60	@ 0x3c
   28e1c:	4628      	mov	r0, r5
   28e1e:	f7fe f95c 	bl	270da <dwt_read32bitoffsetreg>
   28e22:	4603      	mov	r3, r0
   28e24:	2200      	movs	r2, #0
   28e26:	2144      	movs	r1, #68	@ 0x44
   28e28:	4628      	mov	r0, r5
   28e2a:	f7fe fe35 	bl	27a98 <dwt_write32bitoffsetreg>
   28e2e:	2200      	movs	r2, #0
   28e30:	2140      	movs	r1, #64	@ 0x40
   28e32:	4628      	mov	r0, r5
   28e34:	f7fe f951 	bl	270da <dwt_read32bitoffsetreg>
   28e38:	4603      	mov	r3, r0
   28e3a:	2200      	movs	r2, #0
   28e3c:	2148      	movs	r1, #72	@ 0x48
   28e3e:	4628      	mov	r0, r5
   28e40:	f7fe fe2a 	bl	27a98 <dwt_write32bitoffsetreg>
   28e44:	4630      	mov	r0, r6
   28e46:	f7f1 ffda 	bl	1adfe <decamutexoff>
   28e4a:	b003      	add	sp, #12
   28e4c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   28e50:	f8cd 8000 	str.w	r8, [sp]
   28e54:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   28e58:	2200      	movs	r2, #0
   28e5a:	213c      	movs	r1, #60	@ 0x3c
   28e5c:	4628      	mov	r0, r5
   28e5e:	f7ff fb21 	bl	284a4 <dwt_modify32bitoffsetreg>
   28e62:	9700      	str	r7, [sp, #0]
   28e64:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   28e68:	2200      	movs	r2, #0
   28e6a:	2140      	movs	r1, #64	@ 0x40
   28e6c:	4628      	mov	r0, r5
   28e6e:	f7ff fb19 	bl	284a4 <dwt_modify32bitoffsetreg>
   28e72:	e7cd      	b.n	28e10 <ull_setinterrupt+0x64>
   28e74:	2110      	movs	r1, #16
   28e76:	9100      	str	r1, [sp, #0]
   28e78:	23ff      	movs	r3, #255	@ 0xff
   28e7a:	2202      	movs	r2, #2
   28e7c:	4628      	mov	r0, r5
   28e7e:	f7ff fc81 	bl	28784 <dwt_modify8bitoffsetreg>
   28e82:	e7c9      	b.n	28e18 <ull_setinterrupt+0x6c>

00028e84 <prs_ack_enable>:
   28e84:	b500      	push	{lr}
   28e86:	b083      	sub	sp, #12
   28e88:	2900      	cmp	r1, #0
   28e8a:	bf0b      	itete	eq
   28e8c:	23ff      	moveq	r3, #255	@ 0xff
   28e8e:	23f7      	movne	r3, #247	@ 0xf7
   28e90:	2200      	moveq	r2, #0
   28e92:	2208      	movne	r2, #8
   28e94:	9200      	str	r2, [sp, #0]
   28e96:	2201      	movs	r2, #1
   28e98:	2110      	movs	r1, #16
   28e9a:	f7ff fc73 	bl	28784 <dwt_modify8bitoffsetreg>
   28e9e:	b003      	add	sp, #12
   28ea0:	f85d fb04 	ldr.w	pc, [sp], #4

00028ea4 <dwt_modify16bitoffsetreg>:
   28ea4:	b510      	push	{r4, lr}
   28ea6:	b084      	sub	sp, #16
   28ea8:	f8bd 4018 	ldrh.w	r4, [sp, #24]
   28eac:	f88d 300c 	strb.w	r3, [sp, #12]
   28eb0:	0a1b      	lsrs	r3, r3, #8
   28eb2:	f88d 300d 	strb.w	r3, [sp, #13]
   28eb6:	f88d 400e 	strb.w	r4, [sp, #14]
   28eba:	0a24      	lsrs	r4, r4, #8
   28ebc:	f88d 400f 	strb.w	r4, [sp, #15]
   28ec0:	f248 0302 	movw	r3, #32770	@ 0x8002
   28ec4:	9301      	str	r3, [sp, #4]
   28ec6:	ab03      	add	r3, sp, #12
   28ec8:	9300      	str	r3, [sp, #0]
   28eca:	2304      	movs	r3, #4
   28ecc:	b292      	uxth	r2, r2
   28ece:	f7fe f87c 	bl	26fca <dwt_xfer3xxx>
   28ed2:	b004      	add	sp, #16
   28ed4:	bd10      	pop	{r4, pc}
	...

00028ed8 <ull_configurestsmode>:
   28ed8:	b530      	push	{r4, r5, lr}
   28eda:	b083      	sub	sp, #12
   28edc:	4605      	mov	r5, r0
   28ede:	460c      	mov	r4, r1
   28ee0:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   28ee2:	7559      	strb	r1, [r3, #21]
   28ee4:	030b      	lsls	r3, r1, #12
   28ee6:	f403 4330 	and.w	r3, r3, #45056	@ 0xb000
   28eea:	9300      	str	r3, [sp, #0]
   28eec:	f644 73ff 	movw	r3, #20479	@ 0x4fff
   28ef0:	2200      	movs	r2, #0
   28ef2:	2110      	movs	r1, #16
   28ef4:	f7ff ffd6 	bl	28ea4 <dwt_modify16bitoffsetreg>
   28ef8:	f004 0403 	and.w	r4, r4, #3
   28efc:	2c03      	cmp	r4, #3
   28efe:	bf0c      	ite	eq
   28f00:	4b04      	ldreq	r3, [pc, #16]	@ (28f14 <ull_configurestsmode+0x3c>)
   28f02:	4b05      	ldrne	r3, [pc, #20]	@ (28f18 <ull_configurestsmode+0x40>)
   28f04:	2200      	movs	r2, #0
   28f06:	4905      	ldr	r1, [pc, #20]	@ (28f1c <ull_configurestsmode+0x44>)
   28f08:	4628      	mov	r0, r5
   28f0a:	f7fe fdc5 	bl	27a98 <dwt_write32bitoffsetreg>
   28f0e:	b003      	add	sp, #12
   28f10:	bd30      	pop	{r4, r5, pc}
   28f12:	bf00      	nop
   28f14:	af5f35cc 	.word	0xaf5f35cc
   28f18:	af5f584c 	.word	0xaf5f584c
   28f1c:	0006000c 	.word	0x0006000c

00028f20 <ull_setleds>:
   28f20:	b530      	push	{r4, r5, lr}
   28f22:	b083      	sub	sp, #12
   28f24:	4604      	mov	r4, r0
   28f26:	f011 0f01 	tst.w	r1, #1
   28f2a:	d01f      	beq.n	28f6c <ull_setleds+0x4c>
   28f2c:	460d      	mov	r5, r1
   28f2e:	f44f 7310 	mov.w	r3, #576	@ 0x240
   28f32:	9300      	str	r3, [sp, #0]
   28f34:	f46f 637c 	mvn.w	r3, #4032	@ 0xfc0
   28f38:	2200      	movs	r2, #0
   28f3a:	f44f 21a0 	mov.w	r1, #327680	@ 0x50000
   28f3e:	f7ff fab1 	bl	284a4 <dwt_modify32bitoffsetreg>
   28f42:	f44f 0304 	mov.w	r3, #8650752	@ 0x840000
   28f46:	9300      	str	r3, [sp, #0]
   28f48:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   28f4c:	2200      	movs	r2, #0
   28f4e:	4918      	ldr	r1, [pc, #96]	@ (28fb0 <ull_setleds+0x90>)
   28f50:	4620      	mov	r0, r4
   28f52:	f7ff faa7 	bl	284a4 <dwt_modify32bitoffsetreg>
   28f56:	f015 0f02 	tst.w	r5, #2
   28f5a:	d11a      	bne.n	28f92 <ull_setleds+0x72>
   28f5c:	f44f 7388 	mov.w	r3, #272	@ 0x110
   28f60:	2200      	movs	r2, #0
   28f62:	4914      	ldr	r1, [pc, #80]	@ (28fb4 <ull_setleds+0x94>)
   28f64:	4620      	mov	r0, r4
   28f66:	f7fe fd97 	bl	27a98 <dwt_write32bitoffsetreg>
   28f6a:	e010      	b.n	28f8e <ull_setleds+0x6e>
   28f6c:	2500      	movs	r5, #0
   28f6e:	9500      	str	r5, [sp, #0]
   28f70:	f46f 637c 	mvn.w	r3, #4032	@ 0xfc0
   28f74:	462a      	mov	r2, r5
   28f76:	f44f 21a0 	mov.w	r1, #327680	@ 0x50000
   28f7a:	f7ff fa93 	bl	284a4 <dwt_modify32bitoffsetreg>
   28f7e:	9500      	str	r5, [sp, #0]
   28f80:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
   28f84:	462a      	mov	r2, r5
   28f86:	490b      	ldr	r1, [pc, #44]	@ (28fb4 <ull_setleds+0x94>)
   28f88:	4620      	mov	r0, r4
   28f8a:	f7ff ff8b 	bl	28ea4 <dwt_modify16bitoffsetreg>
   28f8e:	b003      	add	sp, #12
   28f90:	bd30      	pop	{r4, r5, pc}
   28f92:	4d08      	ldr	r5, [pc, #32]	@ (28fb4 <ull_setleds+0x94>)
   28f94:	4b08      	ldr	r3, [pc, #32]	@ (28fb8 <ull_setleds+0x98>)
   28f96:	2200      	movs	r2, #0
   28f98:	4629      	mov	r1, r5
   28f9a:	4620      	mov	r0, r4
   28f9c:	f7fe fd7c 	bl	27a98 <dwt_write32bitoffsetreg>
   28fa0:	f44f 7388 	mov.w	r3, #272	@ 0x110
   28fa4:	2200      	movs	r2, #0
   28fa6:	4629      	mov	r1, r5
   28fa8:	4620      	mov	r0, r4
   28faa:	f7fe fd75 	bl	27a98 <dwt_write32bitoffsetreg>
   28fae:	e7ee      	b.n	28f8e <ull_setleds+0x6e>
   28fb0:	00110004 	.word	0x00110004
   28fb4:	00110018 	.word	0x00110018
   28fb8:	000f0110 	.word	0x000f0110

00028fbc <ull_pgf_cal>:
   28fbc:	b5f0      	push	{r4, r5, r6, r7, lr}
   28fbe:	b083      	sub	sp, #12
   28fc0:	4604      	mov	r4, r0
   28fc2:	2901      	cmp	r1, #1
   28fc4:	d009      	beq.n	28fda <ull_pgf_cal+0x1e>
   28fc6:	2014      	movs	r0, #20
   28fc8:	f7f1 ff35 	bl	1ae36 <deca_usleep>
   28fcc:	4620      	mov	r0, r4
   28fce:	f7ff fe8b 	bl	28ce8 <ull_run_pgfcal>
   28fd2:	4605      	mov	r5, r0
   28fd4:	4628      	mov	r0, r5
   28fd6:	b003      	add	sp, #12
   28fd8:	bdf0      	pop	{r4, r5, r6, r7, pc}
   28fda:	4e0f      	ldr	r6, [pc, #60]	@ (29018 <ull_pgf_cal+0x5c>)
   28fdc:	2200      	movs	r2, #0
   28fde:	4631      	mov	r1, r6
   28fe0:	f7fe f891 	bl	27106 <dwt_read16bitoffsetreg>
   28fe4:	4607      	mov	r7, r0
   28fe6:	f240 1307 	movw	r3, #263	@ 0x107
   28fea:	9300      	str	r3, [sp, #0]
   28fec:	f64f 73ff 	movw	r3, #65535	@ 0xffff
   28ff0:	2200      	movs	r2, #0
   28ff2:	4631      	mov	r1, r6
   28ff4:	4620      	mov	r0, r4
   28ff6:	f7ff ff55 	bl	28ea4 <dwt_modify16bitoffsetreg>
   28ffa:	2014      	movs	r0, #20
   28ffc:	f7f1 ff1b 	bl	1ae36 <deca_usleep>
   29000:	4620      	mov	r0, r4
   29002:	f7ff fe71 	bl	28ce8 <ull_run_pgfcal>
   29006:	4605      	mov	r5, r0
   29008:	2200      	movs	r2, #0
   2900a:	9200      	str	r2, [sp, #0]
   2900c:	463b      	mov	r3, r7
   2900e:	4631      	mov	r1, r6
   29010:	4620      	mov	r0, r4
   29012:	f7ff ff47 	bl	28ea4 <dwt_modify16bitoffsetreg>
   29016:	e7dd      	b.n	28fd4 <ull_pgf_cal+0x18>
   29018:	00070048 	.word	0x00070048

0002901c <ull_setgpiovalue>:
   2901c:	b500      	push	{lr}
   2901e:	b083      	sub	sp, #12
   29020:	2a01      	cmp	r2, #1
   29022:	d009      	beq.n	29038 <ull_setgpiovalue+0x1c>
   29024:	43cb      	mvns	r3, r1
   29026:	2200      	movs	r2, #0
   29028:	9200      	str	r2, [sp, #0]
   2902a:	b29b      	uxth	r3, r3
   2902c:	4906      	ldr	r1, [pc, #24]	@ (29048 <ull_setgpiovalue+0x2c>)
   2902e:	f7ff ff39 	bl	28ea4 <dwt_modify16bitoffsetreg>
   29032:	b003      	add	sp, #12
   29034:	f85d fb04 	ldr.w	pc, [sp], #4
   29038:	9100      	str	r1, [sp, #0]
   2903a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
   2903e:	2200      	movs	r2, #0
   29040:	4901      	ldr	r1, [pc, #4]	@ (29048 <ull_setgpiovalue+0x2c>)
   29042:	f7ff ff2f 	bl	28ea4 <dwt_modify16bitoffsetreg>
   29046:	e7f4      	b.n	29032 <ull_setgpiovalue+0x16>
   29048:	0005000c 	.word	0x0005000c

0002904c <ull_readaccdata>:
   2904c:	b5f0      	push	{r4, r5, r6, r7, lr}
   2904e:	b083      	sub	sp, #12
   29050:	4604      	mov	r4, r0
   29052:	460f      	mov	r7, r1
   29054:	4616      	mov	r6, r2
   29056:	461d      	mov	r5, r3
   29058:	f248 0340 	movw	r3, #32832	@ 0x8040
   2905c:	9300      	str	r3, [sp, #0]
   2905e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
   29062:	2200      	movs	r2, #0
   29064:	4918      	ldr	r1, [pc, #96]	@ (290c8 <ull_readaccdata+0x7c>)
   29066:	f7ff ff1d 	bl	28ea4 <dwt_modify16bitoffsetreg>
   2906a:	19aa      	adds	r2, r5, r6
   2906c:	f243 0301 	movw	r3, #12289	@ 0x3001
   29070:	429a      	cmp	r2, r3
   29072:	dc15      	bgt.n	290a0 <ull_readaccdata+0x54>
   29074:	2d7f      	cmp	r5, #127	@ 0x7f
   29076:	d91d      	bls.n	290b4 <ull_readaccdata+0x68>
   29078:	2315      	movs	r3, #21
   2907a:	2200      	movs	r2, #0
   2907c:	4913      	ldr	r1, [pc, #76]	@ (290cc <ull_readaccdata+0x80>)
   2907e:	4620      	mov	r0, r4
   29080:	f7fe fd0a 	bl	27a98 <dwt_write32bitoffsetreg>
   29084:	462b      	mov	r3, r5
   29086:	2200      	movs	r2, #0
   29088:	4911      	ldr	r1, [pc, #68]	@ (290d0 <ull_readaccdata+0x84>)
   2908a:	4620      	mov	r0, r4
   2908c:	f7fe fd04 	bl	27a98 <dwt_write32bitoffsetreg>
   29090:	9700      	str	r7, [sp, #0]
   29092:	4633      	mov	r3, r6
   29094:	2200      	movs	r2, #0
   29096:	f44f 11e8 	mov.w	r1, #1900544	@ 0x1d0000
   2909a:	4620      	mov	r0, r4
   2909c:	f7fe f813 	bl	270c6 <dwt_readfromdevice>
   290a0:	2200      	movs	r2, #0
   290a2:	9200      	str	r2, [sp, #0]
   290a4:	f647 73bf 	movw	r3, #32703	@ 0x7fbf
   290a8:	4907      	ldr	r1, [pc, #28]	@ (290c8 <ull_readaccdata+0x7c>)
   290aa:	4620      	mov	r0, r4
   290ac:	f7ff fefa 	bl	28ea4 <dwt_modify16bitoffsetreg>
   290b0:	b003      	add	sp, #12
   290b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
   290b4:	9700      	str	r7, [sp, #0]
   290b6:	4633      	mov	r3, r6
   290b8:	462a      	mov	r2, r5
   290ba:	f44f 11a8 	mov.w	r1, #1376256	@ 0x150000
   290be:	4620      	mov	r0, r4
   290c0:	f7fe f801 	bl	270c6 <dwt_readfromdevice>
   290c4:	e7ec      	b.n	290a0 <ull_readaccdata+0x54>
   290c6:	bf00      	nop
   290c8:	00110004 	.word	0x00110004
   290cc:	001f0004 	.word	0x001f0004
   290d0:	001f0008 	.word	0x001f0008

000290d4 <ull_configure>:
   290d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   290d8:	b083      	sub	sp, #12
   290da:	4604      	mov	r4, r0
   290dc:	460d      	mov	r5, r1
   290de:	f891 9000 	ldrb.w	r9, [r1]
   290e2:	790b      	ldrb	r3, [r1, #4]
   290e4:	2b18      	cmp	r3, #24
   290e6:	d814      	bhi.n	29112 <ull_configure+0x3e>
   290e8:	78cf      	ldrb	r7, [r1, #3]
   290ea:	2f18      	cmp	r7, #24
   290ec:	bf94      	ite	ls
   290ee:	2700      	movls	r7, #0
   290f0:	2701      	movhi	r7, #1
   290f2:	b2ff      	uxtb	r7, r7
   290f4:	79eb      	ldrb	r3, [r5, #7]
   290f6:	2b01      	cmp	r3, #1
   290f8:	bf0c      	ite	eq
   290fa:	2110      	moveq	r1, #16
   290fc:	2100      	movne	r1, #0
   290fe:	786b      	ldrb	r3, [r5, #1]
   29100:	3b01      	subs	r3, #1
   29102:	2b06      	cmp	r3, #6
   29104:	d810      	bhi.n	29128 <ull_configure+0x54>
   29106:	e8df f003 	tbb	[pc, r3]
   2910a:	0f06      	.short	0x0f06
   2910c:	0f0c120f 	.word	0x0f0c120f
   29110:	09          	.byte	0x09
   29111:	00          	.byte	0x00
   29112:	2701      	movs	r7, #1
   29114:	e7ed      	b.n	290f2 <ull_configure+0x1e>
   29116:	f04f 0a40 	mov.w	sl, #64	@ 0x40
   2911a:	e00a      	b.n	29132 <ull_configure+0x5e>
   2911c:	f04f 0a48 	mov.w	sl, #72	@ 0x48
   29120:	e007      	b.n	29132 <ull_configure+0x5e>
   29122:	f04f 0a80 	mov.w	sl, #128	@ 0x80
   29126:	e004      	b.n	29132 <ull_configure+0x5e>
   29128:	f44f 7a80 	mov.w	sl, #256	@ 0x100
   2912c:	e001      	b.n	29132 <ull_configure+0x5e>
   2912e:	f04f 0a20 	mov.w	sl, #32
   29132:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   29134:	8a13      	ldrh	r3, [r2, #16]
   29136:	f023 03e0 	bic.w	r3, r3, #224	@ 0xe0
   2913a:	8213      	strh	r3, [r2, #16]
   2913c:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   2913e:	79ea      	ldrb	r2, [r5, #7]
   29140:	72da      	strb	r2, [r3, #11]
   29142:	7b2e      	ldrb	r6, [r5, #12]
   29144:	1cb3      	adds	r3, r6, #2
   29146:	2601      	movs	r6, #1
   29148:	409e      	lsls	r6, r3
   2914a:	fa1f f886 	uxth.w	r8, r6
   2914e:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   29150:	4bca      	ldr	r3, [pc, #808]	@ (2947c <ull_configure+0x3a8>)
   29152:	fb03 f308 	mul.w	r3, r3, r8
   29156:	0bdb      	lsrs	r3, r3, #15
   29158:	8253      	strh	r3, [r2, #18]
   2915a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   2915c:	7aea      	ldrb	r2, [r5, #11]
   2915e:	755a      	strb	r2, [r3, #21]
   29160:	7a2b      	ldrb	r3, [r5, #8]
   29162:	015b      	lsls	r3, r3, #5
   29164:	f003 0320 	and.w	r3, r3, #32
   29168:	7b6a      	ldrb	r2, [r5, #13]
   2916a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   2916e:	7aea      	ldrb	r2, [r5, #11]
   29170:	0312      	lsls	r2, r2, #12
   29172:	f402 4230 	and.w	r2, r2, #45056	@ 0xb000
   29176:	4313      	orrs	r3, r2
   29178:	430b      	orrs	r3, r1
   2917a:	9300      	str	r3, [sp, #0]
   2917c:	4bc0      	ldr	r3, [pc, #768]	@ (29480 <ull_configure+0x3ac>)
   2917e:	2200      	movs	r2, #0
   29180:	2110      	movs	r1, #16
   29182:	4620      	mov	r0, r4
   29184:	f7ff f98e 	bl	284a4 <dwt_modify32bitoffsetreg>
   29188:	2f00      	cmp	r7, #0
   2918a:	f040 80fe 	bne.w	2938a <ull_configure+0x2b6>
   2918e:	7aeb      	ldrb	r3, [r5, #11]
   29190:	b1bb      	cbz	r3, 291c2 <ull_configure+0xee>
   29192:	7b6b      	ldrb	r3, [r5, #13]
   29194:	2b01      	cmp	r3, #1
   29196:	7b28      	ldrb	r0, [r5, #12]
   29198:	bf94      	ite	ls
   2919a:	2203      	movls	r2, #3
   2919c:	2204      	movhi	r2, #4
   2919e:	2110      	movs	r1, #16
   291a0:	4bb8      	ldr	r3, [pc, #736]	@ (29484 <ull_configure+0x3b0>)
   291a2:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
   291a6:	f7fd fef3 	bl	26f90 <get_sts_mnth>
   291aa:	eb0a 0ac8 	add.w	sl, sl, r8, lsl #3
   291ae:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
   291b2:	9000      	str	r0, [sp, #0]
   291b4:	f64f 7380 	movw	r3, #65408	@ 0xff80
   291b8:	2202      	movs	r2, #2
   291ba:	49b3      	ldr	r1, [pc, #716]	@ (29488 <ull_configure+0x3b4>)
   291bc:	4620      	mov	r0, r4
   291be:	f7ff fe71 	bl	28ea4 <dwt_modify16bitoffsetreg>
   291c2:	2394      	movs	r3, #148	@ 0x94
   291c4:	9300      	str	r3, [sp, #0]
   291c6:	4bb1      	ldr	r3, [pc, #708]	@ (2948c <ull_configure+0x3b8>)
   291c8:	2200      	movs	r2, #0
   291ca:	49b1      	ldr	r1, [pc, #708]	@ (29490 <ull_configure+0x3bc>)
   291cc:	4620      	mov	r0, r4
   291ce:	f7ff f969 	bl	284a4 <dwt_modify32bitoffsetreg>
   291d2:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
   291d6:	f340 8103 	ble.w	293e0 <ull_configure+0x30c>
   291da:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   291dc:	8a13      	ldrh	r3, [r2, #16]
   291de:	f043 0320 	orr.w	r3, r3, #32
   291e2:	8213      	strh	r3, [r2, #16]
   291e4:	f44f 6300 	mov.w	r3, #2048	@ 0x800
   291e8:	9300      	str	r3, [sp, #0]
   291ea:	f64c 73ff 	movw	r3, #53247	@ 0xcfff
   291ee:	2200      	movs	r2, #0
   291f0:	49a8      	ldr	r1, [pc, #672]	@ (29494 <ull_configure+0x3c0>)
   291f2:	4620      	mov	r0, r4
   291f4:	f7ff fe56 	bl	28ea4 <dwt_modify16bitoffsetreg>
   291f8:	7b6b      	ldrb	r3, [r5, #13]
   291fa:	2b01      	cmp	r3, #1
   291fc:	f000 80fb 	beq.w	293f6 <ull_configure+0x322>
   29200:	78ab      	ldrb	r3, [r5, #2]
   29202:	f043 0310 	orr.w	r3, r3, #16
   29206:	9300      	str	r3, [sp, #0]
   29208:	23fc      	movs	r3, #252	@ 0xfc
   2920a:	2200      	movs	r2, #0
   2920c:	f44f 21c0 	mov.w	r1, #393216	@ 0x60000
   29210:	4620      	mov	r0, r4
   29212:	f7ff fab7 	bl	28784 <dwt_modify8bitoffsetreg>
   29216:	1e73      	subs	r3, r6, #1
   29218:	b2db      	uxtb	r3, r3
   2921a:	2200      	movs	r2, #0
   2921c:	f44f 3100 	mov.w	r1, #131072	@ 0x20000
   29220:	4620      	mov	r0, r4
   29222:	f7fe fe1d 	bl	27e60 <dwt_write8bitoffsetreg>
   29226:	786b      	ldrb	r3, [r5, #1]
   29228:	2b07      	cmp	r3, #7
   2922a:	bf0c      	ite	eq
   2922c:	2108      	moveq	r1, #8
   2922e:	2100      	movne	r1, #0
   29230:	4620      	mov	r0, r4
   29232:	f7fe ff1b 	bl	2806c <ull_setplenfine>
   29236:	7aeb      	ldrb	r3, [r5, #11]
   29238:	f003 0303 	and.w	r3, r3, #3
   2923c:	2b03      	cmp	r3, #3
   2923e:	bf0c      	ite	eq
   29240:	4b95      	ldreq	r3, [pc, #596]	@ (29498 <ull_configure+0x3c4>)
   29242:	4b96      	ldrne	r3, [pc, #600]	@ (2949c <ull_configure+0x3c8>)
   29244:	2200      	movs	r2, #0
   29246:	4996      	ldr	r1, [pc, #600]	@ (294a0 <ull_configure+0x3cc>)
   29248:	4620      	mov	r0, r4
   2924a:	f7fe fc25 	bl	27a98 <dwt_write32bitoffsetreg>
   2924e:	2200      	movs	r2, #0
   29250:	4994      	ldr	r1, [pc, #592]	@ (294a4 <ull_configure+0x3d0>)
   29252:	4620      	mov	r0, r4
   29254:	f7fd ff41 	bl	270da <dwt_read32bitoffsetreg>
   29258:	f420 50ff 	bic.w	r0, r0, #8160	@ 0x1fe0
   2925c:	f020 001f 	bic.w	r0, r0, #31
   29260:	f1b9 0f09 	cmp.w	r9, #9
   29264:	bf08      	it	eq
   29266:	f040 0001 	orreq.w	r0, r0, #1
   2926a:	792a      	ldrb	r2, [r5, #4]
   2926c:	0212      	lsls	r2, r2, #8
   2926e:	f402 52f8 	and.w	r2, r2, #7936	@ 0x1f00
   29272:	78eb      	ldrb	r3, [r5, #3]
   29274:	00db      	lsls	r3, r3, #3
   29276:	b2db      	uxtb	r3, r3
   29278:	431a      	orrs	r2, r3
   2927a:	796b      	ldrb	r3, [r5, #5]
   2927c:	005b      	lsls	r3, r3, #1
   2927e:	f003 0306 	and.w	r3, r3, #6
   29282:	4313      	orrs	r3, r2
   29284:	4303      	orrs	r3, r0
   29286:	2200      	movs	r2, #0
   29288:	4986      	ldr	r1, [pc, #536]	@ (294a4 <ull_configure+0x3d0>)
   2928a:	4620      	mov	r0, r4
   2928c:	f7fe fc04 	bl	27a98 <dwt_write32bitoffsetreg>
   29290:	79aa      	ldrb	r2, [r5, #6]
   29292:	786b      	ldrb	r3, [r5, #1]
   29294:	031b      	lsls	r3, r3, #12
   29296:	ea43 2382 	orr.w	r3, r3, r2, lsl #10
   2929a:	9300      	str	r3, [sp, #0]
   2929c:	f46f 4374 	mvn.w	r3, #62464	@ 0xf400
   292a0:	2200      	movs	r2, #0
   292a2:	2120      	movs	r1, #32
   292a4:	4620      	mov	r0, r4
   292a6:	f7ff f8fd 	bl	284a4 <dwt_modify32bitoffsetreg>
   292aa:	f8b5 3009 	ldrh.w	r3, [r5, #9]
   292ae:	b923      	cbnz	r3, 292ba <ull_configure+0x1e6>
   292b0:	f06f 037e 	mvn.w	r3, #126	@ 0x7e
   292b4:	726b      	strb	r3, [r5, #9]
   292b6:	2300      	movs	r3, #0
   292b8:	72ab      	strb	r3, [r5, #10]
   292ba:	f8b5 3009 	ldrh.w	r3, [r5, #9]
   292be:	2202      	movs	r2, #2
   292c0:	f44f 21c0 	mov.w	r1, #393216	@ 0x60000
   292c4:	4620      	mov	r0, r4
   292c6:	f7fe fb7c 	bl	279c2 <dwt_write16bitoffsetreg>
   292ca:	2202      	movs	r2, #2
   292cc:	4976      	ldr	r1, [pc, #472]	@ (294a8 <ull_configure+0x3d4>)
   292ce:	4620      	mov	r0, r4
   292d0:	f7fd ff58 	bl	27184 <dwt_read8bitoffsetreg>
   292d4:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   292d6:	7bdb      	ldrb	r3, [r3, #15]
   292d8:	454b      	cmp	r3, r9
   292da:	f000 8096 	beq.w	2940a <ull_configure+0x336>
   292de:	2803      	cmp	r0, #3
   292e0:	f000 8097 	beq.w	29412 <ull_configure+0x33e>
   292e4:	f1b9 0f09 	cmp.w	r9, #9
   292e8:	f000 8098 	beq.w	2941c <ull_configure+0x348>
   292ec:	4b6f      	ldr	r3, [pc, #444]	@ (294ac <ull_configure+0x3d8>)
   292ee:	9300      	str	r3, [sp, #0]
   292f0:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
   292f4:	2200      	movs	r2, #0
   292f6:	496e      	ldr	r1, [pc, #440]	@ (294b0 <ull_configure+0x3dc>)
   292f8:	4620      	mov	r0, r4
   292fa:	f7ff f8d3 	bl	284a4 <dwt_modify32bitoffsetreg>
   292fe:	f641 733c 	movw	r3, #7996	@ 0x1f3c
   29302:	2200      	movs	r2, #0
   29304:	f44f 2110 	mov.w	r1, #589824	@ 0x90000
   29308:	4620      	mov	r0, r4
   2930a:	f7fe fb5a 	bl	279c2 <dwt_write16bitoffsetreg>
   2930e:	2314      	movs	r3, #20
   29310:	2201      	movs	r2, #1
   29312:	4968      	ldr	r1, [pc, #416]	@ (294b4 <ull_configure+0x3e0>)
   29314:	4620      	mov	r0, r4
   29316:	f7fe fda3 	bl	27e60 <dwt_write8bitoffsetreg>
   2931a:	230e      	movs	r3, #14
   2931c:	2202      	movs	r2, #2
   2931e:	4966      	ldr	r1, [pc, #408]	@ (294b8 <ull_configure+0x3e4>)
   29320:	4620      	mov	r0, r4
   29322:	f7fe fd9d 	bl	27e60 <dwt_write8bitoffsetreg>
   29326:	2381      	movs	r3, #129	@ 0x81
   29328:	2200      	movs	r2, #0
   2932a:	4964      	ldr	r1, [pc, #400]	@ (294bc <ull_configure+0x3e8>)
   2932c:	4620      	mov	r0, r4
   2932e:	f7fe fd97 	bl	27e60 <dwt_write8bitoffsetreg>
   29332:	2600      	movs	r6, #0
   29334:	9600      	str	r6, [sp, #0]
   29336:	23fc      	movs	r3, #252	@ 0xfc
   29338:	2203      	movs	r2, #3
   2933a:	4961      	ldr	r1, [pc, #388]	@ (294c0 <ull_configure+0x3ec>)
   2933c:	4620      	mov	r0, r4
   2933e:	f7ff fa21 	bl	28784 <dwt_modify8bitoffsetreg>
   29342:	2302      	movs	r3, #2
   29344:	4632      	mov	r2, r6
   29346:	2144      	movs	r1, #68	@ 0x44
   29348:	4620      	mov	r0, r4
   2934a:	f7fe fd89 	bl	27e60 <dwt_write8bitoffsetreg>
   2934e:	2101      	movs	r1, #1
   29350:	4620      	mov	r0, r4
   29352:	f7ff fc47 	bl	28be4 <ull_setdwstate>
   29356:	f04f 0b32 	mov.w	fp, #50	@ 0x32
   2935a:	f04f 0814 	mov.w	r8, #20
   2935e:	4637      	mov	r7, r6
   29360:	2644      	movs	r6, #68	@ 0x44
   29362:	4640      	mov	r0, r8
   29364:	f7f1 fd67 	bl	1ae36 <deca_usleep>
   29368:	463a      	mov	r2, r7
   2936a:	4631      	mov	r1, r6
   2936c:	4620      	mov	r0, r4
   2936e:	f7fd ff09 	bl	27184 <dwt_read8bitoffsetreg>
   29372:	f010 0f02 	tst.w	r0, #2
   29376:	f040 80af 	bne.w	294d8 <ull_configure+0x404>
   2937a:	f10b 33ff 	add.w	r3, fp, #4294967295	@ 0xffffffff
   2937e:	f013 0bff 	ands.w	fp, r3, #255	@ 0xff
   29382:	d1ee      	bne.n	29362 <ull_configure+0x28e>
   29384:	f06f 0001 	mvn.w	r0, #1
   29388:	e0e6      	b.n	29558 <ull_configure+0x484>
   2938a:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   2938c:	8a13      	ldrh	r3, [r2, #16]
   2938e:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
   29392:	8213      	strh	r3, [r2, #16]
   29394:	f44f 53c0 	mov.w	r3, #6144	@ 0x1800
   29398:	9300      	str	r3, [sp, #0]
   2939a:	f46f 5340 	mvn.w	r3, #12288	@ 0x3000
   2939e:	2200      	movs	r2, #0
   293a0:	493c      	ldr	r1, [pc, #240]	@ (29494 <ull_configure+0x3c0>)
   293a2:	4620      	mov	r0, r4
   293a4:	f7ff f87e 	bl	284a4 <dwt_modify32bitoffsetreg>
   293a8:	f240 3306 	movw	r3, #774	@ 0x306
   293ac:	2200      	movs	r2, #0
   293ae:	4945      	ldr	r1, [pc, #276]	@ (294c4 <ull_configure+0x3f0>)
   293b0:	4620      	mov	r0, r4
   293b2:	f7fe fb71 	bl	27a98 <dwt_write32bitoffsetreg>
   293b6:	2300      	movs	r3, #0
   293b8:	461a      	mov	r2, r3
   293ba:	4943      	ldr	r1, [pc, #268]	@ (294c8 <ull_configure+0x3f4>)
   293bc:	4620      	mov	r0, r4
   293be:	f7fe fb6b 	bl	27a98 <dwt_write32bitoffsetreg>
   293c2:	4b42      	ldr	r3, [pc, #264]	@ (294cc <ull_configure+0x3f8>)
   293c4:	2200      	movs	r2, #0
   293c6:	4930      	ldr	r1, [pc, #192]	@ (29488 <ull_configure+0x3b4>)
   293c8:	4620      	mov	r0, r4
   293ca:	f7fe fb65 	bl	27a98 <dwt_write32bitoffsetreg>
   293ce:	239d      	movs	r3, #157	@ 0x9d
   293d0:	9300      	str	r3, [sp, #0]
   293d2:	4b2e      	ldr	r3, [pc, #184]	@ (2948c <ull_configure+0x3b8>)
   293d4:	2200      	movs	r2, #0
   293d6:	492e      	ldr	r1, [pc, #184]	@ (29490 <ull_configure+0x3bc>)
   293d8:	4620      	mov	r0, r4
   293da:	f7ff f863 	bl	284a4 <dwt_modify32bitoffsetreg>
   293de:	e70b      	b.n	291f8 <ull_configure+0x124>
   293e0:	f44f 5320 	mov.w	r3, #10240	@ 0x2800
   293e4:	9300      	str	r3, [sp, #0]
   293e6:	f64c 73ff 	movw	r3, #53247	@ 0xcfff
   293ea:	2200      	movs	r2, #0
   293ec:	4929      	ldr	r1, [pc, #164]	@ (29494 <ull_configure+0x3c0>)
   293ee:	4620      	mov	r0, r4
   293f0:	f7ff fd58 	bl	28ea4 <dwt_modify16bitoffsetreg>
   293f4:	e700      	b.n	291f8 <ull_configure+0x124>
   293f6:	78ab      	ldrb	r3, [r5, #2]
   293f8:	9300      	str	r3, [sp, #0]
   293fa:	23ec      	movs	r3, #236	@ 0xec
   293fc:	2200      	movs	r2, #0
   293fe:	f44f 21c0 	mov.w	r1, #393216	@ 0x60000
   29402:	4620      	mov	r0, r4
   29404:	f7ff f9be 	bl	28784 <dwt_modify8bitoffsetreg>
   29408:	e705      	b.n	29216 <ull_configure+0x142>
   2940a:	2803      	cmp	r0, #3
   2940c:	f47f af6a 	bne.w	292e4 <ull_configure+0x210>
   29410:	e065      	b.n	294de <ull_configure+0x40a>
   29412:	2102      	movs	r1, #2
   29414:	4620      	mov	r0, r4
   29416:	f7ff fbe5 	bl	28be4 <ull_setdwstate>
   2941a:	e763      	b.n	292e4 <ull_configure+0x210>
   2941c:	4b2c      	ldr	r3, [pc, #176]	@ (294d0 <ull_configure+0x3fc>)
   2941e:	9300      	str	r3, [sp, #0]
   29420:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
   29424:	2200      	movs	r2, #0
   29426:	4922      	ldr	r1, [pc, #136]	@ (294b0 <ull_configure+0x3dc>)
   29428:	4620      	mov	r0, r4
   2942a:	f7ff f83b 	bl	284a4 <dwt_modify32bitoffsetreg>
   2942e:	f640 733c 	movw	r3, #3900	@ 0xf3c
   29432:	2200      	movs	r2, #0
   29434:	f44f 2110 	mov.w	r1, #589824	@ 0x90000
   29438:	4620      	mov	r0, r4
   2943a:	f7fe fac2 	bl	279c2 <dwt_write16bitoffsetreg>
   2943e:	e766      	b.n	2930e <ull_configure+0x23a>
   29440:	f44f 7380 	mov.w	r3, #256	@ 0x100
   29444:	9300      	str	r3, [sp, #0]
   29446:	f64f 73ff 	movw	r3, #65535	@ 0xffff
   2944a:	2200      	movs	r2, #0
   2944c:	4911      	ldr	r1, [pc, #68]	@ (29494 <ull_configure+0x3c0>)
   2944e:	4620      	mov	r0, r4
   29450:	f7ff fd28 	bl	28ea4 <dwt_modify16bitoffsetreg>
   29454:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   29456:	8a13      	ldrh	r3, [r2, #16]
   29458:	f043 0308 	orr.w	r3, r3, #8
   2945c:	8213      	strh	r3, [r2, #16]
   2945e:	e050      	b.n	29502 <ull_configure+0x42e>
   29460:	2200      	movs	r2, #0
   29462:	9200      	str	r2, [sp, #0]
   29464:	23fe      	movs	r3, #254	@ 0xfe
   29466:	491b      	ldr	r1, [pc, #108]	@ (294d4 <ull_configure+0x400>)
   29468:	4620      	mov	r0, r4
   2946a:	f7ff f98b 	bl	28784 <dwt_modify8bitoffsetreg>
   2946e:	e052      	b.n	29516 <ull_configure+0x442>
   29470:	2101      	movs	r1, #1
   29472:	4620      	mov	r0, r4
   29474:	f7ff fda2 	bl	28fbc <ull_pgf_cal>
   29478:	e06b      	b.n	29552 <ull_configure+0x47e>
   2947a:	bf00      	nop
   2947c:	00026668 	.word	0x00026668
   29480:	fffc4fcf 	.word	0xfffc4fcf
   29484:	0002c57c 	.word	0x0002c57c
   29488:	000e0014 	.word	0x000e0014
   2948c:	bfffff00 	.word	0xbfffff00
   29490:	000e0018 	.word	0x000e0018
   29494:	000b0008 	.word	0x000b0008
   29498:	af5f35cc 	.word	0xaf5f35cc
   2949c:	af5f584c 	.word	0xaf5f584c
   294a0:	0006000c 	.word	0x0006000c
   294a4:	00010008 	.word	0x00010008
   294a8:	000f0030 	.word	0x000f0030
   294ac:	1c071134 	.word	0x1c071134
   294b0:	0007001c 	.word	0x0007001c
   294b4:	00070050 	.word	0x00070050
   294b8:	00070018 	.word	0x00070018
   294bc:	00090008 	.word	0x00090008
   294c0:	00090004 	.word	0x00090004
   294c4:	000e000c 	.word	0x000e000c
   294c8:	000e0010 	.word	0x000e0010
   294cc:	000c5a0a 	.word	0x000c5a0a
   294d0:	1c010034 	.word	0x1c010034
   294d4:	00030018 	.word	0x00030018
   294d8:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   294da:	f883 900f 	strb.w	r9, [r3, #15]
   294de:	792b      	ldrb	r3, [r5, #4]
   294e0:	3b09      	subs	r3, #9
   294e2:	b2db      	uxtb	r3, r3
   294e4:	2b0f      	cmp	r3, #15
   294e6:	d8bb      	bhi.n	29460 <ull_configure+0x38c>
   294e8:	6d23      	ldr	r3, [r4, #80]	@ 0x50
   294ea:	7a1b      	ldrb	r3, [r3, #8]
   294ec:	2b01      	cmp	r3, #1
   294ee:	d0a7      	beq.n	29440 <ull_configure+0x36c>
   294f0:	4649      	mov	r1, r9
   294f2:	4620      	mov	r0, r4
   294f4:	f7fe fb9c 	bl	27c30 <ull_configmrxlut>
   294f8:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   294fa:	8a13      	ldrh	r3, [r2, #16]
   294fc:	f023 0308 	bic.w	r3, r3, #8
   29500:	8213      	strh	r3, [r2, #16]
   29502:	f44f 43c8 	mov.w	r3, #25600	@ 0x6400
   29506:	9300      	str	r3, [sp, #0]
   29508:	f248 13ff 	movw	r3, #33279	@ 0x81ff
   2950c:	2200      	movs	r2, #0
   2950e:	4914      	ldr	r1, [pc, #80]	@ (29560 <ull_configure+0x48c>)
   29510:	4620      	mov	r0, r4
   29512:	f7ff fcc7 	bl	28ea4 <dwt_modify16bitoffsetreg>
   29516:	f1ba 0f40 	cmp.w	sl, #64	@ 0x40
   2951a:	bfcc      	ite	gt
   2951c:	f04f 5300 	movgt.w	r3, #536870912	@ 0x20000000
   29520:	f04f 53a0 	movle.w	r3, #335544320	@ 0x14000000
   29524:	9300      	str	r3, [sp, #0]
   29526:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
   2952a:	2200      	movs	r2, #0
   2952c:	490d      	ldr	r1, [pc, #52]	@ (29564 <ull_configure+0x490>)
   2952e:	4620      	mov	r0, r4
   29530:	f7fe ffb8 	bl	284a4 <dwt_modify32bitoffsetreg>
   29534:	2301      	movs	r3, #1
   29536:	9300      	str	r3, [sp, #0]
   29538:	23ff      	movs	r3, #255	@ 0xff
   2953a:	2202      	movs	r2, #2
   2953c:	490a      	ldr	r1, [pc, #40]	@ (29568 <ull_configure+0x494>)
   2953e:	4620      	mov	r0, r4
   29540:	f7ff f920 	bl	28784 <dwt_modify8bitoffsetreg>
   29544:	2200      	movs	r2, #0
   29546:	4909      	ldr	r1, [pc, #36]	@ (2956c <ull_configure+0x498>)
   29548:	4620      	mov	r0, r4
   2954a:	f7fd fdc6 	bl	270da <dwt_read32bitoffsetreg>
   2954e:	2800      	cmp	r0, #0
   29550:	d08e      	beq.n	29470 <ull_configure+0x39c>
   29552:	4620      	mov	r0, r4
   29554:	f7ff f98a 	bl	2886c <ull_adcoffsetscalibration>
   29558:	b003      	add	sp, #12
   2955a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2955e:	bf00      	nop
   29560:	00030018 	.word	0x00030018
   29564:	00060010 	.word	0x00060010
   29568:	0004000c 	.word	0x0004000c
   2956c:	00040014 	.word	0x00040014

00029570 <ull_initialise>:
   29570:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   29574:	b082      	sub	sp, #8
   29576:	4605      	mov	r5, r0
   29578:	460e      	mov	r6, r1
   2957a:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   2957c:	2b00      	cmp	r3, #0
   2957e:	d05b      	beq.n	29638 <ull_initialise+0xc8>
   29580:	6d2c      	ldr	r4, [r5, #80]	@ 0x50
   29582:	2300      	movs	r3, #0
   29584:	73a3      	strb	r3, [r4, #14]
   29586:	2202      	movs	r2, #2
   29588:	8222      	strh	r2, [r4, #16]
   2958a:	7523      	strb	r3, [r4, #20]
   2958c:	7563      	strb	r3, [r4, #21]
   2958e:	73e3      	strb	r3, [r4, #15]
   29590:	7263      	strb	r3, [r4, #9]
   29592:	72a3      	strb	r3, [r4, #10]
   29594:	2104      	movs	r1, #4
   29596:	4628      	mov	r0, r5
   29598:	f7fe fa5c 	bl	27a54 <_dwt_otpread>
   2959c:	4607      	mov	r7, r0
   2959e:	2105      	movs	r1, #5
   295a0:	4628      	mov	r0, r5
   295a2:	f7fe fa57 	bl	27a54 <_dwt_otpread>
   295a6:	4680      	mov	r8, r0
   295a8:	210a      	movs	r1, #10
   295aa:	4628      	mov	r0, r5
   295ac:	f7fe fa52 	bl	27a54 <_dwt_otpread>
   295b0:	b12f      	cbz	r7, 295be <ull_initialise+0x4e>
   295b2:	f1b8 0f00 	cmp.w	r8, #0
   295b6:	d002      	beq.n	295be <ull_initialise+0x4e>
   295b8:	b280      	uxth	r0, r0
   295ba:	2800      	cmp	r0, #0
   295bc:	d141      	bne.n	29642 <ull_initialise+0xd2>
   295be:	2120      	movs	r1, #32
   295c0:	4628      	mov	r0, r5
   295c2:	f7fe fa47 	bl	27a54 <_dwt_otpread>
   295c6:	f5b0 7f10 	cmp.w	r0, #576	@ 0x240
   295ca:	bf0c      	ite	eq
   295cc:	2301      	moveq	r3, #1
   295ce:	2300      	movne	r3, #0
   295d0:	7223      	strb	r3, [r4, #8]
   295d2:	f016 0f10 	tst.w	r6, #16
   295d6:	d143      	bne.n	29660 <ull_initialise+0xf0>
   295d8:	f016 0f20 	tst.w	r6, #32
   295dc:	d146      	bne.n	2966c <ull_initialise+0xfc>
   295de:	f016 0f40 	tst.w	r6, #64	@ 0x40
   295e2:	d149      	bne.n	29678 <ull_initialise+0x108>
   295e4:	f016 0f80 	tst.w	r6, #128	@ 0x80
   295e8:	d14d      	bne.n	29686 <ull_initialise+0x116>
   295ea:	7aa3      	ldrb	r3, [r4, #10]
   295ec:	b90b      	cbnz	r3, 295f2 <ull_initialise+0x82>
   295ee:	2385      	movs	r3, #133	@ 0x85
   295f0:	72a3      	strb	r3, [r4, #10]
   295f2:	7a63      	ldrb	r3, [r4, #9]
   295f4:	b90b      	cbnz	r3, 295fa <ull_initialise+0x8a>
   295f6:	2374      	movs	r3, #116	@ 0x74
   295f8:	7263      	strb	r3, [r4, #9]
   295fa:	211f      	movs	r1, #31
   295fc:	4628      	mov	r0, r5
   295fe:	f7fe fa29 	bl	27a54 <_dwt_otpread>
   29602:	7320      	strb	r0, [r4, #12]
   29604:	211e      	movs	r1, #30
   29606:	4628      	mov	r0, r5
   29608:	f7fe fa24 	bl	27a54 <_dwt_otpread>
   2960c:	f010 003f 	ands.w	r0, r0, #63	@ 0x3f
   29610:	bf12      	itee	ne
   29612:	7360      	strbne	r0, [r4, #13]
   29614:	232e      	moveq	r3, #46	@ 0x2e
   29616:	7363      	strbeq	r3, [r4, #13]
   29618:	7b63      	ldrb	r3, [r4, #13]
   2961a:	2200      	movs	r2, #0
   2961c:	4920      	ldr	r1, [pc, #128]	@ (296a0 <ull_initialise+0x130>)
   2961e:	4628      	mov	r0, r5
   29620:	f7fe fc1e 	bl	27e60 <dwt_write8bitoffsetreg>
   29624:	2135      	movs	r1, #53	@ 0x35
   29626:	4628      	mov	r0, r5
   29628:	f7fe fa14 	bl	27a54 <_dwt_otpread>
   2962c:	4603      	mov	r3, r0
   2962e:	bb80      	cbnz	r0, 29692 <ull_initialise+0x122>
   29630:	2000      	movs	r0, #0
   29632:	b002      	add	sp, #8
   29634:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   29638:	2028      	movs	r0, #40	@ 0x28
   2963a:	f7f1 fe01 	bl	1b240 <malloc>
   2963e:	6528      	str	r0, [r5, #80]	@ 0x50
   29640:	e79e      	b.n	29580 <ull_initialise+0x10>
   29642:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
   29646:	9300      	str	r3, [sp, #0]
   29648:	f64f 73ff 	movw	r3, #65535	@ 0xffff
   2964c:	2200      	movs	r2, #0
   2964e:	4915      	ldr	r1, [pc, #84]	@ (296a4 <ull_initialise+0x134>)
   29650:	4628      	mov	r0, r5
   29652:	f7ff fc27 	bl	28ea4 <dwt_modify16bitoffsetreg>
   29656:	8a23      	ldrh	r3, [r4, #16]
   29658:	f043 0314 	orr.w	r3, r3, #20
   2965c:	8223      	strh	r3, [r4, #16]
   2965e:	e7ae      	b.n	295be <ull_initialise+0x4e>
   29660:	2106      	movs	r1, #6
   29662:	4628      	mov	r0, r5
   29664:	f7fe f9f6 	bl	27a54 <_dwt_otpread>
   29668:	6020      	str	r0, [r4, #0]
   2966a:	e7b5      	b.n	295d8 <ull_initialise+0x68>
   2966c:	2107      	movs	r1, #7
   2966e:	4628      	mov	r0, r5
   29670:	f7fe f9f0 	bl	27a54 <_dwt_otpread>
   29674:	6060      	str	r0, [r4, #4]
   29676:	e7b2      	b.n	295de <ull_initialise+0x6e>
   29678:	2108      	movs	r1, #8
   2967a:	4628      	mov	r0, r5
   2967c:	f7fe f9ea 	bl	27a54 <_dwt_otpread>
   29680:	0c00      	lsrs	r0, r0, #16
   29682:	7260      	strb	r0, [r4, #9]
   29684:	e7ae      	b.n	295e4 <ull_initialise+0x74>
   29686:	2109      	movs	r1, #9
   29688:	4628      	mov	r0, r5
   2968a:	f7fe f9e3 	bl	27a54 <_dwt_otpread>
   2968e:	72a0      	strb	r0, [r4, #10]
   29690:	e7ab      	b.n	295ea <ull_initialise+0x7a>
   29692:	2200      	movs	r2, #0
   29694:	4904      	ldr	r1, [pc, #16]	@ (296a8 <ull_initialise+0x138>)
   29696:	4628      	mov	r0, r5
   29698:	f7fe f9fe 	bl	27a98 <dwt_write32bitoffsetreg>
   2969c:	e7c8      	b.n	29630 <ull_initialise+0xc0>
   2969e:	bf00      	nop
   296a0:	00090014 	.word	0x00090014
   296a4:	000b0008 	.word	0x000b0008
   296a8:	00090004 	.word	0x00090004

000296ac <ull_rxenable>:
   296ac:	b530      	push	{r4, r5, lr}
   296ae:	b083      	sub	sp, #12
   296b0:	4605      	mov	r5, r0
   296b2:	460c      	mov	r4, r1
   296b4:	b171      	cbz	r1, 296d4 <ull_rxenable+0x28>
   296b6:	f021 0302 	bic.w	r3, r1, #2
   296ba:	3b01      	subs	r3, #1
   296bc:	2b0f      	cmp	r3, #15
   296be:	d862      	bhi.n	29786 <ull_rxenable+0xda>
   296c0:	e8df f003 	tbb	[pc, r3]
   296c4:	24616111 	.word	0x24616111
   296c8:	2d616161 	.word	0x2d616161
   296cc:	61616161 	.word	0x61616161
   296d0:	3a616161 	.word	0x3a616161
   296d4:	2102      	movs	r1, #2
   296d6:	9101      	str	r1, [sp, #4]
   296d8:	2200      	movs	r2, #0
   296da:	9200      	str	r2, [sp, #0]
   296dc:	4613      	mov	r3, r2
   296de:	f7fd fc74 	bl	26fca <dwt_xfer3xxx>
   296e2:	4620      	mov	r0, r4
   296e4:	e010      	b.n	29708 <ull_rxenable+0x5c>
   296e6:	2302      	movs	r3, #2
   296e8:	9301      	str	r3, [sp, #4]
   296ea:	2200      	movs	r2, #0
   296ec:	9200      	str	r2, [sp, #0]
   296ee:	4613      	mov	r3, r2
   296f0:	2104      	movs	r1, #4
   296f2:	f7fd fc6a 	bl	26fca <dwt_xfer3xxx>
   296f6:	2203      	movs	r2, #3
   296f8:	2144      	movs	r1, #68	@ 0x44
   296fa:	4628      	mov	r0, r5
   296fc:	f7fd fd42 	bl	27184 <dwt_read8bitoffsetreg>
   29700:	f010 0f08 	tst.w	r0, #8
   29704:	d125      	bne.n	29752 <ull_rxenable+0xa6>
   29706:	2000      	movs	r0, #0
   29708:	b003      	add	sp, #12
   2970a:	bd30      	pop	{r4, r5, pc}
   2970c:	2302      	movs	r3, #2
   2970e:	9301      	str	r3, [sp, #4]
   29710:	2200      	movs	r2, #0
   29712:	9200      	str	r2, [sp, #0]
   29714:	4613      	mov	r3, r2
   29716:	210a      	movs	r1, #10
   29718:	f7fd fc57 	bl	26fca <dwt_xfer3xxx>
   2971c:	e7eb      	b.n	296f6 <ull_rxenable+0x4a>
   2971e:	2100      	movs	r1, #0
   29720:	f7fe f9cf 	bl	27ac2 <_dwt_adjust_delaytime>
   29724:	2302      	movs	r3, #2
   29726:	9301      	str	r3, [sp, #4]
   29728:	2200      	movs	r2, #0
   2972a:	9200      	str	r2, [sp, #0]
   2972c:	4613      	mov	r3, r2
   2972e:	2108      	movs	r1, #8
   29730:	4628      	mov	r0, r5
   29732:	f7fd fc4a 	bl	26fca <dwt_xfer3xxx>
   29736:	e7de      	b.n	296f6 <ull_rxenable+0x4a>
   29738:	2101      	movs	r1, #1
   2973a:	f7fe f9c2 	bl	27ac2 <_dwt_adjust_delaytime>
   2973e:	2302      	movs	r3, #2
   29740:	9301      	str	r3, [sp, #4]
   29742:	2200      	movs	r2, #0
   29744:	9200      	str	r2, [sp, #0]
   29746:	4613      	mov	r3, r2
   29748:	2106      	movs	r1, #6
   2974a:	4628      	mov	r0, r5
   2974c:	f7fd fc3d 	bl	26fca <dwt_xfer3xxx>
   29750:	e7d1      	b.n	296f6 <ull_rxenable+0x4a>
   29752:	2302      	movs	r3, #2
   29754:	9301      	str	r3, [sp, #4]
   29756:	2100      	movs	r1, #0
   29758:	9100      	str	r1, [sp, #0]
   2975a:	460b      	mov	r3, r1
   2975c:	460a      	mov	r2, r1
   2975e:	4628      	mov	r0, r5
   29760:	f7fd fc33 	bl	26fca <dwt_xfer3xxx>
   29764:	f014 0f02 	tst.w	r4, #2
   29768:	d002      	beq.n	29770 <ull_rxenable+0xc4>
   2976a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
   2976e:	e7cb      	b.n	29708 <ull_rxenable+0x5c>
   29770:	2102      	movs	r1, #2
   29772:	9101      	str	r1, [sp, #4]
   29774:	2200      	movs	r2, #0
   29776:	9200      	str	r2, [sp, #0]
   29778:	4613      	mov	r3, r2
   2977a:	4628      	mov	r0, r5
   2977c:	f7fd fc25 	bl	26fca <dwt_xfer3xxx>
   29780:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
   29784:	e7c0      	b.n	29708 <ull_rxenable+0x5c>
   29786:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
   2978a:	e7bd      	b.n	29708 <ull_rxenable+0x5c>

0002978c <ull_softreset_no_sema_fcmd>:
   2978c:	b570      	push	{r4, r5, r6, lr}
   2978e:	b082      	sub	sp, #8
   29790:	4606      	mov	r6, r0
   29792:	2502      	movs	r5, #2
   29794:	9501      	str	r5, [sp, #4]
   29796:	2400      	movs	r4, #0
   29798:	9400      	str	r4, [sp, #0]
   2979a:	4623      	mov	r3, r4
   2979c:	4622      	mov	r2, r4
   2979e:	2119      	movs	r1, #25
   297a0:	f7fd fc13 	bl	26fca <dwt_xfer3xxx>
   297a4:	6d33      	ldr	r3, [r6, #80]	@ 0x50
   297a6:	739c      	strb	r4, [r3, #14]
   297a8:	821d      	strh	r5, [r3, #16]
   297aa:	751c      	strb	r4, [r3, #20]
   297ac:	755c      	strb	r4, [r3, #21]
   297ae:	73dc      	strb	r4, [r3, #15]
   297b0:	b002      	add	sp, #8
   297b2:	bd70      	pop	{r4, r5, r6, pc}

000297b4 <ull_softreset_fcmd>:
   297b4:	b570      	push	{r4, r5, r6, lr}
   297b6:	b082      	sub	sp, #8
   297b8:	4606      	mov	r6, r0
   297ba:	2502      	movs	r5, #2
   297bc:	9501      	str	r5, [sp, #4]
   297be:	2400      	movs	r4, #0
   297c0:	9400      	str	r4, [sp, #0]
   297c2:	4623      	mov	r3, r4
   297c4:	4622      	mov	r2, r4
   297c6:	2118      	movs	r1, #24
   297c8:	f7fd fbff 	bl	26fca <dwt_xfer3xxx>
   297cc:	6d33      	ldr	r3, [r6, #80]	@ 0x50
   297ce:	739c      	strb	r4, [r3, #14]
   297d0:	821d      	strh	r5, [r3, #16]
   297d2:	751c      	strb	r4, [r3, #20]
   297d4:	755c      	strb	r4, [r3, #21]
   297d6:	73dc      	strb	r4, [r3, #15]
   297d8:	b002      	add	sp, #8
   297da:	bd70      	pop	{r4, r5, r6, pc}

000297dc <dwt_ioctl>:
   297dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   297e0:	b08d      	sub	sp, #52	@ 0x34
   297e2:	4606      	mov	r6, r0
   297e4:	4615      	mov	r5, r2
   297e6:	461c      	mov	r4, r3
   297e8:	299c      	cmp	r1, #156	@ 0x9c
   297ea:	f200 809f 	bhi.w	2992c <dwt_ioctl+0x150>
   297ee:	e8df f011 	tbh	[pc, r1, lsl #1]
   297f2:	09b9      	.short	0x09b9
   297f4:	00a109c4 	.word	0x00a109c4
   297f8:	00c100a6 	.word	0x00c100a6
   297fc:	019d0151 	.word	0x019d0151
   29800:	015c0176 	.word	0x015c0176
   29804:	01b301ae 	.word	0x01b301ae
   29808:	01c501bc 	.word	0x01c501bc
   2980c:	01d701ce 	.word	0x01d701ce
   29810:	01e501e0 	.word	0x01e501e0
   29814:	027201ee 	.word	0x027201ee
   29818:	027e0278 	.word	0x027e0278
   2981c:	028f0289 	.word	0x028f0289
   29820:	029a0295 	.word	0x029a0295
   29824:	02a502a0 	.word	0x02a502a0
   29828:	02b702ae 	.word	0x02b702ae
   2982c:	02c902c0 	.word	0x02c902c0
   29830:	02f90304 	.word	0x02f90304
   29834:	02d202ee 	.word	0x02d202ee
   29838:	031e02e0 	.word	0x031e02e0
   2983c:	021a01f8 	.word	0x021a01f8
   29840:	02420239 	.word	0x02420239
   29844:	08ba0258 	.word	0x08ba0258
   29848:	031508bf 	.word	0x031508bf
   2984c:	032c0327 	.word	0x032c0327
   29850:	033c0336 	.word	0x033c0336
   29854:	03520347 	.word	0x03520347
   29858:	0386035b 	.word	0x0386035b
   2985c:	03a9039d 	.word	0x03a9039d
   29860:	03b5030a 	.word	0x03b5030a
   29864:	03d203bf 	.word	0x03d203bf
   29868:	040b03f9 	.word	0x040b03f9
   2986c:	0457044d 	.word	0x0457044d
   29870:	048c047d 	.word	0x048c047d
   29874:	049504a7 	.word	0x049504a7
   29878:	04f704b1 	.word	0x04f704b1
   2987c:	052f050f 	.word	0x052f050f
   29880:	05580544 	.word	0x05580544
   29884:	057d0561 	.word	0x057d0561
   29888:	0692056a 	.word	0x0692056a
   2988c:	071106c1 	.word	0x071106c1
   29890:	07220717 	.word	0x07220717
   29894:	075b073b 	.word	0x075b073b
   29898:	078f0765 	.word	0x078f0765
   2989c:	07c607bd 	.word	0x07c607bd
   298a0:	07d507cc 	.word	0x07d507cc
   298a4:	07ef07e2 	.word	0x07ef07e2
   298a8:	080207f9 	.word	0x080207f9
   298ac:	0816080b 	.word	0x0816080b
   298b0:	08270821 	.word	0x08270821
   298b4:	0855084a 	.word	0x0855084a
   298b8:	086b0860 	.word	0x086b0860
   298bc:	0898088d 	.word	0x0898088d
   298c0:	08c508b1 	.word	0x08c508b1
   298c4:	0959094f 	.word	0x0959094f
   298c8:	09cc0964 	.word	0x09cc0964
   298cc:	09ae096e 	.word	0x09ae096e
   298d0:	090306b3 	.word	0x090306b3
   298d4:	0a3a0924 	.word	0x0a3a0924
   298d8:	09d90a2f 	.word	0x09d90a2f
   298dc:	09ef09e4 	.word	0x09ef09e4
   298e0:	0a0509fa 	.word	0x0a0509fa
   298e4:	0a1b0a10 	.word	0x0a1b0a10
   298e8:	0c320a24 	.word	0x0c320a24
   298ec:	0ca30c69 	.word	0x0ca30c69
   298f0:	0e2d0cc5 	.word	0x0e2d0cc5
   298f4:	0a4a0e41 	.word	0x0a4a0e41
   298f8:	0b890b57 	.word	0x0b890b57
   298fc:	0b970b93 	.word	0x0b970b93
   29900:	0ba50b9b 	.word	0x0ba50b9b
   29904:	0bc10bb7 	.word	0x0bc10bb7
   29908:	0be80bd4 	.word	0x0be80bd4
   2990c:	0cdb0c22 	.word	0x0cdb0c22
   29910:	0cfd0ce5 	.word	0x0cfd0ce5
   29914:	0d2d0d18 	.word	0x0d2d0d18
   29918:	0d890d4d 	.word	0x0d890d4d
   2991c:	0db70da1 	.word	0x0db70da1
   29920:	0efc0dc7 	.word	0x0efc0dc7
   29924:	0dec0df6 	.word	0x0dec0df6
   29928:	0e000e08 	.word	0x0e000e08
   2992c:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
   29930:	f001 be5c 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29934:	f7fd fb28 	bl	26f88 <ull_wakeup_ic>
   29938:	2500      	movs	r5, #0
   2993a:	f001 be57 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2993e:	2202      	movs	r2, #2
   29940:	49c0      	ldr	r1, [pc, #768]	@ (29c44 <dwt_ioctl+0x468>)
   29942:	f7fd fc1f 	bl	27184 <dwt_read8bitoffsetreg>
   29946:	2803      	cmp	r0, #3
   29948:	d802      	bhi.n	29950 <dwt_ioctl+0x174>
   2994a:	2500      	movs	r5, #0
   2994c:	f001 be4e 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29950:	f7f1 fa4e 	bl	1adf0 <decamutexon>
   29954:	4604      	mov	r4, r0
   29956:	2302      	movs	r3, #2
   29958:	9301      	str	r3, [sp, #4]
   2995a:	2500      	movs	r5, #0
   2995c:	9500      	str	r5, [sp, #0]
   2995e:	462b      	mov	r3, r5
   29960:	462a      	mov	r2, r5
   29962:	4629      	mov	r1, r5
   29964:	4630      	mov	r0, r6
   29966:	f7fd fb30 	bl	26fca <dwt_xfer3xxx>
   2996a:	4620      	mov	r0, r4
   2996c:	f7f1 fa47 	bl	1adfe <decamutexoff>
   29970:	f001 be3c 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29974:	2c00      	cmp	r4, #0
   29976:	f001 863d 	beq.w	2b5f4 <dwt_ioctl+0x1e18>
   2997a:	7824      	ldrb	r4, [r4, #0]
   2997c:	f014 0f1d 	tst.w	r4, #29
   29980:	d063      	beq.n	29a4a <dwt_ioctl+0x26e>
   29982:	f014 0f01 	tst.w	r4, #1
   29986:	d025      	beq.n	299d4 <dwt_ioctl+0x1f8>
   29988:	f014 0f02 	tst.w	r4, #2
   2998c:	f04f 0302 	mov.w	r3, #2
   29990:	9301      	str	r3, [sp, #4]
   29992:	f04f 0200 	mov.w	r2, #0
   29996:	9200      	str	r2, [sp, #0]
   29998:	4613      	mov	r3, r2
   2999a:	bf14      	ite	ne
   2999c:	210d      	movne	r1, #13
   2999e:	2103      	moveq	r1, #3
   299a0:	f7fd fb13 	bl	26fca <dwt_xfer3xxx>
   299a4:	2203      	movs	r2, #3
   299a6:	2144      	movs	r1, #68	@ 0x44
   299a8:	4630      	mov	r0, r6
   299aa:	f7fd fbeb 	bl	27184 <dwt_read8bitoffsetreg>
   299ae:	f010 0f08 	tst.w	r0, #8
   299b2:	bf08      	it	eq
   299b4:	2500      	moveq	r5, #0
   299b6:	f001 8619 	beq.w	2b5ec <dwt_ioctl+0x1e10>
   299ba:	2302      	movs	r3, #2
   299bc:	9301      	str	r3, [sp, #4]
   299be:	2100      	movs	r1, #0
   299c0:	9100      	str	r1, [sp, #0]
   299c2:	460b      	mov	r3, r1
   299c4:	460a      	mov	r2, r1
   299c6:	4630      	mov	r0, r6
   299c8:	f7fd faff 	bl	26fca <dwt_xfer3xxx>
   299cc:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
   299d0:	f001 be0c 	b.w	2b5ec <dwt_ioctl+0x1e10>
   299d4:	f014 0f08 	tst.w	r4, #8
   299d8:	d111      	bne.n	299fe <dwt_ioctl+0x222>
   299da:	f014 0f10 	tst.w	r4, #16
   299de:	d121      	bne.n	29a24 <dwt_ioctl+0x248>
   299e0:	f014 0f02 	tst.w	r4, #2
   299e4:	f04f 0302 	mov.w	r3, #2
   299e8:	9301      	str	r3, [sp, #4]
   299ea:	f04f 0200 	mov.w	r2, #0
   299ee:	9200      	str	r2, [sp, #0]
   299f0:	4613      	mov	r3, r2
   299f2:	bf14      	ite	ne
   299f4:	2110      	movne	r1, #16
   299f6:	2109      	moveq	r1, #9
   299f8:	f7fd fae7 	bl	26fca <dwt_xfer3xxx>
   299fc:	e7d2      	b.n	299a4 <dwt_ioctl+0x1c8>
   299fe:	2100      	movs	r1, #0
   29a00:	f7fe f85f 	bl	27ac2 <_dwt_adjust_delaytime>
   29a04:	f014 0f02 	tst.w	r4, #2
   29a08:	f04f 0302 	mov.w	r3, #2
   29a0c:	9301      	str	r3, [sp, #4]
   29a0e:	f04f 0200 	mov.w	r2, #0
   29a12:	9200      	str	r2, [sp, #0]
   29a14:	4613      	mov	r3, r2
   29a16:	bf14      	ite	ne
   29a18:	210f      	movne	r1, #15
   29a1a:	2107      	moveq	r1, #7
   29a1c:	4630      	mov	r0, r6
   29a1e:	f7fd fad4 	bl	26fca <dwt_xfer3xxx>
   29a22:	e7bf      	b.n	299a4 <dwt_ioctl+0x1c8>
   29a24:	2101      	movs	r1, #1
   29a26:	f7fe f84c 	bl	27ac2 <_dwt_adjust_delaytime>
   29a2a:	f014 0f02 	tst.w	r4, #2
   29a2e:	f04f 0302 	mov.w	r3, #2
   29a32:	9301      	str	r3, [sp, #4]
   29a34:	f04f 0200 	mov.w	r2, #0
   29a38:	9200      	str	r2, [sp, #0]
   29a3a:	4613      	mov	r3, r2
   29a3c:	bf14      	ite	ne
   29a3e:	210e      	movne	r1, #14
   29a40:	2105      	moveq	r1, #5
   29a42:	4630      	mov	r0, r6
   29a44:	f7fd fac1 	bl	26fca <dwt_xfer3xxx>
   29a48:	e7ac      	b.n	299a4 <dwt_ioctl+0x1c8>
   29a4a:	f014 0f20 	tst.w	r4, #32
   29a4e:	d010      	beq.n	29a72 <dwt_ioctl+0x296>
   29a50:	f014 0f02 	tst.w	r4, #2
   29a54:	f04f 0302 	mov.w	r3, #2
   29a58:	9301      	str	r3, [sp, #4]
   29a5a:	f04f 0500 	mov.w	r5, #0
   29a5e:	9500      	str	r5, [sp, #0]
   29a60:	462b      	mov	r3, r5
   29a62:	462a      	mov	r2, r5
   29a64:	bf14      	ite	ne
   29a66:	2111      	movne	r1, #17
   29a68:	210b      	moveq	r1, #11
   29a6a:	f7fd faae 	bl	26fca <dwt_xfer3xxx>
   29a6e:	f001 bdbd 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29a72:	f014 0f02 	tst.w	r4, #2
   29a76:	f04f 0302 	mov.w	r3, #2
   29a7a:	9301      	str	r3, [sp, #4]
   29a7c:	f04f 0500 	mov.w	r5, #0
   29a80:	9500      	str	r5, [sp, #0]
   29a82:	462b      	mov	r3, r5
   29a84:	462a      	mov	r2, r5
   29a86:	bf14      	ite	ne
   29a88:	210c      	movne	r1, #12
   29a8a:	2101      	moveq	r1, #1
   29a8c:	f7fd fa9d 	bl	26fca <dwt_xfer3xxx>
   29a90:	f001 bdac 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29a94:	2c00      	cmp	r4, #0
   29a96:	f001 85af 	beq.w	2b5f8 <dwt_ioctl+0x1e1c>
   29a9a:	6823      	ldr	r3, [r4, #0]
   29a9c:	2200      	movs	r2, #0
   29a9e:	2128      	movs	r1, #40	@ 0x28
   29aa0:	f7fd fffa 	bl	27a98 <dwt_write32bitoffsetreg>
   29aa4:	2500      	movs	r5, #0
   29aa6:	f001 bda1 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29aaa:	6823      	ldr	r3, [r4, #0]
   29aac:	2200      	movs	r2, #0
   29aae:	4966      	ldr	r1, [pc, #408]	@ (29c48 <dwt_ioctl+0x46c>)
   29ab0:	f7fd fff2 	bl	27a98 <dwt_write32bitoffsetreg>
   29ab4:	6863      	ldr	r3, [r4, #4]
   29ab6:	2200      	movs	r2, #0
   29ab8:	4964      	ldr	r1, [pc, #400]	@ (29c4c <dwt_ioctl+0x470>)
   29aba:	4630      	mov	r0, r6
   29abc:	f7fd ffec 	bl	27a98 <dwt_write32bitoffsetreg>
   29ac0:	68a3      	ldr	r3, [r4, #8]
   29ac2:	2200      	movs	r2, #0
   29ac4:	4962      	ldr	r1, [pc, #392]	@ (29c50 <dwt_ioctl+0x474>)
   29ac6:	4630      	mov	r0, r6
   29ac8:	f7fd ffe6 	bl	27a98 <dwt_write32bitoffsetreg>
   29acc:	68e3      	ldr	r3, [r4, #12]
   29ace:	2200      	movs	r2, #0
   29ad0:	4960      	ldr	r1, [pc, #384]	@ (29c54 <dwt_ioctl+0x478>)
   29ad2:	4630      	mov	r0, r6
   29ad4:	f7fd ffe0 	bl	27a98 <dwt_write32bitoffsetreg>
   29ad8:	2500      	movs	r5, #0
   29ada:	f001 bd87 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29ade:	2c00      	cmp	r4, #0
   29ae0:	f001 858c 	beq.w	2b5fc <dwt_ioctl+0x1e20>
   29ae4:	8823      	ldrh	r3, [r4, #0]
   29ae6:	6865      	ldr	r5, [r4, #4]
   29ae8:	2d03      	cmp	r5, #3
   29aea:	f201 8589 	bhi.w	2b600 <dwt_ioctl+0x1e24>
   29aee:	e8df f005 	tbb	[pc, r5]
   29af2:	0802      	.short	0x0802
   29af4:	160f      	.short	0x160f
   29af6:	2200      	movs	r2, #0
   29af8:	4957      	ldr	r1, [pc, #348]	@ (29c58 <dwt_ioctl+0x47c>)
   29afa:	f7fd ff62 	bl	279c2 <dwt_write16bitoffsetreg>
   29afe:	f001 bd75 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29b02:	2202      	movs	r2, #2
   29b04:	4954      	ldr	r1, [pc, #336]	@ (29c58 <dwt_ioctl+0x47c>)
   29b06:	f7fd ff5c 	bl	279c2 <dwt_write16bitoffsetreg>
   29b0a:	2500      	movs	r5, #0
   29b0c:	f001 bd6e 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29b10:	2200      	movs	r2, #0
   29b12:	4952      	ldr	r1, [pc, #328]	@ (29c5c <dwt_ioctl+0x480>)
   29b14:	f7fd ff55 	bl	279c2 <dwt_write16bitoffsetreg>
   29b18:	2500      	movs	r5, #0
   29b1a:	f001 bd67 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29b1e:	2202      	movs	r2, #2
   29b20:	494e      	ldr	r1, [pc, #312]	@ (29c5c <dwt_ioctl+0x480>)
   29b22:	f7fd ff4e 	bl	279c2 <dwt_write16bitoffsetreg>
   29b26:	2500      	movs	r5, #0
   29b28:	f001 bd60 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29b2c:	2c00      	cmp	r4, #0
   29b2e:	f001 8569 	beq.w	2b604 <dwt_ioctl+0x1e28>
   29b32:	7823      	ldrb	r3, [r4, #0]
   29b34:	005b      	lsls	r3, r3, #1
   29b36:	f003 0306 	and.w	r3, r3, #6
   29b3a:	9300      	str	r3, [sp, #0]
   29b3c:	f06f 0306 	mvn.w	r3, #6
   29b40:	2200      	movs	r2, #0
   29b42:	4947      	ldr	r1, [pc, #284]	@ (29c60 <dwt_ioctl+0x484>)
   29b44:	f7fe fcae 	bl	284a4 <dwt_modify32bitoffsetreg>
   29b48:	2500      	movs	r5, #0
   29b4a:	f001 bd4f 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29b4e:	f7fe fccd 	bl	284ec <ull_enablegpioclocks>
   29b52:	2500      	movs	r5, #0
   29b54:	f001 bd4a 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29b58:	2c00      	cmp	r4, #0
   29b5a:	f001 8555 	beq.w	2b608 <dwt_ioctl+0x1e2c>
   29b5e:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   29b60:	7b1b      	ldrb	r3, [r3, #12]
   29b62:	7023      	strb	r3, [r4, #0]
   29b64:	2500      	movs	r5, #0
   29b66:	f001 bd41 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29b6a:	2c00      	cmp	r4, #0
   29b6c:	f001 854e 	beq.w	2b60c <dwt_ioctl+0x1e30>
   29b70:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   29b72:	7a5b      	ldrb	r3, [r3, #9]
   29b74:	7023      	strb	r3, [r4, #0]
   29b76:	2500      	movs	r5, #0
   29b78:	f001 bd38 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29b7c:	2c00      	cmp	r4, #0
   29b7e:	f001 8547 	beq.w	2b610 <dwt_ioctl+0x1e34>
   29b82:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   29b84:	7a9b      	ldrb	r3, [r3, #10]
   29b86:	7023      	strb	r3, [r4, #0]
   29b88:	2500      	movs	r5, #0
   29b8a:	f001 bd2f 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29b8e:	2c00      	cmp	r4, #0
   29b90:	f001 8540 	beq.w	2b614 <dwt_ioctl+0x1e38>
   29b94:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   29b96:	681b      	ldr	r3, [r3, #0]
   29b98:	6023      	str	r3, [r4, #0]
   29b9a:	2500      	movs	r5, #0
   29b9c:	f001 bd26 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29ba0:	2c00      	cmp	r4, #0
   29ba2:	f001 8539 	beq.w	2b618 <dwt_ioctl+0x1e3c>
   29ba6:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   29ba8:	685b      	ldr	r3, [r3, #4]
   29baa:	6023      	str	r3, [r4, #0]
   29bac:	2500      	movs	r5, #0
   29bae:	f001 bd1d 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29bb2:	f7fe fae1 	bl	28178 <ull_signal_rx_buff_free>
   29bb6:	2500      	movs	r5, #0
   29bb8:	f001 bd18 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29bbc:	2c00      	cmp	r4, #0
   29bbe:	f001 852d 	beq.w	2b61c <dwt_ioctl+0x1e40>
   29bc2:	6821      	ldr	r1, [r4, #0]
   29bc4:	f7fd ffa3 	bl	27b0e <ull_setrxaftertxdelay>
   29bc8:	2500      	movs	r5, #0
   29bca:	f001 bd0f 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29bce:	2c00      	cmp	r4, #0
   29bd0:	f001 8526 	beq.w	2b620 <dwt_ioctl+0x1e44>
   29bd4:	6862      	ldr	r2, [r4, #4]
   29bd6:	7821      	ldrb	r1, [r4, #0]
   29bd8:	f7fe fde8 	bl	287ac <ull_enablespicrccheck>
   29bdc:	2500      	movs	r5, #0
   29bde:	f001 bd05 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29be2:	2c00      	cmp	r4, #0
   29be4:	f001 851e 	beq.w	2b624 <dwt_ioctl+0x1e48>
   29be8:	6865      	ldr	r5, [r4, #4]
   29bea:	7823      	ldrb	r3, [r4, #0]
   29bec:	2203      	movs	r2, #3
   29bee:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
   29bf2:	f7fe f935 	bl	27e60 <dwt_write8bitoffsetreg>
   29bf6:	b94d      	cbnz	r5, 29c0c <dwt_ioctl+0x430>
   29bf8:	2200      	movs	r2, #0
   29bfa:	9200      	str	r2, [sp, #0]
   29bfc:	f24f 73ff 	movw	r3, #63487	@ 0xf7ff
   29c00:	2110      	movs	r1, #16
   29c02:	4630      	mov	r0, r6
   29c04:	f7ff f94e 	bl	28ea4 <dwt_modify16bitoffsetreg>
   29c08:	f001 bcf0 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29c0c:	f44f 2381 	mov.w	r3, #264192	@ 0x40800
   29c10:	9300      	str	r3, [sp, #0]
   29c12:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   29c16:	2200      	movs	r2, #0
   29c18:	2110      	movs	r1, #16
   29c1a:	4630      	mov	r0, r6
   29c1c:	f7fe fc42 	bl	284a4 <dwt_modify32bitoffsetreg>
   29c20:	2500      	movs	r5, #0
   29c22:	f001 bce3 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29c26:	2200      	movs	r2, #0
   29c28:	4611      	mov	r1, r2
   29c2a:	f7fd fa56 	bl	270da <dwt_read32bitoffsetreg>
   29c2e:	68b2      	ldr	r2, [r6, #8]
   29c30:	6813      	ldr	r3, [r2, #0]
   29c32:	4043      	eors	r3, r0
   29c34:	6852      	ldr	r2, [r2, #4]
   29c36:	4213      	tst	r3, r2
   29c38:	bf14      	ite	ne
   29c3a:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
   29c3e:	2500      	moveq	r5, #0
   29c40:	f001 bcd4 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29c44:	000f0030 	.word	0x000f0030
   29c48:	00010054 	.word	0x00010054
   29c4c:	00010058 	.word	0x00010058
   29c50:	0001005c 	.word	0x0001005c
   29c54:	00010060 	.word	0x00010060
   29c58:	0001000c 	.word	0x0001000c
   29c5c:	00010010 	.word	0x00010010
   29c60:	00010008 	.word	0x00010008
   29c64:	2c00      	cmp	r4, #0
   29c66:	f001 84df 	beq.w	2b628 <dwt_ioctl+0x1e4c>
   29c6a:	7821      	ldrb	r1, [r4, #0]
   29c6c:	f7fe fdba 	bl	287e4 <ull_configciadiag>
   29c70:	2500      	movs	r5, #0
   29c72:	f001 bcbb 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29c76:	b942      	cbnz	r2, 29c8a <dwt_ioctl+0x4ae>
   29c78:	2200      	movs	r2, #0
   29c7a:	9200      	str	r2, [sp, #0]
   29c7c:	f24f 73ff 	movw	r3, #63487	@ 0xf7ff
   29c80:	49d2      	ldr	r1, [pc, #840]	@ (29fcc <dwt_ioctl+0x7f0>)
   29c82:	f7ff f90f 	bl	28ea4 <dwt_modify16bitoffsetreg>
   29c86:	f001 bcb1 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29c8a:	f44f 6300 	mov.w	r3, #2048	@ 0x800
   29c8e:	9300      	str	r3, [sp, #0]
   29c90:	f64f 73ff 	movw	r3, #65535	@ 0xffff
   29c94:	2200      	movs	r2, #0
   29c96:	49cd      	ldr	r1, [pc, #820]	@ (29fcc <dwt_ioctl+0x7f0>)
   29c98:	f7ff f904 	bl	28ea4 <dwt_modify16bitoffsetreg>
   29c9c:	2500      	movs	r5, #0
   29c9e:	f001 bca5 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29ca2:	f002 0201 	and.w	r2, r2, #1
   29ca6:	f64f 73ff 	movw	r3, #65535	@ 0xffff
   29caa:	f24f 71ff 	movw	r1, #63487	@ 0xf7ff
   29cae:	2a00      	cmp	r2, #0
   29cb0:	bf08      	it	eq
   29cb2:	460b      	moveq	r3, r1
   29cb4:	02d2      	lsls	r2, r2, #11
   29cb6:	f015 0f02 	tst.w	r5, #2
   29cba:	bf12      	itee	ne
   29cbc:	f442 5280 	orrne.w	r2, r2, #4096	@ 0x1000
   29cc0:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
   29cc4:	b29b      	uxtheq	r3, r3
   29cc6:	9200      	str	r2, [sp, #0]
   29cc8:	2200      	movs	r2, #0
   29cca:	49c0      	ldr	r1, [pc, #768]	@ (29fcc <dwt_ioctl+0x7f0>)
   29ccc:	f7ff f8ea 	bl	28ea4 <dwt_modify16bitoffsetreg>
   29cd0:	2500      	movs	r5, #0
   29cd2:	f001 bc8b 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29cd6:	4611      	mov	r1, r2
   29cd8:	f7fd ff2e 	bl	27b38 <ull_setfinegraintxseq>
   29cdc:	2500      	movs	r5, #0
   29cde:	f001 bc85 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29ce2:	4611      	mov	r1, r2
   29ce4:	f7fd ff3c 	bl	27b60 <ull_setlnapamode>
   29ce8:	2500      	movs	r5, #0
   29cea:	f001 bc7f 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29cee:	2c00      	cmp	r4, #0
   29cf0:	f001 849c 	beq.w	2b62c <dwt_ioctl+0x1e50>
   29cf4:	2200      	movs	r2, #0
   29cf6:	49b6      	ldr	r1, [pc, #728]	@ (29fd0 <dwt_ioctl+0x7f4>)
   29cf8:	f7fd fa44 	bl	27184 <dwt_read8bitoffsetreg>
   29cfc:	7020      	strb	r0, [r4, #0]
   29cfe:	2500      	movs	r5, #0
   29d00:	f001 bc74 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29d04:	4621      	mov	r1, r4
   29d06:	f7fd ff4b 	bl	27ba0 <ull_configurestskey>
   29d0a:	2500      	movs	r5, #0
   29d0c:	f001 bc6e 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29d10:	4621      	mov	r1, r4
   29d12:	f7fd ff69 	bl	27be8 <ull_configurestsiv>
   29d16:	2500      	movs	r5, #0
   29d18:	f001 bc68 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29d1c:	f7fe fd98 	bl	28850 <ull_configurestsloadiv>
   29d20:	2500      	movs	r5, #0
   29d22:	f001 bc63 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29d26:	4611      	mov	r1, r2
   29d28:	f7fd ff82 	bl	27c30 <ull_configmrxlut>
   29d2c:	2500      	movs	r5, #0
   29d2e:	f001 bc5d 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29d32:	f7fe feb3 	bl	28a9c <ull_restoreconfig>
   29d36:	2500      	movs	r5, #0
   29d38:	f001 bc58 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29d3c:	2c00      	cmp	r4, #0
   29d3e:	f001 8477 	beq.w	2b630 <dwt_ioctl+0x1e54>
   29d42:	7821      	ldrb	r1, [r4, #0]
   29d44:	f7ff f8c8 	bl	28ed8 <ull_configurestsmode>
   29d48:	2500      	movs	r5, #0
   29d4a:	f001 bc4f 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29d4e:	2c00      	cmp	r4, #0
   29d50:	f001 8470 	beq.w	2b634 <dwt_ioctl+0x1e58>
   29d54:	8821      	ldrh	r1, [r4, #0]
   29d56:	f7fd fe44 	bl	279e2 <ull_setrxantennadelay>
   29d5a:	2500      	movs	r5, #0
   29d5c:	f001 bc46 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29d60:	2c00      	cmp	r4, #0
   29d62:	f001 8469 	beq.w	2b638 <dwt_ioctl+0x1e5c>
   29d66:	f7fd f9e0 	bl	2712a <ull_getrxantennadelay>
   29d6a:	8020      	strh	r0, [r4, #0]
   29d6c:	2500      	movs	r5, #0
   29d6e:	f001 bc3d 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29d72:	2c00      	cmp	r4, #0
   29d74:	f001 8462 	beq.w	2b63c <dwt_ioctl+0x1e60>
   29d78:	8821      	ldrh	r1, [r4, #0]
   29d7a:	f7fd fe3a 	bl	279f2 <ull_settxantennadelay>
   29d7e:	2500      	movs	r5, #0
   29d80:	f001 bc34 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29d84:	2c00      	cmp	r4, #0
   29d86:	f001 845b 	beq.w	2b640 <dwt_ioctl+0x1e64>
   29d8a:	f7fd f9d5 	bl	27138 <ull_gettxantennadelay>
   29d8e:	8020      	strh	r0, [r4, #0]
   29d90:	2500      	movs	r5, #0
   29d92:	f001 bc2b 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29d96:	2c00      	cmp	r4, #0
   29d98:	f001 8454 	beq.w	2b644 <dwt_ioctl+0x1e68>
   29d9c:	88a3      	ldrh	r3, [r4, #4]
   29d9e:	88e2      	ldrh	r2, [r4, #6]
   29da0:	6821      	ldr	r1, [r4, #0]
   29da2:	9100      	str	r1, [sp, #0]
   29da4:	f44f 11b0 	mov.w	r1, #1441792	@ 0x160000
   29da8:	f7fd fe00 	bl	279ac <dwt_writetodevice>
   29dac:	2500      	movs	r5, #0
   29dae:	f001 bc1d 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29db2:	2c00      	cmp	r4, #0
   29db4:	f001 8448 	beq.w	2b648 <dwt_ioctl+0x1e6c>
   29db8:	88a3      	ldrh	r3, [r4, #4]
   29dba:	88e2      	ldrh	r2, [r4, #6]
   29dbc:	6821      	ldr	r1, [r4, #0]
   29dbe:	9100      	str	r1, [sp, #0]
   29dc0:	f44f 11b0 	mov.w	r1, #1441792	@ 0x160000
   29dc4:	f7fd f97f 	bl	270c6 <dwt_readfromdevice>
   29dc8:	2500      	movs	r5, #0
   29dca:	f001 bc0f 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29dce:	2c00      	cmp	r4, #0
   29dd0:	f001 843c 	beq.w	2b64c <dwt_ioctl+0x1e70>
   29dd4:	88e3      	ldrh	r3, [r4, #6]
   29dd6:	88a2      	ldrh	r2, [r4, #4]
   29dd8:	6821      	ldr	r1, [r4, #0]
   29dda:	f7fe f80b 	bl	27df4 <ull_readrxdata>
   29dde:	2500      	movs	r5, #0
   29de0:	f001 bc04 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29de4:	2c00      	cmp	r4, #0
   29de6:	f001 8433 	beq.w	2b650 <dwt_ioctl+0x1e74>
   29dea:	88e3      	ldrh	r3, [r4, #6]
   29dec:	6822      	ldr	r2, [r4, #0]
   29dee:	88a1      	ldrh	r1, [r4, #4]
   29df0:	f7fe f990 	bl	28114 <ull_writetxdata>
   29df4:	2500      	movs	r5, #0
   29df6:	f001 bbf9 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29dfa:	4611      	mov	r1, r2
   29dfc:	f7ff fc56 	bl	296ac <ull_rxenable>
   29e00:	2500      	movs	r5, #0
   29e02:	f001 bbf3 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29e06:	2c00      	cmp	r4, #0
   29e08:	f001 8424 	beq.w	2b654 <dwt_ioctl+0x1e78>
   29e0c:	7923      	ldrb	r3, [r4, #4]
   29e0e:	8862      	ldrh	r2, [r4, #2]
   29e10:	8821      	ldrh	r1, [r4, #0]
   29e12:	f7fe fc97 	bl	28744 <ull_writetxfctrl>
   29e16:	2500      	movs	r5, #0
   29e18:	f001 bbe8 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29e1c:	2c00      	cmp	r4, #0
   29e1e:	f001 841b 	beq.w	2b658 <dwt_ioctl+0x1e7c>
   29e22:	f7fd f98f 	bl	27144 <ull_readclockoffset>
   29e26:	8020      	strh	r0, [r4, #0]
   29e28:	2500      	movs	r5, #0
   29e2a:	f001 bbdf 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29e2e:	2c00      	cmp	r4, #0
   29e30:	f001 8414 	beq.w	2b65c <dwt_ioctl+0x1e80>
   29e34:	f7fd f9b4 	bl	271a0 <ull_readcarrierintegrator>
   29e38:	6020      	str	r0, [r4, #0]
   29e3a:	2500      	movs	r5, #0
   29e3c:	f001 bbd6 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29e40:	f7fe f866 	bl	27f10 <ull_clearaonconfig>
   29e44:	2500      	movs	r5, #0
   29e46:	f001 bbd1 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29e4a:	2c00      	cmp	r4, #0
   29e4c:	f001 8408 	beq.w	2b660 <dwt_ioctl+0x1e84>
   29e50:	8861      	ldrh	r1, [r4, #2]
   29e52:	f7fe fe53 	bl	28afc <ull_calcbandwidthadj>
   29e56:	7020      	strb	r0, [r4, #0]
   29e58:	2500      	movs	r5, #0
   29e5a:	f001 bbc7 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29e5e:	4621      	mov	r1, r4
   29e60:	f7fd f9be 	bl	271e0 <ull_readdiagnostics>
   29e64:	2500      	movs	r5, #0
   29e66:	f001 bbc1 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29e6a:	2c00      	cmp	r4, #0
   29e6c:	f001 83fa 	beq.w	2b664 <dwt_ioctl+0x1e88>
   29e70:	2201      	movs	r2, #1
   29e72:	2170      	movs	r1, #112	@ 0x70
   29e74:	f7fd f931 	bl	270da <dwt_read32bitoffsetreg>
   29e78:	6020      	str	r0, [r4, #0]
   29e7a:	2500      	movs	r5, #0
   29e7c:	f001 bbb6 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29e80:	2c00      	cmp	r4, #0
   29e82:	f001 83f1 	beq.w	2b668 <dwt_ioctl+0x1e8c>
   29e86:	2200      	movs	r2, #0
   29e88:	2170      	movs	r1, #112	@ 0x70
   29e8a:	f7fd f926 	bl	270da <dwt_read32bitoffsetreg>
   29e8e:	6020      	str	r0, [r4, #0]
   29e90:	2500      	movs	r5, #0
   29e92:	f001 bbab 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29e96:	9400      	str	r4, [sp, #0]
   29e98:	2305      	movs	r3, #5
   29e9a:	2200      	movs	r2, #0
   29e9c:	2170      	movs	r1, #112	@ 0x70
   29e9e:	f7fd f912 	bl	270c6 <dwt_readfromdevice>
   29ea2:	2500      	movs	r5, #0
   29ea4:	f001 bba2 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29ea8:	2c00      	cmp	r4, #0
   29eaa:	f001 83df 	beq.w	2b66c <dwt_ioctl+0x1e90>
   29eae:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   29eb0:	7b9b      	ldrb	r3, [r3, #14]
   29eb2:	2b01      	cmp	r3, #1
   29eb4:	d015      	beq.n	29ee2 <dwt_ioctl+0x706>
   29eb6:	2b03      	cmp	r3, #3
   29eb8:	d11a      	bne.n	29ef0 <dwt_ioctl+0x714>
   29eba:	2216      	movs	r2, #22
   29ebc:	f44f 11f0 	mov.w	r1, #1966080	@ 0x1e0000
   29ec0:	f7fd f921 	bl	27106 <dwt_read16bitoffsetreg>
   29ec4:	f3c0 000d 	ubfx	r0, r0, #0, #14
   29ec8:	b283      	uxth	r3, r0
   29eca:	f413 5f00 	tst.w	r3, #8192	@ 0x2000
   29ece:	d004      	beq.n	29eda <dwt_ioctl+0x6fe>
   29ed0:	ea6f 4383 	mvn.w	r3, r3, lsl #18
   29ed4:	ea6f 4393 	mvn.w	r3, r3, lsr #18
   29ed8:	b218      	sxth	r0, r3
   29eda:	8020      	strh	r0, [r4, #0]
   29edc:	2500      	movs	r5, #0
   29ede:	f001 bb85 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29ee2:	2202      	movs	r2, #2
   29ee4:	493b      	ldr	r1, [pc, #236]	@ (29fd4 <dwt_ioctl+0x7f8>)
   29ee6:	f7fd f90e 	bl	27106 <dwt_read16bitoffsetreg>
   29eea:	f3c0 000d 	ubfx	r0, r0, #0, #14
   29eee:	e7eb      	b.n	29ec8 <dwt_ioctl+0x6ec>
   29ef0:	2202      	movs	r2, #2
   29ef2:	4939      	ldr	r1, [pc, #228]	@ (29fd8 <dwt_ioctl+0x7fc>)
   29ef4:	f7fd f907 	bl	27106 <dwt_read16bitoffsetreg>
   29ef8:	f3c0 000d 	ubfx	r0, r0, #0, #14
   29efc:	e7e4      	b.n	29ec8 <dwt_ioctl+0x6ec>
   29efe:	9400      	str	r4, [sp, #0]
   29f00:	2306      	movs	r3, #6
   29f02:	2200      	movs	r2, #0
   29f04:	4935      	ldr	r1, [pc, #212]	@ (29fdc <dwt_ioctl+0x800>)
   29f06:	f7fd f8de 	bl	270c6 <dwt_readfromdevice>
   29f0a:	f994 3001 	ldrsb.w	r3, [r4, #1]
   29f0e:	2b00      	cmp	r3, #0
   29f10:	db06      	blt.n	29f20 <dwt_ioctl+0x744>
   29f12:	7963      	ldrb	r3, [r4, #5]
   29f14:	f003 0301 	and.w	r3, r3, #1
   29f18:	7163      	strb	r3, [r4, #5]
   29f1a:	2500      	movs	r5, #0
   29f1c:	f001 bb66 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29f20:	23ff      	movs	r3, #255	@ 0xff
   29f22:	70a3      	strb	r3, [r4, #2]
   29f24:	70e3      	strb	r3, [r4, #3]
   29f26:	7123      	strb	r3, [r4, #4]
   29f28:	7163      	strb	r3, [r4, #5]
   29f2a:	e7f2      	b.n	29f12 <dwt_ioctl+0x736>
   29f2c:	2c00      	cmp	r4, #0
   29f2e:	f001 839f 	beq.w	2b670 <dwt_ioctl+0x1e94>
   29f32:	2201      	movs	r2, #1
   29f34:	f04f 1108 	mov.w	r1, #524296	@ 0x80008
   29f38:	f7fd f924 	bl	27184 <dwt_read8bitoffsetreg>
   29f3c:	7020      	strb	r0, [r4, #0]
   29f3e:	2500      	movs	r5, #0
   29f40:	f001 bb54 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29f44:	2c00      	cmp	r4, #0
   29f46:	f001 8395 	beq.w	2b674 <dwt_ioctl+0x1e98>
   29f4a:	2200      	movs	r2, #0
   29f4c:	f04f 1108 	mov.w	r1, #524296	@ 0x80008
   29f50:	f7fd f918 	bl	27184 <dwt_read8bitoffsetreg>
   29f54:	7020      	strb	r0, [r4, #0]
   29f56:	2500      	movs	r5, #0
   29f58:	f001 bb48 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29f5c:	2c00      	cmp	r4, #0
   29f5e:	f001 838b 	beq.w	2b678 <dwt_ioctl+0x1e9c>
   29f62:	88a2      	ldrh	r2, [r4, #4]
   29f64:	6821      	ldr	r1, [r4, #0]
   29f66:	f7fe fb17 	bl	28598 <_dwt_otpprogword32>
   29f6a:	2500      	movs	r5, #0
   29f6c:	f001 bb3e 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29f70:	2c00      	cmp	r4, #0
   29f72:	f001 8383 	beq.w	2b67c <dwt_ioctl+0x1ea0>
   29f76:	6825      	ldr	r5, [r4, #0]
   29f78:	88a4      	ldrh	r4, [r4, #4]
   29f7a:	4622      	mov	r2, r4
   29f7c:	4629      	mov	r1, r5
   29f7e:	f7fe fb0b 	bl	28598 <_dwt_otpprogword32>
   29f82:	4621      	mov	r1, r4
   29f84:	4630      	mov	r0, r6
   29f86:	f7fd fd65 	bl	27a54 <_dwt_otpread>
   29f8a:	1a2d      	subs	r5, r5, r0
   29f8c:	bf18      	it	ne
   29f8e:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
   29f92:	f001 bb2b 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29f96:	2a02      	cmp	r2, #2
   29f98:	d00f      	beq.n	29fba <dwt_ioctl+0x7de>
   29f9a:	4c11      	ldr	r4, [pc, #68]	@ (29fe0 <dwt_ioctl+0x804>)
   29f9c:	2300      	movs	r3, #0
   29f9e:	461a      	mov	r2, r3
   29fa0:	4621      	mov	r1, r4
   29fa2:	4630      	mov	r0, r6
   29fa4:	f7fd ff5c 	bl	27e60 <dwt_write8bitoffsetreg>
   29fa8:	2302      	movs	r3, #2
   29faa:	2200      	movs	r2, #0
   29fac:	4621      	mov	r1, r4
   29fae:	4630      	mov	r0, r6
   29fb0:	f7fd ff56 	bl	27e60 <dwt_write8bitoffsetreg>
   29fb4:	2500      	movs	r5, #0
   29fb6:	f001 bb19 	b.w	2b5ec <dwt_ioctl+0x1e10>
   29fba:	2300      	movs	r3, #0
   29fbc:	9300      	str	r3, [sp, #0]
   29fbe:	23fe      	movs	r3, #254	@ 0xfe
   29fc0:	2201      	movs	r2, #1
   29fc2:	4902      	ldr	r1, [pc, #8]	@ (29fcc <dwt_ioctl+0x7f0>)
   29fc4:	f7fe fbde 	bl	28784 <dwt_modify8bitoffsetreg>
   29fc8:	e7e7      	b.n	29f9a <dwt_ioctl+0x7be>
   29fca:	bf00      	nop
   29fcc:	00110008 	.word	0x00110008
   29fd0:	0007001c 	.word	0x0007001c
   29fd4:	00180014 	.word	0x00180014
   29fd8:	000c001c 	.word	0x000c001c
   29fdc:	000c0018 	.word	0x000c0018
   29fe0:	000a0004 	.word	0x000a0004
   29fe4:	2c00      	cmp	r4, #0
   29fe6:	f001 834b 	beq.w	2b680 <dwt_ioctl+0x1ea4>
   29fea:	8824      	ldrh	r4, [r4, #0]
   29fec:	b2e2      	uxtb	r2, r4
   29fee:	f44f 7181 	mov.w	r1, #258	@ 0x102
   29ff2:	f7fd ffe1 	bl	27fb8 <ull_aon_write>
   29ff6:	0a22      	lsrs	r2, r4, #8
   29ff8:	f240 1103 	movw	r1, #259	@ 0x103
   29ffc:	4630      	mov	r0, r6
   29ffe:	f7fd ffdb 	bl	27fb8 <ull_aon_write>
   2a002:	2500      	movs	r5, #0
   2a004:	f001 baf2 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a008:	2c00      	cmp	r4, #0
   2a00a:	f001 833b 	beq.w	2b684 <dwt_ioctl+0x1ea8>
   2a00e:	f8df 8370 	ldr.w	r8, [pc, #880]	@ 2a380 <dwt_ioctl+0xba4>
   2a012:	2310      	movs	r3, #16
   2a014:	9300      	str	r3, [sp, #0]
   2a016:	23ff      	movs	r3, #255	@ 0xff
   2a018:	2200      	movs	r2, #0
   2a01a:	4641      	mov	r1, r8
   2a01c:	f7fe fbb2 	bl	28784 <dwt_modify8bitoffsetreg>
   2a020:	f44f 7182 	mov.w	r1, #260	@ 0x104
   2a024:	4630      	mov	r0, r6
   2a026:	f7fd ffa7 	bl	27f78 <ull_aon_read>
   2a02a:	f000 05e0 	and.w	r5, r0, #224	@ 0xe0
   2a02e:	462a      	mov	r2, r5
   2a030:	f44f 7182 	mov.w	r1, #260	@ 0x104
   2a034:	4630      	mov	r0, r6
   2a036:	f7fd ffbf 	bl	27fb8 <ull_aon_write>
   2a03a:	f045 0204 	orr.w	r2, r5, #4
   2a03e:	f44f 7182 	mov.w	r1, #260	@ 0x104
   2a042:	4630      	mov	r0, r6
   2a044:	f7fd ffb8 	bl	27fb8 <ull_aon_write>
   2a048:	2002      	movs	r0, #2
   2a04a:	f7f0 fee4 	bl	1ae16 <deca_sleep>
   2a04e:	f44f 7187 	mov.w	r1, #270	@ 0x10e
   2a052:	4630      	mov	r0, r6
   2a054:	f7fd ff90 	bl	27f78 <ull_aon_read>
   2a058:	4607      	mov	r7, r0
   2a05a:	f240 110f 	movw	r1, #271	@ 0x10f
   2a05e:	4630      	mov	r0, r6
   2a060:	f7fd ff8a 	bl	27f78 <ull_aon_read>
   2a064:	4681      	mov	r9, r0
   2a066:	462a      	mov	r2, r5
   2a068:	f44f 7182 	mov.w	r1, #260	@ 0x104
   2a06c:	4630      	mov	r0, r6
   2a06e:	f7fd ffa3 	bl	27fb8 <ull_aon_write>
   2a072:	2500      	movs	r5, #0
   2a074:	9500      	str	r5, [sp, #0]
   2a076:	23ef      	movs	r3, #239	@ 0xef
   2a078:	462a      	mov	r2, r5
   2a07a:	4641      	mov	r1, r8
   2a07c:	4630      	mov	r0, r6
   2a07e:	f7fe fb81 	bl	28784 <dwt_modify8bitoffsetreg>
   2a082:	ea47 2709 	orr.w	r7, r7, r9, lsl #8
   2a086:	8027      	strh	r7, [r4, #0]
   2a088:	f001 bab0 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a08c:	2c00      	cmp	r4, #0
   2a08e:	f001 82fb 	beq.w	2b688 <dwt_ioctl+0x1eac>
   2a092:	78a2      	ldrb	r2, [r4, #2]
   2a094:	8821      	ldrh	r1, [r4, #0]
   2a096:	f7fd ffb7 	bl	28008 <ull_configuresleep>
   2a09a:	2500      	movs	r5, #0
   2a09c:	f001 baa6 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a0a0:	2c00      	cmp	r4, #0
   2a0a2:	f001 82f3 	beq.w	2b68c <dwt_ioctl+0x1eb0>
   2a0a6:	6824      	ldr	r4, [r4, #0]
   2a0a8:	f7fd ff32 	bl	27f10 <ull_clearaonconfig>
   2a0ac:	2001      	movs	r0, #1
   2a0ae:	f7f0 feb2 	bl	1ae16 <deca_sleep>
   2a0b2:	2303      	movs	r3, #3
   2a0b4:	9300      	str	r3, [sp, #0]
   2a0b6:	23ff      	movs	r3, #255	@ 0xff
   2a0b8:	2200      	movs	r2, #0
   2a0ba:	49af      	ldr	r1, [pc, #700]	@ (2a378 <dwt_ioctl+0xb9c>)
   2a0bc:	4630      	mov	r0, r6
   2a0be:	f7fe fb61 	bl	28784 <dwt_modify8bitoffsetreg>
   2a0c2:	b97c      	cbnz	r4, 2a0e4 <dwt_ioctl+0x908>
   2a0c4:	4630      	mov	r0, r6
   2a0c6:	f7ff fb61 	bl	2978c <ull_softreset_no_sema_fcmd>
   2a0ca:	2001      	movs	r0, #1
   2a0cc:	f7f0 fea3 	bl	1ae16 <deca_sleep>
   2a0d0:	6d33      	ldr	r3, [r6, #80]	@ 0x50
   2a0d2:	2500      	movs	r5, #0
   2a0d4:	739d      	strb	r5, [r3, #14]
   2a0d6:	2202      	movs	r2, #2
   2a0d8:	821a      	strh	r2, [r3, #16]
   2a0da:	751d      	strb	r5, [r3, #20]
   2a0dc:	755d      	strb	r5, [r3, #21]
   2a0de:	73dd      	strb	r5, [r3, #15]
   2a0e0:	f001 ba84 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a0e4:	4630      	mov	r0, r6
   2a0e6:	f7ff fb65 	bl	297b4 <ull_softreset_fcmd>
   2a0ea:	e7ee      	b.n	2a0ca <dwt_ioctl+0x8ee>
   2a0ec:	2c00      	cmp	r4, #0
   2a0ee:	f001 82cf 	beq.w	2b690 <dwt_ioctl+0x1eb4>
   2a0f2:	7823      	ldrb	r3, [r4, #0]
   2a0f4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
   2a0f8:	6d02      	ldr	r2, [r0, #80]	@ 0x50
   2a0fa:	7353      	strb	r3, [r2, #13]
   2a0fc:	2200      	movs	r2, #0
   2a0fe:	499f      	ldr	r1, [pc, #636]	@ (2a37c <dwt_ioctl+0xba0>)
   2a100:	f7fd feae 	bl	27e60 <dwt_write8bitoffsetreg>
   2a104:	2500      	movs	r5, #0
   2a106:	f001 ba71 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a10a:	2c00      	cmp	r4, #0
   2a10c:	f001 82c2 	beq.w	2b694 <dwt_ioctl+0x1eb8>
   2a110:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   2a112:	7b5b      	ldrb	r3, [r3, #13]
   2a114:	7023      	strb	r3, [r4, #0]
   2a116:	2500      	movs	r5, #0
   2a118:	f001 ba68 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a11c:	2101      	movs	r1, #1
   2a11e:	f7fe f9f5 	bl	2850c <ull_enable_rf_tx>
   2a122:	4630      	mov	r0, r6
   2a124:	f7fe fa26 	bl	28574 <ull_enable_rftx_blocks>
   2a128:	2101      	movs	r1, #1
   2a12a:	4630      	mov	r0, r6
   2a12c:	f7fd fc68 	bl	27a00 <ull_force_clocks>
   2a130:	220f      	movs	r2, #15
   2a132:	2101      	movs	r1, #1
   2a134:	4630      	mov	r0, r6
   2a136:	f7fd fe39 	bl	27dac <ull_repeated_cw>
   2a13a:	2500      	movs	r5, #0
   2a13c:	f001 ba56 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a140:	2c00      	cmp	r4, #0
   2a142:	f001 82a9 	beq.w	2b698 <dwt_ioctl+0x1ebc>
   2a146:	6862      	ldr	r2, [r4, #4]
   2a148:	6821      	ldr	r1, [r4, #0]
   2a14a:	f7fd fe2f 	bl	27dac <ull_repeated_cw>
   2a14e:	2500      	movs	r5, #0
   2a150:	f001 ba4c 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a154:	2c00      	cmp	r4, #0
   2a156:	f001 82a1 	beq.w	2b69c <dwt_ioctl+0x1ec0>
   2a15a:	4d89      	ldr	r5, [pc, #548]	@ (2a380 <dwt_ioctl+0xba4>)
   2a15c:	2200      	movs	r2, #0
   2a15e:	4629      	mov	r1, r5
   2a160:	f7fd f810 	bl	27184 <dwt_read8bitoffsetreg>
   2a164:	4680      	mov	r8, r0
   2a166:	2302      	movs	r3, #2
   2a168:	9300      	str	r3, [sp, #0]
   2a16a:	23ff      	movs	r3, #255	@ 0xff
   2a16c:	2200      	movs	r2, #0
   2a16e:	4629      	mov	r1, r5
   2a170:	4630      	mov	r0, r6
   2a172:	f7fe fb07 	bl	28784 <dwt_modify8bitoffsetreg>
   2a176:	2304      	movs	r3, #4
   2a178:	2200      	movs	r2, #0
   2a17a:	4982      	ldr	r1, [pc, #520]	@ (2a384 <dwt_ioctl+0xba8>)
   2a17c:	4630      	mov	r0, r6
   2a17e:	f7fd fe6f 	bl	27e60 <dwt_write8bitoffsetreg>
   2a182:	2301      	movs	r3, #1
   2a184:	2200      	movs	r2, #0
   2a186:	f44f 2100 	mov.w	r1, #524288	@ 0x80000
   2a18a:	4630      	mov	r0, r6
   2a18c:	f7fd fe68 	bl	27e60 <dwt_write8bitoffsetreg>
   2a190:	4f7d      	ldr	r7, [pc, #500]	@ (2a388 <dwt_ioctl+0xbac>)
   2a192:	2500      	movs	r5, #0
   2a194:	462a      	mov	r2, r5
   2a196:	4639      	mov	r1, r7
   2a198:	4630      	mov	r0, r6
   2a19a:	f7fc fff3 	bl	27184 <dwt_read8bitoffsetreg>
   2a19e:	f010 0f01 	tst.w	r0, #1
   2a1a2:	d0f7      	beq.n	2a194 <dwt_ioctl+0x9b8>
   2a1a4:	2200      	movs	r2, #0
   2a1a6:	f04f 1108 	mov.w	r1, #524296	@ 0x80008
   2a1aa:	4630      	mov	r0, r6
   2a1ac:	f7fc ffab 	bl	27106 <dwt_read16bitoffsetreg>
   2a1b0:	4605      	mov	r5, r0
   2a1b2:	2300      	movs	r3, #0
   2a1b4:	461a      	mov	r2, r3
   2a1b6:	f44f 2100 	mov.w	r1, #524288	@ 0x80000
   2a1ba:	4630      	mov	r0, r6
   2a1bc:	f7fd fe50 	bl	27e60 <dwt_write8bitoffsetreg>
   2a1c0:	2300      	movs	r3, #0
   2a1c2:	461a      	mov	r2, r3
   2a1c4:	496f      	ldr	r1, [pc, #444]	@ (2a384 <dwt_ioctl+0xba8>)
   2a1c6:	4630      	mov	r0, r6
   2a1c8:	f7fd fe4a 	bl	27e60 <dwt_write8bitoffsetreg>
   2a1cc:	4643      	mov	r3, r8
   2a1ce:	2200      	movs	r2, #0
   2a1d0:	496b      	ldr	r1, [pc, #428]	@ (2a380 <dwt_ioctl+0xba4>)
   2a1d2:	4630      	mov	r0, r6
   2a1d4:	f7fd fe44 	bl	27e60 <dwt_write8bitoffsetreg>
   2a1d8:	8025      	strh	r5, [r4, #0]
   2a1da:	2500      	movs	r5, #0
   2a1dc:	f001 ba06 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a1e0:	2c00      	cmp	r4, #0
   2a1e2:	f001 825d 	beq.w	2b6a0 <dwt_ioctl+0x1ec4>
   2a1e6:	7923      	ldrb	r3, [r4, #4]
   2a1e8:	6d02      	ldr	r2, [r0, #80]	@ 0x50
   2a1ea:	7a92      	ldrb	r2, [r2, #10]
   2a1ec:	1a9b      	subs	r3, r3, r2
   2a1ee:	ee07 3a90 	vmov	s15, r3
   2a1f2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
   2a1f6:	ed9f 7a65 	vldr	s14, [pc, #404]	@ 2a38c <dwt_ioctl+0xbb0>
   2a1fa:	ee67 7a87 	vmul.f32	s15, s15, s14
   2a1fe:	eeb3 7a06 	vmov.f32	s14, #54	@ 0x41b00000  22.0
   2a202:	ee77 7a87 	vadd.f32	s15, s15, s14
   2a206:	edc4 7a00 	vstr	s15, [r4]
   2a20a:	2500      	movs	r5, #0
   2a20c:	f001 b9ee 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a210:	2c00      	cmp	r4, #0
   2a212:	f001 8247 	beq.w	2b6a4 <dwt_ioctl+0x1ec8>
   2a216:	7923      	ldrb	r3, [r4, #4]
   2a218:	6d02      	ldr	r2, [r0, #80]	@ 0x50
   2a21a:	7a52      	ldrb	r2, [r2, #9]
   2a21c:	1a9b      	subs	r3, r3, r2
   2a21e:	ee07 3a90 	vmov	s15, r3
   2a222:	eef8 7ae7 	vcvt.f32.s32	s15, s15
   2a226:	ed9f 7a5a 	vldr	s14, [pc, #360]	@ 2a390 <dwt_ioctl+0xbb4>
   2a22a:	ee67 7a87 	vmul.f32	s15, s15, s14
   2a22e:	eeb3 7a00 	vmov.f32	s14, #48	@ 0x41800000  16.0
   2a232:	ee67 7a87 	vmul.f32	s15, s15, s14
   2a236:	eddf 6a57 	vldr	s13, [pc, #348]	@ 2a394 <dwt_ioctl+0xbb8>
   2a23a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
   2a23e:	eef0 7a08 	vmov.f32	s15, #8	@ 0x40400000  3.0
   2a242:	ee77 7a27 	vadd.f32	s15, s14, s15
   2a246:	edc4 7a00 	vstr	s15, [r4]
   2a24a:	2500      	movs	r5, #0
   2a24c:	f001 b9ce 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a250:	2c00      	cmp	r4, #0
   2a252:	f001 8229 	beq.w	2b6a8 <dwt_ioctl+0x1ecc>
   2a256:	6824      	ldr	r4, [r4, #0]
   2a258:	2101      	movs	r1, #1
   2a25a:	f7fe f957 	bl	2850c <ull_enable_rf_tx>
   2a25e:	4630      	mov	r0, r6
   2a260:	f7fe f988 	bl	28574 <ull_enable_rftx_blocks>
   2a264:	2101      	movs	r1, #1
   2a266:	4630      	mov	r0, r6
   2a268:	f7fd fbca 	bl	27a00 <ull_force_clocks>
   2a26c:	4621      	mov	r1, r4
   2a26e:	4630      	mov	r0, r6
   2a270:	f7fe fca0 	bl	28bb4 <ull_repeated_frames>
   2a274:	2500      	movs	r5, #0
   2a276:	f001 b9b9 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a27a:	2500      	movs	r5, #0
   2a27c:	9500      	str	r5, [sp, #0]
   2a27e:	23ef      	movs	r3, #239	@ 0xef
   2a280:	462a      	mov	r2, r5
   2a282:	4945      	ldr	r1, [pc, #276]	@ (2a398 <dwt_ioctl+0xbbc>)
   2a284:	f7fe fa7e 	bl	28784 <dwt_modify8bitoffsetreg>
   2a288:	2105      	movs	r1, #5
   2a28a:	4630      	mov	r0, r6
   2a28c:	f7fd fbb8 	bl	27a00 <ull_force_clocks>
   2a290:	2101      	movs	r1, #1
   2a292:	4630      	mov	r0, r6
   2a294:	f7fd fd6c 	bl	27d70 <ull_disable_rf_tx>
   2a298:	4630      	mov	r0, r6
   2a29a:	f7fd fd5f 	bl	27d5c <ull_disable_rftx_blocks>
   2a29e:	f001 b9a5 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a2a2:	2500      	movs	r5, #0
   2a2a4:	9500      	str	r5, [sp, #0]
   2a2a6:	23ef      	movs	r3, #239	@ 0xef
   2a2a8:	462a      	mov	r2, r5
   2a2aa:	493b      	ldr	r1, [pc, #236]	@ (2a398 <dwt_ioctl+0xbbc>)
   2a2ac:	f7fe fa6a 	bl	28784 <dwt_modify8bitoffsetreg>
   2a2b0:	f001 b99c 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a2b4:	2c00      	cmp	r4, #0
   2a2b6:	f001 81f9 	beq.w	2b6ac <dwt_ioctl+0x1ed0>
   2a2ba:	6821      	ldr	r1, [r4, #0]
   2a2bc:	f7fe fc7a 	bl	28bb4 <ull_repeated_frames>
   2a2c0:	2500      	movs	r5, #0
   2a2c2:	f001 b993 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a2c6:	2200      	movs	r2, #0
   2a2c8:	4934      	ldr	r1, [pc, #208]	@ (2a39c <dwt_ioctl+0xbc0>)
   2a2ca:	f7fc ff1c 	bl	27106 <dwt_read16bitoffsetreg>
   2a2ce:	f3c0 050b 	ubfx	r5, r0, #0, #12
   2a2d2:	f410 6f00 	tst.w	r0, #2048	@ 0x800
   2a2d6:	bf18      	it	ne
   2a2d8:	f445 4570 	orrne.w	r5, r5, #61440	@ 0xf000
   2a2dc:	b22d      	sxth	r5, r5
   2a2de:	8025      	strh	r5, [r4, #0]
   2a2e0:	6d33      	ldr	r3, [r6, #80]	@ 0x50
   2a2e2:	f9b3 3012 	ldrsh.w	r3, [r3, #18]
   2a2e6:	1aed      	subs	r5, r5, r3
   2a2e8:	f001 b980 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a2ec:	2c00      	cmp	r4, #0
   2a2ee:	f001 81df 	beq.w	2b6b0 <dwt_ioctl+0x1ed4>
   2a2f2:	f8d4 9004 	ldr.w	r9, [r4, #4]
   2a2f6:	7a23      	ldrb	r3, [r4, #8]
   2a2f8:	f899 2013 	ldrb.w	r2, [r9, #19]
   2a2fc:	2aff      	cmp	r2, #255	@ 0xff
   2a2fe:	f000 80fe 	beq.w	2a4fe <dwt_ioctl+0xd22>
   2a302:	bb93      	cbnz	r3, 2a36a <dwt_ioctl+0xb8e>
   2a304:	f8d9 1000 	ldr.w	r1, [r9]
   2a308:	f7fd feb8 	bl	2807c <ull_update_nonce_GCM>
   2a30c:	f899 300c 	ldrb.w	r3, [r9, #12]
   2a310:	f8b9 200e 	ldrh.w	r2, [r9, #14]
   2a314:	18d1      	adds	r1, r2, r3
   2a316:	f899 2012 	ldrb.w	r2, [r9, #18]
   2a31a:	2a00      	cmp	r2, #0
   2a31c:	d140      	bne.n	2a3a0 <dwt_ioctl+0xbc4>
   2a31e:	f899 0010 	ldrb.w	r0, [r9, #16]
   2a322:	2800      	cmp	r0, #0
   2a324:	bf0b      	itete	eq
   2a326:	227f      	moveq	r2, #127	@ 0x7f
   2a328:	f44f 6280 	movne.w	r2, #1024	@ 0x400
   2a32c:	f44f 15b0 	moveq.w	r5, #1441792	@ 0x160000
   2a330:	f44f 15a0 	movne.w	r5, #1310720	@ 0x140000
   2a334:	f899 0013 	ldrb.w	r0, [r9, #19]
   2a338:	1a12      	subs	r2, r2, r0
   2a33a:	3a02      	subs	r2, #2
   2a33c:	4291      	cmp	r1, r2
   2a33e:	f200 80e7 	bhi.w	2a510 <dwt_ioctl+0xd34>
   2a342:	f8d9 2004 	ldr.w	r2, [r9, #4]
   2a346:	9200      	str	r2, [sp, #0]
   2a348:	2200      	movs	r2, #0
   2a34a:	4629      	mov	r1, r5
   2a34c:	4630      	mov	r0, r6
   2a34e:	f7fd fb2d 	bl	279ac <dwt_writetodevice>
   2a352:	f8b9 300e 	ldrh.w	r3, [r9, #14]
   2a356:	f899 200c 	ldrb.w	r2, [r9, #12]
   2a35a:	f8d9 1008 	ldr.w	r1, [r9, #8]
   2a35e:	9100      	str	r1, [sp, #0]
   2a360:	4629      	mov	r1, r5
   2a362:	4630      	mov	r0, r6
   2a364:	f7fd fb22 	bl	279ac <dwt_writetodevice>
   2a368:	e02b      	b.n	2a3c2 <dwt_ioctl+0xbe6>
   2a36a:	f8b9 200e 	ldrh.w	r2, [r9, #14]
   2a36e:	f8d9 1000 	ldr.w	r1, [r9]
   2a372:	f7fd fe91 	bl	28098 <ull_update_nonce_CCM>
   2a376:	e7c9      	b.n	2a30c <dwt_ioctl+0xb30>
   2a378:	00110004 	.word	0x00110004
   2a37c:	00090014 	.word	0x00090014
   2a380:	00070048 	.word	0x00070048
   2a384:	00070034 	.word	0x00070034
   2a388:	00080004 	.word	0x00080004
   2a38c:	3f866666 	.word	0x3f866666
   2a390:	3ecccccd 	.word	0x3ecccccd
   2a394:	437f0000 	.word	0x437f0000
   2a398:	000f0028 	.word	0x000f0028
   2a39c:	00020008 	.word	0x00020008
   2a3a0:	2a01      	cmp	r2, #1
   2a3a2:	f040 80af 	bne.w	2a504 <dwt_ioctl+0xd28>
   2a3a6:	f899 3011 	ldrb.w	r3, [r9, #17]
   2a3aa:	2b00      	cmp	r3, #0
   2a3ac:	f240 33ff 	movw	r3, #1023	@ 0x3ff
   2a3b0:	bf08      	it	eq
   2a3b2:	237f      	moveq	r3, #127	@ 0x7f
   2a3b4:	f899 2013 	ldrb.w	r2, [r9, #19]
   2a3b8:	1a9b      	subs	r3, r3, r2
   2a3ba:	3b02      	subs	r3, #2
   2a3bc:	4299      	cmp	r1, r3
   2a3be:	f200 80a4 	bhi.w	2a50a <dwt_ioctl+0xd2e>
   2a3c2:	f899 2010 	ldrb.w	r2, [r9, #16]
   2a3c6:	1e53      	subs	r3, r2, #1
   2a3c8:	b2db      	uxtb	r3, r3
   2a3ca:	2b01      	cmp	r3, #1
   2a3cc:	d940      	bls.n	2a450 <dwt_ioctl+0xc74>
   2a3ce:	f899 3011 	ldrb.w	r3, [r9, #17]
   2a3d2:	1e59      	subs	r1, r3, #1
   2a3d4:	b2c9      	uxtb	r1, r1
   2a3d6:	2901      	cmp	r1, #1
   2a3d8:	d947      	bls.n	2a46a <dwt_ioctl+0xc8e>
   2a3da:	2b04      	cmp	r3, #4
   2a3dc:	d04c      	beq.n	2a478 <dwt_ioctl+0xc9c>
   2a3de:	ea42 3343 	orr.w	r3, r2, r3, lsl #13
   2a3e2:	2200      	movs	r2, #0
   2a3e4:	49ba      	ldr	r1, [pc, #744]	@ (2a6d0 <dwt_ioctl+0xef4>)
   2a3e6:	4630      	mov	r0, r6
   2a3e8:	f7fd fb56 	bl	27a98 <dwt_write32bitoffsetreg>
   2a3ec:	f8b9 300e 	ldrh.w	r3, [r9, #14]
   2a3f0:	4ab8      	ldr	r2, [pc, #736]	@ (2a6d4 <dwt_ioctl+0xef8>)
   2a3f2:	ea02 12c3 	and.w	r2, r2, r3, lsl #7
   2a3f6:	f899 300c 	ldrb.w	r3, [r9, #12]
   2a3fa:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
   2a3fe:	4313      	orrs	r3, r2
   2a400:	2200      	movs	r2, #0
   2a402:	49b5      	ldr	r1, [pc, #724]	@ (2a6d8 <dwt_ioctl+0xefc>)
   2a404:	4630      	mov	r0, r6
   2a406:	f7fd fb47 	bl	27a98 <dwt_write32bitoffsetreg>
   2a40a:	2301      	movs	r3, #1
   2a40c:	2200      	movs	r2, #0
   2a40e:	49b3      	ldr	r1, [pc, #716]	@ (2a6dc <dwt_ioctl+0xf00>)
   2a410:	4630      	mov	r0, r6
   2a412:	f7fd fd25 	bl	27e60 <dwt_write8bitoffsetreg>
   2a416:	f8df 82c8 	ldr.w	r8, [pc, #712]	@ 2a6e0 <dwt_ioctl+0xf04>
   2a41a:	2700      	movs	r7, #0
   2a41c:	463a      	mov	r2, r7
   2a41e:	4641      	mov	r1, r8
   2a420:	4630      	mov	r0, r6
   2a422:	f7fc feaf 	bl	27184 <dwt_read8bitoffsetreg>
   2a426:	f010 0f05 	tst.w	r0, #5
   2a42a:	d0f7      	beq.n	2a41c <dwt_ioctl+0xc40>
   2a42c:	4605      	mov	r5, r0
   2a42e:	4603      	mov	r3, r0
   2a430:	2200      	movs	r2, #0
   2a432:	49ab      	ldr	r1, [pc, #684]	@ (2a6e0 <dwt_ioctl+0xf04>)
   2a434:	4630      	mov	r0, r6
   2a436:	f7fd fd13 	bl	27e60 <dwt_write8bitoffsetreg>
   2a43a:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
   2a43e:	f025 0330 	bic.w	r3, r5, #48	@ 0x30
   2a442:	2b01      	cmp	r3, #1
   2a444:	d025      	beq.n	2a492 <dwt_ioctl+0xcb6>
   2a446:	b26b      	sxtb	r3, r5
   2a448:	7023      	strb	r3, [r4, #0]
   2a44a:	2500      	movs	r5, #0
   2a44c:	f001 b8ce 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a450:	6d33      	ldr	r3, [r6, #80]	@ 0x50
   2a452:	7b9b      	ldrb	r3, [r3, #14]
   2a454:	2b03      	cmp	r3, #3
   2a456:	f001 81af 	beq.w	2b7b8 <dwt_ioctl+0x1fdc>
   2a45a:	f899 3011 	ldrb.w	r3, [r9, #17]
   2a45e:	1e5a      	subs	r2, r3, #1
   2a460:	b2d2      	uxtb	r2, r2
   2a462:	2a01      	cmp	r2, #1
   2a464:	d912      	bls.n	2a48c <dwt_ioctl+0xcb0>
   2a466:	2201      	movs	r2, #1
   2a468:	e7b7      	b.n	2a3da <dwt_ioctl+0xbfe>
   2a46a:	6d33      	ldr	r3, [r6, #80]	@ 0x50
   2a46c:	7b9b      	ldrb	r3, [r3, #14]
   2a46e:	2b03      	cmp	r3, #3
   2a470:	bf0c      	ite	eq
   2a472:	2302      	moveq	r3, #2
   2a474:	2301      	movne	r3, #1
   2a476:	e7b2      	b.n	2a3de <dwt_ioctl+0xc02>
   2a478:	f8b9 100e 	ldrh.w	r1, [r9, #14]
   2a47c:	2910      	cmp	r1, #16
   2a47e:	d9ae      	bls.n	2a3de <dwt_ioctl+0xc02>
   2a480:	f06f 0303 	mvn.w	r3, #3
   2a484:	e7e0      	b.n	2a448 <dwt_ioctl+0xc6c>
   2a486:	2202      	movs	r2, #2
   2a488:	4613      	mov	r3, r2
   2a48a:	e7a8      	b.n	2a3de <dwt_ioctl+0xc02>
   2a48c:	2201      	movs	r2, #1
   2a48e:	4613      	mov	r3, r2
   2a490:	e7a5      	b.n	2a3de <dwt_ioctl+0xc02>
   2a492:	f899 3012 	ldrb.w	r3, [r9, #18]
   2a496:	2b01      	cmp	r3, #1
   2a498:	d1d5      	bne.n	2a446 <dwt_ioctl+0xc6a>
   2a49a:	f899 2011 	ldrb.w	r2, [r9, #17]
   2a49e:	1e53      	subs	r3, r2, #1
   2a4a0:	b2db      	uxtb	r3, r3
   2a4a2:	2b01      	cmp	r3, #1
   2a4a4:	d91b      	bls.n	2a4de <dwt_ioctl+0xd02>
   2a4a6:	2a03      	cmp	r2, #3
   2a4a8:	bf0c      	ite	eq
   2a4aa:	f44f 17a0 	moveq.w	r7, #1310720	@ 0x140000
   2a4ae:	f44f 17b0 	movne.w	r7, #1441792	@ 0x160000
   2a4b2:	f8d9 2004 	ldr.w	r2, [r9, #4]
   2a4b6:	b112      	cbz	r2, 2a4be <dwt_ioctl+0xce2>
   2a4b8:	f899 300c 	ldrb.w	r3, [r9, #12]
   2a4bc:	b9c3      	cbnz	r3, 2a4f0 <dwt_ioctl+0xd14>
   2a4be:	f8d9 1008 	ldr.w	r1, [r9, #8]
   2a4c2:	2900      	cmp	r1, #0
   2a4c4:	d0bf      	beq.n	2a446 <dwt_ioctl+0xc6a>
   2a4c6:	f8b9 300e 	ldrh.w	r3, [r9, #14]
   2a4ca:	2b00      	cmp	r3, #0
   2a4cc:	d0bb      	beq.n	2a446 <dwt_ioctl+0xc6a>
   2a4ce:	f899 200c 	ldrb.w	r2, [r9, #12]
   2a4d2:	9100      	str	r1, [sp, #0]
   2a4d4:	4639      	mov	r1, r7
   2a4d6:	4630      	mov	r0, r6
   2a4d8:	f7fc fdf5 	bl	270c6 <dwt_readfromdevice>
   2a4dc:	e7b3      	b.n	2a446 <dwt_ioctl+0xc6a>
   2a4de:	6d33      	ldr	r3, [r6, #80]	@ 0x50
   2a4e0:	7b9b      	ldrb	r3, [r3, #14]
   2a4e2:	2b03      	cmp	r3, #3
   2a4e4:	bf0c      	ite	eq
   2a4e6:	f44f 1798 	moveq.w	r7, #1245184	@ 0x130000
   2a4ea:	f44f 1790 	movne.w	r7, #1179648	@ 0x120000
   2a4ee:	e7e0      	b.n	2a4b2 <dwt_ioctl+0xcd6>
   2a4f0:	9200      	str	r2, [sp, #0]
   2a4f2:	2200      	movs	r2, #0
   2a4f4:	4639      	mov	r1, r7
   2a4f6:	4630      	mov	r0, r6
   2a4f8:	f7fc fde5 	bl	270c6 <dwt_readfromdevice>
   2a4fc:	e7df      	b.n	2a4be <dwt_ioctl+0xce2>
   2a4fe:	f06f 0302 	mvn.w	r3, #2
   2a502:	e7a1      	b.n	2a448 <dwt_ioctl+0xc6c>
   2a504:	f06f 0301 	mvn.w	r3, #1
   2a508:	e79e      	b.n	2a448 <dwt_ioctl+0xc6c>
   2a50a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   2a50e:	e79b      	b.n	2a448 <dwt_ioctl+0xc6c>
   2a510:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   2a514:	e798      	b.n	2a448 <dwt_ioctl+0xc6c>
   2a516:	7a23      	ldrb	r3, [r4, #8]
   2a518:	79e1      	ldrb	r1, [r4, #7]
   2a51a:	79a2      	ldrb	r2, [r4, #6]
   2a51c:	00d2      	lsls	r2, r2, #3
   2a51e:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
   2a522:	4313      	orrs	r3, r2
   2a524:	7962      	ldrb	r2, [r4, #5]
   2a526:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
   2a52a:	7922      	ldrb	r2, [r4, #4]
   2a52c:	ea43 13c2 	orr.w	r3, r3, r2, lsl #7
   2a530:	78e2      	ldrb	r2, [r4, #3]
   2a532:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   2a536:	78a2      	ldrb	r2, [r4, #2]
   2a538:	ea43 23c2 	orr.w	r3, r3, r2, lsl #11
   2a53c:	7862      	ldrb	r2, [r4, #1]
   2a53e:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
   2a542:	7822      	ldrb	r2, [r4, #0]
   2a544:	ea43 3342 	orr.w	r3, r3, r2, lsl #13
   2a548:	b29b      	uxth	r3, r3
   2a54a:	2200      	movs	r2, #0
   2a54c:	4965      	ldr	r1, [pc, #404]	@ (2a6e4 <dwt_ioctl+0xf08>)
   2a54e:	f7fd fa38 	bl	279c2 <dwt_write16bitoffsetreg>
   2a552:	2500      	movs	r5, #0
   2a554:	f001 b84a 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a558:	2c00      	cmp	r4, #0
   2a55a:	f001 80ab 	beq.w	2b6b4 <dwt_ioctl+0x1ed8>
   2a55e:	7863      	ldrb	r3, [r4, #1]
   2a560:	b133      	cbz	r3, 2a570 <dwt_ioctl+0xd94>
   2a562:	085b      	lsrs	r3, r3, #1
   2a564:	3b01      	subs	r3, #1
   2a566:	b2db      	uxtb	r3, r3
   2a568:	7023      	strb	r3, [r4, #0]
   2a56a:	2500      	movs	r5, #0
   2a56c:	f001 b83e 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a570:	2300      	movs	r3, #0
   2a572:	e7f9      	b.n	2a568 <dwt_ioctl+0xd8c>
   2a574:	2200      	movs	r2, #0
   2a576:	495c      	ldr	r1, [pc, #368]	@ (2a6e8 <dwt_ioctl+0xf0c>)
   2a578:	f7fc fdaf 	bl	270da <dwt_read32bitoffsetreg>
   2a57c:	f3c0 030b 	ubfx	r3, r0, #0, #12
   2a580:	8023      	strh	r3, [r4, #0]
   2a582:	f3c0 400b 	ubfx	r0, r0, #16, #12
   2a586:	8060      	strh	r0, [r4, #2]
   2a588:	2200      	movs	r2, #0
   2a58a:	4958      	ldr	r1, [pc, #352]	@ (2a6ec <dwt_ioctl+0xf10>)
   2a58c:	4630      	mov	r0, r6
   2a58e:	f7fc fda4 	bl	270da <dwt_read32bitoffsetreg>
   2a592:	f3c0 030b 	ubfx	r3, r0, #0, #12
   2a596:	80a3      	strh	r3, [r4, #4]
   2a598:	f3c0 400b 	ubfx	r0, r0, #16, #12
   2a59c:	80e0      	strh	r0, [r4, #6]
   2a59e:	2200      	movs	r2, #0
   2a5a0:	4953      	ldr	r1, [pc, #332]	@ (2a6f0 <dwt_ioctl+0xf14>)
   2a5a2:	4630      	mov	r0, r6
   2a5a4:	f7fc fd99 	bl	270da <dwt_read32bitoffsetreg>
   2a5a8:	7220      	strb	r0, [r4, #8]
   2a5aa:	0c00      	lsrs	r0, r0, #16
   2a5ac:	7260      	strb	r0, [r4, #9]
   2a5ae:	2200      	movs	r2, #0
   2a5b0:	4950      	ldr	r1, [pc, #320]	@ (2a6f4 <dwt_ioctl+0xf18>)
   2a5b2:	4630      	mov	r0, r6
   2a5b4:	f7fc fd91 	bl	270da <dwt_read32bitoffsetreg>
   2a5b8:	f3c0 430b 	ubfx	r3, r0, #16, #12
   2a5bc:	81a3      	strh	r3, [r4, #12]
   2a5be:	f3c0 000b 	ubfx	r0, r0, #0, #12
   2a5c2:	8160      	strh	r0, [r4, #10]
   2a5c4:	2200      	movs	r2, #0
   2a5c6:	494c      	ldr	r1, [pc, #304]	@ (2a6f8 <dwt_ioctl+0xf1c>)
   2a5c8:	4630      	mov	r0, r6
   2a5ca:	f7fc fd86 	bl	270da <dwt_read32bitoffsetreg>
   2a5ce:	f3c0 430b 	ubfx	r3, r0, #16, #12
   2a5d2:	f8a4 300f 	strh.w	r3, [r4, #15]
   2a5d6:	73a0      	strb	r0, [r4, #14]
   2a5d8:	2200      	movs	r2, #0
   2a5da:	4948      	ldr	r1, [pc, #288]	@ (2a6fc <dwt_ioctl+0xf20>)
   2a5dc:	4630      	mov	r0, r6
   2a5de:	f7fc fd7c 	bl	270da <dwt_read32bitoffsetreg>
   2a5e2:	7460      	strb	r0, [r4, #17]
   2a5e4:	0c00      	lsrs	r0, r0, #16
   2a5e6:	74a0      	strb	r0, [r4, #18]
   2a5e8:	2200      	movs	r2, #0
   2a5ea:	4945      	ldr	r1, [pc, #276]	@ (2a700 <dwt_ioctl+0xf24>)
   2a5ec:	4630      	mov	r0, r6
   2a5ee:	f7fc fd74 	bl	270da <dwt_read32bitoffsetreg>
   2a5f2:	f3c0 030b 	ubfx	r3, r0, #0, #12
   2a5f6:	f8a4 3013 	strh.w	r3, [r4, #19]
   2a5fa:	f3c0 400b 	ubfx	r0, r0, #16, #12
   2a5fe:	f8a4 0015 	strh.w	r0, [r4, #21]
   2a602:	2200      	movs	r2, #0
   2a604:	493f      	ldr	r1, [pc, #252]	@ (2a704 <dwt_ioctl+0xf28>)
   2a606:	4630      	mov	r0, r6
   2a608:	f7fc fdbc 	bl	27184 <dwt_read8bitoffsetreg>
   2a60c:	75e0      	strb	r0, [r4, #23]
   2a60e:	2500      	movs	r5, #0
   2a610:	f000 bfec 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a614:	4611      	mov	r1, r2
   2a616:	f7fd fc9b 	bl	27f50 <ull_configeventcounters>
   2a61a:	2500      	movs	r5, #0
   2a61c:	f000 bfe6 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a620:	2c00      	cmp	r4, #0
   2a622:	f001 8049 	beq.w	2b6b8 <dwt_ioctl+0x1edc>
   2a626:	8823      	ldrh	r3, [r4, #0]
   2a628:	2200      	movs	r2, #0
   2a62a:	4937      	ldr	r1, [pc, #220]	@ (2a708 <dwt_ioctl+0xf2c>)
   2a62c:	f7fd f9c9 	bl	279c2 <dwt_write16bitoffsetreg>
   2a630:	2500      	movs	r5, #0
   2a632:	f000 bfdb 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a636:	2c00      	cmp	r4, #0
   2a638:	f001 8040 	beq.w	2b6bc <dwt_ioctl+0x1ee0>
   2a63c:	6825      	ldr	r5, [r4, #0]
   2a63e:	b935      	cbnz	r5, 2a64e <dwt_ioctl+0xe72>
   2a640:	2300      	movs	r3, #0
   2a642:	461a      	mov	r2, r3
   2a644:	4931      	ldr	r1, [pc, #196]	@ (2a70c <dwt_ioctl+0xf30>)
   2a646:	f7fd f9bc 	bl	279c2 <dwt_write16bitoffsetreg>
   2a64a:	f000 bfcf 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a64e:	7962      	ldrb	r2, [r4, #5]
   2a650:	7923      	ldrb	r3, [r4, #4]
   2a652:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   2a656:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
   2a65a:	2200      	movs	r2, #0
   2a65c:	492b      	ldr	r1, [pc, #172]	@ (2a70c <dwt_ioctl+0xf30>)
   2a65e:	f7fd f9b0 	bl	279c2 <dwt_write16bitoffsetreg>
   2a662:	2500      	movs	r5, #0
   2a664:	f000 bfc2 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a668:	2c00      	cmp	r4, #0
   2a66a:	f001 8029 	beq.w	2b6c0 <dwt_ioctl+0x1ee4>
   2a66e:	6823      	ldr	r3, [r4, #0]
   2a670:	b94b      	cbnz	r3, 2a686 <dwt_ioctl+0xeaa>
   2a672:	2500      	movs	r5, #0
   2a674:	9500      	str	r5, [sp, #0]
   2a676:	f64f 53ff 	movw	r3, #65023	@ 0xfdff
   2a67a:	462a      	mov	r2, r5
   2a67c:	2110      	movs	r1, #16
   2a67e:	f7fe fc11 	bl	28ea4 <dwt_modify16bitoffsetreg>
   2a682:	f000 bfb3 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a686:	2200      	movs	r2, #0
   2a688:	2134      	movs	r1, #52	@ 0x34
   2a68a:	f7fd fa05 	bl	27a98 <dwt_write32bitoffsetreg>
   2a68e:	f44f 7300 	mov.w	r3, #512	@ 0x200
   2a692:	9300      	str	r3, [sp, #0]
   2a694:	f64f 73ff 	movw	r3, #65535	@ 0xffff
   2a698:	2200      	movs	r2, #0
   2a69a:	2110      	movs	r1, #16
   2a69c:	4630      	mov	r0, r6
   2a69e:	f7fe fc01 	bl	28ea4 <dwt_modify16bitoffsetreg>
   2a6a2:	2500      	movs	r5, #0
   2a6a4:	f000 bfa2 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a6a8:	2c00      	cmp	r4, #0
   2a6aa:	f001 800b 	beq.w	2b6c4 <dwt_ioctl+0x1ee8>
   2a6ae:	8861      	ldrh	r1, [r4, #2]
   2a6b0:	f7fd fc62 	bl	27f78 <ull_aon_read>
   2a6b4:	7020      	strb	r0, [r4, #0]
   2a6b6:	2500      	movs	r5, #0
   2a6b8:	f000 bf98 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a6bc:	2c00      	cmp	r4, #0
   2a6be:	f001 8003 	beq.w	2b6c8 <dwt_ioctl+0x1eec>
   2a6c2:	78a2      	ldrb	r2, [r4, #2]
   2a6c4:	8821      	ldrh	r1, [r4, #0]
   2a6c6:	f7fd fc77 	bl	27fb8 <ull_aon_write>
   2a6ca:	2500      	movs	r5, #0
   2a6cc:	f000 bf8e 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a6d0:	00010044 	.word	0x00010044
   2a6d4:	0001ff80 	.word	0x0001ff80
   2a6d8:	00010048 	.word	0x00010048
   2a6dc:	0001004c 	.word	0x0001004c
   2a6e0:	00010050 	.word	0x00010050
   2a6e4:	00010030 	.word	0x00010030
   2a6e8:	000f0004 	.word	0x000f0004
   2a6ec:	000f0008 	.word	0x000f0008
   2a6f0:	000f000c 	.word	0x000f000c
   2a6f4:	000f0010 	.word	0x000f0010
   2a6f8:	000f0014 	.word	0x000f0014
   2a6fc:	000f0018 	.word	0x000f0018
   2a700:	000f001c 	.word	0x000f001c
   2a704:	000f0020 	.word	0x000f0020
   2a708:	00060004 	.word	0x00060004
   2a70c:	0011001c 	.word	0x0011001c
   2a710:	4bd5      	ldr	r3, [pc, #852]	@ (2aa68 <dwt_ioctl+0x128c>)
   2a712:	4ad6      	ldr	r2, [pc, #856]	@ (2aa6c <dwt_ioctl+0x1290>)
   2a714:	2d01      	cmp	r5, #1
   2a716:	bf18      	it	ne
   2a718:	4613      	movne	r3, r2
   2a71a:	2d01      	cmp	r5, #1
   2a71c:	49d4      	ldr	r1, [pc, #848]	@ (2aa70 <dwt_ioctl+0x1294>)
   2a71e:	bf18      	it	ne
   2a720:	f04f 110c 	movne.w	r1, #786444	@ 0xc000c
   2a724:	6d02      	ldr	r2, [r0, #80]	@ 0x50
   2a726:	7b92      	ldrb	r2, [r2, #14]
   2a728:	2a01      	cmp	r2, #1
   2a72a:	d012      	beq.n	2a752 <dwt_ioctl+0xf76>
   2a72c:	2a03      	cmp	r2, #3
   2a72e:	d117      	bne.n	2a760 <dwt_ioctl+0xf84>
   2a730:	f5a2 12c0 	sub.w	r2, r2, #1572864	@ 0x180000
   2a734:	3a01      	subs	r2, #1
   2a736:	441a      	add	r2, r3
   2a738:	f44f 11f0 	mov.w	r1, #1966080	@ 0x1e0000
   2a73c:	f7fc fce3 	bl	27106 <dwt_read16bitoffsetreg>
   2a740:	09c0      	lsrs	r0, r0, #7
   2a742:	8020      	strh	r0, [r4, #0]
   2a744:	8825      	ldrh	r5, [r4, #0]
   2a746:	3500      	adds	r5, #0
   2a748:	bf18      	it	ne
   2a74a:	2501      	movne	r5, #1
   2a74c:	426d      	negs	r5, r5
   2a74e:	f000 bf4d 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a752:	2202      	movs	r2, #2
   2a754:	4619      	mov	r1, r3
   2a756:	f7fc fcd6 	bl	27106 <dwt_read16bitoffsetreg>
   2a75a:	09c0      	lsrs	r0, r0, #7
   2a75c:	8020      	strh	r0, [r4, #0]
   2a75e:	e7f1      	b.n	2a744 <dwt_ioctl+0xf68>
   2a760:	2202      	movs	r2, #2
   2a762:	f7fc fcd0 	bl	27106 <dwt_read16bitoffsetreg>
   2a766:	09c0      	lsrs	r0, r0, #7
   2a768:	8020      	strh	r0, [r4, #0]
   2a76a:	e7eb      	b.n	2a744 <dwt_ioctl+0xf68>
   2a76c:	2c00      	cmp	r4, #0
   2a76e:	f000 87ad 	beq.w	2b6cc <dwt_ioctl+0x1ef0>
   2a772:	7821      	ldrb	r1, [r4, #0]
   2a774:	f7fe fbd4 	bl	28f20 <ull_setleds>
   2a778:	2500      	movs	r5, #0
   2a77a:	f000 bf37 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a77e:	4611      	mov	r1, r2
   2a780:	f7fe fa30 	bl	28be4 <ull_setdwstate>
   2a784:	2500      	movs	r5, #0
   2a786:	f000 bf31 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a78a:	9400      	str	r4, [sp, #0]
   2a78c:	2304      	movs	r3, #4
   2a78e:	2200      	movs	r2, #0
   2a790:	211c      	movs	r1, #28
   2a792:	f7fc fc98 	bl	270c6 <dwt_readfromdevice>
   2a796:	2500      	movs	r5, #0
   2a798:	f000 bf28 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a79c:	2c00      	cmp	r4, #0
   2a79e:	f000 8797 	beq.w	2b6d0 <dwt_ioctl+0x1ef4>
   2a7a2:	2202      	movs	r2, #2
   2a7a4:	2144      	movs	r1, #68	@ 0x44
   2a7a6:	f7fc fcae 	bl	27106 <dwt_read16bitoffsetreg>
   2a7aa:	f3c0 2000 	ubfx	r0, r0, #8, #1
   2a7ae:	7020      	strb	r0, [r4, #0]
   2a7b0:	2500      	movs	r5, #0
   2a7b2:	f000 bf1b 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a7b6:	2c00      	cmp	r4, #0
   2a7b8:	f000 878c 	beq.w	2b6d4 <dwt_ioctl+0x1ef8>
   2a7bc:	2200      	movs	r2, #0
   2a7be:	2144      	movs	r1, #68	@ 0x44
   2a7c0:	f7fc fce0 	bl	27184 <dwt_read8bitoffsetreg>
   2a7c4:	f000 0001 	and.w	r0, r0, #1
   2a7c8:	7020      	strb	r0, [r4, #0]
   2a7ca:	2500      	movs	r5, #0
   2a7cc:	f000 bf0e 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a7d0:	2c00      	cmp	r4, #0
   2a7d2:	f000 8781 	beq.w	2b6d8 <dwt_ioctl+0x1efc>
   2a7d6:	8862      	ldrh	r2, [r4, #2]
   2a7d8:	8821      	ldrh	r1, [r4, #0]
   2a7da:	f7fe fa61 	bl	28ca0 <ull_configureframefilter>
   2a7de:	2500      	movs	r5, #0
   2a7e0:	f000 bf04 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a7e4:	9400      	str	r4, [sp, #0]
   2a7e6:	2308      	movs	r3, #8
   2a7e8:	2200      	movs	r2, #0
   2a7ea:	2104      	movs	r1, #4
   2a7ec:	f7fd f8de 	bl	279ac <dwt_writetodevice>
   2a7f0:	2500      	movs	r5, #0
   2a7f2:	f000 befb 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a7f6:	9400      	str	r4, [sp, #0]
   2a7f8:	2308      	movs	r3, #8
   2a7fa:	2200      	movs	r2, #0
   2a7fc:	2104      	movs	r1, #4
   2a7fe:	f7fc fc62 	bl	270c6 <dwt_readfromdevice>
   2a802:	2500      	movs	r5, #0
   2a804:	f000 bef2 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a808:	2c00      	cmp	r4, #0
   2a80a:	f000 8767 	beq.w	2b6dc <dwt_ioctl+0x1f00>
   2a80e:	8823      	ldrh	r3, [r4, #0]
   2a810:	2202      	movs	r2, #2
   2a812:	210c      	movs	r1, #12
   2a814:	f7fd f8d5 	bl	279c2 <dwt_write16bitoffsetreg>
   2a818:	2500      	movs	r5, #0
   2a81a:	f000 bee7 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a81e:	2c00      	cmp	r4, #0
   2a820:	f000 875e 	beq.w	2b6e0 <dwt_ioctl+0x1f04>
   2a824:	8823      	ldrh	r3, [r4, #0]
   2a826:	2200      	movs	r2, #0
   2a828:	210c      	movs	r1, #12
   2a82a:	f7fd f8ca 	bl	279c2 <dwt_write16bitoffsetreg>
   2a82e:	2500      	movs	r5, #0
   2a830:	f000 bedc 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a834:	4621      	mov	r1, r4
   2a836:	f7fd f897 	bl	27968 <ull_readrxtimestamp>
   2a83a:	2500      	movs	r5, #0
   2a83c:	f000 bed6 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a840:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   2a842:	7b9b      	ldrb	r3, [r3, #14]
   2a844:	2b01      	cmp	r3, #1
   2a846:	d00b      	beq.n	2a860 <dwt_ioctl+0x1084>
   2a848:	2b03      	cmp	r3, #3
   2a84a:	d112      	bne.n	2a872 <dwt_ioctl+0x1096>
   2a84c:	9400      	str	r4, [sp, #0]
   2a84e:	2305      	movs	r3, #5
   2a850:	2220      	movs	r2, #32
   2a852:	f44f 11f0 	mov.w	r1, #1966080	@ 0x1e0000
   2a856:	f7fc fc36 	bl	270c6 <dwt_readfromdevice>
   2a85a:	2500      	movs	r5, #0
   2a85c:	f000 bec6 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a860:	9400      	str	r4, [sp, #0]
   2a862:	2305      	movs	r3, #5
   2a864:	2200      	movs	r2, #0
   2a866:	4983      	ldr	r1, [pc, #524]	@ (2aa74 <dwt_ioctl+0x1298>)
   2a868:	f7fc fc2d 	bl	270c6 <dwt_readfromdevice>
   2a86c:	2500      	movs	r5, #0
   2a86e:	f000 bebd 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a872:	9400      	str	r4, [sp, #0]
   2a874:	2305      	movs	r3, #5
   2a876:	2200      	movs	r2, #0
   2a878:	f44f 2140 	mov.w	r1, #786432	@ 0xc0000
   2a87c:	f7fc fc23 	bl	270c6 <dwt_readfromdevice>
   2a880:	2500      	movs	r5, #0
   2a882:	f000 beb3 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a886:	2500      	movs	r5, #0
   2a888:	f804 5b01 	strb.w	r5, [r4], #1
   2a88c:	9400      	str	r4, [sp, #0]
   2a88e:	2304      	movs	r3, #4
   2a890:	462a      	mov	r2, r5
   2a892:	216c      	movs	r1, #108	@ 0x6c
   2a894:	f7fc fc17 	bl	270c6 <dwt_readfromdevice>
   2a898:	f000 bea8 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a89c:	2c00      	cmp	r4, #0
   2a89e:	f000 8721 	beq.w	2b6e4 <dwt_ioctl+0x1f08>
   2a8a2:	2201      	movs	r2, #1
   2a8a4:	2160      	movs	r1, #96	@ 0x60
   2a8a6:	f7fc fc18 	bl	270da <dwt_read32bitoffsetreg>
   2a8aa:	6020      	str	r0, [r4, #0]
   2a8ac:	2500      	movs	r5, #0
   2a8ae:	f000 be9d 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a8b2:	2c00      	cmp	r4, #0
   2a8b4:	f000 8718 	beq.w	2b6e8 <dwt_ioctl+0x1f0c>
   2a8b8:	2200      	movs	r2, #0
   2a8ba:	2160      	movs	r1, #96	@ 0x60
   2a8bc:	f7fc fc0d 	bl	270da <dwt_read32bitoffsetreg>
   2a8c0:	6020      	str	r0, [r4, #0]
   2a8c2:	2500      	movs	r5, #0
   2a8c4:	f000 be92 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a8c8:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   2a8ca:	7b9b      	ldrb	r3, [r3, #14]
   2a8cc:	2b01      	cmp	r3, #1
   2a8ce:	d00b      	beq.n	2a8e8 <dwt_ioctl+0x110c>
   2a8d0:	2b03      	cmp	r3, #3
   2a8d2:	d112      	bne.n	2a8fa <dwt_ioctl+0x111e>
   2a8d4:	9400      	str	r4, [sp, #0]
   2a8d6:	2305      	movs	r3, #5
   2a8d8:	2228      	movs	r2, #40	@ 0x28
   2a8da:	f44f 11f0 	mov.w	r1, #1966080	@ 0x1e0000
   2a8de:	f7fc fbf2 	bl	270c6 <dwt_readfromdevice>
   2a8e2:	2500      	movs	r5, #0
   2a8e4:	f000 be82 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a8e8:	9400      	str	r4, [sp, #0]
   2a8ea:	2305      	movs	r3, #5
   2a8ec:	2200      	movs	r2, #0
   2a8ee:	4962      	ldr	r1, [pc, #392]	@ (2aa78 <dwt_ioctl+0x129c>)
   2a8f0:	f7fc fbe9 	bl	270c6 <dwt_readfromdevice>
   2a8f4:	2500      	movs	r5, #0
   2a8f6:	f000 be79 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a8fa:	9400      	str	r4, [sp, #0]
   2a8fc:	2305      	movs	r3, #5
   2a8fe:	2200      	movs	r2, #0
   2a900:	495e      	ldr	r1, [pc, #376]	@ (2aa7c <dwt_ioctl+0x12a0>)
   2a902:	f7fc fbe0 	bl	270c6 <dwt_readfromdevice>
   2a906:	2500      	movs	r5, #0
   2a908:	f000 be70 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a90c:	2c00      	cmp	r4, #0
   2a90e:	f000 86ed 	beq.w	2b6ec <dwt_ioctl+0x1f10>
   2a912:	2200      	movs	r2, #0
   2a914:	211c      	movs	r1, #28
   2a916:	f7fc fbe0 	bl	270da <dwt_read32bitoffsetreg>
   2a91a:	6020      	str	r0, [r4, #0]
   2a91c:	2500      	movs	r5, #0
   2a91e:	f000 be65 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a922:	2c00      	cmp	r4, #0
   2a924:	f000 86e4 	beq.w	2b6f0 <dwt_ioctl+0x1f14>
   2a928:	8825      	ldrh	r5, [r4, #0]
   2a92a:	6867      	ldr	r7, [r4, #4]
   2a92c:	7a23      	ldrb	r3, [r4, #8]
   2a92e:	2b00      	cmp	r3, #0
   2a930:	f000 86e0 	beq.w	2b6f4 <dwt_ioctl+0x1f18>
   2a934:	463c      	mov	r4, r7
   2a936:	eb07 0783 	add.w	r7, r7, r3, lsl #2
   2a93a:	4629      	mov	r1, r5
   2a93c:	4630      	mov	r0, r6
   2a93e:	f7fd f889 	bl	27a54 <_dwt_otpread>
   2a942:	f844 0b04 	str.w	r0, [r4], #4
   2a946:	3501      	adds	r5, #1
   2a948:	b2ad      	uxth	r5, r5
   2a94a:	42bc      	cmp	r4, r7
   2a94c:	d1f5      	bne.n	2a93a <dwt_ioctl+0x115e>
   2a94e:	2500      	movs	r5, #0
   2a950:	f000 be4c 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a954:	2c00      	cmp	r4, #0
   2a956:	f000 86cf 	beq.w	2b6f8 <dwt_ioctl+0x1f1c>
   2a95a:	7821      	ldrb	r1, [r4, #0]
   2a95c:	f7fd fb86 	bl	2806c <ull_setplenfine>
   2a960:	2500      	movs	r5, #0
   2a962:	f000 be43 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a966:	f7fe f9bf 	bl	28ce8 <ull_run_pgfcal>
   2a96a:	4605      	mov	r5, r0
   2a96c:	f000 be3e 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a970:	4611      	mov	r1, r2
   2a972:	f7fe fb23 	bl	28fbc <ull_pgf_cal>
   2a976:	4605      	mov	r5, r0
   2a978:	f000 be38 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a97c:	2c00      	cmp	r4, #0
   2a97e:	f000 86bd 	beq.w	2b6fc <dwt_ioctl+0x1f20>
   2a982:	78a5      	ldrb	r5, [r4, #2]
   2a984:	2101      	movs	r1, #1
   2a986:	f7fd f83b 	bl	27a00 <ull_force_clocks>
   2a98a:	2100      	movs	r1, #0
   2a98c:	4630      	mov	r0, r6
   2a98e:	f7fd fdbd 	bl	2850c <ull_enable_rf_tx>
   2a992:	4630      	mov	r0, r6
   2a994:	f7fd fdee 	bl	28574 <ull_enable_rftx_blocks>
   2a998:	f005 033f 	and.w	r3, r5, #63	@ 0x3f
   2a99c:	2200      	movs	r2, #0
   2a99e:	4938      	ldr	r1, [pc, #224]	@ (2aa80 <dwt_ioctl+0x12a4>)
   2a9a0:	4630      	mov	r0, r6
   2a9a2:	f7fd fa5d 	bl	27e60 <dwt_write8bitoffsetreg>
   2a9a6:	2301      	movs	r3, #1
   2a9a8:	9300      	str	r3, [sp, #0]
   2a9aa:	23ff      	movs	r3, #255	@ 0xff
   2a9ac:	2200      	movs	r2, #0
   2a9ae:	4935      	ldr	r1, [pc, #212]	@ (2aa84 <dwt_ioctl+0x12a8>)
   2a9b0:	4630      	mov	r0, r6
   2a9b2:	f7fd fee7 	bl	28784 <dwt_modify8bitoffsetreg>
   2a9b6:	4f33      	ldr	r7, [pc, #204]	@ (2aa84 <dwt_ioctl+0x12a8>)
   2a9b8:	2500      	movs	r5, #0
   2a9ba:	462a      	mov	r2, r5
   2a9bc:	4639      	mov	r1, r7
   2a9be:	4630      	mov	r0, r6
   2a9c0:	f7fc fbe0 	bl	27184 <dwt_read8bitoffsetreg>
   2a9c4:	f010 0f01 	tst.w	r0, #1
   2a9c8:	d1f7      	bne.n	2a9ba <dwt_ioctl+0x11de>
   2a9ca:	2200      	movs	r2, #0
   2a9cc:	492e      	ldr	r1, [pc, #184]	@ (2aa88 <dwt_ioctl+0x12ac>)
   2a9ce:	4630      	mov	r0, r6
   2a9d0:	f7fc fb99 	bl	27106 <dwt_read16bitoffsetreg>
   2a9d4:	4605      	mov	r5, r0
   2a9d6:	4630      	mov	r0, r6
   2a9d8:	f7fd f9c0 	bl	27d5c <ull_disable_rftx_blocks>
   2a9dc:	2100      	movs	r1, #0
   2a9de:	4630      	mov	r0, r6
   2a9e0:	f7fd f9c6 	bl	27d70 <ull_disable_rf_tx>
   2a9e4:	2105      	movs	r1, #5
   2a9e6:	4630      	mov	r0, r6
   2a9e8:	f7fd f80a 	bl	27a00 <ull_force_clocks>
   2a9ec:	f3c5 050b 	ubfx	r5, r5, #0, #12
   2a9f0:	8025      	strh	r5, [r4, #0]
   2a9f2:	2500      	movs	r5, #0
   2a9f4:	f000 bdfa 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2a9f8:	2102      	movs	r1, #2
   2a9fa:	f7fe f8f3 	bl	28be4 <ull_setdwstate>
   2a9fe:	2101      	movs	r1, #1
   2aa00:	4630      	mov	r0, r6
   2aa02:	f7fe f8ef 	bl	28be4 <ull_setdwstate>
   2aa06:	2432      	movs	r4, #50	@ 0x32
   2aa08:	f04f 0814 	mov.w	r8, #20
   2aa0c:	2700      	movs	r7, #0
   2aa0e:	2544      	movs	r5, #68	@ 0x44
   2aa10:	4640      	mov	r0, r8
   2aa12:	f7f0 fa10 	bl	1ae36 <deca_usleep>
   2aa16:	463a      	mov	r2, r7
   2aa18:	4629      	mov	r1, r5
   2aa1a:	4630      	mov	r0, r6
   2aa1c:	f7fc fbb2 	bl	27184 <dwt_read8bitoffsetreg>
   2aa20:	f010 0f02 	tst.w	r0, #2
   2aa24:	d105      	bne.n	2aa32 <dwt_ioctl+0x1256>
   2aa26:	1e63      	subs	r3, r4, #1
   2aa28:	f013 04ff 	ands.w	r4, r3, #255	@ 0xff
   2aa2c:	d1f0      	bne.n	2aa10 <dwt_ioctl+0x1234>
   2aa2e:	2501      	movs	r5, #1
   2aa30:	e000      	b.n	2aa34 <dwt_ioctl+0x1258>
   2aa32:	2500      	movs	r5, #0
   2aa34:	426d      	negs	r5, r5
   2aa36:	f000 bdd9 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2aa3a:	2c00      	cmp	r4, #0
   2aa3c:	f000 8660 	beq.w	2b700 <dwt_ioctl+0x1f24>
   2aa40:	7823      	ldrb	r3, [r4, #0]
   2aa42:	031b      	lsls	r3, r3, #12
   2aa44:	f403 43e0 	and.w	r3, r3, #28672	@ 0x7000
   2aa48:	7862      	ldrb	r2, [r4, #1]
   2aa4a:	2a01      	cmp	r2, #1
   2aa4c:	bf08      	it	eq
   2aa4e:	f443 7380 	orreq.w	r3, r3, #256	@ 0x100
   2aa52:	9300      	str	r3, [sp, #0]
   2aa54:	f46f 43e2 	mvn.w	r3, #28928	@ 0x7100
   2aa58:	2200      	movs	r2, #0
   2aa5a:	490c      	ldr	r1, [pc, #48]	@ (2aa8c <dwt_ioctl+0x12b0>)
   2aa5c:	f7fd fd22 	bl	284a4 <dwt_modify32bitoffsetreg>
   2aa60:	2500      	movs	r5, #0
   2aa62:	f000 bdc3 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2aa66:	bf00      	nop
   2aa68:	00180034 	.word	0x00180034
   2aa6c:	0018002c 	.word	0x0018002c
   2aa70:	000c0014 	.word	0x000c0014
   2aa74:	00180020 	.word	0x00180020
   2aa78:	00180028 	.word	0x00180028
   2aa7c:	000c0008 	.word	0x000c0008
   2aa80:	0007001c 	.word	0x0007001c
   2aa84:	00080010 	.word	0x00080010
   2aa88:	00080014 	.word	0x00080014
   2aa8c:	00070014 	.word	0x00070014
   2aa90:	2c00      	cmp	r4, #0
   2aa92:	f000 8637 	beq.w	2b704 <dwt_ioctl+0x1f28>
   2aa96:	6862      	ldr	r2, [r4, #4]
   2aa98:	6821      	ldr	r1, [r4, #0]
   2aa9a:	f7fd fe35 	bl	28708 <ull_setgpiomode>
   2aa9e:	2500      	movs	r5, #0
   2aaa0:	f000 bda4 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2aaa4:	2c00      	cmp	r4, #0
   2aaa6:	f000 862f 	beq.w	2b708 <dwt_ioctl+0x1f2c>
   2aaaa:	8823      	ldrh	r3, [r4, #0]
   2aaac:	2200      	movs	r2, #0
   2aaae:	49c4      	ldr	r1, [pc, #784]	@ (2adc0 <dwt_ioctl+0x15e4>)
   2aab0:	f7fc ff87 	bl	279c2 <dwt_write16bitoffsetreg>
   2aab4:	2500      	movs	r5, #0
   2aab6:	f000 bd99 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2aaba:	2c00      	cmp	r4, #0
   2aabc:	f000 8626 	beq.w	2b70c <dwt_ioctl+0x1f30>
   2aac0:	6862      	ldr	r2, [r4, #4]
   2aac2:	8821      	ldrh	r1, [r4, #0]
   2aac4:	f7fe faaa 	bl	2901c <ull_setgpiovalue>
   2aac8:	2500      	movs	r5, #0
   2aaca:	f000 bd8f 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2aace:	2c00      	cmp	r4, #0
   2aad0:	f000 861e 	beq.w	2b710 <dwt_ioctl+0x1f34>
   2aad4:	7865      	ldrb	r5, [r4, #1]
   2aad6:	7823      	ldrb	r3, [r4, #0]
   2aad8:	b18b      	cbz	r3, 2aafe <dwt_ioctl+0x1322>
   2aada:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   2aadc:	2200      	movs	r2, #0
   2aade:	739a      	strb	r2, [r3, #14]
   2aae0:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   2aae4:	2208      	movs	r2, #8
   2aae6:	b37d      	cbz	r5, 2ab48 <dwt_ioctl+0x136c>
   2aae8:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
   2aaec:	9200      	str	r2, [sp, #0]
   2aaee:	2200      	movs	r2, #0
   2aaf0:	2110      	movs	r1, #16
   2aaf2:	4630      	mov	r0, r6
   2aaf4:	f7fd fcd6 	bl	284a4 <dwt_modify32bitoffsetreg>
   2aaf8:	2500      	movs	r5, #0
   2aafa:	f000 bd77 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2aafe:	6d03      	ldr	r3, [r0, #80]	@ 0x50
   2ab00:	2201      	movs	r2, #1
   2ab02:	739a      	strb	r2, [r3, #14]
   2ab04:	2318      	movs	r3, #24
   2ab06:	2200      	movs	r2, #0
   2ab08:	49ae      	ldr	r1, [pc, #696]	@ (2adc4 <dwt_ioctl+0x15e8>)
   2ab0a:	f7fc ffc5 	bl	27a98 <dwt_write32bitoffsetreg>
   2ab0e:	23e8      	movs	r3, #232	@ 0xe8
   2ab10:	2200      	movs	r2, #0
   2ab12:	49ad      	ldr	r1, [pc, #692]	@ (2adc8 <dwt_ioctl+0x15ec>)
   2ab14:	4630      	mov	r0, r6
   2ab16:	f7fc ffbf 	bl	27a98 <dwt_write32bitoffsetreg>
   2ab1a:	6d33      	ldr	r3, [r6, #80]	@ 0x50
   2ab1c:	7d9b      	ldrb	r3, [r3, #22]
   2ab1e:	085b      	lsrs	r3, r3, #1
   2ab20:	d003      	beq.n	2ab2a <dwt_ioctl+0x134e>
   2ab22:	f06f 0308 	mvn.w	r3, #8
   2ab26:	2200      	movs	r2, #0
   2ab28:	e7dd      	b.n	2aae6 <dwt_ioctl+0x130a>
   2ab2a:	2301      	movs	r3, #1
   2ab2c:	2200      	movs	r2, #0
   2ab2e:	49a7      	ldr	r1, [pc, #668]	@ (2adcc <dwt_ioctl+0x15f0>)
   2ab30:	4630      	mov	r0, r6
   2ab32:	f7fd f995 	bl	27e60 <dwt_write8bitoffsetreg>
   2ab36:	6d32      	ldr	r2, [r6, #80]	@ 0x50
   2ab38:	7d93      	ldrb	r3, [r2, #22]
   2ab3a:	f043 0302 	orr.w	r3, r3, #2
   2ab3e:	7593      	strb	r3, [r2, #22]
   2ab40:	f06f 0308 	mvn.w	r3, #8
   2ab44:	2200      	movs	r2, #0
   2ab46:	e7ce      	b.n	2aae6 <dwt_ioctl+0x130a>
   2ab48:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
   2ab4c:	e7ce      	b.n	2aaec <dwt_ioctl+0x1310>
   2ab4e:	2c00      	cmp	r4, #0
   2ab50:	f000 85e0 	beq.w	2b714 <dwt_ioctl+0x1f38>
   2ab54:	6823      	ldr	r3, [r4, #0]
   2ab56:	2200      	movs	r2, #0
   2ab58:	2130      	movs	r1, #48	@ 0x30
   2ab5a:	f7fc ff9d 	bl	27a98 <dwt_write32bitoffsetreg>
   2ab5e:	2500      	movs	r5, #0
   2ab60:	f000 bd44 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2ab64:	2c00      	cmp	r4, #0
   2ab66:	f000 85d7 	beq.w	2b718 <dwt_ioctl+0x1f3c>
   2ab6a:	2200      	movs	r2, #0
   2ab6c:	4629      	mov	r1, r5
   2ab6e:	f7fc fab4 	bl	270da <dwt_read32bitoffsetreg>
   2ab72:	6020      	str	r0, [r4, #0]
   2ab74:	2500      	movs	r5, #0
   2ab76:	f000 bd39 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2ab7a:	4623      	mov	r3, r4
   2ab7c:	2200      	movs	r2, #0
   2ab7e:	4629      	mov	r1, r5
   2ab80:	f7fc ff8a 	bl	27a98 <dwt_write32bitoffsetreg>
   2ab84:	2500      	movs	r5, #0
   2ab86:	f000 bd31 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2ab8a:	2c00      	cmp	r4, #0
   2ab8c:	f000 85c6 	beq.w	2b71c <dwt_ioctl+0x1f40>
   2ab90:	2203      	movs	r2, #3
   2ab92:	498f      	ldr	r1, [pc, #572]	@ (2add0 <dwt_ioctl+0x15f4>)
   2ab94:	f7fc faf6 	bl	27184 <dwt_read8bitoffsetreg>
   2ab98:	f3c0 1002 	ubfx	r0, r0, #4, #3
   2ab9c:	7020      	strb	r0, [r4, #0]
   2ab9e:	2500      	movs	r5, #0
   2aba0:	f000 bd24 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2aba4:	2c00      	cmp	r4, #0
   2aba6:	f000 85bb 	beq.w	2b720 <dwt_ioctl+0x1f44>
   2abaa:	6823      	ldr	r3, [r4, #0]
   2abac:	2200      	movs	r2, #0
   2abae:	2144      	movs	r1, #68	@ 0x44
   2abb0:	f7fc ff72 	bl	27a98 <dwt_write32bitoffsetreg>
   2abb4:	2500      	movs	r5, #0
   2abb6:	f000 bd19 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2abba:	2c00      	cmp	r4, #0
   2abbc:	f000 85b2 	beq.w	2b724 <dwt_ioctl+0x1f48>
   2abc0:	8823      	ldrh	r3, [r4, #0]
   2abc2:	2200      	movs	r2, #0
   2abc4:	2148      	movs	r1, #72	@ 0x48
   2abc6:	f7fc fefc 	bl	279c2 <dwt_write16bitoffsetreg>
   2abca:	2500      	movs	r5, #0
   2abcc:	f000 bd0e 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2abd0:	2c00      	cmp	r4, #0
   2abd2:	f000 85a9 	beq.w	2b728 <dwt_ioctl+0x1f4c>
   2abd6:	2200      	movs	r2, #0
   2abd8:	2144      	movs	r1, #68	@ 0x44
   2abda:	f7fc fa7e 	bl	270da <dwt_read32bitoffsetreg>
   2abde:	6020      	str	r0, [r4, #0]
   2abe0:	2500      	movs	r5, #0
   2abe2:	f000 bd03 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2abe6:	2c00      	cmp	r4, #0
   2abe8:	f000 85a0 	beq.w	2b72c <dwt_ioctl+0x1f50>
   2abec:	2200      	movs	r2, #0
   2abee:	2148      	movs	r1, #72	@ 0x48
   2abf0:	f7fc fa89 	bl	27106 <dwt_read16bitoffsetreg>
   2abf4:	6020      	str	r0, [r4, #0]
   2abf6:	2500      	movs	r5, #0
   2abf8:	f000 bcf8 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2abfc:	2c00      	cmp	r4, #0
   2abfe:	f000 8597 	beq.w	2b730 <dwt_ioctl+0x1f54>
   2ac02:	7823      	ldrb	r3, [r4, #0]
   2ac04:	2200      	movs	r2, #0
   2ac06:	4973      	ldr	r1, [pc, #460]	@ (2add4 <dwt_ioctl+0x15f8>)
   2ac08:	f7fd f92a 	bl	27e60 <dwt_write8bitoffsetreg>
   2ac0c:	2500      	movs	r5, #0
   2ac0e:	f000 bced 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2ac12:	2c00      	cmp	r4, #0
   2ac14:	f000 858e 	beq.w	2b734 <dwt_ioctl+0x1f58>
   2ac18:	2200      	movs	r2, #0
   2ac1a:	2144      	movs	r1, #68	@ 0x44
   2ac1c:	f7fc fab2 	bl	27184 <dwt_read8bitoffsetreg>
   2ac20:	7020      	strb	r0, [r4, #0]
   2ac22:	2500      	movs	r5, #0
   2ac24:	f000 bce2 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2ac28:	2c00      	cmp	r4, #0
   2ac2a:	f000 8585 	beq.w	2b738 <dwt_ioctl+0x1f5c>
   2ac2e:	f7fd f923 	bl	27e78 <ull_getframelength>
   2ac32:	6020      	str	r0, [r4, #0]
   2ac34:	2500      	movs	r5, #0
   2ac36:	f000 bcd9 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2ac3a:	2c00      	cmp	r4, #0
   2ac3c:	f000 857e 	beq.w	2b73c <dwt_ioctl+0x1f60>
   2ac40:	2200      	movs	r2, #0
   2ac42:	4965      	ldr	r1, [pc, #404]	@ (2add8 <dwt_ioctl+0x15fc>)
   2ac44:	f7fc fa5f 	bl	27106 <dwt_read16bitoffsetreg>
   2ac48:	8020      	strh	r0, [r4, #0]
   2ac4a:	2500      	movs	r5, #0
   2ac4c:	f000 bcce 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2ac50:	2c00      	cmp	r4, #0
   2ac52:	f000 8575 	beq.w	2b740 <dwt_ioctl+0x1f64>
   2ac56:	2200      	movs	r2, #0
   2ac58:	4960      	ldr	r1, [pc, #384]	@ (2addc <dwt_ioctl+0x1600>)
   2ac5a:	f7fc fa3e 	bl	270da <dwt_read32bitoffsetreg>
   2ac5e:	6020      	str	r0, [r4, #0]
   2ac60:	2500      	movs	r5, #0
   2ac62:	f000 bcc3 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2ac66:	2c00      	cmp	r4, #0
   2ac68:	f000 856c 	beq.w	2b744 <dwt_ioctl+0x1f68>
   2ac6c:	8823      	ldrh	r3, [r4, #0]
   2ac6e:	f3c3 030d 	ubfx	r3, r3, #0, #14
   2ac72:	9300      	str	r3, [sp, #0]
   2ac74:	f44f 4340 	mov.w	r3, #49152	@ 0xc000
   2ac78:	2200      	movs	r2, #0
   2ac7a:	4958      	ldr	r1, [pc, #352]	@ (2addc <dwt_ioctl+0x1600>)
   2ac7c:	f7fe f912 	bl	28ea4 <dwt_modify16bitoffsetreg>
   2ac80:	2500      	movs	r5, #0
   2ac82:	f000 bcb3 	b.w	2b5ec <dwt_ioctl+0x1e10>
   2ac86:	2c00      	cmp	r4, #0
   2ac88:	f000 855e 	beq.w	2b748 <dwt_ioctl+0x1f6c>
   2ac8c:	88a7      	ldrh	r7, [r4, #4]
   2ac8e:	f8d4 b008 	ldr.w	fp, [r4, #8]
   2ac92:	7b23      	ldrb	r3, [r4, #12]
   2ac94:	9306      	str	r3, [sp, #24]
   2ac96:	6922      	ldr	r2, [r4, #16]
   2ac98:	9204      	str	r2, [sp, #16]
   2ac9a:	6962      	ldr	r2, [r4, #20]
   2ac9c:	9205      	str	r2, [sp, #20]
   2ac9e:	f00b 0203 	and.w	r2, fp, #3
   2aca2:	f3cb 0585 	ubfx	r5, fp, #2, #6
   2aca6:	2b05      	cmp	r3, #5
   2aca8:	d147      	bne.n	2ad3a <dwt_ioctl+0x155e>
   2acaa:	f5b7 7fb1 	cmp.w	r7, #354	@ 0x162
   2acae:	bf28      	it	cs
   2acb0:	f44f 77b1 	movcs.w	r7, #354	@ 0x162
   2acb4:	f8df 912c 	ldr.w	r9, [pc, #300]	@ 2ade4 <dwt_ioctl+0x1608>
   2acb8:	2f04      	cmp	r7, #4
   2acba:	d805      	bhi.n	2acc8 <dwt_ioctl+0x14ec>
   2acbc:	eb09 0305 	add.w	r3, r9, r5
   2acc0:	785b      	ldrb	r3, [r3, #1]
   2acc2:	3b05      	subs	r3, #5
   2acc4:	429f      	cmp	r7, r3
   2acc6:	db40      	blt.n	2ad4a <dwt_ioctl+0x156e>
   2acc8:	2a01      	cmp	r2, #1
   2acca:	f200 80c8 	bhi.w	2ae5e <dwt_ioctl+0x1682>
   2acce:	4b44      	ldr	r3, [pc, #272]	@ (2ade0 <dwt_ioctl+0x1604>)
   2acd0:	5c99      	ldrb	r1, [r3, r2]
   2acd2:	463e      	mov	r6, r7
   2acd4:	42b9      	cmp	r1, r7
   2acd6:	f280 80c4 	bge.w	2ae62 <dwt_ioctl+0x1686>
   2acda:	1c50      	adds	r0, r2, #1
   2acdc:	fa53 f080 	uxtab	r0, r3, r0
   2ace0:	2300      	movs	r3, #0
   2ace2:	440b      	add	r3, r1
   2ace4:	b29b      	uxth	r3, r3
   2ace6:	3201      	adds	r2, #1
   2ace8:	b2d2      	uxtb	r2, r2
   2acea:	2a02      	cmp	r2, #2
   2acec:	d005      	beq.n	2acfa <dwt_ioctl+0x151e>
   2acee:	f810 1b01 	ldrb.w	r1, [r0], #1
   2acf2:	eba6 0c03 	sub.w	ip, r6, r3
   2acf6:	4561      	cmp	r1, ip
   2acf8:	dbf3      	blt.n	2ace2 <dwt_ioctl+0x1506>
   2acfa:	429f      	cmp	r7, r3
   2acfc:	bf08      	it	eq
   2acfe:	9503      	streq	r5, [sp, #12]
   2ad00:	f000 80b4 	beq.w	2ae6c <dwt_ioctl+0x1690>
   2ad04:	f107 0c05 	add.w	ip, r7, #5
   2ad08:	fa1f fc8c 	uxth.w	ip, ip
   2ad0c:	2680      	movs	r6, #128	@ 0x80
   2ad0e:	2100      	movs	r1, #0
   2ad10:	9107      	str	r1, [sp, #28]
   2ad12:	9103      	str	r1, [sp, #12]
   2ad14:	9108      	str	r1, [sp, #32]
   2ad16:	2005      	movs	r0, #5
   2ad18:	46b8      	mov	r8, r7
   2ad1a:	4287      	cmp	r7, r0
   2ad1c:	bf38      	it	cc
   2ad1e:	4680      	movcc	r8, r0
   2ad20:	f1a8 0805 	sub.w	r8, r8, #5
   2ad24:	fa1f f888 	uxth.w	r8, r8
   2ad28:	f8df a0b4 	ldr.w	sl, [pc, #180]	@ 2ade0 <dwt_ioctl+0x1604>
   2ad2c:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
   2ad30:	4683      	mov	fp, r0
   2ad32:	4620      	mov	r0, r4
   2ad34:	460c      	mov	r4, r1
   2ad36:	4686      	mov	lr, r0
   2ad38:	e031      	b.n	2ad9e <dwt_ioctl+0x15c2>
   2ad3a:	f240 1331 	movw	r3, #305	@ 0x131
   2ad3e:	429f      	cmp	r7, r3
   2ad40:	bf28      	it	cs
   2ad42:	461f      	movcs	r7, r3
   2ad44:	f8df 90a0 	ldr.w	r9, [pc, #160]	@ 2ade8 <dwt_ioctl+0x160c>
   2ad48:	e7b6      	b.n	2acb8 <dwt_ioctl+0x14dc>
   2ad4a:	2300      	movs	r3, #0
   2ad4c:	9a05      	ldr	r2, [sp, #20]
   2ad4e:	8013      	strh	r3, [r2, #0]
   2ad50:	9a04      	ldr	r2, [sp, #16]
   2ad52:	f8c2 b000 	str.w	fp, [r2]
   2ad56:	e098      	b.n	2ae8a <dwt_ioctl+0x16ae>
   2ad58:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
   2ad5c:	4674      	mov	r4, lr
   2ad5e:	2300      	movs	r3, #0
   2ad60:	9a05      	ldr	r2, [sp, #20]
   2ad62:	8013      	strh	r3, [r2, #0]
   2ad64:	9b04      	ldr	r3, [sp, #16]
   2ad66:	f8c3 b000 	str.w	fp, [r3]
   2ad6a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   2ad6e:	e08c      	b.n	2ae8a <dwt_ioctl+0x16ae>
   2ad70:	fa1f fb80 	uxth.w	fp, r0
   2ad74:	9207      	str	r2, [sp, #28]
   2ad76:	9503      	str	r5, [sp, #12]
   2ad78:	9308      	str	r3, [sp, #32]
   2ad7a:	2401      	movs	r4, #1
   2ad7c:	2d3f      	cmp	r5, #63	@ 0x3f
   2ad7e:	d050      	beq.n	2ae22 <dwt_ioctl+0x1646>
   2ad80:	2900      	cmp	r1, #0
   2ad82:	d139      	bne.n	2adf8 <dwt_ioctl+0x161c>
   2ad84:	3501      	adds	r5, #1
   2ad86:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
   2ad8a:	f819 0005 	ldrb.w	r0, [r9, r5]
   2ad8e:	4403      	add	r3, r0
   2ad90:	b29b      	uxth	r3, r3
   2ad92:	429f      	cmp	r7, r3
   2ad94:	d067      	beq.n	2ae66 <dwt_ioctl+0x168a>
   2ad96:	3e01      	subs	r6, #1
   2ad98:	f016 06ff 	ands.w	r6, r6, #255	@ 0xff
   2ad9c:	d0dc      	beq.n	2ad58 <dwt_ioctl+0x157c>
   2ad9e:	4543      	cmp	r3, r8
   2ada0:	d924      	bls.n	2adec <dwt_ioctl+0x1610>
   2ada2:	4563      	cmp	r3, ip
   2ada4:	d222      	bcs.n	2adec <dwt_ioctl+0x1610>
   2ada6:	1af8      	subs	r0, r7, r3
   2ada8:	b200      	sxth	r0, r0
   2adaa:	2800      	cmp	r0, #0
   2adac:	bfb8      	it	lt
   2adae:	4240      	neglt	r0, r0
   2adb0:	4558      	cmp	r0, fp
   2adb2:	dddd      	ble.n	2ad70 <dwt_ioctl+0x1594>
   2adb4:	2c00      	cmp	r4, #0
   2adb6:	d0e1      	beq.n	2ad7c <dwt_ioctl+0x15a0>
   2adb8:	4674      	mov	r4, lr
   2adba:	9a07      	ldr	r2, [sp, #28]
   2adbc:	9b08      	ldr	r3, [sp, #32]
   2adbe:	e055      	b.n	2ae6c <dwt_ioctl+0x1690>
   2adc0:	00050008 	.word	0x00050008
   2adc4:	001f000c 	.word	0x001f000c
   2adc8:	001f0010 	.word	0x001f0010
   2adcc:	00010020 	.word	0x00010020
   2add0:	00030054 	.word	0x00030054
   2add4:	00010018 	.word	0x00010018
   2add8:	0005002c 	.word	0x0005002c
   2addc:	000e001c 	.word	0x000e001c
   2ade0:	0002c570 	.word	0x0002c570
   2ade4:	0002c4f0 	.word	0x0002c4f0
   2ade8:	0002c530 	.word	0x0002c530
   2adec:	b984      	cbnz	r4, 2ae10 <dwt_ioctl+0x1634>
   2adee:	4563      	cmp	r3, ip
   2adf0:	d3c4      	bcc.n	2ad7c <dwt_ioctl+0x15a0>
   2adf2:	b199      	cbz	r1, 2ae1c <dwt_ioctl+0x1640>
   2adf4:	2d3f      	cmp	r5, #63	@ 0x3f
   2adf6:	d014      	beq.n	2ae22 <dwt_ioctl+0x1646>
   2adf8:	f819 1005 	ldrb.w	r1, [r9, r5]
   2adfc:	1a5b      	subs	r3, r3, r1
   2adfe:	b29b      	uxth	r3, r3
   2ae00:	1e69      	subs	r1, r5, #1
   2ae02:	f001 053f 	and.w	r5, r1, #63	@ 0x3f
   2ae06:	f011 013f 	ands.w	r1, r1, #63	@ 0x3f
   2ae0a:	bf18      	it	ne
   2ae0c:	2101      	movne	r1, #1
   2ae0e:	e7c0      	b.n	2ad92 <dwt_ioctl+0x15b6>
   2ae10:	4674      	mov	r4, lr
   2ae12:	f819 1005 	ldrb.w	r1, [r9, r5]
   2ae16:	1a5b      	subs	r3, r3, r1
   2ae18:	b29b      	uxth	r3, r3
   2ae1a:	e027      	b.n	2ae6c <dwt_ioctl+0x1690>
   2ae1c:	4674      	mov	r4, lr
   2ae1e:	9503      	str	r5, [sp, #12]
   2ae20:	e024      	b.n	2ae6c <dwt_ioctl+0x1690>
   2ae22:	2c00      	cmp	r4, #0
   2ae24:	d134      	bne.n	2ae90 <dwt_ioctl+0x16b4>
   2ae26:	2a03      	cmp	r2, #3
   2ae28:	d036      	beq.n	2ae98 <dwt_ioctl+0x16bc>
   2ae2a:	2a02      	cmp	r2, #2
   2ae2c:	d009      	beq.n	2ae42 <dwt_ioctl+0x1666>
   2ae2e:	f81a 1002 	ldrb.w	r1, [sl, r2]
   2ae32:	1858      	adds	r0, r3, r1
   2ae34:	42b8      	cmp	r0, r7
   2ae36:	dd0b      	ble.n	2ae50 <dwt_ioctl+0x1674>
   2ae38:	440b      	add	r3, r1
   2ae3a:	b29b      	uxth	r3, r3
   2ae3c:	3201      	adds	r2, #1
   2ae3e:	b2d2      	uxtb	r2, r2
   2ae40:	e7da      	b.n	2adf8 <dwt_ioctl+0x161c>
   2ae42:	9906      	ldr	r1, [sp, #24]
   2ae44:	2909      	cmp	r1, #9
   2ae46:	d1f2      	bne.n	2ae2e <dwt_ioctl+0x1652>
   2ae48:	4674      	mov	r4, lr
   2ae4a:	213f      	movs	r1, #63	@ 0x3f
   2ae4c:	9103      	str	r1, [sp, #12]
   2ae4e:	e00d      	b.n	2ae6c <dwt_ioctl+0x1690>
   2ae50:	4674      	mov	r4, lr
   2ae52:	b283      	uxth	r3, r0
   2ae54:	3201      	adds	r2, #1
   2ae56:	b2d2      	uxtb	r2, r2
   2ae58:	213f      	movs	r1, #63	@ 0x3f
   2ae5a:	9103      	str	r1, [sp, #12]
   2ae5c:	e006      	b.n	2ae6c <dwt_ioctl+0x1690>
   2ae5e:	2300      	movs	r3, #0
   2ae60:	e74b      	b.n	2acfa <dwt_ioctl+0x151e>
   2ae62:	2300      	movs	r3, #0
   2ae64:	e749      	b.n	2acfa <dwt_ioctl+0x151e>
   2ae66:	4674      	mov	r4, lr
   2ae68:	9503      	str	r5, [sp, #12]
   2ae6a:	463b      	mov	r3, r7
   2ae6c:	9905      	ldr	r1, [sp, #20]
   2ae6e:	800b      	strh	r3, [r1, #0]
   2ae70:	9b03      	ldr	r3, [sp, #12]
   2ae72:	ea42 0383 	orr.w	r3, r2, r3, lsl #2
   2ae76:	b2db      	uxtb	r3, r3
   2ae78:	041a      	lsls	r2, r3, #16
   2ae7a:	ea42 6203 	orr.w	r2, r2, r3, lsl #24
   2ae7e:	431a      	orrs	r2, r3
   2ae80:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
   2ae84:	9a04      	ldr	r2, [sp, #16]
   2ae86:	6013      	str	r3, [r2, #0]
   2ae88:	2300      	movs	r3, #0
   2ae8a:	6023      	str	r3, [r4, #0]
   2ae8c:	2500      	movs	r5, #0
   2ae8e:	e3ad      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2ae90:	4674      	mov	r4, lr
   2ae92:	9a07      	ldr	r2, [sp, #28]
   2ae94:	9b08      	ldr	r3, [sp, #32]
   2ae96:	e7e9      	b.n	2ae6c <dwt_ioctl+0x1690>
   2ae98:	4674      	mov	r4, lr
   2ae9a:	213f      	movs	r1, #63	@ 0x3f
   2ae9c:	9103      	str	r1, [sp, #12]
   2ae9e:	e7e5      	b.n	2ae6c <dwt_ioctl+0x1690>
   2aea0:	2c00      	cmp	r4, #0
   2aea2:	f000 8453 	beq.w	2b74c <dwt_ioctl+0x1f70>
   2aea6:	7827      	ldrb	r7, [r4, #0]
   2aea8:	7864      	ldrb	r4, [r4, #1]
   2aeaa:	f7ef ffa1 	bl	1adf0 <decamutexon>
   2aeae:	4605      	mov	r5, r0
   2aeb0:	2c02      	cmp	r4, #2
   2aeb2:	d00e      	beq.n	2aed2 <dwt_ioctl+0x16f6>
   2aeb4:	2c04      	cmp	r4, #4
   2aeb6:	d00c      	beq.n	2aed2 <dwt_ioctl+0x16f6>
   2aeb8:	f004 04fd 	and.w	r4, r4, #253	@ 0xfd
   2aebc:	2c01      	cmp	r4, #1
   2aebe:	d019      	beq.n	2aef4 <dwt_ioctl+0x1718>
   2aec0:	43fb      	mvns	r3, r7
   2aec2:	2200      	movs	r2, #0
   2aec4:	9200      	str	r2, [sp, #0]
   2aec6:	b2db      	uxtb	r3, r3
   2aec8:	49c1      	ldr	r1, [pc, #772]	@ (2b1d0 <dwt_ioctl+0x19f4>)
   2aeca:	4630      	mov	r0, r6
   2aecc:	f7fd fc5a 	bl	28784 <dwt_modify8bitoffsetreg>
   2aed0:	e005      	b.n	2aede <dwt_ioctl+0x1702>
   2aed2:	463b      	mov	r3, r7
   2aed4:	2200      	movs	r2, #0
   2aed6:	49be      	ldr	r1, [pc, #760]	@ (2b1d0 <dwt_ioctl+0x19f4>)
   2aed8:	4630      	mov	r0, r6
   2aeda:	f7fc ffc1 	bl	27e60 <dwt_write8bitoffsetreg>
   2aede:	463b      	mov	r3, r7
   2aee0:	2200      	movs	r2, #0
   2aee2:	49bc      	ldr	r1, [pc, #752]	@ (2b1d4 <dwt_ioctl+0x19f8>)
   2aee4:	4630      	mov	r0, r6
   2aee6:	f7fc fdd7 	bl	27a98 <dwt_write32bitoffsetreg>
   2aeea:	4628      	mov	r0, r5
   2aeec:	f7ef ff87 	bl	1adfe <decamutexoff>
   2aef0:	2500      	movs	r5, #0
   2aef2:	e37b      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2aef4:	9700      	str	r7, [sp, #0]
   2aef6:	23ff      	movs	r3, #255	@ 0xff
   2aef8:	2200      	movs	r2, #0
   2aefa:	49b5      	ldr	r1, [pc, #724]	@ (2b1d0 <dwt_ioctl+0x19f4>)
   2aefc:	4630      	mov	r0, r6
   2aefe:	f7fd fc41 	bl	28784 <dwt_modify8bitoffsetreg>
   2af02:	e7ec      	b.n	2aede <dwt_ioctl+0x1702>
   2af04:	2302      	movs	r3, #2
   2af06:	9301      	str	r3, [sp, #4]
   2af08:	2500      	movs	r5, #0
   2af0a:	9500      	str	r5, [sp, #0]
   2af0c:	462b      	mov	r3, r5
   2af0e:	462a      	mov	r2, r5
   2af10:	211a      	movs	r1, #26
   2af12:	f7fc f85a 	bl	26fca <dwt_xfer3xxx>
   2af16:	e369      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2af18:	f7fe fc4c 	bl	297b4 <ull_softreset_fcmd>
   2af1c:	2500      	movs	r5, #0
   2af1e:	e365      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2af20:	f7fe fc34 	bl	2978c <ull_softreset_no_sema_fcmd>
   2af24:	2500      	movs	r5, #0
   2af26:	e361      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2af28:	2302      	movs	r3, #2
   2af2a:	9301      	str	r3, [sp, #4]
   2af2c:	2500      	movs	r5, #0
   2af2e:	9500      	str	r5, [sp, #0]
   2af30:	462b      	mov	r3, r5
   2af32:	462a      	mov	r2, r5
   2af34:	2114      	movs	r1, #20
   2af36:	f7fc f848 	bl	26fca <dwt_xfer3xxx>
   2af3a:	e357      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2af3c:	2402      	movs	r4, #2
   2af3e:	9401      	str	r4, [sp, #4]
   2af40:	2500      	movs	r5, #0
   2af42:	9500      	str	r5, [sp, #0]
   2af44:	462b      	mov	r3, r5
   2af46:	462a      	mov	r2, r5
   2af48:	2115      	movs	r1, #21
   2af4a:	f7fc f83e 	bl	26fca <dwt_xfer3xxx>
   2af4e:	9401      	str	r4, [sp, #4]
   2af50:	9500      	str	r5, [sp, #0]
   2af52:	462b      	mov	r3, r5
   2af54:	462a      	mov	r2, r5
   2af56:	2115      	movs	r1, #21
   2af58:	4630      	mov	r0, r6
   2af5a:	f7fc f836 	bl	26fca <dwt_xfer3xxx>
   2af5e:	e345      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2af60:	2302      	movs	r3, #2
   2af62:	9301      	str	r3, [sp, #4]
   2af64:	2500      	movs	r5, #0
   2af66:	9500      	str	r5, [sp, #0]
   2af68:	462b      	mov	r3, r5
   2af6a:	462a      	mov	r2, r5
   2af6c:	2116      	movs	r1, #22
   2af6e:	f7fc f82c 	bl	26fca <dwt_xfer3xxx>
   2af72:	e33b      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2af74:	2c00      	cmp	r4, #0
   2af76:	f000 83eb 	beq.w	2b750 <dwt_ioctl+0x1f74>
   2af7a:	b932      	cbnz	r2, 2af8a <dwt_ioctl+0x17ae>
   2af7c:	2200      	movs	r2, #0
   2af7e:	f44f 11d0 	mov.w	r1, #1703936	@ 0x1a0000
   2af82:	f7fc f8ff 	bl	27184 <dwt_read8bitoffsetreg>
   2af86:	7020      	strb	r0, [r4, #0]
   2af88:	e330      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2af8a:	2201      	movs	r2, #1
   2af8c:	f44f 11d0 	mov.w	r1, #1703936	@ 0x1a0000
   2af90:	f7fc f8f8 	bl	27184 <dwt_read8bitoffsetreg>
   2af94:	7020      	strb	r0, [r4, #0]
   2af96:	2500      	movs	r5, #0
   2af98:	e328      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2af9a:	2c00      	cmp	r4, #0
   2af9c:	f000 83da 	beq.w	2b754 <dwt_ioctl+0x1f78>
   2afa0:	7824      	ldrb	r4, [r4, #0]
   2afa2:	2200      	movs	r2, #0
   2afa4:	f44f 11d0 	mov.w	r1, #1703936	@ 0x1a0000
   2afa8:	f7fc f8ec 	bl	27184 <dwt_read8bitoffsetreg>
   2afac:	f000 039f 	and.w	r3, r0, #159	@ 0x9f
   2afb0:	4323      	orrs	r3, r4
   2afb2:	2200      	movs	r2, #0
   2afb4:	f44f 11d0 	mov.w	r1, #1703936	@ 0x1a0000
   2afb8:	4630      	mov	r0, r6
   2afba:	f7fc ff51 	bl	27e60 <dwt_write8bitoffsetreg>
   2afbe:	2500      	movs	r5, #0
   2afc0:	e314      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2afc2:	2c00      	cmp	r4, #0
   2afc4:	f000 83c8 	beq.w	2b758 <dwt_ioctl+0x1f7c>
   2afc8:	7824      	ldrb	r4, [r4, #0]
   2afca:	f012 05ff 	ands.w	r5, r2, #255	@ 0xff
   2afce:	d01d      	beq.n	2b00c <dwt_ioctl+0x1830>
   2afd0:	2d01      	cmp	r5, #1
   2afd2:	f040 83c3 	bne.w	2b75c <dwt_ioctl+0x1f80>
   2afd6:	2502      	movs	r5, #2
   2afd8:	2201      	movs	r2, #1
   2afda:	f44f 11d0 	mov.w	r1, #1703936	@ 0x1a0000
   2afde:	4630      	mov	r0, r6
   2afe0:	f7fc f8d0 	bl	27184 <dwt_read8bitoffsetreg>
   2afe4:	b9a4      	cbnz	r4, 2b010 <dwt_ioctl+0x1834>
   2afe6:	ea20 0305 	bic.w	r3, r0, r5
   2afea:	b2db      	uxtb	r3, r3
   2afec:	2201      	movs	r2, #1
   2afee:	f44f 11d0 	mov.w	r1, #1703936	@ 0x1a0000
   2aff2:	4630      	mov	r0, r6
   2aff4:	f7fc ff34 	bl	27e60 <dwt_write8bitoffsetreg>
   2aff8:	2200      	movs	r2, #0
   2affa:	2110      	movs	r1, #16
   2affc:	4630      	mov	r0, r6
   2affe:	f7fc f86c 	bl	270da <dwt_read32bitoffsetreg>
   2b002:	f410 1f80 	tst.w	r0, #1048576	@ 0x100000
   2b006:	d00a      	beq.n	2b01e <dwt_ioctl+0x1842>
   2b008:	2500      	movs	r5, #0
   2b00a:	e2ef      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b00c:	2504      	movs	r5, #4
   2b00e:	e7e3      	b.n	2afd8 <dwt_ioctl+0x17fc>
   2b010:	2c01      	cmp	r4, #1
   2b012:	f040 83a6 	bne.w	2b762 <dwt_ioctl+0x1f86>
   2b016:	ea40 0305 	orr.w	r3, r0, r5
   2b01a:	b2db      	uxtb	r3, r3
   2b01c:	e7e6      	b.n	2afec <dwt_ioctl+0x1810>
   2b01e:	f44f 1380 	mov.w	r3, #1048576	@ 0x100000
   2b022:	9300      	str	r3, [sp, #0]
   2b024:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   2b028:	2200      	movs	r2, #0
   2b02a:	2110      	movs	r1, #16
   2b02c:	4630      	mov	r0, r6
   2b02e:	f7fd fa39 	bl	284a4 <dwt_modify32bitoffsetreg>
   2b032:	2500      	movs	r5, #0
   2b034:	e2da      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b036:	2c00      	cmp	r4, #0
   2b038:	f000 8396 	beq.w	2b768 <dwt_ioctl+0x1f8c>
   2b03c:	7823      	ldrb	r3, [r4, #0]
   2b03e:	035b      	lsls	r3, r3, #13
   2b040:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
   2b044:	9300      	str	r3, [sp, #0]
   2b046:	f64d 73ff 	movw	r3, #57343	@ 0xdfff
   2b04a:	2200      	movs	r2, #0
   2b04c:	4962      	ldr	r1, [pc, #392]	@ (2b1d8 <dwt_ioctl+0x19fc>)
   2b04e:	f7fd ff29 	bl	28ea4 <dwt_modify16bitoffsetreg>
   2b052:	2500      	movs	r5, #0
   2b054:	e2ca      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b056:	2c00      	cmp	r4, #0
   2b058:	f000 8388 	beq.w	2b76c <dwt_ioctl+0x1f90>
   2b05c:	7825      	ldrb	r5, [r4, #0]
   2b05e:	6862      	ldr	r2, [r4, #4]
   2b060:	2a01      	cmp	r2, #1
   2b062:	bf15      	itete	ne
   2b064:	f46f 3360 	mvnne.w	r3, #229376	@ 0x38000
   2b068:	f46f 43e0 	mvneq.w	r3, #28672	@ 0x7000
   2b06c:	27df      	movne	r7, #223	@ 0xdf
   2b06e:	27ef      	moveq	r7, #239	@ 0xef
   2b070:	bf14      	ite	ne
   2b072:	f04f 0820 	movne.w	r8, #32
   2b076:	f04f 0810 	moveq.w	r8, #16
   2b07a:	2400      	movs	r4, #0
   2b07c:	9400      	str	r4, [sp, #0]
   2b07e:	4622      	mov	r2, r4
   2b080:	f44f 21a0 	mov.w	r1, #327680	@ 0x50000
   2b084:	f7fd fa0e 	bl	284a4 <dwt_modify32bitoffsetreg>
   2b088:	9400      	str	r4, [sp, #0]
   2b08a:	463b      	mov	r3, r7
   2b08c:	4622      	mov	r2, r4
   2b08e:	4953      	ldr	r1, [pc, #332]	@ (2b1dc <dwt_ioctl+0x1a00>)
   2b090:	4630      	mov	r0, r6
   2b092:	f7fd fb77 	bl	28784 <dwt_modify8bitoffsetreg>
   2b096:	2d01      	cmp	r5, #1
   2b098:	d002      	beq.n	2b0a0 <dwt_ioctl+0x18c4>
   2b09a:	b155      	cbz	r5, 2b0b2 <dwt_ioctl+0x18d6>
   2b09c:	2500      	movs	r5, #0
   2b09e:	e2a5      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b0a0:	4625      	mov	r5, r4
   2b0a2:	9400      	str	r4, [sp, #0]
   2b0a4:	463b      	mov	r3, r7
   2b0a6:	4622      	mov	r2, r4
   2b0a8:	494d      	ldr	r1, [pc, #308]	@ (2b1e0 <dwt_ioctl+0x1a04>)
   2b0aa:	4630      	mov	r0, r6
   2b0ac:	f7fd fb6a 	bl	28784 <dwt_modify8bitoffsetreg>
   2b0b0:	e29c      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b0b2:	f8cd 8000 	str.w	r8, [sp]
   2b0b6:	23ff      	movs	r3, #255	@ 0xff
   2b0b8:	2200      	movs	r2, #0
   2b0ba:	4949      	ldr	r1, [pc, #292]	@ (2b1e0 <dwt_ioctl+0x1a04>)
   2b0bc:	4630      	mov	r0, r6
   2b0be:	f7fd fb61 	bl	28784 <dwt_modify8bitoffsetreg>
   2b0c2:	e293      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b0c4:	2c00      	cmp	r4, #0
   2b0c6:	f000 8353 	beq.w	2b770 <dwt_ioctl+0x1f94>
   2b0ca:	7822      	ldrb	r2, [r4, #0]
   2b0cc:	f012 0f01 	tst.w	r2, #1
   2b0d0:	d02c      	beq.n	2b12c <dwt_ioctl+0x1950>
   2b0d2:	0157      	lsls	r7, r2, #5
   2b0d4:	f007 0740 	and.w	r7, r7, #64	@ 0x40
   2b0d8:	2440      	movs	r4, #64	@ 0x40
   2b0da:	f44f 13e0 	mov.w	r3, #1835008	@ 0x1c0000
   2b0de:	f012 0f04 	tst.w	r2, #4
   2b0e2:	d027      	beq.n	2b134 <dwt_ioctl+0x1958>
   2b0e4:	f443 0360 	orr.w	r3, r3, #14680064	@ 0xe00000
   2b0e8:	f044 0480 	orr.w	r4, r4, #128	@ 0x80
   2b0ec:	0112      	lsls	r2, r2, #4
   2b0ee:	f002 0280 	and.w	r2, r2, #128	@ 0x80
   2b0f2:	4317      	orrs	r7, r2
   2b0f4:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
   2b0f8:	9200      	str	r2, [sp, #0]
   2b0fa:	43db      	mvns	r3, r3
   2b0fc:	2200      	movs	r2, #0
   2b0fe:	f44f 21a0 	mov.w	r1, #327680	@ 0x50000
   2b102:	4630      	mov	r0, r6
   2b104:	f7fd f9ce 	bl	284a4 <dwt_modify32bitoffsetreg>
   2b108:	43e4      	mvns	r4, r4
   2b10a:	b2a4      	uxth	r4, r4
   2b10c:	2500      	movs	r5, #0
   2b10e:	9500      	str	r5, [sp, #0]
   2b110:	4623      	mov	r3, r4
   2b112:	462a      	mov	r2, r5
   2b114:	4931      	ldr	r1, [pc, #196]	@ (2b1dc <dwt_ioctl+0x1a00>)
   2b116:	4630      	mov	r0, r6
   2b118:	f7fd fec4 	bl	28ea4 <dwt_modify16bitoffsetreg>
   2b11c:	9700      	str	r7, [sp, #0]
   2b11e:	4623      	mov	r3, r4
   2b120:	462a      	mov	r2, r5
   2b122:	492f      	ldr	r1, [pc, #188]	@ (2b1e0 <dwt_ioctl+0x1a04>)
   2b124:	4630      	mov	r0, r6
   2b126:	f7fd febd 	bl	28ea4 <dwt_modify16bitoffsetreg>
   2b12a:	e25f      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b12c:	2700      	movs	r7, #0
   2b12e:	463c      	mov	r4, r7
   2b130:	463b      	mov	r3, r7
   2b132:	e7d4      	b.n	2b0de <dwt_ioctl+0x1902>
   2b134:	2200      	movs	r2, #0
   2b136:	e7df      	b.n	2b0f8 <dwt_ioctl+0x191c>
   2b138:	2308      	movs	r3, #8
   2b13a:	9300      	str	r3, [sp, #0]
   2b13c:	23ff      	movs	r3, #255	@ 0xff
   2b13e:	2201      	movs	r2, #1
   2b140:	f44f 2180 	mov.w	r1, #262144	@ 0x40000
   2b144:	f7fd fb1e 	bl	28784 <dwt_modify8bitoffsetreg>
   2b148:	4c26      	ldr	r4, [pc, #152]	@ (2b1e4 <dwt_ioctl+0x1a08>)
   2b14a:	2302      	movs	r3, #2
   2b14c:	9300      	str	r3, [sp, #0]
   2b14e:	23ff      	movs	r3, #255	@ 0xff
   2b150:	2203      	movs	r2, #3
   2b152:	4621      	mov	r1, r4
   2b154:	4630      	mov	r0, r6
   2b156:	f7fd fb15 	bl	28784 <dwt_modify8bitoffsetreg>
   2b15a:	2500      	movs	r5, #0
   2b15c:	9500      	str	r5, [sp, #0]
   2b15e:	23f7      	movs	r3, #247	@ 0xf7
   2b160:	2201      	movs	r2, #1
   2b162:	f44f 2180 	mov.w	r1, #262144	@ 0x40000
   2b166:	4630      	mov	r0, r6
   2b168:	f7fd fb0c 	bl	28784 <dwt_modify8bitoffsetreg>
   2b16c:	9500      	str	r5, [sp, #0]
   2b16e:	23fd      	movs	r3, #253	@ 0xfd
   2b170:	2203      	movs	r2, #3
   2b172:	4621      	mov	r1, r4
   2b174:	4630      	mov	r0, r6
   2b176:	f7fd fb05 	bl	28784 <dwt_modify8bitoffsetreg>
   2b17a:	e237      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b17c:	2c00      	cmp	r4, #0
   2b17e:	f000 82f9 	beq.w	2b774 <dwt_ioctl+0x1f98>
   2b182:	8863      	ldrh	r3, [r4, #2]
   2b184:	00db      	lsls	r3, r3, #3
   2b186:	f403 63ff 	and.w	r3, r3, #2040	@ 0x7f8
   2b18a:	7822      	ldrb	r2, [r4, #0]
   2b18c:	b10a      	cbz	r2, 2b192 <dwt_ioctl+0x19b6>
   2b18e:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
   2b192:	9300      	str	r3, [sp, #0]
   2b194:	f24f 0307 	movw	r3, #61447	@ 0xf007
   2b198:	2200      	movs	r2, #0
   2b19a:	f44f 2180 	mov.w	r1, #262144	@ 0x40000
   2b19e:	4630      	mov	r0, r6
   2b1a0:	f7fd fe80 	bl	28ea4 <dwt_modify16bitoffsetreg>
   2b1a4:	2500      	movs	r5, #0
   2b1a6:	e221      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b1a8:	2500      	movs	r5, #0
   2b1aa:	9500      	str	r5, [sp, #0]
   2b1ac:	f64f 33ff 	movw	r3, #64511	@ 0xfbff
   2b1b0:	462a      	mov	r2, r5
   2b1b2:	f44f 1188 	mov.w	r1, #1114112	@ 0x110000
   2b1b6:	f7fd fe75 	bl	28ea4 <dwt_modify16bitoffsetreg>
   2b1ba:	e217      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b1bc:	2c00      	cmp	r4, #0
   2b1be:	f000 82db 	beq.w	2b778 <dwt_ioctl+0x1f9c>
   2b1c2:	2200      	movs	r2, #0
   2b1c4:	4908      	ldr	r1, [pc, #32]	@ (2b1e8 <dwt_ioctl+0x1a0c>)
   2b1c6:	f7fb ff9e 	bl	27106 <dwt_read16bitoffsetreg>
   2b1ca:	8020      	strh	r0, [r4, #0]
   2b1cc:	2500      	movs	r5, #0
   2b1ce:	e20d      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b1d0:	0001001c 	.word	0x0001001c
   2b1d4:	00010018 	.word	0x00010018
   2b1d8:	000e000c 	.word	0x000e000c
   2b1dc:	00050008 	.word	0x00050008
   2b1e0:	0005000c 	.word	0x0005000c
   2b1e4:	00110008 	.word	0x00110008
   2b1e8:	00110048 	.word	0x00110048
   2b1ec:	2c00      	cmp	r4, #0
   2b1ee:	f000 82c5 	beq.w	2b77c <dwt_ioctl+0x1fa0>
   2b1f2:	7823      	ldrb	r3, [r4, #0]
   2b1f4:	2b01      	cmp	r3, #1
   2b1f6:	7862      	ldrb	r2, [r4, #1]
   2b1f8:	78a3      	ldrb	r3, [r4, #2]
   2b1fa:	ea4f 23c3 	mov.w	r3, r3, lsl #11
   2b1fe:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   2b202:	78e2      	ldrb	r2, [r4, #3]
   2b204:	ea43 3342 	orr.w	r3, r3, r2, lsl #13
   2b208:	7922      	ldrb	r2, [r4, #4]
   2b20a:	ea43 3382 	orr.w	r3, r3, r2, lsl #14
   2b20e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
   2b212:	bf0c      	ite	eq
   2b214:	2202      	moveq	r2, #2
   2b216:	2200      	movne	r2, #0
   2b218:	49b6      	ldr	r1, [pc, #728]	@ (2b4f4 <dwt_ioctl+0x1d18>)
   2b21a:	f7fc fbd2 	bl	279c2 <dwt_write16bitoffsetreg>
   2b21e:	2500      	movs	r5, #0
   2b220:	e1e4      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b222:	2c00      	cmp	r4, #0
   2b224:	f000 82ac 	beq.w	2b780 <dwt_ioctl+0x1fa4>
   2b228:	6863      	ldr	r3, [r4, #4]
   2b22a:	7822      	ldrb	r2, [r4, #0]
   2b22c:	b13a      	cbz	r2, 2b23e <dwt_ioctl+0x1a62>
   2b22e:	f3c3 0315 	ubfx	r3, r3, #0, #22
   2b232:	2200      	movs	r2, #0
   2b234:	49b0      	ldr	r1, [pc, #704]	@ (2b4f8 <dwt_ioctl+0x1d1c>)
   2b236:	f7fc fc2f 	bl	27a98 <dwt_write32bitoffsetreg>
   2b23a:	2500      	movs	r5, #0
   2b23c:	e1d6      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b23e:	f3c3 0315 	ubfx	r3, r3, #0, #22
   2b242:	49ae      	ldr	r1, [pc, #696]	@ (2b4fc <dwt_ioctl+0x1d20>)
   2b244:	f7fc fc28 	bl	27a98 <dwt_write32bitoffsetreg>
   2b248:	2500      	movs	r5, #0
   2b24a:	e1cf      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b24c:	2c00      	cmp	r4, #0
   2b24e:	f000 8299 	beq.w	2b784 <dwt_ioctl+0x1fa8>
   2b252:	7823      	ldrb	r3, [r4, #0]
   2b254:	2401      	movs	r4, #1
   2b256:	409c      	lsls	r4, r3
   2b258:	b2e4      	uxtb	r4, r4
   2b25a:	2310      	movs	r3, #16
   2b25c:	9300      	str	r3, [sp, #0]
   2b25e:	23ff      	movs	r3, #255	@ 0xff
   2b260:	2200      	movs	r2, #0
   2b262:	49a7      	ldr	r1, [pc, #668]	@ (2b500 <dwt_ioctl+0x1d24>)
   2b264:	f7fd fa8e 	bl	28784 <dwt_modify8bitoffsetreg>
   2b268:	43e3      	mvns	r3, r4
   2b26a:	4fa2      	ldr	r7, [pc, #648]	@ (2b4f4 <dwt_ioctl+0x1d18>)
   2b26c:	2500      	movs	r5, #0
   2b26e:	9500      	str	r5, [sp, #0]
   2b270:	b2db      	uxtb	r3, r3
   2b272:	462a      	mov	r2, r5
   2b274:	4639      	mov	r1, r7
   2b276:	4630      	mov	r0, r6
   2b278:	f7fd fa84 	bl	28784 <dwt_modify8bitoffsetreg>
   2b27c:	9400      	str	r4, [sp, #0]
   2b27e:	23ff      	movs	r3, #255	@ 0xff
   2b280:	462a      	mov	r2, r5
   2b282:	4639      	mov	r1, r7
   2b284:	4630      	mov	r0, r6
   2b286:	f7fd fa7d 	bl	28784 <dwt_modify8bitoffsetreg>
   2b28a:	e1af      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b28c:	2c00      	cmp	r4, #0
   2b28e:	f000 827b 	beq.w	2b788 <dwt_ioctl+0x1fac>
   2b292:	7822      	ldrb	r2, [r4, #0]
   2b294:	7863      	ldrb	r3, [r4, #1]
   2b296:	b19b      	cbz	r3, 2b2c0 <dwt_ioctl+0x1ae4>
   2b298:	2a00      	cmp	r2, #0
   2b29a:	f040 8297 	bne.w	2b7cc <dwt_ioctl+0x1ff0>
   2b29e:	2400      	movs	r4, #0
   2b2a0:	9400      	str	r4, [sp, #0]
   2b2a2:	f06f 73c0 	mvn.w	r3, #25165824	@ 0x1800000
   2b2a6:	4622      	mov	r2, r4
   2b2a8:	2110      	movs	r1, #16
   2b2aa:	f7fd f8fb 	bl	284a4 <dwt_modify32bitoffsetreg>
   2b2ae:	9400      	str	r4, [sp, #0]
   2b2b0:	4b94      	ldr	r3, [pc, #592]	@ (2b504 <dwt_ioctl+0x1d28>)
   2b2b2:	4622      	mov	r2, r4
   2b2b4:	f44f 21a0 	mov.w	r1, #327680	@ 0x50000
   2b2b8:	4630      	mov	r0, r6
   2b2ba:	f7fd f8f3 	bl	284a4 <dwt_modify32bitoffsetreg>
   2b2be:	e017      	b.n	2b2f0 <dwt_ioctl+0x1b14>
   2b2c0:	2a00      	cmp	r2, #0
   2b2c2:	f000 8285 	beq.w	2b7d0 <dwt_ioctl+0x1ff4>
   2b2c6:	f44f 4500 	mov.w	r5, #32768	@ 0x8000
   2b2ca:	2400      	movs	r4, #0
   2b2cc:	9400      	str	r4, [sp, #0]
   2b2ce:	f06f 73c0 	mvn.w	r3, #25165824	@ 0x1800000
   2b2d2:	4622      	mov	r2, r4
   2b2d4:	2110      	movs	r1, #16
   2b2d6:	4630      	mov	r0, r6
   2b2d8:	f7fd f8e4 	bl	284a4 <dwt_modify32bitoffsetreg>
   2b2dc:	9500      	str	r5, [sp, #0]
   2b2de:	4b89      	ldr	r3, [pc, #548]	@ (2b504 <dwt_ioctl+0x1d28>)
   2b2e0:	4622      	mov	r2, r4
   2b2e2:	f44f 21a0 	mov.w	r1, #327680	@ 0x50000
   2b2e6:	4630      	mov	r0, r6
   2b2e8:	f7fd f8dc 	bl	284a4 <dwt_modify32bitoffsetreg>
   2b2ec:	f04f 74c0 	mov.w	r4, #25165824	@ 0x1800000
   2b2f0:	9400      	str	r4, [sp, #0]
   2b2f2:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   2b2f6:	2200      	movs	r2, #0
   2b2f8:	2110      	movs	r1, #16
   2b2fa:	4630      	mov	r0, r6
   2b2fc:	f7fd f8d2 	bl	284a4 <dwt_modify32bitoffsetreg>
   2b300:	2500      	movs	r5, #0
   2b302:	e173      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b304:	2c00      	cmp	r4, #0
   2b306:	f000 8241 	beq.w	2b78c <dwt_ioctl+0x1fb0>
   2b30a:	7823      	ldrb	r3, [r4, #0]
   2b30c:	b93b      	cbnz	r3, 2b31e <dwt_ioctl+0x1b42>
   2b30e:	2500      	movs	r5, #0
   2b310:	9500      	str	r5, [sp, #0]
   2b312:	23df      	movs	r3, #223	@ 0xdf
   2b314:	2203      	movs	r2, #3
   2b316:	497c      	ldr	r1, [pc, #496]	@ (2b508 <dwt_ioctl+0x1d2c>)
   2b318:	f7fd fa34 	bl	28784 <dwt_modify8bitoffsetreg>
   2b31c:	e166      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b31e:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
   2b322:	9300      	str	r3, [sp, #0]
   2b324:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
   2b328:	2200      	movs	r2, #0
   2b32a:	4977      	ldr	r1, [pc, #476]	@ (2b508 <dwt_ioctl+0x1d2c>)
   2b32c:	f7fd f8ba 	bl	284a4 <dwt_modify32bitoffsetreg>
   2b330:	2500      	movs	r5, #0
   2b332:	e15b      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b334:	2c00      	cmp	r4, #0
   2b336:	f000 822b 	beq.w	2b790 <dwt_ioctl+0x1fb4>
   2b33a:	7823      	ldrb	r3, [r4, #0]
   2b33c:	b93b      	cbnz	r3, 2b34e <dwt_ioctl+0x1b72>
   2b33e:	2500      	movs	r5, #0
   2b340:	9500      	str	r5, [sp, #0]
   2b342:	237f      	movs	r3, #127	@ 0x7f
   2b344:	2203      	movs	r2, #3
   2b346:	4971      	ldr	r1, [pc, #452]	@ (2b50c <dwt_ioctl+0x1d30>)
   2b348:	f7fd fa1c 	bl	28784 <dwt_modify8bitoffsetreg>
   2b34c:	e14e      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b34e:	2380      	movs	r3, #128	@ 0x80
   2b350:	9300      	str	r3, [sp, #0]
   2b352:	23ff      	movs	r3, #255	@ 0xff
   2b354:	2203      	movs	r2, #3
   2b356:	496d      	ldr	r1, [pc, #436]	@ (2b50c <dwt_ioctl+0x1d30>)
   2b358:	f7fd fa14 	bl	28784 <dwt_modify8bitoffsetreg>
   2b35c:	2500      	movs	r5, #0
   2b35e:	e145      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b360:	2c00      	cmp	r4, #0
   2b362:	f000 8217 	beq.w	2b794 <dwt_ioctl+0x1fb8>
   2b366:	b2e3      	uxtb	r3, r4
   2b368:	1c9a      	adds	r2, r3, #2
   2b36a:	2301      	movs	r3, #1
   2b36c:	4093      	lsls	r3, r2
   2b36e:	3b01      	subs	r3, #1
   2b370:	b2db      	uxtb	r3, r3
   2b372:	2200      	movs	r2, #0
   2b374:	f44f 3100 	mov.w	r1, #131072	@ 0x20000
   2b378:	f7fc fd72 	bl	27e60 <dwt_write8bitoffsetreg>
   2b37c:	2500      	movs	r5, #0
   2b37e:	e135      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b380:	2c00      	cmp	r4, #0
   2b382:	f000 8209 	beq.w	2b798 <dwt_ioctl+0x1fbc>
   2b386:	7ae3      	ldrb	r3, [r4, #11]
   2b388:	2b00      	cmp	r3, #0
   2b38a:	f000 8207 	beq.w	2b79c <dwt_ioctl+0x1fc0>
   2b38e:	7b63      	ldrb	r3, [r4, #13]
   2b390:	2b01      	cmp	r3, #1
   2b392:	7b20      	ldrb	r0, [r4, #12]
   2b394:	bf94      	ite	ls
   2b396:	2203      	movls	r2, #3
   2b398:	2204      	movhi	r2, #4
   2b39a:	2110      	movs	r1, #16
   2b39c:	4b5c      	ldr	r3, [pc, #368]	@ (2b510 <dwt_ioctl+0x1d34>)
   2b39e:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
   2b3a2:	f7fb fdf5 	bl	26f90 <get_sts_mnth>
   2b3a6:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
   2b3aa:	9000      	str	r0, [sp, #0]
   2b3ac:	f64f 7380 	movw	r3, #65408	@ 0xff80
   2b3b0:	2202      	movs	r2, #2
   2b3b2:	4958      	ldr	r1, [pc, #352]	@ (2b514 <dwt_ioctl+0x1d38>)
   2b3b4:	4630      	mov	r0, r6
   2b3b6:	f7fd fd75 	bl	28ea4 <dwt_modify16bitoffsetreg>
   2b3ba:	2394      	movs	r3, #148	@ 0x94
   2b3bc:	2200      	movs	r2, #0
   2b3be:	4956      	ldr	r1, [pc, #344]	@ (2b518 <dwt_ioctl+0x1d3c>)
   2b3c0:	4630      	mov	r0, r6
   2b3c2:	f7fc fd4d 	bl	27e60 <dwt_write8bitoffsetreg>
   2b3c6:	2500      	movs	r5, #0
   2b3c8:	e110      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b3ca:	2c00      	cmp	r4, #0
   2b3cc:	f000 81e8 	beq.w	2b7a0 <dwt_ioctl+0x1fc4>
   2b3d0:	2200      	movs	r2, #0
   2b3d2:	4952      	ldr	r1, [pc, #328]	@ (2b51c <dwt_ioctl+0x1d40>)
   2b3d4:	f7fb fe81 	bl	270da <dwt_read32bitoffsetreg>
   2b3d8:	6020      	str	r0, [r4, #0]
   2b3da:	2500      	movs	r5, #0
   2b3dc:	e106      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b3de:	2c00      	cmp	r4, #0
   2b3e0:	f000 81e0 	beq.w	2b7a4 <dwt_ioctl+0x1fc8>
   2b3e4:	2200      	movs	r2, #0
   2b3e6:	494e      	ldr	r1, [pc, #312]	@ (2b520 <dwt_ioctl+0x1d44>)
   2b3e8:	f7fb fe77 	bl	270da <dwt_read32bitoffsetreg>
   2b3ec:	6020      	str	r0, [r4, #0]
   2b3ee:	2500      	movs	r5, #0
   2b3f0:	e0fc      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b3f2:	2c00      	cmp	r4, #0
   2b3f4:	f000 81d8 	beq.w	2b7a8 <dwt_ioctl+0x1fcc>
   2b3f8:	f44f 13a8 	mov.w	r3, #1376256	@ 0x150000
   2b3fc:	6023      	str	r3, [r4, #0]
   2b3fe:	2500      	movs	r5, #0
   2b400:	e0f4      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b402:	2c00      	cmp	r4, #0
   2b404:	f000 81d2 	beq.w	2b7ac <dwt_ioctl+0x1fd0>
   2b408:	2500      	movs	r5, #0
   2b40a:	950a      	str	r5, [sp, #40]	@ 0x28
   2b40c:	af0c      	add	r7, sp, #48	@ 0x30
   2b40e:	2319      	movs	r3, #25
   2b410:	f847 3d04 	str.w	r3, [r7, #-4]!
   2b414:	9700      	str	r7, [sp, #0]
   2b416:	2304      	movs	r3, #4
   2b418:	462a      	mov	r2, r5
   2b41a:	4942      	ldr	r1, [pc, #264]	@ (2b524 <dwt_ioctl+0x1d48>)
   2b41c:	f7fc fac6 	bl	279ac <dwt_writetodevice>
   2b420:	f641 7348 	movw	r3, #8008	@ 0x1f48
   2b424:	930b      	str	r3, [sp, #44]	@ 0x2c
   2b426:	9700      	str	r7, [sp, #0]
   2b428:	2304      	movs	r3, #4
   2b42a:	462a      	mov	r2, r5
   2b42c:	493e      	ldr	r1, [pc, #248]	@ (2b528 <dwt_ioctl+0x1d4c>)
   2b42e:	4630      	mov	r0, r6
   2b430:	f7fc fabc 	bl	279ac <dwt_writetodevice>
   2b434:	ab0a      	add	r3, sp, #40	@ 0x28
   2b436:	9300      	str	r3, [sp, #0]
   2b438:	2304      	movs	r3, #4
   2b43a:	462a      	mov	r2, r5
   2b43c:	f44f 11e8 	mov.w	r1, #1900544	@ 0x1d0000
   2b440:	4630      	mov	r0, r6
   2b442:	f7fb fe40 	bl	270c6 <dwt_readfromdevice>
   2b446:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
   2b448:	6023      	str	r3, [r4, #0]
   2b44a:	e0cf      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b44c:	2c00      	cmp	r4, #0
   2b44e:	f000 81af 	beq.w	2b7b0 <dwt_ioctl+0x1fd4>
   2b452:	2200      	movs	r2, #0
   2b454:	4935      	ldr	r1, [pc, #212]	@ (2b52c <dwt_ioctl+0x1d50>)
   2b456:	f7fb fe40 	bl	270da <dwt_read32bitoffsetreg>
   2b45a:	b280      	uxth	r0, r0
   2b45c:	6020      	str	r0, [r4, #0]
   2b45e:	2200      	movs	r2, #0
   2b460:	4933      	ldr	r1, [pc, #204]	@ (2b530 <dwt_ioctl+0x1d54>)
   2b462:	4630      	mov	r0, r6
   2b464:	f7fb fe39 	bl	270da <dwt_read32bitoffsetreg>
   2b468:	0d43      	lsrs	r3, r0, #21
   2b46a:	019b      	lsls	r3, r3, #6
   2b46c:	b29b      	uxth	r3, r3
   2b46e:	6063      	str	r3, [r4, #4]
   2b470:	2500      	movs	r5, #0
   2b472:	e0bb      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b474:	2c00      	cmp	r4, #0
   2b476:	f000 819d 	beq.w	2b7b4 <dwt_ioctl+0x1fd8>
   2b47a:	7d63      	ldrb	r3, [r4, #21]
   2b47c:	b133      	cbz	r3, 2b48c <dwt_ioctl+0x1cb0>
   2b47e:	2b01      	cmp	r3, #1
   2b480:	d062      	beq.n	2b548 <dwt_ioctl+0x1d6c>
   2b482:	2b02      	cmp	r3, #2
   2b484:	f000 8089 	beq.w	2b59a <dwt_ioctl+0x1dbe>
   2b488:	23ff      	movs	r3, #255	@ 0xff
   2b48a:	e02f      	b.n	2b4ec <dwt_ioctl+0x1d10>
   2b48c:	2200      	movs	r2, #0
   2b48e:	4929      	ldr	r1, [pc, #164]	@ (2b534 <dwt_ioctl+0x1d58>)
   2b490:	f7fb fe23 	bl	270da <dwt_read32bitoffsetreg>
   2b494:	f3c0 000b 	ubfx	r0, r0, #0, #12
   2b498:	6020      	str	r0, [r4, #0]
   2b49a:	2200      	movs	r2, #0
   2b49c:	4926      	ldr	r1, [pc, #152]	@ (2b538 <dwt_ioctl+0x1d5c>)
   2b49e:	4630      	mov	r0, r6
   2b4a0:	f7fb fe1b 	bl	270da <dwt_read32bitoffsetreg>
   2b4a4:	f3c0 0015 	ubfx	r0, r0, #0, #22
   2b4a8:	6060      	str	r0, [r4, #4]
   2b4aa:	2200      	movs	r2, #0
   2b4ac:	4923      	ldr	r1, [pc, #140]	@ (2b53c <dwt_ioctl+0x1d60>)
   2b4ae:	4630      	mov	r0, r6
   2b4b0:	f7fb fe13 	bl	270da <dwt_read32bitoffsetreg>
   2b4b4:	f3c0 0015 	ubfx	r0, r0, #0, #22
   2b4b8:	60a0      	str	r0, [r4, #8]
   2b4ba:	2200      	movs	r2, #0
   2b4bc:	4920      	ldr	r1, [pc, #128]	@ (2b540 <dwt_ioctl+0x1d64>)
   2b4be:	4630      	mov	r0, r6
   2b4c0:	f7fb fe0b 	bl	270da <dwt_read32bitoffsetreg>
   2b4c4:	f3c0 0015 	ubfx	r0, r0, #0, #22
   2b4c8:	60e0      	str	r0, [r4, #12]
   2b4ca:	2200      	movs	r2, #0
   2b4cc:	491d      	ldr	r1, [pc, #116]	@ (2b544 <dwt_ioctl+0x1d68>)
   2b4ce:	4630      	mov	r0, r6
   2b4d0:	f7fb fe03 	bl	270da <dwt_read32bitoffsetreg>
   2b4d4:	f3c0 0013 	ubfx	r0, r0, #0, #20
   2b4d8:	6120      	str	r0, [r4, #16]
   2b4da:	2203      	movs	r2, #3
   2b4dc:	490f      	ldr	r1, [pc, #60]	@ (2b51c <dwt_ioctl+0x1d40>)
   2b4de:	4630      	mov	r0, r6
   2b4e0:	f7fb fe50 	bl	27184 <dwt_read8bitoffsetreg>
   2b4e4:	f3c0 1002 	ubfx	r0, r0, #4, #3
   2b4e8:	7520      	strb	r0, [r4, #20]
   2b4ea:	2300      	movs	r3, #0
   2b4ec:	75a3      	strb	r3, [r4, #22]
   2b4ee:	2500      	movs	r5, #0
   2b4f0:	e07c      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b4f2:	bf00      	nop
   2b4f4:	0011003c 	.word	0x0011003c
   2b4f8:	00110044 	.word	0x00110044
   2b4fc:	00110040 	.word	0x00110040
   2b500:	00070048 	.word	0x00070048
   2b504:	f7fc0fff 	.word	0xf7fc0fff
   2b508:	000f0028 	.word	0x000f0028
   2b50c:	0007001c 	.word	0x0007001c
   2b510:	0002c57c 	.word	0x0002c57c
   2b514:	000e0014 	.word	0x000e0014
   2b518:	000e0018 	.word	0x000e0018
   2b51c:	00030054 	.word	0x00030054
   2b520:	000f004c 	.word	0x000f004c
   2b524:	001f0004 	.word	0x001f0004
   2b528:	001f0008 	.word	0x001f0008
   2b52c:	000c0048 	.word	0x000c0048
   2b530:	000c0028 	.word	0x000c0028
   2b534:	000c0058 	.word	0x000c0058
   2b538:	000c0030 	.word	0x000c0030
   2b53c:	000c0034 	.word	0x000c0034
   2b540:	000c0038 	.word	0x000c0038
   2b544:	000c002c 	.word	0x000c002c
   2b548:	2200      	movs	r2, #0
   2b54a:	49aa      	ldr	r1, [pc, #680]	@ (2b7f4 <dwt_ioctl+0x2018>)
   2b54c:	f7fb fdc5 	bl	270da <dwt_read32bitoffsetreg>
   2b550:	f3c0 000b 	ubfx	r0, r0, #0, #12
   2b554:	6020      	str	r0, [r4, #0]
   2b556:	2200      	movs	r2, #0
   2b558:	49a7      	ldr	r1, [pc, #668]	@ (2b7f8 <dwt_ioctl+0x201c>)
   2b55a:	4630      	mov	r0, r6
   2b55c:	f7fb fdbd 	bl	270da <dwt_read32bitoffsetreg>
   2b560:	f3c0 0015 	ubfx	r0, r0, #0, #22
   2b564:	6060      	str	r0, [r4, #4]
   2b566:	2200      	movs	r2, #0
   2b568:	49a4      	ldr	r1, [pc, #656]	@ (2b7fc <dwt_ioctl+0x2020>)
   2b56a:	4630      	mov	r0, r6
   2b56c:	f7fb fdb5 	bl	270da <dwt_read32bitoffsetreg>
   2b570:	f3c0 0015 	ubfx	r0, r0, #0, #22
   2b574:	60a0      	str	r0, [r4, #8]
   2b576:	2200      	movs	r2, #0
   2b578:	f44f 2150 	mov.w	r1, #851968	@ 0xd0000
   2b57c:	4630      	mov	r0, r6
   2b57e:	f7fb fdac 	bl	270da <dwt_read32bitoffsetreg>
   2b582:	f3c0 0015 	ubfx	r0, r0, #0, #22
   2b586:	60e0      	str	r0, [r4, #12]
   2b588:	2200      	movs	r2, #0
   2b58a:	499d      	ldr	r1, [pc, #628]	@ (2b800 <dwt_ioctl+0x2024>)
   2b58c:	4630      	mov	r0, r6
   2b58e:	f7fb fda4 	bl	270da <dwt_read32bitoffsetreg>
   2b592:	f3c0 0013 	ubfx	r0, r0, #0, #20
   2b596:	6120      	str	r0, [r4, #16]
   2b598:	e79f      	b.n	2b4da <dwt_ioctl+0x1cfe>
   2b59a:	2200      	movs	r2, #0
   2b59c:	4999      	ldr	r1, [pc, #612]	@ (2b804 <dwt_ioctl+0x2028>)
   2b59e:	f7fb fd9c 	bl	270da <dwt_read32bitoffsetreg>
   2b5a2:	f3c0 000b 	ubfx	r0, r0, #0, #12
   2b5a6:	6020      	str	r0, [r4, #0]
   2b5a8:	2200      	movs	r2, #0
   2b5aa:	4997      	ldr	r1, [pc, #604]	@ (2b808 <dwt_ioctl+0x202c>)
   2b5ac:	4630      	mov	r0, r6
   2b5ae:	f7fb fd94 	bl	270da <dwt_read32bitoffsetreg>
   2b5b2:	f3c0 0015 	ubfx	r0, r0, #0, #22
   2b5b6:	6060      	str	r0, [r4, #4]
   2b5b8:	2200      	movs	r2, #0
   2b5ba:	4994      	ldr	r1, [pc, #592]	@ (2b80c <dwt_ioctl+0x2030>)
   2b5bc:	4630      	mov	r0, r6
   2b5be:	f7fb fd8c 	bl	270da <dwt_read32bitoffsetreg>
   2b5c2:	f3c0 0015 	ubfx	r0, r0, #0, #22
   2b5c6:	60a0      	str	r0, [r4, #8]
   2b5c8:	2200      	movs	r2, #0
   2b5ca:	4991      	ldr	r1, [pc, #580]	@ (2b810 <dwt_ioctl+0x2034>)
   2b5cc:	4630      	mov	r0, r6
   2b5ce:	f7fb fd84 	bl	270da <dwt_read32bitoffsetreg>
   2b5d2:	f3c0 0015 	ubfx	r0, r0, #0, #22
   2b5d6:	60e0      	str	r0, [r4, #12]
   2b5d8:	2200      	movs	r2, #0
   2b5da:	498e      	ldr	r1, [pc, #568]	@ (2b814 <dwt_ioctl+0x2038>)
   2b5dc:	4630      	mov	r0, r6
   2b5de:	f7fb fd7c 	bl	270da <dwt_read32bitoffsetreg>
   2b5e2:	f3c0 0013 	ubfx	r0, r0, #0, #20
   2b5e6:	6120      	str	r0, [r4, #16]
   2b5e8:	e777      	b.n	2b4da <dwt_ioctl+0x1cfe>
   2b5ea:	2500      	movs	r5, #0
   2b5ec:	4628      	mov	r0, r5
   2b5ee:	b00d      	add	sp, #52	@ 0x34
   2b5f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b5f4:	2500      	movs	r5, #0
   2b5f6:	e7f9      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b5f8:	2500      	movs	r5, #0
   2b5fa:	e7f7      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b5fc:	2500      	movs	r5, #0
   2b5fe:	e7f5      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b600:	2500      	movs	r5, #0
   2b602:	e7f3      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b604:	2500      	movs	r5, #0
   2b606:	e7f1      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b608:	2500      	movs	r5, #0
   2b60a:	e7ef      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b60c:	2500      	movs	r5, #0
   2b60e:	e7ed      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b610:	2500      	movs	r5, #0
   2b612:	e7eb      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b614:	2500      	movs	r5, #0
   2b616:	e7e9      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b618:	2500      	movs	r5, #0
   2b61a:	e7e7      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b61c:	2500      	movs	r5, #0
   2b61e:	e7e5      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b620:	2500      	movs	r5, #0
   2b622:	e7e3      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b624:	2500      	movs	r5, #0
   2b626:	e7e1      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b628:	2500      	movs	r5, #0
   2b62a:	e7df      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b62c:	2500      	movs	r5, #0
   2b62e:	e7dd      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b630:	2500      	movs	r5, #0
   2b632:	e7db      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b634:	2500      	movs	r5, #0
   2b636:	e7d9      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b638:	2500      	movs	r5, #0
   2b63a:	e7d7      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b63c:	2500      	movs	r5, #0
   2b63e:	e7d5      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b640:	2500      	movs	r5, #0
   2b642:	e7d3      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b644:	2500      	movs	r5, #0
   2b646:	e7d1      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b648:	2500      	movs	r5, #0
   2b64a:	e7cf      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b64c:	2500      	movs	r5, #0
   2b64e:	e7cd      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b650:	2500      	movs	r5, #0
   2b652:	e7cb      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b654:	2500      	movs	r5, #0
   2b656:	e7c9      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b658:	2500      	movs	r5, #0
   2b65a:	e7c7      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b65c:	2500      	movs	r5, #0
   2b65e:	e7c5      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b660:	2500      	movs	r5, #0
   2b662:	e7c3      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b664:	2500      	movs	r5, #0
   2b666:	e7c1      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b668:	2500      	movs	r5, #0
   2b66a:	e7bf      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b66c:	2500      	movs	r5, #0
   2b66e:	e7bd      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b670:	2500      	movs	r5, #0
   2b672:	e7bb      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b674:	2500      	movs	r5, #0
   2b676:	e7b9      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b678:	2500      	movs	r5, #0
   2b67a:	e7b7      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b67c:	2500      	movs	r5, #0
   2b67e:	e7b5      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b680:	2500      	movs	r5, #0
   2b682:	e7b3      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b684:	2500      	movs	r5, #0
   2b686:	e7b1      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b688:	2500      	movs	r5, #0
   2b68a:	e7af      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b68c:	2500      	movs	r5, #0
   2b68e:	e7ad      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b690:	2500      	movs	r5, #0
   2b692:	e7ab      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b694:	2500      	movs	r5, #0
   2b696:	e7a9      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b698:	2500      	movs	r5, #0
   2b69a:	e7a7      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b69c:	2500      	movs	r5, #0
   2b69e:	e7a5      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b6a0:	2500      	movs	r5, #0
   2b6a2:	e7a3      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b6a4:	2500      	movs	r5, #0
   2b6a6:	e7a1      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b6a8:	2500      	movs	r5, #0
   2b6aa:	e79f      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b6ac:	2500      	movs	r5, #0
   2b6ae:	e79d      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b6b0:	2500      	movs	r5, #0
   2b6b2:	e79b      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b6b4:	2500      	movs	r5, #0
   2b6b6:	e799      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b6b8:	2500      	movs	r5, #0
   2b6ba:	e797      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b6bc:	2500      	movs	r5, #0
   2b6be:	e795      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b6c0:	2500      	movs	r5, #0
   2b6c2:	e793      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b6c4:	2500      	movs	r5, #0
   2b6c6:	e791      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b6c8:	2500      	movs	r5, #0
   2b6ca:	e78f      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b6cc:	2500      	movs	r5, #0
   2b6ce:	e78d      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b6d0:	2500      	movs	r5, #0
   2b6d2:	e78b      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b6d4:	2500      	movs	r5, #0
   2b6d6:	e789      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b6d8:	2500      	movs	r5, #0
   2b6da:	e787      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b6dc:	2500      	movs	r5, #0
   2b6de:	e785      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b6e0:	2500      	movs	r5, #0
   2b6e2:	e783      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b6e4:	2500      	movs	r5, #0
   2b6e6:	e781      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b6e8:	2500      	movs	r5, #0
   2b6ea:	e77f      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b6ec:	2500      	movs	r5, #0
   2b6ee:	e77d      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b6f0:	2500      	movs	r5, #0
   2b6f2:	e77b      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b6f4:	2500      	movs	r5, #0
   2b6f6:	e779      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b6f8:	2500      	movs	r5, #0
   2b6fa:	e777      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b6fc:	2500      	movs	r5, #0
   2b6fe:	e775      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b700:	2500      	movs	r5, #0
   2b702:	e773      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b704:	2500      	movs	r5, #0
   2b706:	e771      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b708:	2500      	movs	r5, #0
   2b70a:	e76f      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b70c:	2500      	movs	r5, #0
   2b70e:	e76d      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b710:	2500      	movs	r5, #0
   2b712:	e76b      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b714:	2500      	movs	r5, #0
   2b716:	e769      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b718:	2500      	movs	r5, #0
   2b71a:	e767      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b71c:	2500      	movs	r5, #0
   2b71e:	e765      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b720:	2500      	movs	r5, #0
   2b722:	e763      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b724:	2500      	movs	r5, #0
   2b726:	e761      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b728:	2500      	movs	r5, #0
   2b72a:	e75f      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b72c:	2500      	movs	r5, #0
   2b72e:	e75d      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b730:	2500      	movs	r5, #0
   2b732:	e75b      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b734:	2500      	movs	r5, #0
   2b736:	e759      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b738:	2500      	movs	r5, #0
   2b73a:	e757      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b73c:	2500      	movs	r5, #0
   2b73e:	e755      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b740:	2500      	movs	r5, #0
   2b742:	e753      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b744:	2500      	movs	r5, #0
   2b746:	e751      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b748:	2500      	movs	r5, #0
   2b74a:	e74f      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b74c:	2500      	movs	r5, #0
   2b74e:	e74d      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b750:	2500      	movs	r5, #0
   2b752:	e74b      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b754:	2500      	movs	r5, #0
   2b756:	e749      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b758:	2500      	movs	r5, #0
   2b75a:	e747      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b75c:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
   2b760:	e744      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b762:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
   2b766:	e741      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b768:	2500      	movs	r5, #0
   2b76a:	e73f      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b76c:	2500      	movs	r5, #0
   2b76e:	e73d      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b770:	2500      	movs	r5, #0
   2b772:	e73b      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b774:	2500      	movs	r5, #0
   2b776:	e739      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b778:	2500      	movs	r5, #0
   2b77a:	e737      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b77c:	2500      	movs	r5, #0
   2b77e:	e735      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b780:	2500      	movs	r5, #0
   2b782:	e733      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b784:	2500      	movs	r5, #0
   2b786:	e731      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b788:	2500      	movs	r5, #0
   2b78a:	e72f      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b78c:	2500      	movs	r5, #0
   2b78e:	e72d      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b790:	2500      	movs	r5, #0
   2b792:	e72b      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b794:	2500      	movs	r5, #0
   2b796:	e729      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b798:	2500      	movs	r5, #0
   2b79a:	e727      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b79c:	2500      	movs	r5, #0
   2b79e:	e725      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b7a0:	2500      	movs	r5, #0
   2b7a2:	e723      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b7a4:	2500      	movs	r5, #0
   2b7a6:	e721      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b7a8:	2500      	movs	r5, #0
   2b7aa:	e71f      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b7ac:	2500      	movs	r5, #0
   2b7ae:	e71d      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b7b0:	2500      	movs	r5, #0
   2b7b2:	e71b      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b7b4:	2500      	movs	r5, #0
   2b7b6:	e719      	b.n	2b5ec <dwt_ioctl+0x1e10>
   2b7b8:	f899 3011 	ldrb.w	r3, [r9, #17]
   2b7bc:	1e5a      	subs	r2, r3, #1
   2b7be:	b2d2      	uxtb	r2, r2
   2b7c0:	2a01      	cmp	r2, #1
   2b7c2:	f67e ae60 	bls.w	2a486 <dwt_ioctl+0xcaa>
   2b7c6:	2202      	movs	r2, #2
   2b7c8:	f7fe be07 	b.w	2a3da <dwt_ioctl+0xbfe>
   2b7cc:	4d12      	ldr	r5, [pc, #72]	@ (2b818 <dwt_ioctl+0x203c>)
   2b7ce:	e57c      	b.n	2b2ca <dwt_ioctl+0x1aee>
   2b7d0:	2400      	movs	r4, #0
   2b7d2:	9400      	str	r4, [sp, #0]
   2b7d4:	f06f 73c0 	mvn.w	r3, #25165824	@ 0x1800000
   2b7d8:	4622      	mov	r2, r4
   2b7da:	2110      	movs	r1, #16
   2b7dc:	f7fc fe62 	bl	284a4 <dwt_modify32bitoffsetreg>
   2b7e0:	9400      	str	r4, [sp, #0]
   2b7e2:	4b0e      	ldr	r3, [pc, #56]	@ (2b81c <dwt_ioctl+0x2040>)
   2b7e4:	4622      	mov	r2, r4
   2b7e6:	f44f 21a0 	mov.w	r1, #327680	@ 0x50000
   2b7ea:	4630      	mov	r0, r6
   2b7ec:	f7fc fe5a 	bl	284a4 <dwt_modify32bitoffsetreg>
   2b7f0:	e57e      	b.n	2b2f0 <dwt_ioctl+0x1b14>
   2b7f2:	bf00      	nop
   2b7f4:	000d0020 	.word	0x000d0020
   2b7f8:	000c0064 	.word	0x000c0064
   2b7fc:	000c0068 	.word	0x000c0068
   2b800:	000c0060 	.word	0x000c0060
   2b804:	000d0068 	.word	0x000d0068
   2b808:	000d0040 	.word	0x000d0040
   2b80c:	000d0044 	.word	0x000d0044
   2b810:	000d0048 	.word	0x000d0048
   2b814:	000d003c 	.word	0x000d003c
   2b818:	08001000 	.word	0x08001000
   2b81c:	f7fc0fff 	.word	0xf7fc0fff

0002b820 <_init>:
   2b820:	b5f0      	push	{r4, r5, r6, r7, lr}
   2b822:	b085      	sub	sp, #20
   2b824:	4604      	mov	r4, r0
   2b826:	6b43      	ldr	r3, [r0, #52]	@ 0x34
   2b828:	6819      	ldr	r1, [r3, #0]
   2b82a:	f7fd fea1 	bl	29570 <ull_initialise>
   2b82e:	4606      	mov	r6, r0
   2b830:	6823      	ldr	r3, [r4, #0]
   2b832:	691b      	ldr	r3, [r3, #16]
   2b834:	4798      	blx	r3
   2b836:	ab03      	add	r3, sp, #12
   2b838:	2200      	movs	r2, #0
   2b83a:	4611      	mov	r1, r2
   2b83c:	4620      	mov	r0, r4
   2b83e:	f7fd ffcd 	bl	297dc <dwt_ioctl>
   2b842:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   2b844:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
   2b846:	6819      	ldr	r1, [r3, #0]
   2b848:	4620      	mov	r0, r4
   2b84a:	f7fd fc43 	bl	290d4 <ull_configure>
   2b84e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   2b850:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
   2b852:	6859      	ldr	r1, [r3, #4]
   2b854:	4620      	mov	r0, r4
   2b856:	f7fd f993 	bl	28b80 <ull_configuretxrf>
   2b85a:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   2b85c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
   2b85e:	89d9      	ldrh	r1, [r3, #14]
   2b860:	4620      	mov	r0, r4
   2b862:	f7fc f8be 	bl	279e2 <ull_setrxantennadelay>
   2b866:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   2b868:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
   2b86a:	8999      	ldrh	r1, [r3, #12]
   2b86c:	4620      	mov	r0, r4
   2b86e:	f7fc f8c0 	bl	279f2 <ull_settxantennadelay>
   2b872:	2100      	movs	r1, #0
   2b874:	4620      	mov	r0, r4
   2b876:	f7fc f94a 	bl	27b0e <ull_setrxaftertxdelay>
   2b87a:	2500      	movs	r5, #0
   2b87c:	9500      	str	r5, [sp, #0]
   2b87e:	f64f 53ff 	movw	r3, #65023	@ 0xfdff
   2b882:	462a      	mov	r2, r5
   2b884:	2110      	movs	r1, #16
   2b886:	4620      	mov	r0, r4
   2b888:	f7fd fb0c 	bl	28ea4 <dwt_modify16bitoffsetreg>
   2b88c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   2b88e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
   2b890:	895a      	ldrh	r2, [r3, #10]
   2b892:	8919      	ldrh	r1, [r3, #8]
   2b894:	4620      	mov	r0, r4
   2b896:	f7fd fa03 	bl	28ca0 <ull_configureframefilter>
   2b89a:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   2b89c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
   2b89e:	8a1b      	ldrh	r3, [r3, #16]
   2b8a0:	2202      	movs	r2, #2
   2b8a2:	210c      	movs	r1, #12
   2b8a4:	4620      	mov	r0, r4
   2b8a6:	f7fc f88c 	bl	279c2 <dwt_write16bitoffsetreg>
   2b8aa:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   2b8ac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
   2b8ae:	8a5b      	ldrh	r3, [r3, #18]
   2b8b0:	462a      	mov	r2, r5
   2b8b2:	210c      	movs	r1, #12
   2b8b4:	4620      	mov	r0, r4
   2b8b6:	f7fc f884 	bl	279c2 <dwt_write16bitoffsetreg>
   2b8ba:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   2b8bc:	7a19      	ldrb	r1, [r3, #8]
   2b8be:	4620      	mov	r0, r4
   2b8c0:	f7fd fb2e 	bl	28f20 <ull_setleds>
   2b8c4:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   2b8c6:	68d9      	ldr	r1, [r3, #12]
   2b8c8:	4620      	mov	r0, r4
   2b8ca:	f7fc f949 	bl	27b60 <ull_setlnapamode>
   2b8ce:	6b61      	ldr	r1, [r4, #52]	@ 0x34
   2b8d0:	7e0b      	ldrb	r3, [r1, #24]
   2b8d2:	694a      	ldr	r2, [r1, #20]
   2b8d4:	6909      	ldr	r1, [r1, #16]
   2b8d6:	4620      	mov	r0, r4
   2b8d8:	f7fd fa68 	bl	28dac <ull_setinterrupt>
   2b8dc:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   2b8de:	7f9a      	ldrb	r2, [r3, #30]
   2b8e0:	8b99      	ldrh	r1, [r3, #28]
   2b8e2:	4620      	mov	r0, r4
   2b8e4:	f7fc fb90 	bl	28008 <ull_configuresleep>
   2b8e8:	6d22      	ldr	r2, [r4, #80]	@ 0x50
   2b8ea:	7b53      	ldrb	r3, [r2, #13]
   2b8ec:	2b2e      	cmp	r3, #46	@ 0x2e
   2b8ee:	d005      	beq.n	2b8fc <_init+0xdc>
   2b8f0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   2b8f2:	f893 302c 	ldrb.w	r3, [r3, #44]	@ 0x2c
   2b8f6:	f033 033f 	bics.w	r3, r3, #63	@ 0x3f
   2b8fa:	d00a      	beq.n	2b912 <_init+0xf2>
   2b8fc:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   2b8fe:	f893 302c 	ldrb.w	r3, [r3, #44]	@ 0x2c
   2b902:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
   2b906:	7353      	strb	r3, [r2, #13]
   2b908:	2200      	movs	r2, #0
   2b90a:	4928      	ldr	r1, [pc, #160]	@ (2b9ac <_init+0x18c>)
   2b90c:	4620      	mov	r0, r4
   2b90e:	f7fc faa7 	bl	27e60 <dwt_write8bitoffsetreg>
   2b912:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   2b914:	f893 102d 	ldrb.w	r1, [r3, #45]	@ 0x2d
   2b918:	4620      	mov	r0, r4
   2b91a:	f7fc ff63 	bl	287e4 <ull_configciadiag>
   2b91e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   2b920:	6a19      	ldr	r1, [r3, #32]
   2b922:	4620      	mov	r0, r4
   2b924:	f7fc f93c 	bl	27ba0 <ull_configurestskey>
   2b928:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   2b92a:	6a59      	ldr	r1, [r3, #36]	@ 0x24
   2b92c:	4620      	mov	r0, r4
   2b92e:	f7fc f95b 	bl	27be8 <ull_configurestsiv>
   2b932:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   2b934:	f893 302e 	ldrb.w	r3, [r3, #46]	@ 0x2e
   2b938:	bb9b      	cbnz	r3, 2b9a2 <_init+0x182>
   2b93a:	6b63      	ldr	r3, [r4, #52]	@ 0x34
   2b93c:	f893 102f 	ldrb.w	r1, [r3, #47]	@ 0x2f
   2b940:	4620      	mov	r0, r4
   2b942:	f7fc fb05 	bl	27f50 <ull_configeventcounters>
   2b946:	f994 504c 	ldrsb.w	r5, [r4, #76]	@ 0x4c
   2b94a:	2d00      	cmp	r5, #0
   2b94c:	db26      	blt.n	2b99c <_init+0x17c>
   2b94e:	2301      	movs	r3, #1
   2b950:	fa03 f505 	lsl.w	r5, r3, r5
   2b954:	b2af      	uxth	r7, r5
   2b956:	4a16      	ldr	r2, [pc, #88]	@ (2b9b0 <_init+0x190>)
   2b958:	4639      	mov	r1, r7
   2b95a:	4620      	mov	r0, r4
   2b95c:	f7fc fed4 	bl	28708 <ull_setgpiomode>
   2b960:	f10d 030a 	add.w	r3, sp, #10
   2b964:	9300      	str	r3, [sp, #0]
   2b966:	2302      	movs	r3, #2
   2b968:	2200      	movs	r2, #0
   2b96a:	f44f 21a0 	mov.w	r1, #327680	@ 0x50000
   2b96e:	4620      	mov	r0, r4
   2b970:	f7fb fba9 	bl	270c6 <dwt_readfromdevice>
   2b974:	f8bd 300a 	ldrh.w	r3, [sp, #10]
   2b978:	ea23 0305 	bic.w	r3, r3, r5
   2b97c:	f8ad 300a 	strh.w	r3, [sp, #10]
   2b980:	2200      	movs	r2, #0
   2b982:	490c      	ldr	r1, [pc, #48]	@ (2b9b4 <_init+0x194>)
   2b984:	4620      	mov	r0, r4
   2b986:	f7fc f81c 	bl	279c2 <dwt_write16bitoffsetreg>
   2b98a:	f994 204d 	ldrsb.w	r2, [r4, #77]	@ 0x4d
   2b98e:	fab2 f282 	clz	r2, r2
   2b992:	0952      	lsrs	r2, r2, #5
   2b994:	4639      	mov	r1, r7
   2b996:	4620      	mov	r0, r4
   2b998:	f7fd fb40 	bl	2901c <ull_setgpiovalue>
   2b99c:	4630      	mov	r0, r6
   2b99e:	b005      	add	sp, #20
   2b9a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
   2b9a2:	4620      	mov	r0, r4
   2b9a4:	f7fc ff54 	bl	28850 <ull_configurestsloadiv>
   2b9a8:	e7c7      	b.n	2b93a <_init+0x11a>
   2b9aa:	bf00      	nop
   2b9ac:	00090014 	.word	0x00090014
   2b9b0:	01200492 	.word	0x01200492
   2b9b4:	00050008 	.word	0x00050008
   2b9b8:	42667357 	.word	0x42667357
   2b9bc:	6c416675 	.word	0x6c416675
   2b9c0:	20636f6c 	.word	0x20636f6c
   2b9c4:	6c696166 	.word	0x6c696166
   2b9c8:	6c206465 	.word	0x6c206465
   2b9cc:	253a6e65 	.word	0x253a6e65
   2b9d0:	00000075 	.word	0x00000075
   2b9d4:	58323025 	.word	0x58323025
   2b9d8:	00000020 	.word	0x00000020
   2b9dc:	0000000a 	.word	0x0000000a
   2b9e0:	00000a0a 	.word	0x00000a0a
   2b9e4:	412f2e2e 	.word	0x412f2e2e
   2b9e8:	7169626d 	.word	0x7169626d
   2b9ec:	2f4b4453 	.word	0x2f4b4453
   2b9f0:	64726f63 	.word	0x64726f63
   2b9f4:	772f6f69 	.word	0x772f6f69
   2b9f8:	732f6673 	.word	0x732f6673
   2b9fc:	6372756f 	.word	0x6372756f
   2ba00:	702f7365 	.word	0x702f7365
   2ba04:	2f74726f 	.word	0x2f74726f
   2ba08:	65657266 	.word	0x65657266
   2ba0c:	736f7472 	.word	0x736f7472
   2ba10:	6673772f 	.word	0x6673772f
   2ba14:	6172745f 	.word	0x6172745f
   2ba18:	632e6563 	.word	0x632e6563
   2ba1c:	00000000 	.word	0x00000000
   2ba20:	732f2e2e 	.word	0x732f2e2e
   2ba24:	702f6372 	.word	0x702f6372
   2ba28:	70697265 	.word	0x70697265
   2ba2c:	61726568 	.word	0x61726568
   2ba30:	732f736c 	.word	0x732f736c
   2ba34:	692f6372 	.word	0x692f6372
   2ba38:	632e756d 	.word	0x632e756d
   2ba3c:	00000000 	.word	0x00000000
   2ba40:	00000001 	.word	0x00000001
   2ba44:	00061a80 	.word	0x00061a80
	...
   2ba54:	732f2e2e 	.word	0x732f2e2e
   2ba58:	702f6372 	.word	0x702f6372
   2ba5c:	70697265 	.word	0x70697265
   2ba60:	61726568 	.word	0x61726568
   2ba64:	732f736c 	.word	0x732f736c
   2ba68:	6c2f6372 	.word	0x6c2f6372
   2ba6c:	6967676f 	.word	0x6967676f
   2ba70:	632e676e 	.word	0x632e676e
   2ba74:	00000000 	.word	0x00000000
   2ba78:	2d2d2d0a 	.word	0x2d2d2d0a
   2ba7c:	2d2d2d2d 	.word	0x2d2d2d2d
   2ba80:	2d2d2d2d 	.word	0x2d2d2d2d
   2ba84:	2d2d2d2d 	.word	0x2d2d2d2d
   2ba88:	2d2d2d2d 	.word	0x2d2d2d2d
   2ba8c:	2d2d2d2d 	.word	0x2d2d2d2d
   2ba90:	2d2d2d2d 	.word	0x2d2d2d2d
   2ba94:	2d2d2d2d 	.word	0x2d2d2d2d
   2ba98:	2d2d2d2d 	.word	0x2d2d2d2d
   2ba9c:	2d2d2d2d 	.word	0x2d2d2d2d
   2baa0:	00000a2d 	.word	0x00000a2d
   2baa4:	65736552 	.word	0x65736552
   2baa8:	65522074 	.word	0x65522074
   2baac:	6e6f7361 	.word	0x6e6f7361
   2bab0:	00203a73 	.word	0x00203a73
   2bab4:	65747845 	.word	0x65747845
   2bab8:	6c616e72 	.word	0x6c616e72
   2babc:	73655220 	.word	0x73655220
   2bac0:	202c7465 	.word	0x202c7465
   2bac4:	00000000 	.word	0x00000000
   2bac8:	50205748 	.word	0x50205748
   2bacc:	7265776f 	.word	0x7265776f
   2bad0:	206e4f2d 	.word	0x206e4f2d
   2bad4:	65736552 	.word	0x65736552
   2bad8:	00202c74 	.word	0x00202c74
   2badc:	776f7242 	.word	0x776f7242
   2bae0:	754f2d6e 	.word	0x754f2d6e
   2bae4:	65522074 	.word	0x65522074
   2bae8:	2c746573 	.word	0x2c746573
   2baec:	00000020 	.word	0x00000020
   2baf0:	50205753 	.word	0x50205753
   2baf4:	7265776f 	.word	0x7265776f
   2baf8:	206e4f2d 	.word	0x206e4f2d
   2bafc:	65736552 	.word	0x65736552
   2bb00:	00202c74 	.word	0x00202c74
   2bb04:	50205753 	.word	0x50205753
   2bb08:	7265776f 	.word	0x7265776f
   2bb0c:	206e4f2d 	.word	0x206e4f2d
   2bb10:	74696e49 	.word	0x74696e49
   2bb14:	696c6169 	.word	0x696c6169
   2bb18:	6974617a 	.word	0x6974617a
   2bb1c:	202c6e6f 	.word	0x202c6e6f
   2bb20:	00000000 	.word	0x00000000
   2bb24:	75626544 	.word	0x75626544
   2bb28:	72656767 	.word	0x72656767
   2bb2c:	73655220 	.word	0x73655220
   2bb30:	202c7465 	.word	0x202c7465
   2bb34:	00000000 	.word	0x00000000
   2bb38:	63746157 	.word	0x63746157
   2bb3c:	6f442068 	.word	0x6f442068
   2bb40:	69542067 	.word	0x69542067
   2bb44:	2072656d 	.word	0x2072656d
   2bb48:	65736552 	.word	0x65736552
   2bb4c:	00202c74 	.word	0x00202c74
   2bb50:	65726e55 	.word	0x65726e55
   2bb54:	616c7567 	.word	0x616c7567
   2bb58:	20646574 	.word	0x20646574
   2bb5c:	70707553 	.word	0x70707553
   2bb60:	4220796c 	.word	0x4220796c
   2bb64:	6e776f72 	.word	0x6e776f72
   2bb68:	2c74756f 	.word	0x2c74756f
   2bb6c:	00000020 	.word	0x00000020
   2bb70:	65726f43 	.word	0x65726f43
   2bb74:	67655220 	.word	0x67655220
   2bb78:	74616c75 	.word	0x74616c75
   2bb7c:	4220726f 	.word	0x4220726f
   2bb80:	6e776f72 	.word	0x6e776f72
   2bb84:	2c74756f 	.word	0x2c74756f
   2bb88:	00000020 	.word	0x00000020
   2bb8c:	6f6d654d 	.word	0x6f6d654d
   2bb90:	52207972 	.word	0x52207972
   2bb94:	6c756765 	.word	0x6c756765
   2bb98:	726f7461 	.word	0x726f7461
   2bb9c:	6f724220 	.word	0x6f724220
   2bba0:	756f6e77 	.word	0x756f6e77
   2bba4:	00202c74 	.word	0x00202c74
   2bba8:	68676948 	.word	0x68676948
   2bbac:	776f502d 	.word	0x776f502d
   2bbb0:	4d207265 	.word	0x4d207265
   2bbb4:	726f6d65 	.word	0x726f6d65
   2bbb8:	65522079 	.word	0x65522079
   2bbbc:	616c7567 	.word	0x616c7567
   2bbc0:	20726f74 	.word	0x20726f74
   2bbc4:	776f7242 	.word	0x776f7242
   2bbc8:	74756f6e 	.word	0x74756f6e
   2bbcc:	0000202c 	.word	0x0000202c
   2bbd0:	2d776f4c 	.word	0x2d776f4c
   2bbd4:	65776f50 	.word	0x65776f50
   2bbd8:	6f432072 	.word	0x6f432072
   2bbdc:	52206572 	.word	0x52206572
   2bbe0:	6c756765 	.word	0x6c756765
   2bbe4:	726f7461 	.word	0x726f7461
   2bbe8:	6f724220 	.word	0x6f724220
   2bbec:	756f6e77 	.word	0x756f6e77
   2bbf0:	00202c74 	.word	0x00202c74
   2bbf4:	0000000a 	.word	0x0000000a
   2bbf8:	72207525 	.word	0x72207525
   2bbfc:	65676e61 	.word	0x65676e61
   2bc00:	20402073 	.word	0x20402073
   2bc04:	656d6954 	.word	0x656d6954
   2bc08:	6d617473 	.word	0x6d617473
   2bc0c:	75252070 	.word	0x75252070
   2bc10:	00000a3a 	.word	0x00000a3a
   2bc14:	52202020 	.word	0x52202020
   2bc18:	65676e61 	.word	0x65676e61
   2bc1c:	206f7420 	.word	0x206f7420
   2bc20:	30257830 	.word	0x30257830
   2bc24:	203a5832 	.word	0x203a5832
   2bc28:	000a6425 	.word	0x000a6425
   2bc2c:	07070000 	.word	0x07070000
   2bc30:	00000001 	.word	0x00000001
   2bc34:	4e524157 	.word	0x4e524157
   2bc38:	3a474e49 	.word	0x3a474e49
   2bc3c:	776f5020 	.word	0x776f5020
   2bc40:	6e697265 	.word	0x6e697265
   2bc44:	666f2067 	.word	0x666f2067
   2bc48:	2e2e2e66 	.word	0x2e2e2e66
   2bc4c:	0000000a 	.word	0x0000000a
   2bc50:	4d204e49 	.word	0x4d204e49
   2bc54:	4f49544f 	.word	0x4f49544f
   2bc58:	0000004e 	.word	0x0000004e
   2bc5c:	54415453 	.word	0x54415453
   2bc60:	414e4f49 	.word	0x414e4f49
   2bc64:	00005952 	.word	0x00005952
   2bc68:	69766544 	.word	0x69766544
   2bc6c:	69206563 	.word	0x69206563
   2bc70:	73252073 	.word	0x73252073
   2bc74:	0000000a 	.word	0x0000000a
   2bc78:	203d2058 	.word	0x203d2058
   2bc7c:	202c6425 	.word	0x202c6425
   2bc80:	203d2059 	.word	0x203d2059
   2bc84:	202c6425 	.word	0x202c6425
   2bc88:	203d205a 	.word	0x203d205a
   2bc8c:	000a6425 	.word	0x000a6425

0002bc90 <ui32MCUAllowed>:
	...

0002bca4 <ui32DSP0Allowed>:
	...

0002bcb8 <ui32DSP1Allowed>:
	...

0002bccc <ui32SharedAccess>:
	...

0002bce0 <sGlobalAccess>:
   2bce0:	0002bccc 0002bc90 0002bca4 0002bcb8     ................
   2bcf0:	10060004 10060018 1006002c              ........,...

0002bcfc <am_hal_daxi_defaults>:
   2bcfc:	0f020100 00000001                       ........

0002bd04 <am_hal_gpio_pincfg_input>:
   2bd04:	00000093                                ....

0002bd08 <am_hal_gpio_pincfg_output>:
   2bd08:	00000183                                ....

0002bd0c <g_ui32DSpintbl>:
   2bd0c:	8fc007e0 e3fbffff 01ffffff 00000000     ................

0002bd1c <am_hal_pwrctrl_peripheral_control>:
   2bd1c:	40021004 00000001 40021008 00000001     ...@.......@....
   2bd2c:	40021004 00000002 40021008 0000001e     ...@.......@....
   2bd3c:	40021004 00000004 40021008 0000001e     ...@.......@....
   2bd4c:	40021004 00000008 40021008 0000001e     ...@.......@....
   2bd5c:	40021004 00000010 40021008 0000001e     ...@.......@....
   2bd6c:	40021004 00000020 40021008 000001e0     ...@ ......@....
   2bd7c:	40021004 00000040 40021008 000001e0     ...@@......@....
   2bd8c:	40021004 00000080 40021008 000001e0     ...@.......@....
   2bd9c:	40021004 00000100 40021008 000001e0     ...@.......@....
   2bdac:	40021004 00000200 40021008 00001e00     ...@.......@....
   2bdbc:	40021004 00000400 40021008 00001e00     ...@.......@....
   2bdcc:	40021004 00000800 40021008 00001e00     ...@.......@....
   2bddc:	40021004 00001000 40021008 00001e00     ...@.......@....
   2bdec:	40021004 00002000 40021008 00002000     ...@. .....@. ..
   2bdfc:	40021004 00004000 40021008 0001c000     ...@.@.....@....
   2be0c:	40021004 00008000 40021008 0001c000     ...@.......@....
   2be1c:	40021004 00010000 40021008 0001c000     ...@.......@....
   2be2c:	40021004 00020000 40021008 00020000     ...@.......@....
   2be3c:	40021004 00040000 40021008 00040000     ...@.......@....
   2be4c:	40021004 00080000 40021008 00080000     ...@.......@....
   2be5c:	40021004 00100000 40021008 00100000     ...@.......@....
   2be6c:	40021004 00200000 40021008 00200000     ...@.. ....@.. .
   2be7c:	40021004 00400000 40021008 00400000     ...@..@....@..@.
   2be8c:	40021004 00800000 40021008 00800000     ...@.......@....
   2be9c:	40021004 01000000 40021008 01000000     ...@.......@....
   2beac:	4002100c 00000001 40021010 000000ff     ...@.......@....
   2bebc:	4002100c 00000002 40021010 000000ff     ...@.......@....
   2becc:	4002100c 00000004 40021010 000000ff     ...@.......@....
   2bedc:	4002100c 00000008 40021010 000000ff     ...@.......@....
   2beec:	4002100c 00000010 40021010 000000ff     ...@.......@....
   2befc:	4002100c 00000020 40021010 000000ff     ...@ ......@....
   2bf0c:	4002100c 00000040 40021010 000000ff     ...@@......@....
   2bf1c:	4002100c 00000080 40021010 000000ff     ...@.......@....
   2bf2c:	4002100c 00000400 40021010 00000400     ...@.......@....

0002bf3c <g_DefaultMcuMemCfg>:
   2bf3c:	07070102 00000001                       ........

0002bf44 <g_DefaultSRAMCfg>:
   2bf44:	00000003 00000300                       ........

0002bf4c <g_am_hal_bootrom_helper>:
   2bf4c:	0800004d 08000051 08000055 08000059     M...Q...U...Y...
   2bf5c:	0800006d 08000075 08000079 08000081     m...u...y.......
   2bf6c:	08000099 0800009d                       ........

0002bf74 <gAmHalCmdQReg>:
   2bf74:	40050228 4005022c 40050240 40050244     (..@,..@@..@D..@
   2bf84:	4005023c 00008000 40050230 00000001     <..@....0..@....
   2bf94:	00000004 00000002 40051228 4005122c     ........(..@,..@
   2bfa4:	40051240 40051244 4005123c 00008000     @..@D..@<..@....
   2bfb4:	40051230 00000001 00000004 00000002     0..@............
   2bfc4:	40052228 4005222c 40052240 40052244     (".@,".@@".@D".@
   2bfd4:	4005223c 00008000 40052230 00000001     <".@....0".@....
   2bfe4:	00000004 00000002 40053228 4005322c     ........(2.@,2.@
   2bff4:	40053240 40053244 4005323c 00008000     @2.@D2.@<2.@....
   2c004:	40053230 00000001 00000004 00000002     02.@............
   2c014:	40054228 4005422c 40054240 40054244     (B.@,B.@@B.@DB.@
   2c024:	4005423c 00008000 40054230 00000001     <B.@....0B.@....
   2c034:	00000004 00000002 40055228 4005522c     ........(R.@,R.@
   2c044:	40055240 40055244 4005523c 00008000     @R.@DR.@<R.@....
   2c054:	40055230 00000001 00000004 00000002     0R.@............
   2c064:	40056228 4005622c 40056240 40056244     (b.@,b.@@b.@Db.@
   2c074:	4005623c 00008000 40056230 00000001     <b.@....0b.@....
   2c084:	00000004 00000002 40057228 4005722c     ........(r.@,r.@
   2c094:	40057240 40057244 4005723c 00008000     @r.@Dr.@<r.@....
   2c0a4:	40057230 00000001 00000004 00000002     0r.@............
   2c0b4:	400602a0 400602a8 400602c0 400602c4     ...@...@...@...@
   2c0c4:	400602b8 00004000 400602ac 00000001     ...@.@.....@....
   2c0d4:	00000004 00000008 400612a0 400612a8     ...........@...@
   2c0e4:	400612c0 400612c4 400612b8 00004000     ...@...@...@.@..
   2c0f4:	400612ac 00000001 00000004 00000008     ...@............
   2c104:	400622a0 400622a8 400622c0 400622c4     .".@.".@.".@.".@
   2c114:	400622b8 00004000 400622ac 00000001     .".@.@...".@....
   2c124:	00000004 00000008                       ........

0002c12c <crcTable>:
   2c12c:	090e0700 15121b1c 31363f38 2d2a2324     ........8?61$#*-
   2c13c:	797e7770 65626b6c 41464f48 5d5a5354     pw~ylkbeHOFATSZ]
   2c14c:	e9eee7e0 f5f2fbfc d1d6dfd8 cdcac3c4     ................
   2c15c:	999e9790 85828b8c a1a6afa8 bdbab3b4     ................
   2c16c:	cec9c0c7 d2d5dcdb f6f1f8ff eaede4e3     ................
   2c17c:	beb9b0b7 a2a5acab 8681888f 9a9d9493     ................
   2c18c:	2e292027 32353c3b 1611181f 0a0d0403     ' ).;<52........
   2c19c:	5e595057 42454c4b 6661686f 7a7d7473     WPY^KLEBohafst}z
   2c1ac:	80878e89 9c9b9295 b8bfb6b1 a4a3aaad     ................
   2c1bc:	f0f7fef9 ecebe2e5 c8cfc6c1 d4d3dadd     ................
   2c1cc:	60676e69 7c7b7275 585f5651 44434a4d     ing`ur{|QV_XMJCD
   2c1dc:	10171e19 0c0b0205 282f2621 34333a3d     ........!&/(=:34
   2c1ec:	4740494e 5b5c5552 7f787176 63646d6a     NI@GRU\[vqx.jmdc
   2c1fc:	3730393e 2b2c2522 0f080106 13141d1a     >907"%,+........
   2c20c:	a7a0a9ae bbbcb5b2 9f989196 83848d8a     ................
   2c21c:	d7d0d9de cbccc5c2 efe8e1e6 f3f4fdfa     ................

0002c22c <dw3000_mcps_ops>:
   2c22c:	0002285d 0001e775 0001e449 0001e511     ](..u...I.......
   2c23c:	0001e4fd 0001e4db 0001e6e9 00000000     ................
	...
   2c254:	0001fdf5 00020151 0001fcf5 00020839     ....Q.......9...
   2c264:	0001f341                                A...

0002c268 <dw3000_ops>:
   2c268:	000203e5 0001f9d5 0001fda9 0001f8a1     ................
   2c278:	00020309 0001f015 0001ff25 0001fcf5     ........%.......
   2c288:	0001f90d 00022739 0001e777 00020839     ....9'..w...9...
   2c298:	0001f341 0001e765                       A...e...

0002c2a0 <fine_gain_lut_chan5>:
   2c2a0:	1c1d2000 0d0c1214 08070a0a 06050706     . ..............
   2c2b0:	04040505 03030404 03020303 03020302     ................
   2c2c0:	02020203 02010201 01010201 01010101     ................
   2c2d0:	01010101 01010101 01010101 01010101     ................

0002c2e0 <fine_gain_lut_chan9>:
   2c2e0:	120e0b00 0c0a0f0f 08070909 06050706     ................
   2c2f0:	05040505 04030404 03030303 03020303     ................
   2c300:	02020203 02010202 02020202 02010201     ................
   2c310:	02010101 01010101 01010101 01010100     ................

0002c320 <lut_coarse_gain>:
   2c320:	00050d20                                 ...

0002c324 <regNames>:
	...
   2c32c:	58335744 00005858 58335744 44205858     DW3XXX..DW3XXX D
   2c33c:	63697665 72442065 72657669 72655620     evice Driver Ver
   2c34c:	6e6f6973 2e363020 302e3030 00000037     sion 06.00.07...

0002c35c <sts_length_factors>:
   2c35c:	05a80400 0b500800 16a11000 00002000     ......P...... ..

0002c36c <dw3700_mcps_ops>:
   2c36c:	00026dd9 00022a1d 0001e449 0001e511     .m...*..I.......
   2c37c:	0001e4fd 0001e4db 0001e6e9 00000000     ................
	...
   2c394:	00023f89 000243b9 000242e1 00024ced     .?...C...B...L..
   2c3a4:	000239bd                                .9..

0002c3a8 <dw3700_ops>:
   2c3a8:	00024615 00023931 00023f3d 000236c9     .F..19..=?...6..
   2c3b8:	00024539 00023305 000240b9 000242e1     9E...3...@...B..
   2c3c8:	00024bbd 00024a95 00022a1f 00024ced     .K...J...*...L..
   2c3d8:	000239bd 00022a0d                       .9...*..

0002c3e0 <fine_gain_lut_chan5>:
   2c3e0:	1c1d2000 0d0c1214 08070a0a 06050706     . ..............
   2c3f0:	04040505 03030404 03020303 03020302     ................
   2c400:	02020203 02010201 01010201 01010101     ................
   2c410:	01010101 01010101 01010101 01010101     ................

0002c420 <fine_gain_lut_chan9>:
   2c420:	120e0b00 0c0a0f0f 08070909 06050706     ................
   2c430:	05040505 04030404 03030303 03020303     ................
   2c440:	02020203 02010202 02020202 02010201     ................
   2c450:	02010101 01010101 01010101 01010100     ................

0002c460 <lut_coarse_gain>:
   2c460:	00050d20                                 ...

0002c464 <regNames>:
	...

0002c46c <sts_length_factors>:
   2c46c:	05a80400 0b500800 16a11000 00002000     ......P...... ..

0002c47c <dw3720_mcps_ops>:
   2c47c:	0002b821 00026fc9 0001e449 0001e511     !....o..I.......
   2c48c:	0001e4fd 0001e4db 0001e6e9 00000000     ................
	...
   2c4a4:	0002876d 00028e85 00028dad 000297dd     m...............
   2c4b4:	000281a1                                ....

0002c4b8 <dw3720_ops>:
   2c4b8:	000290d5 00028115 00028745 00027df5     ........E....}..
   2c4c8:	0002904d 00027969 00028b81 00028dad     M...iy..........
   2c4d8:	000296ad 00029571 00026fcb 000297dd     ....q....o......
   2c4e8:	000281a1 00026fb9                       .....o..

0002c4f0 <fine_gain_lut_chan5>:
   2c4f0:	1c1d2000 0d0c1214 08070a0a 06050706     . ..............
   2c500:	04040505 03030404 03020303 03020302     ................
   2c510:	02020203 02010201 01010201 01010101     ................
   2c520:	01010101 01010101 01010101 01010101     ................

0002c530 <fine_gain_lut_chan9>:
   2c530:	120e0b00 0c0a0f0f 08070909 06050706     ................
   2c540:	05040505 04030404 03030303 03020303     ................
   2c550:	02020203 02010202 02020202 02010201     ................
   2c560:	02010101 01010101 01010101 01010100     ................

0002c570 <lut_coarse_gain>:
   2c570:	00050d20                                 ...

0002c574 <regNames>:
	...

0002c57c <sts_length_factors>:
   2c57c:	05a80400 0b500800 16a11000 00002000     ......P...... ..
